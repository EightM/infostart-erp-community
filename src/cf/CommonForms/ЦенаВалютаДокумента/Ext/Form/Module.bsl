&НаКлиенте
Процедура УстановитьФлагПерезаполнитьЦеныПоТипу()
	Если Элементы.ПерезаполнитьЦеныПоТипу.Доступность И Не ПерезаполнитьЦеныПоТипу Тогда
		ПерезаполнитьЦеныПоТипу=(НовыйТипЦен <> ТипЦен Или НовыйУсловиеПродаж <> УсловиеПродаж);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагПересчетаЦенПоВалюте()
	Если Элементы.ПересчитатьЦеныПоВалюте.Доступность И Не ПересчитатьЦеныПоВалюте Тогда
		ПересчитатьЦеныПоВалюте=НЕ НовыйВалютаДокумента=ВалютаДокумента;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность()
	// Флаги включения НДС в сумму видимы только тогда, когда взведен флаг учета НДС.
	Элементы.НовыйСуммаВключаетНДС.Видимость = НовыйУчитыватьНДС;
	Элементы.НовыйНДСВключенВСтоимость.Видимость = НовыйУчитыватьНДС;
	Элементы.ТекущийСуммаВключаетНДС.Видимость = НовыйУчитыватьНДС;
	Элементы.ТекущийНДСВключенВСтоимость.Видимость = НовыйУчитыватьНДС;

	// Если задана структура исключений, то сделаем недоступными соответствующие реквизиты.
	//Если НЕ СтруктураНеРедактируемыхРеквизитов=Неопределено Тогда
	//	Для каждого ЭлементСтруктуры Из СтруктураНеРедактируемыхРеквизитов Цикл
	//		Элементы["Новый" + ЭлементСтруктуры.Ключ].Доступность = Ложь;
	//	КонецЦикла;
	//КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="ОК" Тогда
		СохранитьИзменения();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Отказ=Неопределено)
	Если ПерезаполнитьЦеныПоТипу И Элементы.НовыйТипЦен.Доступность И НЕ ЗначениеЗаполнено(НовыйТипЦен) Тогда
		ПоказатьПредупреждение(, "Не выбран тип цен для заполнения!"); //*** Отказ=Истина; Возврат;
	КонецЕсли;

	Если Элементы.НовыйВалютаДокумента.Доступность И НЕ ЗначениеЗаполнено(НовыйВалютаДокумента) Тогда		
		ПоказатьПредупреждение(, "Не выбрана новая валюта документа!"); Отказ=Истина; Возврат;
	КонецЕсли;

	Если Элементы.НовыйКурсДокумента.Доступность И НЕ ЗначениеЗаполнено(НовыйКурсДокумента) Тогда
		ПоказатьПредупреждение(, "Установлен нулевой новый курс документа!"); Отказ=Истина; Возврат;
	КонецЕсли;

	Если Элементы.НовыйКурсВзаиморасчетов.Доступность И НЕ ЗначениеЗаполнено(НовыйКурсВзаиморасчетов) Тогда
		ПоказатьПредупреждение(, "Установлен нулевой новый курс взаиморасчетов!"); Отказ=Истина; Возврат;
	КонецЕсли;
	
	// Заполним структуру возвращаемых параметров.
	СтруктураВозвращаемыхЗначений=Новый Структура;
	СтруктураВозвращаемыхЗначений.Вставить("ПерезаполнитьЦеныПоТипу"  , ПерезаполнитьЦеныПоТипу);
	СтруктураВозвращаемыхЗначений.Вставить("ТипЦен"              	  , НовыйТипЦен);
	СтруктураВозвращаемыхЗначений.Вставить("ПересчитатьЦеныПоВалюте"  , ПересчитатьЦеныПоВалюте);
	СтруктураВозвращаемыхЗначений.Вставить("ВалютаДокумента"          , НовыйВалютаДокумента);
	СтруктураВозвращаемыхЗначений.Вставить("КурсДокумента"            , НовыйКурсДокумента);
	СтруктураВозвращаемыхЗначений.Вставить("КурсВзаиморасчетов"       , НовыйКурсВзаиморасчетов);
	СтруктураВозвращаемыхЗначений.Вставить("УчитыватьНДС"             , НовыйУчитыватьНДС);
	СтруктураВозвращаемыхЗначений.Вставить("СуммаВключаетНДС"         , НовыйСуммаВключаетНДС);
	СтруктураВозвращаемыхЗначений.Вставить("КратностьДокумента"       , НовыйКратностьДокумента);
	СтруктураВозвращаемыхЗначений.Вставить("КратностьВзаиморасчетов"  , НовыйКратностьВзаиморасчетов);
	СтруктураВозвращаемыхЗначений.Вставить("НДСВключенВСтоимость"     , НовыйНДСВключенВСтоимость);
	СтруктураВозвращаемыхЗначений.Вставить("РегистрироватьЦеныПоставщика", НовыйРегистрироватьЦеныПоставщика);
	СтруктураВозвращаемыхЗначений.Вставить("УсловиеПродаж"            , НовыйУсловиеПродаж);

	Модифицированность=Ложь; Отказ=Ложь;
	Закрыть(СтруктураВозвращаемыхЗначений);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Обработчики оповещения

&НаКлиенте
Процедура ОбработчикОповещения_ПередЗакрытием(Параметр1, Параметр2) Экспорт
	Если Параметр1=КодВозвратаДиалога.Да Тогда
		СохранитьИзменения(Параметр2.Отказ);
	ИначеЕсли Параметр1=КодВозвратаДиалога.Отмена Или Параметр1=КодВозвратаДиалога.Таймаут Тогда
		Параметр2.Отказ=Истина;
	Иначе
		Параметр2.Отказ=Ложь; Модифицированность=Ложь; Закрыть();
	КонецЕсли;
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="НовыйУсловиеПродаж" Тогда
		УстановитьФлагПерезаполнитьЦеныПоТипу();
		
	ИначеЕсли Элемент.Имя="НовыйТипЦен" Тогда
		УстановитьФлагПерезаполнитьЦеныПоТипу();
		Если ЗначениеЗаполнено(НовыйТипЦен) И НовыйУчитыватьНДС Тогда
			НовыйСуммаВключаетНДС=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(НовыйТипЦен, "ЦенаВключаетНДС");;			
		КонецЕсли;
		
	ИначеЕсли Элемент.Имя="НовыйУчитыватьНДС" Тогда
		Если Не НовыйУчитыватьНДС Тогда
			Если Элементы.НовыйСуммаВключаетНДС.Доступность Тогда
				НовыйСуммаВключаетНДС=Ложь;
			КонецЕсли;
			НовыйНДСВключенВСтоимость=Ложь;
		КонецЕсли;
		УстановитьДоступность();
	КонецЕсли;

	Модифицированность=Истина;
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_НачалоВыбора(Элемент, СтандартнаяОбработка)
	Если Элемент.Имя="НовыйТипЦен" Тогда // Установим тип реквизита НовыйТипЦен и, в случае необходимости, владельца.
		Если НЕ ЗначениеЗаполнено(НовыйТипЦен) Тогда
			Если НЕ ЗначениеЗаполнено(ВладелецТипаЦен) Тогда
				НовыйТипЦен=ПредопределенноеЗначение("Справочник.ТипыЦенНоменклатуры.ПустаяСсылка");
			Иначе
				НовыйТипЦен=ПредопределенноеЗначение("Справочник.ТипыЦенНоменклатурыКонтрагентов.ПустаяСсылка");
				//******* Элементы.НовыйТипЦен.ВыборПоВладельцу=ВладелецТипаЦен;
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли Элемент.Имя="НовыйВалютаДокумента" Тогда
		СтандартнаяОбработка=Ложь;
		
	ИначеЕсли Элемент.Имя="НовыйКурсДокумента" Тогда
		СтандартнаяОбработка=Ложь;

		//СтарыйКурсДокумента = НовыйКурсДокумента;
		//
		//ФормаВводаКурсаИКратности = ПолучитьОбщуюФорму("ФормаВводаКурсаИКратности");
		//ФормаВводаКурсаИКратности.Валюта          = НовыйВалютаДокумента;
		//ФормаВводаКурсаИКратности.КратностьВалюты = НовыйКратностьДокумента;
		//ФормаВводаКурсаИКратности.КурсВалюты      = НовыйКурсДокумента;
		//ФормаВводаКурсаИКратности.ДатаУстановкиКурсаИКратности = ДатаКурса;
		//
		//СтруктураКурсаИКратности = ФормаВводаКурсаИКратности.ОткрытьМодально();
		//
		//Если СтруктураКурсаИКратности <> Неопределено Тогда
		//	НовыйКратностьДокумента = СтруктураКурсаИКратности.КратностьВалюты;
		//	НовыйКурсДокумента      = СтруктураКурсаИКратности.КурсВалюты;
		//КонецЕсли;
		
		Модифицированность = Модифицированность Или (КурсДокумента <> НовыйКурсДокумента);
		
	ИначеЕсли Элемент.Имя="НовыйКурсВзаиморасчетов" Тогда
		СтандартнаяОбработка = Ложь;
		

		//СтарыйКурсВзаиморасчетов = НовыйКурсВзаиморасчетов;
		//
		//ФормаВводаКурсаИКратности = ПолучитьОбщуюФорму("ФормаВводаКурсаИКратности");
		//ФормаВводаКурсаИКратности.Валюта          = ТекущийВалютаВзаиморасчетов;
		//ФормаВводаКурсаИКратности.КратностьВалюты = НовыйКратностьВзаиморасчетов;
		//ФормаВводаКурсаИКратности.КурсВалюты      = НовыйКурсВзаиморасчетов;
		//ФормаВводаКурсаИКратности.ДатаУстановкиКурсаИКратности = ДатаКурса;
		//
		//СтруктураКурсаИКратности = ФормаВводаКурсаИКратности.ОткрытьМодально();
		//Если СтруктураКурсаИКратности <> неопределено Тогда
		//	НовыйКратностьВзаиморасчетов = СтруктураКурсаИКратности.КратностьВалюты;
		//	НовыйКурсВзаиморасчетов      = СтруктураКурсаИКратности.КурсВалюты;
		//КонецЕсли;
		
		Модифицированность = Модифицированность Или (КурсВзаиморасчетов <> НовыйКурсВзаиморасчетов);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Элемент.Имя="НовыйВалютаДокумента" Тогда
		НовыйВалютаДокумента=ВыбранноеЗначение;
		Если Элементы.НовыйКурсВзаиморасчетов.Доступность И НовыйВалютаДокумента=ВалютаВзаиморасчетов Тогда
			// если крус взаиморасчетов присутствует в вызвавшем форму документе, тогда
			// в случае совпадения валюты документа с валютой взаиморасчетов возьмем курс и кратность из нее
			НовыйКурсДокумента=НовыйКурсВзаиморасчетов;
			НовыйКратностьДокумента=НовыйКратностьВзаиморасчетов;
		Иначе
			// вычислим курс
			СтруктураНовыйВалюта=ВалютныйУчетСервер.КурсВалюты(ДатаКурса, НовыйВалютаДокумента);
			НовыйКурсДокумента=СтруктураНовыйВалюта.Курс;
			НовыйКратностьДокумента=СтруктураНовыйВалюта.Кратность;
		КонецЕсли;
		УстановитьФлагПересчетаЦенПоВалюте();		
	КонецЕсли; 

	Модифицированность = Истина; // Взводим флаг модифицированности, чтобы при закрытии спросить о сохранении значений
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры,,"ЗакрыватьПриВыборе,ЗакрыватьПриЗакрытииВладельца,ТолькоПросмотр");
	
	Если НЕ Параметры.Свойство("РегистрироватьЦеныПоставщика") Тогда
		Элементы.НовыйРегистрироватьЦеныПоставщика.Видимость=Ложь;
		Элементы.ТекущийРегистрироватьЦеныПоставщика.Видимость=Ложь;
	КонецЕсли;
	Если НЕ Параметры.Свойство("ВалютаДокумента") Тогда
		Элементы.ГруппаНовыйВалютаДок.Доступность=Ложь;
		Элементы.ГруппаНовыйВалютаВзаим.Доступность=Ложь;
		Элементы.ПересчитатьЦеныПоВалюте.Доступность=Ложь;
	КонецЕсли;
	Если НЕ Параметры.Свойство("УсловиеПродаж") Тогда
		Элементы.НовыйУсловиеПродаж.Доступность=Ложь;
	КонецЕсли;
	Если НЕ Параметры.Свойство("НДСВключенВСтоимость") Тогда
		Элементы.НовыйНДСВключенВСтоимость.Доступность=Ложь;
	КонецЕсли;
	Если НЕ Параметры.Свойство("УчитыватьНДС") Тогда
		Элементы.ГруппаНалогиНовый.Доступность=Ложь;
	КонецЕсли;	

	НовыйВалютаВзаиморасчетов=ВалютаВзаиморасчетов;
	НовыйВалютаДокумента=ВалютаДокумента;
	НовыйКратностьВзаиморасчетов=КратностьВзаиморасчетов;
	НовыйКратностьДокумента=КратностьДокумента;
	НовыйКурсВзаиморасчетов=КурсВзаиморасчетов;
	НовыйКурсДокумента=КурсДокумента;
	НовыйНДСВключенВСтоимость=НДСВключенВСтоимость;
	НовыйРегистрироватьЦеныПоставщика=РегистрироватьЦеныПоставщика;
	НовыйСуммаВключаетНДС=СуммаВключаетНДС;
	НовыйТипЦен=ТипЦен;
	НовыйУсловиеПродаж=УсловиеПродаж;
	НовыйУчитыватьНДС=УчитыватьНДС;	
	
	Если НЕ ЗначениеЗаполнено(НовыйВалютаДокумента) Тогда
		НовыйВалютаДокумента=Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
	Если НовыйКурсДокумента=0 Тогда
		НовыйКурсДокумента=1;
	КонецЕсли;
	Если НовыйКурсВзаиморасчетов=0 Тогда
		НовыйКурсВзаиморасчетов=1;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Если Элементы.НовыйКурсВзаиморасчетов.Доступность и НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
	//	ПоказатьПредупреждение(, "Не выбран договор контрагента (или в договоре не указана валюта)!");
	//	Отказ=Истина; Возврат; 
	//КонецЕсли;
	
	Если ВладелецФормы.ИмяФормы="Документ.ОтчетОРозничныхПродажах.Форма.ФормаДокумента" Тогда
		Если ВладелецФормы.Объект.СуммаВключаетНДС Тогда
			Элементы.НовыйСуммаВключаетНДС.Доступность=Ложь;
			Элементы.НовыйНДСВключенВСтоимость.Доступность=Ложь;
		КонецЕсли; 
	КонецЕсли; 
	
	ВалютаБухУчета=МодульВалютногоУчета.ПолучитьВалюту("Бух");
	Элементы.НовыйВалютаДокумента.СписокВыбора.Добавить(ВалютаДокумента);
	Если Элементы.НовыйВалютаДокумента.СписокВыбора.НайтиПоЗначению(НовыйВалютаВзаиморасчетов)=Неопределено Тогда		
		Элементы.НовыйВалютаДокумента.СписокВыбора.Добавить(НовыйВалютаВзаиморасчетов);
	КонецЕсли;
	Если Элементы.НовыйВалютаДокумента.СписокВыбора.НайтиПоЗначению(ВалютаБухУчета)=Неопределено Тогда		
		Элементы.НовыйВалютаДокумента.СписокВыбора.Добавить(ВалютаБухУчета);
	КонецЕсли;

	// Флаги доступны, если ТЧ документа не пуста и если разрешено менять (доступны) соответствующие реквизиты.
	Если ТабличнаяЧастьПуста Тогда // пересчитывать не нужно
		Элементы.ПерезаполнитьЦеныПоТипу.Доступность = Ложь;
		Элементы.ПересчитатьЦеныПоВалюте.Доступность = Ложь;
	Иначе
		//ЭлементыФормы.ПерезаполнитьЦеныПоТипу.Доступность = ЭлементыФормы.НовыйТипЦен.Доступность;
		Элементы.ПересчитатьЦеныПоВалюте.Доступность=Элементы.НовыйВалютаДокумента.Доступность И (Элементы.НовыйКурсДокумента.Доступность Или Элементы.НовыйКурсВзаиморасчетов.Доступность);
	КонецЕсли;

	УстановитьДоступность();

	// Взведем при необходимости флаги пересчета.
	// Флаг взведен, если новое и текущее значения отличаются
	// Текущие и новые значения реквизитов могут отличаться
	УстановитьФлагПересчетаЦенПоВалюте();
	УстановитьФлагПерезаполнитьЦеныПоТипу();

	// Возможна ситуация, когда валюта документа передается, а курс не передается.
	// Чтобы при этом не было нулевого курса, будет заполнять его руками
	// в случае наличия курса взаиморасчетов и совпадения валюты взаиморасчетов с валютой
	// документа - будем брать курс взаиморасчетов, иначе - текущий курс.
	Если Элементы.НовыйВалютаДокумента.Доступность И НовыйКурсДокумента = 0 Тогда
		Если Элементы.НовыйКурсВзаиморасчетов.Доступность И НовыйВалютаДокумента = ВалютаВзаиморасчетов Тогда
			НовыйКурсДокумента      = НовыйКурсВзаиморасчетов;
			НовыйКратностьДокумента = НовыйКратностьВзаиморасчетов;
		Иначе
			СтруктураНовыйВалюта    = ВалютныйУчетСервер.КурсВалюты(ДатаКурса, НовыйВалютаДокумента);
			НовыйКурсДокумента      = СтруктураНовыйВалюта.Курс;
			НовыйКратностьДокумента = СтруктураНовыйВалюта.Кратность;
		КонецЕсли;
	КонецЕсли;
	
	//Если Элементы.НовыйКурсВзаиморасчетов.Доступность И НовыйВалютаДокумента=ВалютаВзаиморасчетов Тогда
	//	// если крус взаиморасчетов присутствует в вызвавшем форму документе, тогда
	//	// в случае совпадения валюты документа с валютой взаиморасчетов возьмем курс и кратность из нее
	//	НовыйКурсДокумента=НовыйКурсВзаиморасчетов;
	//	НовыйКратностьДокумента=НовыйКратностьВзаиморасчетов;
	//Иначе
	//	// вычислим курс
	//	СтруктураНовыйВалюта=ВалютныйУчетСервер.КурсВалюты(ДатаКурса, НовыйВалютаДокумента);
	//	НовыйКурсДокумента=СтруктураНовыйВалюта.Курс;
	//	НовыйКратностьДокумента=СтруктураНовыйВалюта.Кратность;
	//КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Модифицированность Тогда
		Отказ=Истина;
		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ПередЗакрытием", ЭтотОбъект, Новый Структура("Отказ", Отказ));
		ПоказатьВопрос(ОписаниеОповещения, "Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена, 30, КодВозвратаДиалога.Да, Заголовок);
	КонецЕсли;
КонецПроцедуры