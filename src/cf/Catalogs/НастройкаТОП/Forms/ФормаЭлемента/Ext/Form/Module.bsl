&НаКлиенте
Процедура АвтоКодАлгоритма(Команда)
	Объект.ТекстМодуля="
	|//Доступные значения: Док,ИмяТабличнойЧасти,СтрокаТабличнойЧасти, тзПараметрыНастройки(таблица значений с колонкой <ЗначениеРесурса>)
    |ЗначениеРесурса=0;
	|Если ЗначениеЗаполнено(Док.Ответственный) Тогда
	|	ЗначениеРесурса=тзПараметрыНастройки[0].ЗначениеРесурса;
	|КонецЕсли;
	|";
КонецПроцедуры

&НаКлиенте
Процедура тпПараметрыНастройки_ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если НЕ ОтменаРедактирования Тогда
		ТекущиеДанные=Элементы.ПараметрыНастройки.ТекущиеДанные;
		Если Не ЗначениеЗаполнено(ТекущиеДанные.ВидРегистра) Тогда
			ПоказатьПредупреждение(, "Не заполнено поле <Источник данных>", 10);
			Отказ=Истина; Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТекущиеДанные.Ресурс) Тогда
			ПоказатьПредупреждение(, "Не заполнено поле <Ресурс>", 10);
			Отказ=Истина; Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпПараметрыНастройки_Колонка_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элемент.Имя="ПараметрыНастройкиВидРегистра" Тогда	
		СтандартнаяОбработка=Ложь;
		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборИсточникаДанных", ЭтотОбъект);
		ОткрытьФорму("Справочник.НастройкаТОП.Форма.ФормаВыбораИсточникаДанных",, ЭтаФорма, УникальныйИдентификатор,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ВыборИсточникаДанных(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	Элементы.ПараметрыНастройки.ТекущиеДанные.ВидРегистра=Параметр1;
	Элементы.ПараметрыНастройкиРесурс.СписокВыбора.Очистить();

	//Условия
	стрТипИсточникаДанных=ТипИсточникаДанных(Параметр1);
	Если стрТипИсточникаДанных="РегистрыНакопления" Тогда
		Элементы.ПараметрыНастройки.ТекущиеДанные.ВидДвижения=ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход.ПустаяСсылка");
	ИначеЕсли стрТипИсточникаДанных="РегистрыБухгалтерии" Тогда
		Элементы.ПараметрыНастройки.ТекущиеДанные.ВидДвижения=ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка");
	Иначе
		Элементы.ПараметрыНастройки.ТекущиеДанные.ВидДвижения=Неопределено;
	КонецЕсли;

	//Ресурсы
	СписокВыбора=СформироватьСписокВыбораИсточникаДанных(Параметр1);
	Если СписокВыбора.Количество()=0 Тогда Возврат; КонецЕсли;

	Для каждого СтрокаКоллекции Из СписокВыбора Цикл
		Элементы.ПараметрыНастройкиРесурс.СписокВыбора.Добавить(СтрокаКоллекции.Значение, СтрокаКоллекции.Представление);
	КонецЦикла;
	Элементы.ПараметрыНастройки.ТекущиеДанные.Ресурс=СписокВыбора[0].Значение;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТипИсточникаДанных(ИсточникДанных)
	Если ТипЗнч(ИсточникДанных)=Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") Тогда
		Если ИсточникДанных.Родитель=Справочники.ИдентификаторыОбъектовМетаданных.РегистрыНакопления Тогда
			Возврат "РегистрыНакопления";
		ИначеЕсли ИсточникДанных.Родитель=Справочники.ИдентификаторыОбъектовМетаданных.РегистрыБухгалтерии Тогда
			Возврат "РегистрыБухгалтерии";
		КонецЕсли;
	КонецЕсли;	 
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьСписокВыбораИсточникаДанных(ИсточникДанных)
	спРесурсы=Новый СписокЗначений;
	
	Если ИсточникДанных=Справочники.ИдентификаторыОбъектовМетаданных.Документы Тогда
		спРесурсы.Добавить("РТЧ.СуммаНДС", "Сумма НДС");
		спРесурсы.Добавить("РТЧ.СуммаБезНДС", "Сумма без НДС");
		спРесурсы.Добавить("РАТ.УчетнаяСтоимостьДебета", "Учетная стоимость дебета");
		спРесурсы.Добавить("РАТ.УчетнаяСтоимостьКредита", "Учетная стоимость кредита");
	Иначе
		стрТипВидРегистра=ИсточникДанных.ПолноеИмя;
		стрТипВидРегистра=стрЗаменить(стрТипВидРегистра, ".", Символы.ПС);

		стрТипРегистра=стрПолучитьСтроку(стрТипВидРегистра, 1);
		стрВидРегистра=стрПолучитьСтроку(стрТипВидРегистра, 2);

		Если стрТипРегистра="РегистрНакопления" Тогда
			стрТипРегистра="РегистрыНакопления";
		КонецЕсли; //***	 
		Если стрТипРегистра="РегистрБухгалтерии" Тогда
			стрТипРегистра="РегистрыБухгалтерии";
		КонецЕсли; //***
	
		Для Каждого СтрокаКоллекции Из Метаданные[стрТипРегистра][стрВидРегистра].Ресурсы Цикл
			стрИдентификатор=СтрокаКоллекции.Имя;
			стрПредставление=СтрокаКоллекции.Представление();
			Если стрТипРегистра="РегистрыБухгалтерии" Тогда				
				спРесурсы.Добавить(стрИдентификатор+"ОстатокДт", стрПредставление+" Дт");
				спРесурсы.Добавить(стрИдентификатор+"ОстатокКт", стрПредставление+" Кт");
			Иначе
				спРесурсы.Добавить(стрИдентификатор, стрПредставление);
			КонецЕсли;
			Если стрИдентификатор="Количество" Тогда
				спРесурсы.Добавить("КоличествоОстаток", "Количество (остаток)");
			ИначеЕсли стрИдентификатор="Сумма" Тогда
				спРесурсы.Добавить("СуммаОстаток", "Сумма (остаток)");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Возврат спРесурсы;
КонецФункции	 