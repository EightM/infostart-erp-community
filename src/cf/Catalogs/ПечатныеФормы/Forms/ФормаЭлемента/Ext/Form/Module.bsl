&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="ИспользоватьПараметрыПечати" Тогда
		Объект.ИспользоватьПараметрыПечати=НЕ Объект.ИспользоватьПараметрыПечати;
		Элементы.КнопкаИспользоватьПараметрыПечати.Пометка=Объект.ИспользоватьПараметрыПечати;
		
	ИначеЕсли Команда.Имя="ПараметрыПечатнойФормы" Тогда
		стрТекст=ПараметрыПечатнойФормы();
		Если Не ПустаяСтрока(стрТекст) Тогда
			Объект.ВыполняемыйМодуль=Объект.ВыполняемыйМодуль+стрТекст;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПараметрыПечатнойФормы()
	Если Объект.Встроенная Тогда
		ИмяМакета=Объект.Код;
	ИначеЕсли НЕ Объект.Шаблон.Пустая() Тогда
		ИмяМакета=Объект.Шаблон.Код;
	Иначе
		Возврат ""; 
	КонецЕсли; 

	Запрос=Новый Запрос;
	Запрос.Текст="
	|ВЫБРАТЬ Первые 1
	|	ИсточникДанных.Ссылка КАК Ссылка
	|ИЗ
	|	"+стрЗаменить(Объект.Владелец.ИмяПредопределенныхДанных, "_", ".")+" КАК ИсточникДанных
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Если НЕ Выборка.Следующий() Тогда		
		Возврат ""; 
	КонецЕсли;

	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("ИмяМакета", ИмяМакета);
	СтруктураПараметров.Вставить("МакетШаблон", Неопределено);
	СтруктураПараметров.Вставить("СсылкаНаОбъект", Выборка.Ссылка);
	СтруктураПараметров.Вставить("ПараметрыПечати", Истина);

	МассивСтрок=СтрРазделить(Объект.Владелец.ИмяПредопределенныхДанных, "_", Символы.ПС);
	Если МассивСтрок[0]="Документ" Тогда
		ОбъектМенеджер=Документы[МассивСтрок[1]];
	Иначе
		ОбъектМенеджер=Справочники[МассивСтрок[1]];
	КонецЕсли;

	ПараметрыПечати=ОбъектМенеджер.Печать(СтруктураПараметров); стрТекст="";
	Если НЕ ТипЗнч(ПараметрыПечати)=Тип("Структура") Тогда Возврат ""; КонецЕсли;

	Для каждого СтрокаКоллекции Из ПараметрыПечати Цикл
		стрТекст=стрТекст+Символы.ПС+"//ПараметрыПечати."+СтрокаКоллекции.Ключ+"="+СокрЛП(СтрокаКоллекции.Значение);
	КонецЦикла;

	Возврат стрТекст;
КонецФункции

&НаКлиенте
Процедура ОтрисовкаЭлементовФормы()
	Если НЕ Объект.Шаблон.Пустая() Тогда
		Элементы.Плагин.Заголовок="Макет";
	Иначе
		Элементы.Плагин.Заголовок="Плагин";
	КонецЕсли; 
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики обовещения

&НаКлиенте
Процедура ОбработчикОповещения_ДвусторонняяПечать(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	Элементы.ПараметрыПечати.ТекущиеДанные.Значение=Параметр1;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ОриентацияСтраницы(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	Элементы.ПараметрыПечати.ТекущиеДанные.Значение=Параметр1;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Параметры печати"

&НаСервере
Процедура тпПараметрыПечати_ДобавитьСтроку(Идентификатор, Представление, Значение)
	МассивСтрок=Объект.ПараметрыПечати.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
	Если Не МассивСтрок.Количество()=0 Тогда Возврат; КонецЕсли;

	НоваяСтрока=Объект.ПараметрыПечати.Добавить();
	НоваяСтрока.Идентификатор=Идентификатор;
	НоваяСтрока.Представление=Представление;
	НоваяСтрока.Значение=Значение;
КонецПроцедуры

&НаСервере
Процедура тпПараметрыПечати_Инициализация()
	тпПараметрыПечати_ДобавитьСтроку("ОтображатьГруппировки", "Отображать группировки", Ложь);
	тпПараметрыПечати_ДобавитьСтроку("ОтображатьЗаголовки", "Отображать заголовки", Ложь);
	тпПараметрыПечати_ДобавитьСтроку("ОтображатьСетку", "Отображать сетку", Ложь);
	тпПараметрыПечати_ДобавитьСтроку("ЧерноБелаяПечать", "Черно белая печать", Ложь);
	тпПараметрыПечати_ДобавитьСтроку("РазборПоКопиям", "Разбор по копиям", Ложь);
	тпПараметрыПечати_ДобавитьСтроку("ТолькоПросмотр", "Только просмотр", Истина);
	тпПараметрыПечати_ДобавитьСтроку("ИспользуемоеИмяФайла", "Используемое имя файла", "");
	тпПараметрыПечати_ДобавитьСтроку("ЭкземпляровНаСтранице", "Экземпляров на странице", 0);
	тпПараметрыПечати_ДобавитьСтроку("ИмяПринтера", "Имя принтера", "");
	тпПараметрыПечати_ДобавитьСтроку("ПолеСверху", "Поле сверху", 0);
	тпПараметрыПечати_ДобавитьСтроку("ПолеСлева", "Поле слева", 0);
	тпПараметрыПечати_ДобавитьСтроку("ПолеСнизу", "Поле снизу", 0);
	тпПараметрыПечати_ДобавитьСтроку("ПолеСправа", "Поле справа", 0);
	тпПараметрыПечати_ДобавитьСтроку("РазмерКолонтитулаСверху", "Размер колонтитула сверху", 0);
	тпПараметрыПечати_ДобавитьСтроку("РазмерКолонтитулаСнизу", "Размер колонтитула снизу", 0);
	тпПараметрыПечати_ДобавитьСтроку("ФиксацияСверху", "Фиксация сверху", 0);
	тпПараметрыПечати_ДобавитьСтроку("ФиксацияСлева", "Фиксация cлева", 0);
	тпПараметрыПечати_ДобавитьСтроку("ОриентацияСтраницы", "Ориентация cтраницы", "Портрет");
	тпПараметрыПечати_ДобавитьСтроку("ДвусторонняяПечать", "Двусторонняя печать", Неопределено);
	тпПараметрыПечати_ДобавитьСтроку("АвтоМасштаб", "Авто масштаб", Истина);
	тпПараметрыПечати_ДобавитьСтроку("МасштабПечати", "Масштаб печати", 0);
КонецПроцедуры

&НаКлиенте
Процедура тпПараметрыПечати_ПередНачаломИзменения(Элемент, Отказ)
	ТекущиеДанные=Элемент.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные.Значение)=Тип("Булево") Тогда
		ТекущиеДанные.Значение=НЕ ТекущиеДанные.Значение;
		Отказ=Истина; Возврат; 
	КонецЕсли;
	Если ТекущиеДанные.Идентификатор="ДвусторонняяПечать" Тогда
		спМеню=Новый СписокЗначений;
		спМеню.Добавить("Нет", "Нет");
		спМеню.Добавить("ИспользоватьНастройкиПринтера", "Использовать настройки принтера");
		спМеню.Добавить("ПереворотВверх", "Переворот вверх");
		спМеню.Добавить("ПереворотВлево", "Переворот влево");
		спМеню.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ОбработчикОповещения_ДвусторонняяПечать", ЭтотОбъект), "Тип двусторонней печати");
		Отказ=Истина; Возврат; 
	КонецЕсли; 
	Если ТекущиеДанные.Идентификатор="ОриентацияСтраницы" Тогда
		спМеню=Новый СписокЗначений;
		спМеню.Добавить("Портрет", "Портрет");
		спМеню.Добавить("Ландшафт", "Ландшафт");
		спМеню.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ОбработчикОповещения_ОриентацияСтраницы", ЭтотОбъект), "Ориентация страницы");
		Отказ=Истина; Возврат; 
	КонецЕсли; 	
КонецПроцедуры

&НаКлиенте
Процедура тпПараметрыПечати_Значение_Очистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ТекущиеДанные=Элемент.Родитель.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные.Значение)=Тип("Число") Тогда
		ТекущиеДанные.Значение=0;
	ИначеЕсли ТипЗнч(Элемент.ТекущиеДанные.Значение)=Тип("Строка") Тогда
		ТекущиеДанные.Значение="";
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="Шаблон" Тогда
		ОтрисовкаЭлементовФормы();
	КонецЕсли; 
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПечатныеФормыСервер.ИнициализацияОтбора(Объект.Ссылка, Объект.Владелец, КомпоновщикНастроек);
	тпПараметрыПечати_Инициализация();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.Код.Доступность=НЕ Объект.Встроенная;

	ОтрисовкаЭлементовФормы();

	Если Объект.Встроенная Тогда
		Элементы.Плагин.Заголовок="Макет";
		Элементы.Шаблон.Видимость=Ложь;
	КонецЕсли;
	
	Элементы.КнопкаИспользоватьПараметрыПечати.Пометка=Объект.ИспользоватьПараметрыПечати;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Настройки=КомпоновщикНастроек.ПолучитьНастройки();
	Если НЕ Настройки.Отбор.Элементы.Количество()=0 Тогда 
		ТекущийОбъект.НастройкиОтбора=УниверсальныеМеханизмыСервер.ЗначениеВСтрокуXML(Настройки);
	КонецЕсли;
КонецПроцедуры
