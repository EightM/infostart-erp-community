&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="Печать" Тогда
		ТабДокумент=Неопределено;
		Если СписокСсылокНаОбъекты.Количество()=0 Тогда
			ВывестиНаПечать(дзПечатныеФормы, ТабДокумент);
		Иначе
			СоответствиеПечатныхФорм=Новый Соответствие;
			Для каждого СтрокаКоллекции Из СписокСсылокНаОбъекты Цикл
				Если НЕ РулоннаяПечать Тогда
					ТабДокумент=Неопределено;
				КонецЕсли;
				СсылкаНаОбъект=СтрокаКоллекции.Значение;
				ВывестиНаПечать(дзПечатныеФормы, ТабДокумент, СоответствиеПечатныхФорм);
			КонецЦикла;

			Если РулоннаяПечать Тогда
				Для каждого СтрокаКоллекции Из СоответствиеПечатныхФорм Цикл
					ОткрытьФорму("Справочник.ПечатныеФормы.Форма.ФормаПечати", СтрокаКоллекции.Значение, ЭтотОбъект, Новый УникальныйИдентификатор);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;

		ЭтаФорма.Закрыть();
		
	ИначеЕсли Команда.Имя="РулоннаяПечать" Тогда
		РулоннаяПечать=Не РулоннаяПечать;
		Элементы.РулоннаяПечать.Пометка=РулоннаяПечать;
	КонецЕсли; 	
КонецПроцедуры

&НаСервере
Функция СформироватьТабличныйДокумент(СсылкаНаПечатнуюФорму, КолвоЭкземпляров, НаПринтер, ТабДокумент)
	СтруктураПараметровПечати=Новый Структура;
	СтруктураПараметровПечати.Вставить("СсылкаНаОбъект", СсылкаНаОбъект);
	СтруктураПараметровПечати.Вставить("МакетШаблон", Неопределено);
	СтруктураПараметровПечати.Вставить("ИмяМакета", Неопределено);
	СтруктураПараметровПечати.Вставить("ВыполняемыйМодуль", СсылкаНаПечатнуюФорму.ВыполняемыйМодуль);
	СтруктураПараметровПечати.Вставить("ПараметрыПечатнойФормы", СтруктураПечатнойФормы(СсылкаНаПечатнуюФорму));

	Если СсылкаНаПечатнуюФорму.Встроенная Тогда //Встроенная печатная форма
		СтруктураПараметровПечати.Вставить("ИмяМакета", СсылкаНаПечатнуюФорму.Код);

	ИначеЕсли НЕ СсылкаНаПечатнуюФорму.Шаблон.Пустая() Тогда		
		Если СсылкаНаПечатнуюФорму.Шаблон.Встроенная Тогда //Встроенная печатная форма
			СтруктураПараметровПечати.Вставить("ИмяМакета", СсылкаНаПечатнуюФорму.Шаблон.Код);
			Если НЕ СсылкаНаПечатнуюФорму.Плагин.Пустая() Тогда //Макет (внешний)
				ИмяФайла=ПлагиныСервер.ПолныйПуть(СсылкаНаПечатнуюФорму.Плагин);
				Если ПустаяСтрока(ИмяФайла) Тогда Возврат СтруктураПараметровПечати; КонецЕсли;
				
				ОбъектМенеджер=ВнешниеОбработки.Создать(ИмяФайла);				
				Если ОбъектМенеджер.Метаданные().Макеты.Количество()=0 Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось найти макет печатной формы <"+СокрЛП(СсылкаНаОбъект)+">");
					Возврат СтруктураПараметровПечати;
				КонецЕсли;
				СтруктураПараметровПечати.Вставить("МакетШаблон", ОбъектМенеджер.ПолучитьМакет(ОбъектМенеджер.Метаданные().Макеты[0]));
			КонецЕсли;
		Иначе
			СформироватьТабличныйДокумент(СсылкаНаПечатнуюФорму.Шаблон, КолвоЭкземпляров, НаПринтер, ТабДокумент);
			Возврат СтруктураПараметровПечати; //7.08.18
		КонецЕсли;

	ИначеЕсли СсылкаНаПечатнуюФорму.Шаблон.Пустая() Тогда //Внещняя печатная формы
		Если НЕ ЗначениеЗаполнено(СсылкаНаПечатнуюФорму.Плагин) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось найти ссылку на внешнюю печатную форму <"+СокрЛП(СсылкаНаОбъект)+">");
			Возврат СтруктураПараметровПечати;
		КонецЕсли; 
		ИмяФайла=ПлагиныСервер.ПолныйПуть(СсылкаНаПечатнуюФорму.Плагин);
		Если ПустаяСтрока(ИмяФайла) Тогда Возврат СтруктураПараметровПечати; КонецЕсли;

		ОбъектМенеджер=ВнешниеОбработки.Создать(ИмяФайла);
		ОбъектМенеджер.Печать(СсылкаНаОбъект, СсылкаНаПечатнуюФорму, ТабДокумент); //7.08.18
		Возврат СтруктураПараметровПечати;
	КонецЕсли;

	мдОбъект=СтруктураПараметровПечати.СсылкаНаОбъект.Метаданные();
	Если Лев(мдОбъект.ПолноеИмя(), 8)="Документ" Тогда
		ОбъектМенеджер=Документы[мдОбъект.Имя];
	ИначеЕсли Лев(мдОбъект.ПолноеИмя(), 10)="Справочник" Тогда
		ОбъектМенеджер=Справочники[мдОбъект.Имя];
	ИначеЕсли Лев(мдОбъект.ПолноеИмя(), 13)="БизнесПроцесс" Тогда			
		ОбъектМенеджер=БизнесПроцессы[мдОбъект.Имя];
	КонецЕсли;

	ОбъектМенеджер.Печать(СтруктураПараметровПечати, КолвоЭкземпляров, НаПринтер, ТабДокумент); //7.08.18
	
	Возврат СтруктураПараметровПечати;
КонецФункции

&НаКлиенте
Процедура ВывестиНаПечать(Элемент, ТабДокумент=Неопределено, СоответствиеПечатныхФорм=Неопределено)
	Для Каждого ПодчиненнаяСтрока Из Элемент.ПолучитьЭлементы() Цикл
		Если ПодчиненнаяСтрока.Пометка=1 И ПодчиненнаяСтрока.ПолучитьЭлементы().Количество()=0 Тогда
			Если НЕ РулоннаяПечать Тогда ТабДокумент=Неопределено; КонецЕсли;
			СтруктураПараметровПечати=СформироватьТабличныйДокумент(ПодчиненнаяСтрока.Ссылка, ПодчиненнаяСтрока.Количество, ПодчиненнаяСтрока.НаПринтер, ТабДокумент); //7.08.18

			Если СтруктураПараметровПечати.Свойство("ФормаНастройкиПечати") Тогда //Печать через форму настройки печати
				СтруктураПараметровПечати.Вставить("НаПринтер", ПодчиненнаяСтрока.НаПринтер);
				СтруктураПараметровПечати.Вставить("РулоннаяПечать", РулоннаяПечать);
				СтруктураПараметровПечати.Вставить("КоличествоЭкземпляров", ПодчиненнаяСтрока.Количество);
				ОткрытьФорму(СтруктураПараметровПечати.ФормаНастройкиПечати, Новый Структура("СтруктураПараметров", СтруктураПараметровПечати),, Новый УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.Независимый);
				Продолжить;
			КонецЕсли;
			
			Если ТабДокумент="БланкТоварногоНаполнения" Тогда
				ПараметрыФормы=Новый Структура("ДокументСсылка,НаПринтер", СсылкаНаОбъект, ПодчиненнаяСтрока.НаПринтер);
				ОткрытьФорму("Обработка.БланкТоварногоНаполнения.Форма.Форма", ПараметрыФормы,,Новый УникальныйИдентификатор);
				Продолжить;
			КонецЕсли;

			Если ТипЗнч(ТабДокумент)=Тип("Строка") Тогда
				ОткрытьФорму(СтруктураПараметровПечати.ИмяМакета, Новый Структура("СтруктураПараметров", СтруктураПараметровПечати),, Новый УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.Независимый);
				Продолжить;
			КонецЕсли;

			Если ТабДокумент=Неопределено Тогда
				Попытка ТабДокумент=СтруктураПараметровПечати.ПечатныйДокумент;
				Исключение
				КонецПопытки; 
			КонецЕсли;
			Если ТабДокумент=Неопределено Тогда Продолжить; КонецЕсли;

			Если НЕ СтруктураПараметровПечати.Свойство("ПечатныйДокумент") Тогда
				СтруктураПараметровПечати.Вставить("ПечатныйДокумент", ТабДокумент);
			КонецЕсли; 
			Если НЕ СтруктураПараметровПечати.Свойство("ОбъектПечати") Тогда
				СтруктураПараметровПечати.Вставить("ОбъектПечати", СсылкаНаОбъект);
			КонецЕсли; 
			Если НЕ СтруктураПараметровПечати.Свойство("КоличествоЭкземпляров") Тогда
				СтруктураПараметровПечати.Вставить("КоличествоЭкземпляров", ПодчиненнаяСтрока.Количество);
			КонецЕсли; 
			Если НЕ СтруктураПараметровПечати.Свойство("НаПринтер") Тогда
				СтруктураПараметровПечати.Вставить("НаПринтер", ПодчиненнаяСтрока.НаПринтер);
			КонецЕсли; 

			Если НЕ РулоннаяПечать Тогда
				ОткрытьФорму("Справочник.ПечатныеФормы.Форма.ФормаПечати", СтруктураПараметровПечати, ЭтотОбъект, Новый УникальныйИдентификатор);
			Иначе
				СоответствиеПечатныхФорм.Вставить(ПодчиненнаяСтрока.Ссылка, СтруктураПараметровПечати);
			КонецЕсли;
		КонецЕсли;
		ВывестиНаПечать(ПодчиненнаяСтрока, ТабДокумент, СоответствиеПечатныхФорм);
	КонецЦикла;	
КонецПроцедуры

//////&НаСервере
//////Процедура СформироватьТабличныйДокумент(СсылкаНаПечатнуюФорму, КолвоЭкземпляров, НаПринтер, ТабДокумент, РулоннаяПечать)
//////	СтруктураПараметровПечати=Новый Структура;
//////	СтруктураПараметровПечати.Вставить("СсылкаНаОбъект", СсылкаНаОбъект);
//////	СтруктураПараметровПечати.Вставить("МакетШаблон", Неопределено);
//////	СтруктураПараметровПечати.Вставить("ИмяМакета", Неопределено);
//////	СтруктураПараметровПечати.Вставить("ВыполняемыйМодуль", СсылкаНаПечатнуюФорму.ВыполняемыйМодуль);
//////	СтруктураПараметровПечати.Вставить("ПараметрыПечатнойФормы", СтруктураПечатнойФормы(СсылкаНаПечатнуюФорму)); //9.08.18
//////	СтруктураПараметровПечати.Вставить("РулоннаяПечать", РулоннаяПечать); //9.08.18

//////	Если СсылкаНаПечатнуюФорму.Встроенная Тогда //Встроенная печатная форма
//////		СтруктураПараметровПечати.Вставить("ИмяМакета", СсылкаНаПечатнуюФорму.Код);

//////	ИначеЕсли НЕ СсылкаНаПечатнуюФорму.Шаблон.Пустая() Тогда		
//////		Если СсылкаНаПечатнуюФорму.Шаблон.Встроенная Тогда //Встроенная печатная форма
//////			СтруктураПараметровПечати.Вставить("ИмяМакета", СсылкаНаПечатнуюФорму.Шаблон.Код);
//////			Если НЕ СсылкаНаПечатнуюФорму.Плагин.Пустая() Тогда //Макет (внешний)
//////				ИмяФайла=ПлагиныСервер.ПолныйПуть(СсылкаНаПечатнуюФорму.Плагин);
//////				Если ПустаяСтрока(ИмяФайла) Тогда Возврат; КонецЕсли;
//////				
//////				ОбъектМенеджер=ВнешниеОбработки.Создать(ИмяФайла);				
//////				Если ОбъектМенеджер.Метаданные().Макеты.Количество()=0 Тогда
//////					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось найти макет печатной формы <"+СокрЛП(СсылкаНаОбъект)+">");
//////					Возврат;
//////				КонецЕсли;
//////				СтруктураПараметровПечати.Вставить("МакетШаблон", ОбъектМенеджер.ПолучитьМакет(ОбъектМенеджер.Метаданные().Макеты[0]));
//////			КонецЕсли;
//////		Иначе
//////			//Возврат СформироватьТабличныйДокумент(СсылкаНаПечатнуюФорму.Шаблон, КолвоЭкземпляров, НаПринтер, ТабДокумент);
//////			СформироватьТабличныйДокумент(СсылкаНаПечатнуюФорму.Шаблон, КолвоЭкземпляров, НаПринтер, ТабДокумент, РулоннаяПечать); Возврат; //7.08.18
//////		КонецЕсли;

//////	ИначеЕсли СсылкаНаПечатнуюФорму.Шаблон.Пустая() Тогда //Внещняя печатная формы
//////		Если НЕ ЗначениеЗаполнено(СсылкаНаПечатнуюФорму.Плагин) Тогда
//////			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось найти ссылку на внешнюю печатную форму <"+СокрЛП(СсылкаНаОбъект)+">");
//////			Возврат;
//////		КонецЕсли; 
//////		ИмяФайла=ПлагиныСервер.ПолныйПуть(СсылкаНаПечатнуюФорму.Плагин);
//////		Если ПустаяСтрока(ИмяФайла) Тогда Возврат; КонецЕсли;

//////		ОбъектМенеджер=ВнешниеОбработки.Создать(ИмяФайла);
//////		ОбъектМенеджер.Печать(СсылкаНаОбъект, СсылкаНаПечатнуюФорму, ТабДокумент); //7.08.18
//////		Возврат;
//////	КонецЕсли;

//////	мдОбъект=СтруктураПараметровПечати.СсылкаНаОбъект.Метаданные();
//////	Если Лев(мдОбъект.ПолноеИмя(), 8)="Документ" Тогда
//////		ОбъектМенеджер=Документы[мдОбъект.Имя];
//////	ИначеЕсли Лев(мдОбъект.ПолноеИмя(), 10)="Справочник" Тогда
//////		ОбъектМенеджер=Справочники[мдОбъект.Имя];
//////	ИначеЕсли Лев(мдОбъект.ПолноеИмя(), 13)="БизнесПроцесс" Тогда			
//////		ОбъектМенеджер=БизнесПроцессы[мдОбъект.Имя];
//////	КонецЕсли;

//////	//Возврат ОбъектМенеджер.Печать(СтруктураПараметровПечати, КолвоЭкземпляров, НаПринтер, ТабДокумент);
//////	ОбъектМенеджер.Печать(СтруктураПараметровПечати, КолвоЭкземпляров, НаПринтер, ТабДокумент); //7.08.18
//////КонецПроцедуры

//////&НаКлиенте
//////Процедура ВывестиНаПечать(Элемент, ТабДокумент=Неопределено, СоответствиеПечатныхФорм=Неопределено)
//////	Для Каждого ПодчиненнаяСтрока Из Элемент.ПолучитьЭлементы() Цикл
//////		Если ПодчиненнаяСтрока.Пометка=1 И ПодчиненнаяСтрока.ПолучитьЭлементы().Количество()=0 Тогда
//////			Если НЕ РулоннаяПечать Тогда ТабДокумент=Неопределено; КонецЕсли;
//////			//*** ТабОбъект=СформироватьТабличныйДокумент(ПодчиненнаяСтрока.Ссылка, ПодчиненнаяСтрока.Количество, ПодчиненнаяСтрока.НаПринтер, ТабДокумент);
//////			СформироватьТабличныйДокумент(ПодчиненнаяСтрока.Ссылка, ПодчиненнаяСтрока.Количество, ПодчиненнаяСтрока.НаПринтер, ТабДокумент, РулоннаяПечать); //7.08.18

//////			Если ТабДокумент="БланкТоварногоНаполнения" Тогда
//////				ПараметрыФормы=Новый Структура("ДокументСсылка,НаПринтер", СсылкаНаОбъект, ПодчиненнаяСтрока.НаПринтер);
//////				ОткрытьФорму("Обработка.БланкТоварногоНаполнения.Форма.Форма", ПараметрыФормы,,Новый УникальныйИдентификатор);
//////				Продолжить;
//////			КонецЕсли;

//////			Если ТабДокумент=Неопределено Тогда Продолжить; КонецЕсли;
//////			
//////			ПараметрыФормы=Новый Структура;
//////			ПараметрыФормы.Вставить("ПечатныйДокумент", ТабДокумент);
//////			ПараметрыФормы.Вставить("ОбъектПечати", СсылкаНаОбъект);
//////			ПараметрыФормы.Вставить("КоличествоЭкземпляров", ПодчиненнаяСтрока.Количество);
//////			ПараметрыФормы.Вставить("НаПринтер", ПодчиненнаяСтрока.НаПринтер);
//////			ПараметрыФормы.Вставить("ПараметрыПечатнойФормы", СтруктураПечатнойФормы(ПодчиненнаяСтрока.Ссылка));

//////			Если НЕ РулоннаяПечать Тогда
//////				ОткрытьФорму("Справочник.ПечатныеФормы.Форма.ФормаПечати", ПараметрыФормы, ЭтотОбъект, Новый УникальныйИдентификатор);
//////			Иначе
//////				СоответствиеПечатныхФорм.Вставить(ПодчиненнаяСтрока.Ссылка, ПараметрыФормы);
//////			КонецЕсли;
//////		КонецЕсли;
//////		ВывестиНаПечать(ПодчиненнаяСтрока, ТабДокумент, СоответствиеПечатныхФорм);
//////	КонецЦикла;	
//////КонецПроцедуры

&НаСервере
Функция СтруктураПечатнойФормы(СсылкаНаПечатнуюФорму)
	СтруктураПараметровПечати=Новый Структура;	
	Если СсылкаНаПечатнуюФорму.ИспользоватьПараметрыПечати Тогда
		Для каждого СтрокаКоллекции Из СсылкаНаПечатнуюФорму.ПараметрыПечати Цикл
			СтруктураПараметровПечати.Вставить(СтрокаКоллекции.Идентификатор, СтрокаКоллекции.Значение);
		КонецЦикла;
	КонецЕсли;
	Возврат СтруктураПараметровПечати;
КонецФункции

&НаСервере
Процедура дзПечатныеФормы_СоздатьВеткуДерева(РодительДерева, РодительПлагина, ВладелецПлагина)
	Выборка=Справочники.ПечатныеФормы.Выбрать(РодительПлагина, ВладелецПлагина);
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПометкаУдаления Тогда Продолжить; КонецЕсли;		
		Если НЕ Выборка.ЭтоГруппа И Выборка.НеИспользовать Тогда Продолжить; КонецЕсли;

		Если СписокСсылокНаОбъекты.Количество()=0 И НЕ ПечатныеФормыСервер.УсловиеВыполнено(СсылкаНаОбъект, Выборка.Ссылка, ВладелецПлагина) Тогда
			Продолжить; 
		КонецЕсли;

		Если Выборка.Доступ.Количество()>0 Тогда
			ДоступРазрешен=Ложь;
			Для каждого СтрокаКоллекции Из Выборка.Доступ Цикл
				Если СтрокаКоллекции.Пользователь.ЭтоГруппа Тогда
					Если ПараметрыСеанса.ТекущийПользователь.ПринадлежитЭлементу(СтрокаКоллекции.Пользователь) Тогда
						ДоступРазрешен=Истина; Прервать;
					КонецЕсли; 
				Иначе
					Если СтрокаКоллекции.Пользователь=ПараметрыСеанса.ТекущийПользователь Тогда
						ДоступРазрешен=Истина; Прервать;
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла;			
			Если НЕ ДоступРазрешен Тогда Продолжить; КонецЕсли; 
		КонецЕсли;

		НоваяСтрока=РодительДерева.Строки.Добавить();	
		НоваяСтрока.Ссылка=Выборка.Ссылка;
		НоваяСтрока.Картинка=БиблиотекаКартинок.Элемент;
		НоваяСтрока.НаПринтер=Выборка.ПечатьБезПросмотра;
		НоваяСтрока.Количество=Выборка.КоличествоЭкземпляров;
		НоваяСтрока.Пометка=Выборка.ИспользоватьПоУмолчанию;
		дзПечатныеФормы_УстановитьПометкуРодителя(НоваяСтрока);
		Если Выборка.ЭтоГруппа Тогда
			НоваяСтрока.Картинка=БиблиотекаКартинок.Группа;
			дзПечатныеФормы_СоздатьВеткуДерева(НоваяСтрока, Выборка.Ссылка, ВладелецПлагина);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура дзПечатныеФормы_ПриИзменении(Элемент)
	Если Элемент.ТекущийЭлемент.Имя="дзПечатныеФормыСсылка" Тогда
		ТекущиеДанные=Элемент.ТекущиеДанные;
		Если ТекущиеДанные.Пометка=2 Тогда
			ТекущиеДанные.Пометка=0;
		КонецЕсли;		
		дзПечатныеФормы_УстановитьПометкуПодчиненным(ТекущиеДанные);				
		дзПечатныеФормы_ОбновитьСостояниеПометки(ТекущиеДанные.ПолучитьРодителя()); // Изменяем состояние "вверх" (для установки флажков серым)
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура дзПечатныеФормы_ОбновитьСостояниеПометки(Элемент)
	Если Элемент=Неопределено Тогда Возврат; КонецЕсли;

	ЕстьОтмеченные=Ложь; ЕстьНеотмеченные=Ложь;
	Для Каждого ПодчиненныйЭлемент Из Элемент.ПолучитьЭлементы() Цикл
		Если ПодчиненныйЭлемент.Пометка Тогда
			ЕстьОтмеченные=Истина;
		Иначе
			ЕстьНеотмеченные=Истина;
		КонецЕсли;
	КонецЦикла;	
	Элемент.Пометка=?(ЕстьОтмеченные И ЕстьНеотмеченные, 2, ?(ЕстьОтмеченные, 1, 0));
	дзПечатныеФормы_ОбновитьСостояниеПометки(Элемент.ПолучитьРодителя());
КонецПроцедуры

&НаКлиенте
Процедура дзПечатныеФормы_УстановитьПометкуПодчиненным(Элемент)
	Для Каждого ПодчиненнаяСтрока Из Элемент.ПолучитьЭлементы() Цикл
		ПодчиненнаяСтрока.Пометка=Элемент.Пометка;
		дзПечатныеФормы_УстановитьПометкуПодчиненным(ПодчиненнаяСтрока);
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура дзПечатныеФормы_УстановитьПометкуРодителя(СтрокаТабличногоПоля)
	Если СтрокаТабличногоПоля.Родитель=Неопределено Тогда Возврат; КонецЕсли;
	ОбластьПоиска=СтрокаТабличногоПоля.Родитель.Строки;
	
	Есть_0=Не ОбластьПоиска.Найти(0, "Пометка")=Неопределено;
	Есть_1=Не ОбластьПоиска.Найти(1, "Пометка")=Неопределено;
	Есть_2=Не ОбластьПоиска.Найти(2, "Пометка")=Неопределено;
	
	Если Есть_2 Тогда
		СтрокаТабличногоПоля.Родитель.Пометка=2;
	ИначеЕсли Есть_0 И Есть_1 Тогда
		СтрокаТабличногоПоля.Родитель.Пометка=2;
	ИначеЕсли Есть_0 Тогда
		СтрокаТабличногоПоля.Родитель.Пометка=0;
	ИначеЕсли Есть_1 Тогда
		СтрокаТабличногоПоля.Родитель.Пометка=1;
	КонецЕсли;
	
	Если НЕ СтрокаТабличногоПоля.Родитель.Родитель=Неопределено Тогда
		дзПечатныеФормы_УстановитьПометкуРодителя(СтрокаТабличногоПоля.Родитель);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Параметры.Свойство("Владелец") Тогда
		Отказ=Истина; Возврат; 
	КонецЕсли;
	
	Если ТипЗнч(Параметры.Ссылка)=Тип("Массив") Тогда
		СписокСсылокНаОбъекты.ЗагрузитьЗначения(Параметры.Ссылка);
	КонецЕсли;

	Если СписокСсылокНаОбъекты.Количество()=0 Тогда
		СсылкаНаОбъект=Параметры.Ссылка;
	Иначе
		СсылкаНаОбъект=СписокСсылокНаОбъекты.Получить(0).Значение;
	КонецЕсли;
	Заголовок=СокрЛП(СсылкаНаОбъект);

	дзСсылка=РеквизитФормыВЗначение("дзПечатныеФормы");
	дзПечатныеФормы_СоздатьВеткуДерева(дзСсылка, Справочники.ПечатныеФормы.ПустаяСсылка(), Параметры.Владелец);
	ЗначениеВРеквизитФормы(дзСсылка, "дзПечатныеФормы");

	ЕстьПечатныеФормы=НЕ дзСсылка.Строки.Количество()=0;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЕстьПечатныеФормы Тогда
		Отказ=Истина; ПоказатьПредупреждение(, "Печатные формы не подключены!", 20);
	КонецЕсли;	
	Элементы.РулоннаяПечать.Видимость=НЕ СписокСсылокНаОбъекты.Количество()=0;
КонецПроцедуры