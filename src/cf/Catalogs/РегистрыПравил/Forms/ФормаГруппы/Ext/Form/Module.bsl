&НаКлиенте
Процедура ВыполнитьКоманду(Команда)
	Если Команда.Имя="ЗаполнитьПоУмолчанию" Тогда
		ЗаполнитьПоУмолчанию();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоУмолчанию()
	Если Объект.Код="СклонениеСлов" Тогда
		тзПравила=РеквизитФормыВЗначение("тпПравила");
		тзПравила.Очистить();

		Макет=Справочники.РегистрыПравил.ПолучитьМакет("РегистрыПравил");
		ОбластьМакета=Макет.ПолучитьОбласть("СклонениеСлов");
		Для НомерСтроки=3 По ОбластьМакета.ВысотаТаблицы Цикл
			НоваяСтрока=тзПравила.Добавить();
			Для НомерКолонки=1 По ОбластьМакета.ШиринаТаблицы-1 Цикл
				стрАтрибут=ОбластьМакета.Область(2, НомерКолонки).ПараметрРасшифровки;
				//Атрибут=Справочники.РегистрыПравил.НайтиПоКоду("СклонениеСлов_ОкончаниеCлова"+стрАтрибут,,Объект.Измерения);
				Атрибут=Справочники.РегистрыПравил.НайтиПоКоду("СклонениеСлов_"+стрАтрибут);
				Если Атрибут.Пустая() Тогда Продолжить; КонецЕсли; //Ошибка
				стрКолонка=Справочники.РегистрыПравил.АтрибутВСтроку(Атрибут);
				НоваяСтрока[стрКолонка]=СокрЛП(ОбластьМакета.Область(НомерСтроки, НомерКолонки).Текст);
			КонецЦикла;
		КонецЦикла;

		ЗначениеВРеквизитФормы(тзПравила, "тпПравила");
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьРегистрПравил(стрКолонка, СтандартнаяОбработка, Отказ)
	Если Объект.Код="УправлениеРегистрамиПравил" И ЭтоРесурсРегистрПравил(стрКолонка) Тогда
		СтандартнаяОбработка=Ложь; Отказ=Истина; спВыбор=СписокРегистровПравил(); 
		спВыбор.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ОбработчикОповещения_ВыборРегистраПравил", ЭтотОбъект, Новый Структура("ИмяКолонки", стрКолонка)), "Выберите регистр правил");
	КонецЕсли;
КонецПроцедуры
 
&НаСервере
Функция СписокРегистровПравил()
	Запрос=Новый Запрос; спВыбор=Новый СписокЗначений;
	Запрос.УстановитьПараметр("Код", "УправлениеРегистрамиПравил");
	Запрос.УстановитьПараметр("Родитель", Справочники.РегистрыПравил.ПустаяСсылка());
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.Ссылка КАК Ссылка,
	|	ИсточникДанных.Код КАК Код
	|ИЗ
	|	Справочник.РегистрыПравил КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Код<>&Код И ИсточникДанных.Родитель = &Родитель
	|УПОРЯДОЧИТЬ ПО
	|	ИсточникДанных.Порядок
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		спВыбор.Добавить(Выборка.Ссылка);
	КонецЦикла;
	Возврат спВыбор; 
КонецФункции
 
&НаСервере
Функция ЭтоРесурсРегистрПравил(стрАтрибут)
	Атрибут=Справочники.РегистрыПравил.АтрибутИзСтроки(стрАтрибут);
	Возврат Атрибут.Код="УправлениеРегистрамиПравил_РегистрПравил";
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики оповещения

&НаКлиенте
Процедура ОбработчикОповещения_ВыборРегистраПравил(Параметр1, Параметр2=Неопределено) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	Элементы.тпПравила.ТекущиеДанные[Параметр2.ИмяКолонки]=Параметр1.Значение;
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Регистры правил"

&НаСервере
Процедура тпПравила_Инициализация()
	ДобавляемыеРеквизиты=Новый Массив;
	
	//Создаем колонки "измерения"
	Выборка=Справочники.РегистрыПравил.СформироватьЗапросПоАтрибутамРегистраПравил(Объект.Измерения);
	Пока Выборка.Следующий() Цикл
		Реквизит=Новый РеквизитФормы(Справочники.РегистрыПравил.АтрибутВСтроку(Выборка.Ссылка), Выборка.ОписаниеТипа.Получить(), "тпПравила", СокрЛП(Выборка.Наименование));
		ДобавляемыеРеквизиты.Добавить(Реквизит);
	КонецЦикла;

	//Создаем колонки "ресурсы"
	Выборка=Справочники.РегистрыПравил.СформироватьЗапросПоАтрибутамРегистраПравил(Объект.Ресурсы);
	Пока Выборка.Следующий() Цикл
		Реквизит=Новый РеквизитФормы(Справочники.РегистрыПравил.АтрибутВСтроку(Выборка.Ссылка), Выборка.ОписаниеТипа.Получить(), "тпПравила", СокрЛП(Выборка.Наименование));
		ДобавляемыеРеквизиты.Добавить(Реквизит);		
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);

	//Создаем колонки на форме табличного поля "тпПравила"
	Для каждого СтрокаКоллекции Из ДобавляемыеРеквизиты Цикл
		Элемент=Элементы.Добавить(СтрокаКоллекции.Имя, Тип("ПолеФормы"), Элементы.тпПравила);
		Элемент.ПутьКДанным="тпПравила."+СтрокаКоллекции.Имя;
		Элемент.Вид=ВидПоляФормы.ПолеВвода;
		Элемент.УстановитьДействие("ПриИзменении", "тпПравила_ПриИзменении_Клиент");
		//*** Элемент.УстановитьДействие("НачалоВыбора", "тпПравила_НачалоВыбора_Клиент");
		Элемент.ВыборГруппИЭлементов=ГруппыИЭлементы.ГруппыИЭлементы;
		
		Атрибут=Справочники.РегистрыПравил.АтрибутИзСтроки(СтрокаКоллекции.Имя);
		СписокВыбора=Атрибут.СписокВыбора.Получить();
		Если ТипЗнч(СписокВыбора)=Тип("СписокЗначений") Тогда
			Если НЕ СписокВыбора.Количество()=0 Тогда
				Для каждого СтрокаСписка Из СписокВыбора Цикл
					Элемент.СписокВыбора.Добавить(СтрокаСписка.Значение, СтрокаСписка.Представление, СтрокаСписка.Пометка, СтрокаСписка.Картинка);
				КонецЦикла;
				Элемент.РедактированиеТекста=Ложь;
				Элемент.КнопкаВыпадающегоСписка=Истина;
			КонецЕсли;
		КонецЕсли;

		//Устанавливаем параметры выбора
		//Если Колонка.ТипЗначения=Новый ОписаниеТипов("СправочникСсылка.ЗначенияСвойствОбъектов") Тогда
		//	Элемент.ПараметрыВыбора=ПараметрыВыбора("Отбор.Владелец", АтрибутИзСтроки(Колонка.Имя));
		//КонецЕсли;

		//Устанавливаем связи параметров выбора
		НовыйМассив=Новый Массив();
		Для каждого СтрокаКоллекции2 Из Атрибут.СвязиПараметровВыбора Цикл
			Попытка НовыйМассив.Добавить(Новый СвязьПараметраВыбора(СокрЛП(СтрокаКоллекции2.Имя), "тпПравила."+СокрЛП(СтрокаКоллекции2.Реквизит)));
			Исключение
			КонецПопытки;	
		КонецЦикла;
		Если НЕ НовыйМассив.Количество()=0 Тогда
			Элемент.СвязиПараметровВыбора=Новый ФиксированныйМассив(НовыйМассив);
		КонецЕсли;		
	КонецЦикла;

	//Заполним созднанную таблицу значениями их хранилища правил
	тзПравилаХранилище=РеквизитФормыВЗначение("Объект").Хранилище.Получить();
	Если НЕ тзПравилаХранилище=Неопределено Тогда
		Для каждого СтрокаКоллекции Из тзПравилаХранилище Цикл
			ЗаполнитьЗначенияСвойств(тпПравила.Добавить(), СтрокаКоллекции);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпПравила_НачалоВыбора_Клиент(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьРегистрПравил(Элемент.Родитель.ТекущийЭлемент.Имя, СтандартнаяОбработка, Истина);
КонецПроцедуры

&НаКлиенте
Процедура тпПравила_ПередНачаломИзменения(Элемент, Отказ)
	ВыбратьРегистрПравил(Элемент.ТекущийЭлемент.Имя, Ложь, Отказ);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	тпПравила_Инициализация();	
	Если Объект.Код="СклонениеСлов" Тогда
		Элементы.ЗаполнитьПоУмолчанию.Видимость=Истина;
	КонецЕсли;
	Элементы.Код.ТолькоПросмотр=Объект.Системный; //Справочники.РегистрыПравил.ЭтоПредопределенныйЭлемент(Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.Хранилище=Новый ХранилищеЗначения(РеквизитФормыВЗначение("тпПравила"));
	ТекущийОбъект.Кэш=Неопределено;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.Измерения) Тогда
		НовыйЭлемент_Измерения=Справочники.РегистрыПравил.СоздатьГруппу();
		НовыйЭлемент_Измерения.Код=СокрЛП(ТекущийОбъект.Код)+"_Измерения";
		НовыйЭлемент_Измерения.Наименование="Измерения";
		НовыйЭлемент_Измерения.Родитель=ТекущийОбъект.Ссылка;
		НовыйЭлемент_Измерения.Записать();

		НовыйЭлемент_Ресурсы=Справочники.РегистрыПравил.СоздатьГруппу();
		НовыйЭлемент_Измерения.Код=СокрЛП(ТекущийОбъект.Код)+"_Ресурсы";
		НовыйЭлемент_Ресурсы.Наименование="Ресурсы";
		НовыйЭлемент_Ресурсы.Родитель=ТекущийОбъект.Ссылка;
		НовыйЭлемент_Ресурсы.Записать();

		ТекущийОбъект.Измерения=НовыйЭлемент_Измерения.Ссылка;
		ТекущийОбъект.Ресурсы=НовыйЭлемент_Ресурсы.Ссылка;
		ТекущийОбъект.Записать();
	КонецЕсли;
КонецПроцедуры
