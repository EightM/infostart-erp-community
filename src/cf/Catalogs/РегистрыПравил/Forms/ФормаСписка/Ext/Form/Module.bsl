&НаСервере
Функция ЗначенияРеквизитовОбъекта(Ссылка, стрРеквизиты)
	Возврат Справочники.РегистрыПравил.ЗначенияРеквизитовОбъекта(Ссылка, стрРеквизиты);
КонецФункции

&НаСервере
Функция ЗначениеРеквизитаОбъекта(Ссылка, стрРеквизит)
	Возврат Справочники.РегистрыПравил.ЗначениеРеквизитаОбъекта(Ссылка, стрРеквизит);
КонецФункции
 
&НаСервере
Процедура ПереместитьЭлемент(СсылкаНаОбъект, стрНаправление)
	ЭлементОбмена="";
	ОбъектВыборка=Справочники.РегистрыПравил.Выбрать(СсылкаНаОбъект.Родитель,,,"Порядок");
	Пока ОбъектВыборка.Следующий() Цикл
		Если НЕ СсылкаНаОбъект.Родитель=ОбъектВыборка.Родитель Тогда Продолжить; КонецЕсли;
		Если НЕ ОбъектВыборка.Ссылка=СсылкаНаОбъект Тогда ЭлементОбмена=ОбъектВыборка.Ссылка; Продолжить; КонецЕсли;
		Если стрНаправление="Вверх" Тогда Прервать; Иначе ЭлементОбмена=""; КонецЕсли;
		Если ОбъектВыборка.Следующий() Тогда
			Если НЕ СсылкаНаОбъект.Родитель=ОбъектВыборка.Родитель Тогда Продолжить; КонецЕсли;
			ЭлементОбмена=ОбъектВыборка.Ссылка;
		КонецЕсли;
		Прервать;
	КонецЦикла;
	Если ЭлементОбмена="" Тогда Возврат; КонецЕсли;

	ПорядокСтарый=СсылкаНаОбъект.Порядок;
	//Если ПорядокСтарый=0 Тогда ПорядокСтарый=1; КонецЕсли; 

	ПорядокНовый=ЭлементОбмена.Порядок;
	Если ПорядокНовый=0 Тогда ПорядокНовый=1; КонецЕсли;

	Объект=СсылкаНаОбъект.ПолучитьОбъект();
	Объект.Порядок=0;
	Объект.Записать();

	Объект=ЭлементОбмена.Ссылка.ПолучитьОбъект();
	Объект.Порядок=ПорядокСтарый;
	Объект.Записать();

	Объект=СсылкаНаОбъект.ПолучитьОбъект();
	Объект.Порядок=ПорядокНовый;
	Объект.Записать();
	
	Элементы.ДинамическийСписок.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКоманду(Команда)
	стрКоманда=?(ТипЗнч(Команда)=Тип("Строка"), Команда, Команда.Имя);

	Если стрКоманда="ПереместитьВверх" Тогда
		ПереместитьЭлемент(Элементы.ДинамическийСписок.ТекущиеДанные.Ссылка, "Вверх");

	ИначеЕсли стрКоманда="ПереместитьВниз" Тогда
		ПереместитьЭлемент(Элементы.ДинамическийСписок.ТекущиеДанные.Ссылка, "Вниз");

	ИначеЕсли стрКоманда="ОбновитьСистемныеРегистрыПравил" Тогда
		ОбновитьСистемныйРегистрПравил_УправлениеРегистрамиПравил();
		ОбновитьСистемныйРегистрПравил_СклонениеСлов();
		ОбновитьСистемныйРегистрПравил_УправлениеДоступом();
		Элементы.ДинамическийСписок.Обновить();

	ИначеЕсли стрКоманда="ТестированиеПравил" Тогда
		ПараметрыФормы=Новый Структура("РегистрПравил", Элементы.ДинамическийСписок.ТекущиеДанные.Ссылка);
		ОткрытьФорму("Справочник.РегистрыПравил.Форма.ФормаТестированияПравил", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.Независимый);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Копирование регистра правил

&НаКлиенте
Процедура СкопироватьПравило_Клиент(Параметр1, Параметр2=Неопределено) Экспорт
	Если НЕ ЗначениеЗаполнено(Параметр1) Тогда Возврат; КонецЕсли; 
	//Если НЕ Параметр1=КодВозвратаДиалога.Да Тогда Возврат; КонецЕсли;
	СкопироватьПравило_Сервер(Элементы.ДинамическийСписок.ТекущиеДанные.Ссылка, Параметр1);
КонецПроцедуры

&НаСервере
Процедура СкопироватьПравило_Сервер(Ссылка, Идентификатор)
	Справочники.РегистрыПравил.СкопироватьПравило(Ссылка, Идентификатор);
	Элементы.ДинамическийСписок.Обновить();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Создание\обновление системных регистров правил

&НаСервере
Функция СоздатьГруппу(Родитель, Идентификатор, Представление, Порядок=0)
	СправочникОбъект=Справочники.РегистрыПравил.СоздатьГруппу();
	СправочникОбъект.Родитель=Родитель;
	СправочникОбъект.Код=Идентификатор;
	СправочникОбъект.Наименование=Представление;
	СправочникОбъект.Порядок=Порядок;
	СправочникОбъект.Системный=Истина;
	СправочникОбъект.Записать();

	Возврат СправочникОбъект.Ссылка; 
КонецФункции

&НаСервере
Функция СоздатьЭлемент(Родитель, Идентификатор, Представление, ОписаниеТипа, ТекстМодуля, СписокВыбора=Неопределено, Порядок=0, ТипСоответствия="")
	СправочникОбъект=Справочники.РегистрыПравил.СоздатьЭлемент();
	СправочникОбъект.Родитель=Родитель;
	СправочникОбъект.Код=Идентификатор;
	СправочникОбъект.Наименование=Представление;
	СправочникОбъект.ОписаниеТипа=Новый ХранилищеЗначения(ОписаниеТипа);
	СправочникОбъект.Порядок=Порядок;
	СправочникОбъект.ТипСоответствия=ТипСоответствия;
	СправочникОбъект.Системный=Истина;
	СправочникОбъект.ТекстМодуля=ТекстМодуля;
	Если НЕ СписокВыбора=Неопределено Тогда
		СправочникОбъект.СписокВыбора=Новый ХранилищеЗначения(СписокВыбора);
	КонецЕсли;	
	СправочникОбъект.Записать();
	
	Возврат СправочникОбъект.Ссылка; 	
КонецФункции

&НаСервере
Процедура ОбновитьСистемныйРегистрПравил_УправлениеРегистрамиПравил()
	СправочникСсылка=Справочники.РегистрыПравил.НайтиПоКоду("УправлениеРегистрамиПравил");
	Если СправочникСсылка.Пустая() Тогда
		СправочникОбъект=Справочники.РегистрыПравил.СоздатьГруппу();
		СправочникОбъект.Код="УправлениеРегистрамиПравил";
		СправочникОбъект.Наименование="Управление регистрами правил";
		СправочникОбъект.Порядок=1;
		СправочникОбъект.Системный=Истина;
		СправочникОбъект.Записать();
		СправочникОбъект.Измерения=СоздатьГруппу(СправочникОбъект.Ссылка, "УправлениеРегистрамиПравил_Изм", "Измерения", 1);
		СправочникОбъект.Ресурсы  =СоздатьГруппу(СправочникОбъект.Ссылка, "УправлениеРегистрамиПравил_Рес", "Ресурсы", 2);
		СправочникОбъект.Записать();

		СоздатьЭлемент(СправочникОбъект.Измерения, "УправлениеРегистрамиПравил_ИсточникДанных", "Источник данных", Новый ОписаниеТипов("СправочникСсылка.ИдентификаторыОбъектовМетаданных"), "",,1);
		СоздатьЭлемент(СправочникОбъект.Измерения, "УправлениеРегистрамиПравил_Событие", "Событие", Новый ОписаниеТипов("ПеречислениеСсылка.СобытияСистемы"), "", , 2);
		СоздатьЭлемент(СправочникОбъект.Ресурсы, "УправлениеРегистрамиПравил_РегистрПравил", "Регистр правил", Новый ОписаниеТипов("СправочникСсылка.РегистрыПравил"), "",,1);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСистемныйРегистрПравил_СклонениеСлов()
	СправочникСсылка=Справочники.РегистрыПравил.НайтиПоКоду("СклонениеСлов");
	Если СправочникСсылка.Пустая() Тогда
		СписокВыбора_Род=Новый СписокЗначений;
		СписокВыбора_Род.Добавить("Мужской", "Мужской");
		СписокВыбора_Род.Добавить("Женский", "Женский");

		СписокВыбора_ТипПоследнейБуквы=Новый СписокЗначений;
		СписокВыбора_ТипПоследнейБуквы.Добавить("Согласная", "Согласная");

		СписокВыбора_КатегорияСлова=Новый СписокЗначений;
		СписокВыбора_КатегорияСлова.Добавить("Фамилия", "Фамилия");

		СписокВыбора_Начало=Новый СписокЗначений;
		СписокВыбора_Начало.Добавить("Именительный", "Именительный");
		СписокВыбора_Начало.Добавить("Именительный_1", "Именительный 1");
		СписокВыбора_Начало.Добавить("Именительный_2", "Именительный 2");

		СправочникОбъект=Справочники.РегистрыПравил.СоздатьГруппу();
		СправочникОбъект.Код="СклонениеСлов";
		СправочникОбъект.Наименование="Склонение слов";
		СправочникОбъект.Порядок=2;
		СправочникОбъект.Системный=Истина;
		СправочникОбъект.Записать();
		СправочникОбъект.Измерения=СоздатьГруппу(СправочникОбъект.Ссылка, "СклонениеСлов_Изм", "Измерения", 1);
		СправочникОбъект.Ресурсы  =СоздатьГруппу(СправочникОбъект.Ссылка, "СклонениеСлов_Рес", "Ресурсы", 2);
		СправочникОбъект.Записать();

		СоздатьЭлемент(СправочникОбъект.Измерения, "СклонениеСлов_КатегорияСлова", "Категория слова", Новый ОписаниеТипов("Строка"), "", СписокВыбора_КатегорияСлова, 1);
		СоздатьЭлемент(СправочникОбъект.Измерения, "СклонениеСлов_ДлинаСловаОт", "Длина слова от", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2, 0)), "",,2, "От");
		СоздатьЭлемент(СправочникОбъект.Измерения, "СклонениеСлов_ДлинаСловаДо", "Длина слова до", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2, 0)), "",,3, "До");
		СоздатьЭлемент(СправочникОбъект.Измерения, "СклонениеСлов_ОкончаниеСлова", "Окончание слова", Новый ОписаниеТипов("Строка"), "",,4, "КонецСтроки");
		СоздатьЭлемент(СправочникОбъект.Измерения, "СклонениеСлов_ТипПоследнейБуквы", "Тип посл. буквы", Новый ОписаниеТипов("Строка"), "", СписокВыбора_ТипПоследнейБуквы, 5);
		СоздатьЭлемент(СправочникОбъект.Измерения, "СклонениеСлов_Род", "Род", Новый ОписаниеТипов("Строка"), "", СписокВыбора_Род, 6);

		СоздатьЭлемент(СправочникОбъект.Ресурсы, "СклонениеСлов_НачалоСлова", "Начало слова", Новый ОписаниеТипов("Строка"), "", СписокВыбора_Начало, 1);
		СоздатьЭлемент(СправочникОбъект.Ресурсы, "СклонениеСлов_Родительный", "Родительный", Новый ОписаниеТипов("Строка"), "",, 2);
		СоздатьЭлемент(СправочникОбъект.Ресурсы, "СклонениеСлов_Дательный", "Дательный", Новый ОписаниеТипов("Строка"), "",, 3);
		СоздатьЭлемент(СправочникОбъект.Ресурсы, "СклонениеСлов_Винительный", "Винительный", Новый ОписаниеТипов("Строка"), "",, 4);
		СоздатьЭлемент(СправочникОбъект.Ресурсы, "СклонениеСлов_Творительный", "Творительный", Новый ОписаниеТипов("Строка"), "",, 5);
		СоздатьЭлемент(СправочникОбъект.Ресурсы, "СклонениеСлов_Предложный", "Предложный", Новый ОписаниеТипов("Строка"), "",, 6);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСистемныйРегистрПравил_УправлениеДоступом()
	СправочникСсылка=Справочники.РегистрыПравил.НайтиПоКоду("УправлениеДоступом");
	Если СправочникСсылка.Пустая() Тогда
		СправочникОбъект=Справочники.РегистрыПравил.СоздатьГруппу();
		СправочникОбъект.Код="УправлениеДоступом";
		СправочникОбъект.Наименование="Управление доступом";
		СправочникОбъект.Порядок=3;
		СправочникОбъект.Системный=Истина;
		СправочникОбъект.Записать();
		СправочникОбъект.Измерения=СоздатьГруппу(СправочникОбъект.Ссылка, "УправлениеДоступом_Изм", "Измерения", 1);
		СправочникОбъект.Ресурсы  =СоздатьГруппу(СправочникОбъект.Ссылка, "УправлениеДоступом_Рес", "Ресурсы", 2);
		СправочникОбъект.Записать();

		СоздатьЭлемент(СправочникОбъект.Измерения, "УправлениеДоступом_Пользователь", "Пользователь", Новый ОписаниеТипов("СправочникСсылка.Пользователи"), "ЗначениеИзмерения=ПараметрыСеанса.ТекущийПользователь;",,1);
		СоздатьЭлемент(СправочникОбъект.Измерения, "УправлениеДоступом_Организация", "Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"), "ЗначениеИзмерения = СтруктураПараметров.Объект.Организация;",,2);

		стрМодуль_ВозрастДокумента="
		|ЗначениеРесурса={ЗначениеРесурса};
		|Если ЗначениеЗаполнено(ЗначениеРесурса) Тогда
		|	СтруктураПараметров.Отказ=КонецДня(СтруктураПараметров.Объект.Дата)<=ТекущаяДата()-(86400*ЗначениеРесурса);
		|	Если СтруктураПараметров.Событие=""ПриСозданииНаСервере"" Тогда
		|		Если НЕ СтруктураПараметров.Объект.Ссылка.Пустая() Тогда
		|			СтруктураПараметров.Форма.ТолькоПросмотр=СтруктураПараметров.Отказ;
		|		КонецЕсли;
		|		СтруктураПараметров.Отказ=Ложь;
		|	КонецЕсли;
		|	Если СтруктураПараметров.Отказ Тогда
		|		Сообщить(""Доступ закрыт регистром правил!"");
		|	КонецЕсли;
		|КонецЕсли;
		|";
		
		стрМодуль_ДатаЗапрета="
		|ЗначениеРесурса={ЗначениеРесурса};
		|Если ЗначениеЗаполнено(ЗначениеРесурса) Тогда
		|	СтруктураПараметров.Отказ=КонецДня(СтруктураПараметров.Объект.Дата)<=КонецДня(ЗначениеРесурса);
		|	Если СтруктураПараметров.Событие=""ПриСозданииНаСервере"" Тогда
		|		Если НЕ СтруктураПараметров.Объект.Ссылка.Пустая() Тогда
		|			СтруктураПараметров.Форма.ТолькоПросмотр=СтруктураПараметров.Отказ;
		|		КонецЕсли;
		|		СтруктураПараметров.Отказ=Ложь;
		|	КонецЕсли;
		|	Если СтруктураПараметров.Отказ Тогда
		|		Сообщить(""Доступ закрыт регистром правил!"");
		|	КонецЕсли;
		|КонецЕсли; 
		|";

		СоздатьЭлемент(СправочникОбъект.Ресурсы, "УправлениеДоступом_ДатаЗапрета", "Дата запрета", Новый ОписаниеТипов("Дата"), стрМодуль_ДатаЗапрета,, 1);
		СоздатьЭлемент(СправочникОбъект.Ресурсы, "УправлениеДоступом_ВозрастДокумента", "Возраст документа", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 0)), стрМодуль_ВозрастДокумента,, 2);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСистемныйРегистрПравил_ТиповыеОперации()
	СправочникСсылка=Справочники.РегистрыПравил.НайтиПоКоду("ТиповыеОперации");
	Если СправочникСсылка.Пустая() Тогда
		СправочникОбъект=Справочники.РегистрыПравил.СоздатьГруппу();
		СправочникОбъект.Код="ТиповыеОперации";
		СправочникОбъект.Наименование="Установка типовых операций";
		СправочникОбъект.Порядок=3;
		СправочникОбъект.Системный=Истина;
		СправочникОбъект.Записать();
		СправочникОбъект.Измерения=СоздатьГруппу(СправочникОбъект.Ссылка, "ТиповыеОперации_Изм", "Измерения", 1);
		СправочникОбъект.Ресурсы  =СоздатьГруппу(СправочникОбъект.Ссылка, "ТиповыеОперации_Рес", "Ресурсы", 2);
		СправочникОбъект.Записать();

		МассивТиповВидовОпераци=Новый Массив;
		Для каждого мдПеречисления Из Метаданные.Перечисления Цикл
			Если НЕ Лев(мдПеречисления.Имя, 12)="ВидыОпераций" Тогда Продолжить; КонецЕсли; 
			МассивТиповВидовОпераци.Добавить(Тип("ПеречислениеСсылка."+мдПеречисления.Имя));
		КонецЦикла;

		//Измерения
		СоздатьЭлемент(СправочникОбъект.Измерения, "ТиповыеОперации_Измерения_ВидДокумента", "Вид документа", Новый ОписаниеТипов("СправочникСсылка.ИдентификаторыОбъектовМетаданных"), "ЗначениеИзмерения=СтруктураПараметров.ВидДокумента;",,1);
		СоздатьЭлемент(СправочникОбъект.Измерения, "ТиповыеОперации_Измерения_ВидТабличнойЧасти", "Вид табличной части", Новый ОписаниеТипов("Строка"), "ЗначениеИзмерения=СтруктураПараметров.ИмяТабличнойЧасти;",,2);
		СоздатьЭлемент(СправочникОбъект.Измерения, "ТиповыеОперации_Измерения_КодОперации", "Код операции", Новый ОписаниеТипов(МассивТиповВидовОпераци), "ЗначениеИзмерения=СтруктураПараметров.ВидОперации;",,3);
		СоздатьЭлемент(СправочникОбъект.Измерения, "ТиповыеОперации_Измерения_Номенклатура", "Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"), "ЗначениеИзмерения=СтруктураПараметров.Номенклатура;",,4);
		СоздатьЭлемент(СправочникОбъект.Измерения, "ТиповыеОперации_Измерения_Контрагент", "Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"), "ЗначениеИзмерения=СтруктураПараметров.Контрагент;",, 5);
		СоздатьЭлемент(СправочникОбъект.Измерения, "ТиповыеОперации_Измерения_Организация", "Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"), "ЗначениеИзмерения=СтруктураПараметров.Организация;",, 6);

		//Ресурсы
		СоздатьЭлемент(СправочникОбъект.Ресурсы, "ТиповыеОперации_Ресурсы_ТиповаяОперация", "Типовая операция", Новый ОписаниеТипов("СправочникСсылка.ТиповыеОперации"),,, 10);
	КонецЕсли;	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Динамический список"

&НаКлиенте
Процедура ДинамическийСписок_ВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	Если ТипЗнч(Значение)=Тип("Массив") Тогда
		СтруктураДанных=ЗначенияРеквизитовОбъекта(Значение[0], "Измерения,ЭтоГруппа");
		Если СтруктураДанных.ЭтоГруппа И НЕ СтруктураДанных.Измерения.Пустая() Тогда
			ОповеститьОВыборе(Значение[0]);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДинамическийСписок_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		ТекущиеДанные=Элемент.ТекущиеДанные; Отказ=Истина;
		СтруктураДанных=ЗначенияРеквизитовОбъекта(ТекущиеДанные.Ссылка, "Измерения,ЭтоГруппа");
		Если СтруктураДанных.ЭтоГруппа И НЕ СтруктураДанных.Измерения.Пустая() Тогда
			ОписаниеОповещения=Новый ОписаниеОповещения("СкопироватьПравило_Клиент", ЭтотОбъект);
			//ПоказатьВопрос(ОписаниеОповещения, "Скопировать правило <"+СокрЛП(ТекущиеДанные.Ссылка)+"> ?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет, "Внимаение", КодВозвратаДиалога.Нет);
			ПоказатьВводСтроки(ОписаниеОповещения, СокрЛП(ТекущиеДанные.Код)+"_Копия", "Введите идентификатор правила");
		КонецЕсли;
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеРеквизитаОбъекта(Родитель, "Измерения").Пустая() Тогда
		ПараметрыФормы=Новый Структура("ЭтоГруппа", Истина); Отказ=Истина;
		ОткрытьФорму("Справочник.РегистрыПравил.ФормаГруппы", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.Независимый);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДинамическийСписок_ПередНачаломИзменения(Элемент, Отказ)
	ТекущиеДанные=Элементы.ДинамическийСписок.ТекущиеДанные;
	Если ТекущиеДанные=Неопределено Тогда Возврат; КонецЕсли; 
	СтруктураДанных=ЗначенияРеквизитовОбъекта(ТекущиеДанные.Ссылка, "ЭтоГруппа,Измерения");
	Отказ=СтруктураДанных.ЭтоГруппа И СтруктураДанных.Измерения.Пустая();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.ДинамическийСписок.РежимВыбора=Параметры.РежимВыбора;

	ОбновитьСистемныйРегистрПравил_УправлениеРегистрамиПравил();
	ОбновитьСистемныйРегистрПравил_СклонениеСлов();
	ОбновитьСистемныйРегистрПравил_УправлениеДоступом();
	ОбновитьСистемныйРегистрПравил_ТиповыеОперации();
КонецПроцедуры