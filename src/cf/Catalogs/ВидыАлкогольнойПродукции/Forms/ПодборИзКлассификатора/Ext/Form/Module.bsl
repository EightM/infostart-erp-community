
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьКлассификатор();
КонецПроцедуры

&НаКлиенте
Процедура КлассификаторВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДобавленыНовыеЭлементыКлассификатора = Ложь;
	ВыбранныйЭлемент = КлассификаторВыборНаСервере(ВыбраннаяСтрока, ДобавленыНовыеЭлементыКлассификатора);
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ОповеститьФормуИПользователяИЗакрыть(ВыбранныйЭлемент, ДобавленыНовыеЭлементыКлассификатора);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КлассификаторВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДобавленыНовыеЭлементыКлассификатора = Ложь;
	ВыбранныйЭлемент = КлассификаторВыборНаСервере(Значение, ДобавленыНовыеЭлементыКлассификатора);
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ОповеститьФормуИПользователяИЗакрыть(ВыбранныйЭлемент, ДобавленыНовыеЭлементыКлассификатора);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьФормуИПользователяИЗакрыть(ВыбранныйЭлемент, ДобавленыНовыеЭлементыКлассификатора = Ложь)
	Если ДобавленыНовыеЭлементыКлассификатора Тогда
		ОповеститьОбИзменении(Тип("СправочникСсылка.ВидыАлкогольнойПродукции"));
		ПоказатьОповещениеПользователя(НСтр("ru = 'Сохранение'"),, Заголовок, БиблиотекаКартинок.ДиалогИнформация);
	КонецЕсли;
	ОповеститьОВыборе(ВыбранныйЭлемент);
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	УсловноеОформление.Элементы.Очистить();
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента      = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Классификатор");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор, "Классификатор.ЕстьСсылка", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветФонаВыделенияПоля);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРанееДобавленныеЭлементы()
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ВидыАлкогольнойПродукции.Код КАК Код,
	|	ВидыАлкогольнойПродукции.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции");
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

&НаСервере
Функция КлассификаторВидовАлкогольнойПродукции()
	ТаблицаВидовПродукции = Новый ТаблицаЗначений;
	Макет = Справочники.ВидыАлкогольнойПродукции.ПолучитьМакет("КлассификаторВидовПродукции");
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Макет.ПолучитьТекст());
	Если Не ЧтениеXML.Прочитать() Тогда
		ВызватьИсключение НСтр("ru = 'Пустой XML'");
	ИначеЕсли ЧтениеXML.Имя <> "Items" Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка в структуре XML'");
	КонецЕсли;
	
	ИменаКолонок = СтрЗаменить(ЧтениеXML.ПолучитьАтрибут("Columns"), ",", Символы.ПС);
	КоличествоКолонок = СтрЧислоСтрок(ИменаКолонок);
	Для Сч = 1 По КоличествоКолонок Цикл
		ИмяКолонки = СтрПолучитьСтроку(ИменаКолонок, Сч);
		Если ИмяКолонки = "Маркируемый" Тогда
			ТаблицаВидовПродукции.Колонки.Добавить(ИмяКолонки, Новый ОписаниеТипов("Булево"));
		Иначе
			ТаблицаВидовПродукции.Колонки.Добавить(ИмяКолонки, Новый ОписаниеТипов("Строка"));
		КонецЕсли;
	КонецЦикла;
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.Имя = "Items" Тогда Прервать;
		ИначеЕсли ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента Тогда Продолжить;
		ИначеЕсли ЧтениеXML.Имя <> "Item" Тогда ВызватьИсключение НСтр("ru = 'Ошибка в структуре XML'");
		КонецЕсли;
		
		новСтр = ТаблицаВидовПродукции.Добавить();
		Для Сч = 1 По КоличествоКолонок Цикл
			ИмяКолонки = СтрПолучитьСтроку(ИменаКолонок, Сч);
			Если ИмяКолонки = "Маркируемый" Тогда
				новСтр[Сч-1] = Булево(СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ЧтениеXML.ПолучитьАтрибут(ИмяКолонки)));
			Иначе
				новСтр[Сч-1] = ЧтениеXML.ПолучитьАтрибут(ИмяКолонки);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ТаблицаВидовПродукции.Сортировать(ТаблицаВидовПродукции.Колонки[0].Имя + " Возр");
	Возврат ТаблицаВидовПродукции;
КонецФункции

&НаСервере
Процедура ЗаполнитьКлассификатор()
	Классификатор.Очистить();
	ТаблицаКлассификатора = КлассификаторВидовАлкогольнойПродукции();
	РанееДобавленныеЭлементыКлассификатора = ПолучитьРанееДобавленныеЭлементы();
	РанееДобавленныеЭлементыКлассификатора.Индексы.Добавить("Код");
	СтруктураПоискаРанееСозданных = Новый Структура();
	Для Каждого СтрокаТаблицы Из ТаблицаКлассификатора Цикл
		НоваяСтрока = Классификатор.Добавить();
		НоваяСтрока.Код          = СтрокаТаблицы.Код;
		НоваяСтрока.Маркируемый  = СтрокаТаблицы.Маркируемый;
		НоваяСтрока.Наименование = СтрокаТаблицы.Наименование;
		СтруктураПоискаРанееСозданных.Вставить("Код", СтрокаТаблицы.Код);
		НайденныйЭлемент = РанееДобавленныеЭлементыКлассификатора.НайтиСтроки(СтруктураПоискаРанееСозданных);
		Если НайденныйЭлемент.Количество() > 0 Тогда
			НоваяСтрока.Ссылка = НайденныйЭлемент[0].Ссылка;
			НоваяСтрока.ЕстьСсылка = Истина;
		КонецЕсли;
	КонецЦикла;
	Классификатор.Сортировать("Наименование");
КонецПроцедуры

&НаСервере
Функция КлассификаторВыборНаСервере(Знач ВыбранныеСтроки, ДобавленыНовыеЭлементыКлассификатора = Ложь)
	СсылкаНаЭлемент = Неопределено;
	МассивСсылок = Новый Массив();
	Если ТипЗнч(ВыбранныеСтроки) = тип("Массив") Тогда
		Для Каждого ИдентификаторСтроки из ВыбранныеСтроки Цикл
			Элемент = Классификатор.НайтиПоИдентификатору(ИдентификаторСтроки);
			Если НЕ ЗначениеЗаполнено(Элемент.Ссылка) Тогда
				ДобавитьЭлементКлассификатора(Элемент);
				ДобавленыНовыеЭлементыКлассификатора = Истина;
			КонецЕсли;
			МассивСсылок.Добавить(Элемент.Ссылка);
			СсылкаНаЭлемент = Элемент.Ссылка;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ВыбранныеСтроки) = тип("Число") Тогда
		Элемент = Классификатор.НайтиПоИдентификатору(ВыбранныеСтроки);
		Если НЕ ЗначениеЗаполнено(Элемент.Ссылка) Тогда
			ДобавитьЭлементКлассификатора(Элемент);
			ДобавленыНовыеЭлементыКлассификатора = Истина;
		КонецЕсли;
		МассивСсылок.Добавить(Элемент.Ссылка);
		СсылкаНаЭлемент = Элемент.Ссылка;
	КонецЕсли;
	Возврат МассивСсылок;
КонецФункции

&НаСервере
Процедура ДобавитьЭлементКлассификатора(ВыбраннаяСтрока)
	ЭлементКлассификатора = Справочники.ВидыАлкогольнойПродукции.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(ЭлементКлассификатора, ВыбраннаяСтрока);
	МетаданныеСправочник = Метаданные.Справочники.ВидыАлкогольнойПродукции;
	ЭлементКлассификатора.Записать();
	ВыбраннаяСтрока.Ссылка = ЭлементКлассификатора.Ссылка;
	ВыбраннаяСтрока.ЕстьСсылка = Истина;
КонецПроцедуры
