&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="ОК" Тогда
		СоздатьТиповыеОперации();
		ЭтаФорма.Закрыть(Истина);

	ИначеЕсли Команда.Имя="ПометкиУстановить" Тогда
		дзПроводки_ИзменитьИспользование(Истина);
		
	ИначеЕсли Команда.Имя="ПометкиСнять" Тогда
		дзПроводки_ИзменитьИспользование(Ложь);		
	КонецЕсли;	 
КонецПроцедуры

&НаСервере
Процедура СоздатьТиповыеОперации()
	дзБуфер=РеквизитФормыВЗначение("дзПроводки");
	тзРесурсы=РеквизитФормыВЗначение("тзТипыСумм");

	Для каждого СтрокаКоллекции1 Из дзБуфер.Строки Цикл
		Если НЕ СтрокаКоллекции1.Пометка Тогда Продолжить; КонецЕсли;

		Для каждого СтрокаКоллекции2 Из СтрокаКоллекции1.Строки Цикл
			Если НЕ СтрокаКоллекции2.Пометка Тогда Продолжить; КонецЕсли;

			СправочникСсылка=Справочники.ТиповыеОперации.НайтиПоНаименованию(СтрокаКоллекции2.ПредставлениеТОП, Истина,,СтрокаКоллекции2.Ссылка);
			Если НЕ СправочникСсылка.Пустая() Тогда Продолжить;	КонецЕсли;

			СправочникОбъект=Справочники.ТиповыеОперации.СоздатьЭлемент();
			СправочникОбъект.Владелец=СтрокаКоллекции2.Ссылка;
			СправочникОбъект.Наименование=СокрЛП(СтрокаКоллекции2.ПредставлениеТОП);

			Для каждого СтрокаКоллекции3 Из СтрокаКоллекции2.Строки Цикл
				Если НЕ СтрокаКоллекции3.Пометка Тогда Продолжить; КонецЕсли;

				НоваяСтрока=СправочникОбъект.ПроводкиБУ.Добавить();
				НоваяСтрока.СчетДебет=СтрокаКоллекции3.СчетДт;
				НоваяСтрока.СчетКредит=СтрокаКоллекции3.СчетКт;
				НоваяСтрока.Сумма=?(Найти(СтрокаКоллекции3.Сумма, "ТонкаяНастройка")>0, СоздатьТонкуюНастройку(СтрокаКоллекции3.Сумма, тзРесурсы), СтрокаКоллекции3.Сумма);
				НоваяСтрока.Количество=?(Найти(СтрокаКоллекции3.Количество, "ТонкаяНастройка") > 0, СоздатьТонкуюНастройку(СтрокаКоллекции3.Количество, тзРесурсы),СтрокаКоллекции3.Количество);
				НоваяСтрока.СуммаНУ_Дт=?(Найти(СтрокаКоллекции3.СуммаНУДт, "ТонкаяНастройка") > 0, СоздатьТонкуюНастройку(СтрокаКоллекции3.СуммаНУДт, тзРесурсы),СтрокаКоллекции3.СуммаНУДт);
				НоваяСтрока.СуммаНУ_Кт=?(Найти(СтрокаКоллекции3.СуммаНУКт, "ТонкаяНастройка") > 0, СоздатьТонкуюНастройку(СтрокаКоллекции3.СуммаНУКт, тзРесурсы),СтрокаКоллекции3.СуммаНУКт);
				НоваяСтрока.ИнвертироватьЗначениеРесурсов=СтрокаКоллекции3.Инвертировать;
				НоваяСтрока.СуммаВР_Дт=?(Найти(СтрокаКоллекции3.СуммаВРДт, "ТонкаяНастройка") > 0, СоздатьТонкуюНастройку(СтрокаКоллекции3.СуммаВРДт, тзРесурсы),СтрокаКоллекции3.СуммаВРДт);
				НоваяСтрока.СуммаВР_Кт=?(Найти(СтрокаКоллекции3.СуммаВРКт, "ТонкаяНастройка") > 0, СоздатьТонкуюНастройку(СтрокаКоллекции3.СуммаВРКт, тзРесурсы),СтрокаКоллекции3.СуммаВРКт);
				НоваяСтрока.СуммаПР_Дт=?(Найти(СтрокаКоллекции3.СуммаПРДт, "ТонкаяНастройка") > 0, СоздатьТонкуюНастройку(СтрокаКоллекции3.СуммаПРДт, тзРесурсы),СтрокаКоллекции3.СуммаПРДт);
				НоваяСтрока.СуммаПР_Кт=?(Найти(СтрокаКоллекции3.СуммаПРКт, "ТонкаяНастройка") > 0, СоздатьТонкуюНастройку(СтрокаКоллекции3.СуммаПРКт, тзРесурсы),СтрокаКоллекции3.СуммаПРКт);
			КонецЦикла;

			Если НЕ СправочникОбъект.ПроводкиБУ.Количество()=0 Тогда
				СправочникОбъект.Записать();
			КонецЕсли;			
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция СоздатьТонкуюНастройку(ТонкаяНастройка, тзРесурсы)
	НаименованиеНастройки=СтрЗаменить(ТонкаяНастройка, "ТонкаяНастройка.", "");
	текЭлемент=Справочники.НастройкаТОП.НайтиПоНаименованию(НаименованиеНастройки, Истина);
	Если НЕ текЭлемент=Неопределено И НЕ текЭлемент=Справочники.НастройкаТОП.ПустаяСсылка() Тогда Возврат текЭлемент; КонецЕсли;

	ОбъектНастройки=Справочники.НастройкаТОП.СоздатьЭлемент();
	ОбъектНастройки.Наименование=НаименованиеНастройки;

	СтруктураПоиска=Новый Структура();
	СтруктураПоиска.Вставить("НаименованиеНастройки",НаименованиеНастройки);
	
	МассивСтрок=тзРесурсы.НайтиСтроки(СтруктураПоиска);
	Для Каждого СтрокаМ ИЗ МассивСтрок Цикл               
		НоваяСтрока=ОбъектНастройки.ПараметрыНастройки.Добавить();
		НоваяСтрока.ВидРегистра=УправлениеКонфигурациейСервер.ИдентификаторОбъектовМетаданныхСсылка(СтрокаМ.ВидРегистра);
		Если ЗначениеЗаполнено(СтрокаМ.ВидДвижения) Тогда
			Попытка
				ВидДвижения=Перечисления.ВидыДвиженийПриходРасход[СтрокаМ.ВидДвижения];
			Исключение
				ВидДвижения=ПланыСчетов.Хозрасчетный[СтрокаМ.ВидДвижения];
			КонецПопытки;
			НоваяСтрока.ВидДвижения=ВидДвижения;
		Конецесли;
		НоваяСтрока.Постфикс=СтрокаМ.Постфикс;
		НоваяСтрока.Ресурс=СтрокаМ.Ресурс;
		Если ЗначениеЗаполнено(СтрокаМ.ТекстМодуля) Тогда
			ОбъектНастройки.ИспользоватьТекстМодуля=Истина;
			ОбъектНастройки.ТекстМодуля=СтрокаМ.ТекстМодуля;
		КонецЕсли;
	КонецЦикла;	
	ОбъектНастройки.Записать();
	Возврат ОбъектНастройки.Ссылка;
КонецФункции	

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "дзПроводки"

&НаСервере
Функция дзПроводки_Заплнить()
	Ветка1=Неопределено; Ветка2=Неопределено;

	Макет=Справочники.ТиповыеОперации.ПолучитьМакет("ТиповыеОперации");	
	Для Индекс=2 По Макет.ВысотаТаблицы Цикл

		стрИмя=Макет.Область(Индекс, 1, Индекс, 1).Текст;		
		Если НЕ ПустаяСтрока(стрИмя) Тогда
			Ссылка=Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("ПолноеИмя", "Документ."+стрИмя);
			Если НЕ ЗначениеЗаполнено(Ссылка) Тогда Продолжить; КонецЕсли;

			Ветка1=дзПроводки.ПолучитьЭлементы().Добавить();	
			Ветка1.Ссылка=Ссылка;
			Ветка1.Наименование=СокрЛП(Ветка1.Ссылка);
			Продолжить;
		КонецЕсли;

		стрИмя=Макет.Область(Индекс, 2, Индекс, 2).Текст;
		Если НЕ ПустаяСтрока(стрИмя) Тогда
			Длина=СтрДлина(стрИмя);
			ПозицияСкобок=СтрНайти(стрИмя, "(");
			Счета=Прав(стрИмя, Длина-ПозицияСкобок+1);
			
			стрНаименованиеТОП=стрЗаменить(стрИмя, Счета, "");
			стрНаименованиеТОП=Счета+" "+стрНаименованиеТОП;
			стрНаименованиеТОП=стрЗаменить(стрНаименованиеТОП,"(","");
			стрНаименованиеТОП=стрЗаменить(стрНаименованиеТОП,")","");

			Ветка2=Ветка1.ПолучитьЭлементы().Добавить();	
			Ветка2.Ссылка=Ветка1.Ссылка;
			Ветка2.Наименование=стрНаименованиеТОП;
			Ветка2.ПредставлениеТОП=стрИмя;
			Продолжить;
		КонецЕсли;
		стрДебет=Макет.Область(Индекс, 3 , Индекс,  3).Текст;
		стрКредит=Макет.Область(Индекс, 4 , Индекс,  4).Текст;

		НоваяСтрока=Ветка2.ПолучитьЭлементы().Добавить();
		НоваяСтрока.Ссылка=Ветка1.Ссылка;
		НоваяСтрока.ПредставлениеТОП=Ветка2.Наименование;
		Если НЕ ПустаяСтрока(стрДебет) Тогда
			НоваяСтрока.СчетДт=ПланыСчетов.Хозрасчетный[стрДебет];
		КонецЕсли;
		Если НЕ ПустаяСтрока(стрКредит) Тогда
			НоваяСтрока.СчетКт=ПланыСчетов.Хозрасчетный[стрКредит];
		КонецЕсли;
		НоваяСтрока.Сумма		 = Макет.Область(Индекс, 5 , Индекс,  5).Текст;
		НоваяСтрока.Количество	 = Макет.Область(Индекс, 6 , Индекс,  6).Текст;
		НоваяСтрока.СуммаНУДт	 = Макет.Область(Индекс, 7 , Индекс,  7).Текст;
		НоваяСтрока.СуммаНУКт	 = Макет.Область(Индекс, 8 , Индекс,  8).Текст;
		НоваяСтрока.СуммаВРДт	 = Макет.Область(Индекс, 10, Индекс, 10).Текст;
		НоваяСтрока.СуммаВРКт	 = Макет.Область(Индекс, 11, Индекс, 11).Текст;
		НоваяСтрока.СуммаПРДт	 = Макет.Область(Индекс, 12, Индекс, 12).Текст;
		НоваяСтрока.СуммаПРКт	 = Макет.Область(Индекс, 13, Индекс, 13).Текст;
		НоваяСтрока.Инвертировать= Макет.Область(Индекс, 9 , Индекс,  9).Текст="1";
		НоваяСтрока.Наименование = СокрЛП(НоваяСтрока.СчетДт)+"/"+СокрЛП(НоваяСтрока.СчетКт);
	КонецЦикла;

	Макет=Справочники.ТиповыеОперации.ПолучитьМакет("ТипыСумм");
	Для Индекс=2 По Макет.ВысотаТаблицы Цикл
		НоваяСтрока=тзТипыСумм.Добавить();
		НоваяСтрока.НаименованиеНастройки=Макет.Область(Индекс, 1, Индекс, 1).Текст;
		НоваяСтрока.ВидРегистра=Макет.Область(Индекс, 2, Индекс, 2).Текст;
		НоваяСтрока.ВидДвижения=Макет.Область(Индекс, 3, Индекс, 3).Текст;
		НоваяСтрока.Ресурс=Макет.Область(Индекс, 4, Индекс, 4).Текст;
		НоваяСтрока.Постфикс=Макет.Область(Индекс, 5, Индекс, 5).Текст;
		НоваяСтрока.ТекстМодуля=Макет.Область(Индекс, 6, Индекс, 6).Текст;
	КонецЦикла;
КонецФункции

&НаСервере
Процедура дзПроводки_ИзменитьИспользование(Использование)
	дзБуфер=РеквизитФормыВЗначение("дзПроводки");
	дзБуфер.Колонки.Добавить("W", Новый ОписаниеТипов("Число"));

	МассивСтрок=дзБуфер.Строки.НайтиСтроки(Новый Структура("W", 0), Истина);
	Для каждого СтрокаКоллекции Из МассивСтрок Цикл
		СтрокаКоллекции.Пометка=Использование;
	КонецЦикла;
	дзБуфер.Колонки.Удалить("W");
	
	ЗначениеВРеквизитФормы(дзБуфер, "дзПроводки");
КонецПроцедуры

&НаКлиенте
Процедура дзПроводки_ОбновитьСостояниеПометки(Элемент)
	Если Элемент=Неопределено Тогда Возврат; КонецЕсли;

	ЕстьОтмеченные=Ложь; ЕстьНеотмеченные=Ложь;
	Для Каждого ПодчиненныйЭлемент Из Элемент.ПолучитьЭлементы() Цикл
		Если ПодчиненныйЭлемент.Пометка Тогда
			ЕстьОтмеченные=Истина;
		Иначе
			ЕстьНеотмеченные=Истина;
		КонецЕсли;
	КонецЦикла;	
	Элемент.Пометка=?(ЕстьОтмеченные И ЕстьНеотмеченные, 2, ?(ЕстьОтмеченные, 1, 0));
	дзПроводки_ОбновитьСостояниеПометки(Элемент.ПолучитьРодителя());
КонецПроцедуры

&НаКлиенте
Процедура дзПроводки_УстановитьПометкуПодчиненным(Элемент)
	Для Каждого ПодчиненнаяСтрока Из Элемент.ПолучитьЭлементы() Цикл
		ПодчиненнаяСтрока.Пометка=Элемент.Пометка;
		дзПроводки_УстановитьПометкуПодчиненным(ПодчиненнаяСтрока);
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура дзПроводки_УстановитьПометкуРодителя(СтрокаТабличногоПоля)
	Если СтрокаТабличногоПоля.Родитель=Неопределено Тогда Возврат; КонецЕсли;
	ОбластьПоиска=СтрокаТабличногоПоля.Родитель.Строки;
	
	Есть_0=Не ОбластьПоиска.Найти(0, "Пометка")=Неопределено;
	Есть_1=Не ОбластьПоиска.Найти(1, "Пометка")=Неопределено;
	Есть_2=Не ОбластьПоиска.Найти(2, "Пометка")=Неопределено;
	
	Если Есть_2 Тогда
		СтрокаТабличногоПоля.Родитель.Пометка=2;
	ИначеЕсли Есть_0 И Есть_1 Тогда
		СтрокаТабличногоПоля.Родитель.Пометка=2;
	ИначеЕсли Есть_0 Тогда
		СтрокаТабличногоПоля.Родитель.Пометка=0;
	ИначеЕсли Есть_1 Тогда
		СтрокаТабличногоПоля.Родитель.Пометка=1;
	КонецЕсли;
	
	Если НЕ СтрокаТабличногоПоля.Родитель.Родитель=Неопределено Тогда
		дзПроводки_УстановитьПометкуРодителя(СтрокаТабличногоПоля.Родитель);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура дзПроводки_ПриИзменении(Элемент)
	Если Элемент.ТекущийЭлемент.Имя="дзПроводкиНаименование" Тогда
		ТекущиеДанные=Элемент.ТекущиеДанные;
		Если ТекущиеДанные.Пометка=2 Тогда
			ТекущиеДанные.Пометка=0;
		КонецЕсли;		
		дзПроводки_УстановитьПометкуПодчиненным(ТекущиеДанные);				
		дзПроводки_ОбновитьСостояниеПометки(ТекущиеДанные.ПолучитьРодителя()); // Изменяем состояние "вверх" (для установки флажков серым)
	КонецЕсли; 
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	дзПроводки_Заплнить();
КонецПроцедуры
