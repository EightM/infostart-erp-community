&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	стрКоманда=?(ТипЗнч(Команда)=Тип("Строка"), Команда, Команда.Имя);
	Если стрКоманда="Выбрать" Тогда
		Если Элементы.Страницы.ТекущаяСтраница=Элементы.Страница1 Тогда
			Если Не Элементы.ДеревоРеквизитов.ТекущиеДанные=Неопределено И Элементы.ДеревоРеквизитов.ТекущиеДанные.ДоступностьВыбора Тогда
				ТекущиеДанные=Элементы.ДеревоРеквизитов.ТекущиеДанные;
				ЭтаФорма.Закрыть(?(ВозвращатьКраткоеИмя, ТекущиеДанные.КраткоеИмя, ТекущиеДанные.ПолноеИмя));
			КонецЕсли;
		Иначе //Тонкая настройка
			ТекущиеДанные=Элементы.дсТонкаяНастройка.ТекущиеДанные;
			Если ТекущиеДанные=Неопределено ИЛИ ТекущиеДанные.ЭтоГруппа Тогда Возврат; КонецЕсли;
			ЭтаФорма.Закрыть(ТекущиеДанные.Ссылка);
		КонецЕсли;

	ИначеЕсли стрКоманда="ОчиститьВыбор" Тогда
		ЭтаФорма.Закрыть("");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьЗначениеРеквизитаИзПараметра(Реквизит, ЗначениеПараметра = Неопределено)
	
	Если ЗначениеПараметра = Неопределено Тогда
		ЕстьПараметр = Параметры.Свойство(Реквизит, ЗначениеПараметра);
	Иначе
		ЕстьПараметр = Истина;
	КонецЕсли;
	
	Если ТипЗнч(Реквизит) = Тип("Строка") Тогда
		ЕстьРеквизит = ЕстьРеквизитОбъекта(ЭтотОбъект, Реквизит);
		ЗначениеРеквизита = ЭтотОбъект[Реквизит];
	Иначе
		ЕстьРеквизит = Истина;
		ЗначениеРеквизита = Реквизит;
	КонецЕсли;
	
	Если ТипЗнч(ЗначениеПараметра) = Тип("Строка") И ЭтоАдресВременногоХранилища(ЗначениеПараметра) Тогда
		ЗначениеПараметра = ПолучитьИзВременногоХранилища(ЗначениеПараметра);
	КонецЕсли;
	
	Если ЕстьПараметр и ЕстьРеквизит Тогда
		Если ТипЗнч(ЗначениеПараметра) = Тип("ТаблицаЗначений") Тогда
			ЗначениеРеквизита.Загрузить(ЗначениеПараметра);
		ИначеЕсли ТипЗнч(ЗначениеПараметра) = Тип("Массив") Тогда
			Для Каждого ЭлементМассива Из ЗначениеПараметра Цикл
				НовСтр = ЗначениеРеквизита.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, ЭлементМассива);
			КонецЦикла;
		ИначеЕсли ТипЗнч(ЗначениеПараметра) = Тип("Структура") Тогда
			Для Каждого КлючИЗначение Из ЗначениеПараметра Цикл
				Если ТипЗнч(КлючИЗначение.Значение) = Тип("Структура") Тогда
					ИнициализироватьЗначениеРеквизитаИзПараметра(ЗначениеРеквизита[КлючИЗначение.Ключ], КлючИЗначение.Значение);
				Иначе
					ЗначениеРеквизита[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ЗначениеРеквизита = ЗначениеПараметра;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьНаборНастроек()
	НаборНастроек=Новый Структура();
	
	НастройкиРеквизита=Новый Структура();
	НастройкиРеквизита.Вставить("Видимость");
	НастройкиРеквизита.Вставить("ДоступностьРаскрытия");
	НастройкиРеквизита.Вставить("ДоступностьВыбора");
	
	НаборНастроек.Вставить("Реквизит", НастройкиРеквизита);
	
	НастройкиТаблицы=Новый Структура();
	НастройкиТаблицы.Вставить("Видимость");
	НастройкиТаблицы.Вставить("ДоступностьРаскрытия");
	НастройкиТаблицы.Вставить("ДоступностьВыбора");
	
	НаборНастроек.Вставить("Таблица", НастройкиТаблицы);
	
	НастройкиКорневогоЭлемента=Новый Структура();
	НастройкиКорневогоЭлемента.Вставить("Видимость");
	НастройкиКорневогоЭлемента.Вставить("ДоступностьРаскрытия");
	НастройкиКорневогоЭлемента.Вставить("ДоступностьВыбора");
	
	НаборНастроек.Вставить("КорневыеЭлементы", НастройкиКорневогоЭлемента);	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПредустановкуНастроек()
	НаборНастроек.Реквизит.Видимость = Истина;
	НаборНастроек.Реквизит.ДоступностьРаскрытия = Ложь;
	НаборНастроек.Реквизит.ДоступностьВыбора = Истина;
	
	НаборНастроек.Таблица.Видимость = Истина;
	НаборНастроек.Таблица.ДоступностьРаскрытия = Истина;
	НаборНастроек.Таблица.ДоступностьВыбора = Ложь;
	
	НаборНастроек.КорневыеЭлементы.Видимость = Истина;
	НаборНастроек.КорневыеЭлементы.ДоступностьРаскрытия = Истина;
	НаборНастроек.КорневыеЭлементы.ДоступностьВыбора = Ложь;
КонецПроцедуры

/// события элементов формы

&НаКлиенте
Процедура ДеревоРеквизитов_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыполнитьДействие("Выбрать");
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРеквизитов_ПриАктивизацииСтроки(Элемент)
	////Если Элементы.ДеревоРеквизитов.ТекущиеДанные = Неопределено Тогда
	////	Элементы.Выбрать.Доступность = Ложь;
	////Иначе
	////	Элементы.Выбрать.Доступность = Элементы.ДеревоРеквизитов.ТекущиеДанные.ДоступностьВыбора;
	////КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРеквизитов_ПередРазворачиванием(Элемент, Строка, Отказ)	
	РаскрываемыйЭлемент = ДеревоРеквизитов.НайтиПоИдентификатору(Строка);	
	Если РаскрываемыйЭлемент.ТребуетсяПолучениеПодчиненныхНаСервере Тогда
		ДеревоРеквизитовПередРазворачиваниемНаСервере(Строка);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ДеревоРеквизитовПередРазворачиваниемНаСервере(ИдентификаторСтроки)
	РаскрываемыйЭлемент=ДеревоРеквизитов.НайтиПоИдентификатору(ИдентификаторСтроки);
	РаскрываемыйЭлемент.ПолучитьЭлементы().Очистить();
	РаскрываемыйЭлемент.ТребуетсяПолучениеПодчиненныхНаСервере=Ложь;

	ЗаполнитьПодчиненныеЭлементы(РаскрываемыйЭлемент);
КонецПроцедуры

/// создание строк дерева

&НаСервере
Процедура ЗаполнитьНачальныеЭлементы()
	ЭлементыДерева=ДеревоРеквизитов.ПолучитьЭлементы();
	
	Если ВыборРесурса Тогда
		//Учетная стоимость дебета
		НоваяСтрока=ЭлементыДерева.Добавить();	
		НоваяСтрока.Имя="УчетнаяСтоимостьДебета";
		НоваяСтрока.Представление="Учетная стоимость дебета";
		НоваяСтрока.ПолноеИмя=НоваяСтрока.Имя;
		НоваяСтрока.ПолноеПредставление=НоваяСтрока.Представление;
		НоваяСтрока.КраткоеИмя="РАТ."+НоваяСтрока.Имя;
		НоваяСтрока.Картинка=11;
		НоваяСтрока.Видимость=Истина;
		НоваяСтрока.ДоступностьВыбора=Истина;
		
		//Учетная стоимость кредита
		НоваяСтрока=ЭлементыДерева.Добавить();	
		НоваяСтрока.Имя="УчетнаяСтоимостьКредита";
		НоваяСтрока.Представление="Учетная стоимость кредита";
		НоваяСтрока.ПолноеИмя=НоваяСтрока.Имя;
		НоваяСтрока.ПолноеПредставление=НоваяСтрока.Представление;
		НоваяСтрока.КраткоеИмя="РАТ."+НоваяСтрока.Имя;
		НоваяСтрока.Картинка=11;
		НоваяСтрока.Видимость=Истина;
		НоваяСтрока.ДоступностьВыбора=Истина;
	КонецЕсли;
	
	Для Каждого НачальныйЭлемент Из НачальныеТаблицы Цикл
		НачальныйЭлементДерева=ДобавитьСтрокуВДерево(ДеревоРеквизитов, НачальныйЭлемент, Истина);
		ОписаниеЭлементов=ОписаниеРеквизитов(НачальныйЭлемент.Имя, НачальныйЭлемент.ТипСтроки, НачальныйЭлемент.ТипЗначения);
		ДобавитьСтрокиВДерево(НачальныйЭлементДерева, ОписаниеЭлементов);
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодчиненныеЭлементы(ЭлементРодитель)
	ОписаниеЭлементов=ОписаниеРеквизитов(ЭлементРодитель.Имя, ЭлементРодитель.ТипСтроки, ЭлементРодитель.ТипЗначения);	
	ДобавитьСтрокиВДерево(ЭлементРодитель, ОписаниеЭлементов);	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокиВДерево(ЭлементРодитель, ОписаниеСтрок)
	Для Каждого ОписаниеСтроки Из ОписаниеСтрок Цикл
		ДобавитьСтрокуВДерево(ЭлементРодитель, ОписаниеСтроки);
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ДобавитьСтрокуВДерево(ЭлементРодитель, ОписаниеСтроки, ЭтоКорневойЭлемент = Ложь)
	ЭлементыДерева=ЭлементРодитель.ПолучитьЭлементы();
	
	НоваяСтрока=ЭлементыДерева.Добавить();	
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеСтроки, "Имя, Представление, ТипСтроки, ТипЗначения");	
	НоваяСтрока.ПолноеИмя=?(ТипЗнч(ЭлементРодитель)=Тип("ДанныеФормыДерево"), "", ЭлементРодитель.ПолноеИмя+".")+ОписаниеСтроки.Имя;
	НоваяСтрока.ПолноеПредставление=?(ТипЗнч(ЭлементРодитель)=Тип("ДанныеФормыДерево"), "", ЭлементРодитель.ПолноеПредставление+".")+ОписаниеСтроки.Представление;
	НоваяСтрока.ТребуетсяПолучениеПодчиненныхНаСервере=ЕстьСсылки(НоваяСтрока.ТипЗначения) Или НоваяСтрока.ТипСтроки="Таблица";
	
	Если ТолькоПервыйУровень И Не НоваяСтрока.ТипСтроки="Таблица" Тогда
		НоваяСтрока.ТребуетсяПолучениеПодчиненныхНаСервере=Ложь;
	КонецЕсли; //lee
	
	ИнициализироватьВидимостьДоступность(НоваяСтрока, ЭтоКорневойЭлемент);
	
	Если НоваяСтрока.ДоступностьРаскрытия И НоваяСтрока.ТребуетсяПолучениеПодчиненныхНаСервере Тогда
		НоваяСтрока.ПолучитьЭлементы().Добавить();
	КонецЕсли;
	
	ИнициализироватьКартинку(НоваяСтрока, ЭтоКорневойЭлемент);
	
	Если ОписаниеСтроки.Имя="СуммаНДС" Тогда			
		НоваяСтрока=ЭлементыДерева.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеСтроки, "ТипСтроки, ТипЗначения");
		НоваяСтрока.Имя="СуммаБезНДС";
		НоваяСтрока.Представление="Сумма без НДС";
		НоваяСтрока.ПолноеИмя=?(ТипЗнч(ЭлементРодитель)=Тип("ДанныеФормыДерево"), "", ЭлементРодитель.ПолноеИмя+".СуммаБезНДС");
		НоваяСтрока.ПолноеПредставление=?(ТипЗнч(ЭлементРодитель)=Тип("ДанныеФормыДерево"), "", ЭлементРодитель.ПолноеПредставление+".Сумма без НДС");
		ИнициализироватьВидимостьДоступность(НоваяСтрока, ЭтоКорневойЭлемент);
		ИнициализироватьКартинку(НоваяСтрока, ЭтоКорневойЭлемент);

		НоваяСтрока=ЭлементыДерева.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеСтроки, "ТипСтроки, ТипЗначения");
		НоваяСтрока.Имя="Сумма с НДС";
		НоваяСтрока.Представление="Сумма с НДС";
		НоваяСтрока.ПолноеИмя=?(ТипЗнч(ЭлементРодитель)=Тип("ДанныеФормыДерево"), "", ЭлементРодитель.ПолноеИмя+".СуммаСНДС");
		НоваяСтрока.ПолноеПредставление=?(ТипЗнч(ЭлементРодитель)=Тип("ДанныеФормыДерево"), "", ЭлементРодитель.ПолноеПредставление+".Сумма с НДС");
		ИнициализироватьВидимостьДоступность(НоваяСтрока, ЭтоКорневойЭлемент);
		ИнициализироватьКартинку(НоваяСтрока, ЭтоКорневойЭлемент);
	КонецЕсли;

	Возврат НоваяСтрока;
КонецФункции

&НаСервере
Функция ЕстьСсылки(ОписаниеТипов)
	МассивПростыхТипов=Новый Массив();
	МассивПростыхТипов.Добавить(Тип("Булево"));
	МассивПростыхТипов.Добавить(Тип("Число"));
	МассивПростыхТипов.Добавить(Тип("Строка"));
	МассивПростыхТипов.Добавить(Тип("Дата"));
	МассивПростыхТипов.Добавить(Тип("Неопределено"));
	МассивПростыхТипов.Добавить(Тип("Null"));
	МассивПростыхТипов.Добавить(Тип("ОписаниеТипов"));

	Для Каждого Тип Из ОписаниеТипов.Типы() Цикл
		Если МассивПростыхТипов.Найти(Тип)=Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;

	Возврат Ложь;	
КонецФункции

&НаСервере
Процедура ИнициализироватьВидимостьДоступность(СтрокаДерева, ЭтоКорневойЭлемент)
	Если ЭтоКорневойЭлемент Тогда
		ЗаполнитьЗначенияСвойств(СтрокаДерева, НаборНастроек.КорневыеЭлементы);
		СтрокаДерева.КраткоеИмя="РШК"; //25.10.18		
	Иначе
		Если СтрокаДерева.ТипСтроки="Таблица" Тогда
			ЗаполнитьЗначенияСвойств(СтрокаДерева, НаборНастроек.Таблица);
			СтрокаДерева.КраткоеИмя="РТЧ"; //25.10.18

			
			Если СтрокаДерева.Имя="ДополнительныеРеквизиты" Тогда
				СтрокаДерева.Видимость=Ложь;
			КонецЕсли;	 
			////Исключаем табличные части у которых нет реквизитов с типом "Число"
			//УсловиеВидимости=НаборНастроек.Реквизит.Видимость;
			//Если ТипЗнч(УсловиеВидимости)=Тип("ОписаниеТипов") Тогда
			//	СтрокаДерева.Видимость=Ложь;
			//	Для каждого мдРеквизит Из Метаданные.НайтиПоТипу(СтрокаДерева.ТипЗначения.Типы()[0]).ТабличныеЧасти[СтрокаДерева.Имя].Реквизиты Цикл
			//		Если ПолучитьЗначениеНастройки(мдРеквизит.Тип, УсловиеВидимости) Тогда
			//			СтрокаДерева.Видимость=Истина; Прервать;
			//		КонецЕсли;
			//	КонецЦикла;
			//КонецЕсли;

			//Исключаем табличные части у которых нет реквизитов с типом "Типовая операция"
			Если СтрокаДерева.Видимость И ВыборРесурса Тогда
				УсловиеВидимости=Новый ОписаниеТипов("СправочникСсылка.ТиповыеОперации"); СтрокаДерева.Видимость=Ложь;
				Для каждого мдРеквизит Из Метаданные.НайтиПоТипу(СтрокаДерева.ТипЗначения.Типы()[0]).ТабличныеЧасти[СтрокаДерева.Имя].Реквизиты Цикл
					Если ПолучитьЗначениеНастройки(мдРеквизит.Тип, УсловиеВидимости) Тогда
						СтрокаДерева.Видимость=Истина; Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;

		ИначеЕсли СтрокаДерева.ТипСтроки="Реквизит" Тогда
			СтрокаДерева.Видимость=ПолучитьЗначениеНастройки(СтрокаДерева, НаборНастроек.Реквизит.Видимость);
			СтрокаДерева.ДоступностьРаскрытия=ПолучитьЗначениеНастройки(СтрокаДерева, НаборНастроек.Реквизит.ДоступностьРаскрытия);
			СтрокаДерева.ДоступностьВыбора=ПолучитьЗначениеНастройки(СтрокаДерева, НаборНастроек.Реквизит.ДоступностьВыбора);
			СтрокаДерева.КраткоеИмя=СтрокаДерева.ПолучитьРодителя().КраткоеИмя+"."+СтрокаДерева.Имя; //25.10.18
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //lee

&НаСервере
Функция ПолучитьЗначениеНастройки(СтрокаДерева, СтрокаНастройки)
	Если ТипЗнч(СтрокаНастройки)=Тип("Булево") Тогда
		Возврат СтрокаНастройки;
	ИначеЕсли ТипЗнч(СтрокаНастройки)=Тип("ОписаниеТипов") Тогда
		Для Каждого ТипВНастройке Из СтрокаНастройки.Типы() Цикл
			Если ТипЗнч(СтрокаДерева)=Тип("ОписаниеТипов") Тогда
				Если СтрокаДерева.СодержитТип(ТипВНастройке) Тогда Возврат Истина; КонецЕсли;
			Иначе
				Если СтрокаДерева.ТипЗначения.СодержитТип(ТипВНастройке) Тогда Возврат Истина; КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;	
КонецФункции

&НаСервере
Процедура ИнициализироватьКартинку(СтрокаДерева, ЭтоКорневойЭлемент)
	
	Если ЭтоКорневойЭлемент Тогда
		Если СтрЧислоВхождений(СтрокаДерева.Имя, ".") > 1 Тогда
			СтрокаДерева.Картинка = 26;
		Иначе
			Если СтрНачинаетсяС(СтрокаДерева.Имя, "Справочник") Тогда
				СтрокаДерева.Картинка = 2;
			ИначеЕсли СтрНачинаетсяС(СтрокаДерева.Имя, "Документ") ИЛИ СтрокаДерева.Имя="Ссылка" Тогда
				СтрокаДерева.Картинка = 6;
			ИначеЕсли СтрНачинаетсяС(СтрокаДерева.Имя, "ПланВидовХарактеристик") Тогда
				СтрокаДерева.Картинка = 8;
			ИначеЕсли СтрНачинаетсяС(СтрокаДерева.Имя, "ПланСчетов") Тогда
				СтрокаДерева.Картинка = 10;
			ИначеЕсли СтрНачинаетсяС(СтрокаДерева.Имя, "ПланВидовРасчета") Тогда
				СтрокаДерева.Картинка = 12;
			ИначеЕсли СтрНачинаетсяС(СтрокаДерева.Имя, "РегистрСведений") Тогда
				СтрокаДерева.Картинка = 14;
			ИначеЕсли СтрНачинаетсяС(СтрокаДерева.Имя, "РегистрНакопления") Тогда
				СтрокаДерева.Картинка = 16;
			ИначеЕсли СтрНачинаетсяС(СтрокаДерева.Имя, "РегистрБухгалтерии") Тогда
				СтрокаДерева.Картинка = 18;
			ИначеЕсли СтрНачинаетсяС(СтрокаДерева.Имя, "РегистрРасчета") Тогда
				СтрокаДерева.Картинка = 20;
			ИначеЕсли СтрНачинаетсяС(СтрокаДерева.Имя, "БизнесПроцесс") Тогда
				СтрокаДерева.Картинка = 22;
			ИначеЕсли СтрНачинаетсяС(СтрокаДерева.Имя, "Задача") Тогда
				СтрокаДерева.Картинка = 24;
			Иначе
				СтрокаДерева.Картинка = 28;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если СтрокаДерева.ТипСтроки = "Реквизит" Тогда
			СтрокаДерева.Картинка = 28;
		ИначеЕсли СтрокаДерева.ТипСтроки = "Таблица" Тогда
			СтрокаДерева.Картинка = 26;
		КонецЕсли;
	КонецЕсли;
	
	Если СтрокаДерева.ДоступностьВыбора Тогда
		СтрокаДерева.Картинка = СтрокаДерева.Картинка + 1;
	КонецЕсли;
	
КонецПроцедуры

/// процедуры работы с реквизитами

&НаСервере
Функция ОписаниеРеквизитов(Имя, ТипСтроки, ТипЗначения)	
	ТаблицаОписанияРеквизитов = ТаблицаОписанияРеквизитов();
	
	/// собираем реквизиты всех возможных типов	
	Если ТипЗначения.Типы().Количество() = 0 Тогда
		МассивМетаданных = МассивМетаданныхПоПолномуИмени(Имя, ТипСтроки);
	Иначе
		МассивМетаданных = МассивМетаданныхПоОписаниюТипов(ТипЗначения, Имя, ТипСтроки);
	КонецЕсли;
	
	Для Каждого ЭлементМетаданных Из МассивМетаданных Цикл
		Если Не ЭлементМетаданных = Неопределено Тогда
			Для Каждого НаименованиеКоллекции Из НаименованияКоллекцийРеквизитов() Цикл
				Если ЕстьРеквизитОбъекта(ЭлементМетаданных, НаименованиеКоллекции) Тогда
					ДобавитьОписаниеЭлементовКоллекции(ТаблицаОписанияРеквизитов, ЭлементМетаданных, НаименованиеКоллекции, ТипЗначения);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	/// убираем дублированные элементы
	
	Инд = 0;
	Пока Инд < ТаблицаОписанияРеквизитов.Количество() Цикл
		
		МассивДублей = Новый Массив();
		Для Инд2 = 0 По ТаблицаОписанияРеквизитов.Количество() - 1 Цикл
			Если ТаблицаОписанияРеквизитов[Инд].Имя = ТаблицаОписанияРеквизитов[Инд2].Имя
				и не Инд = Инд2
				и ТаблицаОписанияРеквизитов[Инд].ТипСтроки = ТаблицаОписанияРеквизитов[Инд2].ТипСтроки Тогда
				МассивДублей.Добавить(ТаблицаОписанияРеквизитов[Инд2]);
			КонецЕсли;
		КонецЦикла;
		
		Если не МассивДублей.Количество() = 0 Тогда
			МассивДублей.Добавить(ТаблицаОписанияРеквизитов[Инд]);
			
			МассивТипов = Новый Массив();
			Для Каждого Дубль Из МассивДублей Цикл
				Для Каждого Тип Из Дубль.ТипЗначения.Типы() Цикл
					Если МассивТипов.Найти(Тип) = Неопределено Тогда
						МассивТипов.Добавить(Тип);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			ДобавитьОписаниеЭлемента(ТаблицаОписанияРеквизитов, ТаблицаОписанияРеквизитов[Инд].Имя, ТаблицаОписанияРеквизитов[Инд].ТипСтроки, ТаблицаОписанияРеквизитов[Инд].Представление, Новый ОписаниеТипов(МассивТипов));
			
			Для Каждого Дубль Из МассивДублей Цикл
				ТаблицаОписанияРеквизитов.Удалить(Дубль);
			КонецЦикла;
		Иначе
			Инд = Инд + 1;
		КонецЕсли;		
	КонецЦикла;
	
	ТаблицаОписанияРеквизитов.Сортировать("ТипСтроки, Представление");
	
	Возврат ТаблицаОписанияРеквизитов;	
КонецФункции

&НаСервере
Функция МассивМетаданныхПоПолномуИмени(ПолноеИмя, ТипСтроки)
	МетаданныеРезультат = Метаданные.НайтиПоПолномуИмени(СтрРазделить(ПолноеИмя, ".", Ложь)[0] + "." + СтрРазделить(ПолноеИмя, ".", Ложь)[1]);
	Если ТипСтроки = "Таблица" и СтрЧислоВхождений(ПолноеИмя, ".") = 2 и не МетаданныеРезультат = Неопределено Тогда
		МетаданныеРезультат = МетаданныеРезультат.ТабличныеЧасти[СтрРазделить(ПолноеИмя, ".", Ложь)[2]];
	КонецЕсли;
	
	МассивРезультат=Новый Массив();
	МассивРезультат.Добавить(МетаданныеРезультат);
	
	Возврат МассивРезультат;	
КонецФункции

&НаСервере
Функция МассивМетаданныхПоОписаниюТипов(ОписаниеТипов, ПолноеИмя, ТипСтроки)
	МассивРезультат=Новый Массив();
	Для Каждого Тип Из ОписаниеТипов.Типы() Цикл
		МетаданныеСтроки=Метаданные.НайтиПоТипу(Тип);
		Если ТипСтроки="Таблица" И Не МетаданныеСтроки=Неопределено Тогда
			Если ЕстьРеквизитОбъекта(МетаданныеСтроки.ТабличныеЧасти, ПолноеИмя) Тогда
				МетаданныеСтроки=МетаданныеСтроки.ТабличныеЧасти[ПолноеИмя];
			КонецЕсли;
		КонецЕсли;
		МассивРезультат.Добавить(МетаданныеСтроки);
	КонецЦикла;
	Возврат МассивРезультат;	
КонецФункции

&НаСервере
Функция ТаблицаОписанияРеквизитов()
	КвалификаторСтроки10=Новый КвалификаторыСтроки(10, ДопустимаяДлина.Переменная);
	КвалификаторСтроки150=Новый КвалификаторыСтроки(150, ДопустимаяДлина.Переменная);
	КвалификаторСтроки0=Новый КвалификаторыСтроки(0, ДопустимаяДлина.Переменная);

	ТаблицаОписания=Новый ТаблицаЗначений();
	ТаблицаОписания.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка",, КвалификаторСтроки150));
	ТаблицаОписания.Колонки.Добавить("ТипСтроки", Новый ОписаниеТипов("Строка",, КвалификаторСтроки10));
	ТаблицаОписания.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка",, КвалификаторСтроки0));
	ТаблицаОписания.Колонки.Добавить("ТипЗначения", Новый ОписаниеТипов("ОписаниеТипов"));

	Возврат ТаблицаОписания;	
КонецФункции

&НаСервере
Функция НаименованияКоллекцийРеквизитов()
	МассивНаименований=Новый Массив();
	МассивНаименований.Добавить("СтандартныеРеквизиты");
	МассивНаименований.Добавить("Реквизиты");
	МассивНаименований.Добавить("ТабличныеЧасти");
	МассивНаименований.Добавить("Измерения"); //lee
	МассивНаименований.Добавить("Ресурсы"); //lee
	Возврат МассивНаименований;	
КонецФункции

&НаСервере
Процедура ДобавитьОписаниеЭлементовКоллекции(ТаблицаЗначений, КоллекцияМетаданных, НаименованиеКоллекции, ТипРодителя)
	КоллекцияЭлементов=КоллекцияМетаданных[НаименованиеКоллекции];
	ТипСтрок=?(НаименованиеКоллекции="ТабличныеЧасти", "Таблица", "Реквизит");
	Для Каждого Элемент Из КоллекцияЭлементов Цикл
		Если Элемент.Имя="НомерСтроки" Тогда Продолжить; КонецЕсли; //lee
		//*** Если Элемент.Имя="Ссылка" Тогда Продолжить; КонецЕсли; //lee
		НоваяСтрока=ТаблицаЗначений.Добавить();
		НоваяСтрока.Имя=Элемент.Имя;
		НоваяСтрока.ТипСтроки=ТипСтрок;
		НоваяСтрока.Представление=Элемент.Представление();
		Если ПустаяСтрока(НоваяСтрока.Представление) Тогда
			НоваяСтрока.Представление=Элемент.Имя;
		КонецЕсли; 
		НоваяСтрока.ТипЗначения=?(ТипСтрок="Реквизит", Элемент.Тип, ТипРодителя);
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ДобавитьОписаниеЭлемента(ТаблицаЗначений, Имя, ТипСтроки, Представление, ТипЗначения)
	НоваяСтрока=ТаблицаЗначений.Добавить();
	НоваяСтрока.Имя=Имя;
	НоваяСтрока.ТипСтроки=ТипСтроки;
	НоваяСтрока.Представление=Представление;
	НоваяСтрока.ТипЗначения=ТипЗначения;	
КонецПроцедуры

&НаСервере
Функция ЕстьРеквизитОбъекта(Объект, ИмяРеквизита) Экспорт
	НовыйУИД=Новый УникальныйИдентификатор;
	НовыйСтруктура=Новый Структура(ИмяРеквизита, НовыйУИД);
	ЗаполнитьЗначенияСвойств(НовыйСтруктура, Объект);
	
	Возврат Не НовыйСтруктура[ИмяРеквизита]=НовыйУИД;	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Тонкая настройка"

&НаКлиенте
Процедура дсТонкаяНастройка_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыполнитьДействие("Выбрать");
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИнициализироватьНаборНастроек();
	ВыполнитьПредустановкуНастроек();

	ИнициализироватьЗначениеРеквизитаИзПараметра("НаборНастроек");
	ИнициализироватьЗначениеРеквизитаИзПараметра("НачальныеТаблицы");

	Если Параметры.Свойство("Заголовок") Тогда
		АвтоЗаголовок=Ложь;
		Заголовок=Параметры.Заголовок;
	КонецЕсли;
	Параметры.Свойство("ТолькоПервыйУровень", ТолькоПервыйУровень);
	Параметры.Свойство("ВозвращатьКраткоеИмя", ВозвращатьКраткоеИмя);
	Параметры.Свойство("ВыборРесурса", ВыборРесурса);

	ЗаполнитьНачальныеЭлементы();

	Если НачальныеТаблицы.Количество()=0 Тогда Отказ=Истина; Возврат; КонецЕсли;

	Элементы.ДеревоРеквизитов.НачальноеОтображениеДерева=НачальноеОтображениеДерева[?(НачальныеТаблицы.Количество()=1, "РаскрыватьВерхнийУровень", "НеРаскрывать")];
	
	Если ВыборРесурса Тогда
		Элементы.Страница2.Видимость=ВыборРесурса;
	КонецЕсли;

	Если Параметры.Свойство("ТекущееЗначение") Тогда
		Если ТипЗнч(Параметры.ТекущееЗначение)=Тип("СправочникСсылка.НастройкаТОП") И ЗначениеЗаполнено(Параметры.ТекущееЗначение) Тогда
			Элементы.Страницы.ТекущаяСтраница=Элементы.Страница2;
			Элементы.дсТонкаяНастройка.ТекущаяСтрока=Параметры.ТекущееЗначение;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
