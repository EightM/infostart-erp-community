&НаСервере
Процедура ПроверкаАналитики()
	РодительЭлемента=УправлениеКонфигурациейСервер.РодительВерхнегоУровня(Объект.Родитель);	
	тзОбщихНастроек=РодительЭлемента.НастройкаАналитики.Выгрузить();

	СписокДК=Новый СписокЗначений;
	СписокДК.Добавить("СчетДебет");
	СписокДК.Добавить("СчетКредит");
	Для Каждого СтрокаКоллекции1 Из Объект.ПроводкиБУ Цикл
		НезаполненоЗначениеОбщих=Ложь;
		НезаполненоЗначениеЛокальных=Ложь;
		Для каждого ЭлементаСписка Из СписокДК Цикл
			Для каждого СтрокаКоллекции2 Из СтрокаКоллекции1[ЭлементаСписка.Значение].ВидыСубконто Цикл
				СтруктураПоиска=Новый Структура;
				СтруктураПоиска.Вставить("ВидАналитики", СтрокаКоллекции2.ВидСубконто);
				МассивСтрок=тзОбщихНастроек.НайтиСтроки(СтруктураПоиска);
				Если МассивСтрок.Количество()>0 Тогда
					НезаполненоЗначениеОбщих = НЕ ЗначениеЗаполнено(МассивСтрок[0].Значение) И ПустаяСтрока(МассивСтрок[0].ТекстМодуля)
				КонецЕсли;
				
				СтруктураПоиска.Вставить("ID", СтрокаКоллекции1.ID);
				МассивСтрок=Объект.НастройкаАналитики.НайтиСтроки(СтруктураПоиска);
				Если МассивСтрок.Количество()>0 Тогда	
					НезаполненоЗначениеЛокальных = НЕ ЗначениеЗаполнено(МассивСтрок[0].Значение) И ПустаяСтрока(МассивСтрок[0].ТекстМодуля)
				КонецЕсли;

				Если НезаполненоЗначениеЛокальных И НезаполненоЗначениеОбщих Тогда
					Сообщить("У счета "+СтрокаКоллекции1[ЭлементаСписка.Значение]+" не заполнена аналитика '"+СтрокаКоллекции2.ВидСубконто+"'");
				КонецЕсли; 
			КонецЦикла;
		КонецЦикла; 
	КонецЦикла;  	
КонецПроцедуры

&НаКлиенте
Функция ОпределитьТип()
	стрТип=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ПолноеИмя");	
	//*** стрТип=стрЗаменить(стрТип, "_", ".");
	стрТип=СтрЗаменить(стрТип, "Документ.", "ДокументСсылка.");
	стрТип=СтрЗаменить(стрТип, "Справочник.", "СправочникСсылка.");
	стрТип=СтрЗаменить(стрТип, "РегистрНакопления.", "РегистрНакопленияКлючЗаписи.");
	стрТип=СтрЗаменить(стрТип, "РегистрБухгалтерии.", "РегистрБухгалтерииКлючЗаписи.");
	стрТип=СтрЗаменить(стрТип, "РегистрСведений.", "РегистрСведенийКлючЗаписи.");
	Возврат стрТип; 
КонецФункции

&НаКлиенте
Функция ВидимостьЭлементовФормы()
	Элементы.СтраницыУУ.Видимость=НЕ Объект.ПроводкиУУ.Количество()=0;
	Элементы.ГруппаНастройкаАналитикиБУ.Видимость=НЕ Объект.ПроводкиБУ.Количество()=0;
	Элементы.ГруппаНастройкаАналитикиФУ.Видимость=НЕ Объект.ПроводкиФУ.Количество()=0;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики оповещений

&НаКлиенте
Процедура ОбработчикОповещения_ВыборАналитики(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	Элементы[Параметр2.ИмяТаблицы].ТекущиеДанные.Значение=Параметр1;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ВыборРесурса(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	ТекущиеДанные=Элементы[Параметр2.ИмяТаблицы].ТекущиеДанные;	
	ТекущиеДанные[Параметр2.стрКолонка]=Параметр1;
КонецПроцедуры

////////&НаКлиенте
////////Процедура ОбработчикОповещения_ВыборРеквизита(Параметр1, Параметр2) Экспорт
////////	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
////////	Если Параметр1.Значение="ВыборРеквизита" Тогда
////////		стрТип=ОпределитьТип();
////////		
////////		ПараметрыФормы=Новый Структура();	
////////		ПараметрыФормы.Вставить("Заголовок", "Выберите реквизит");
////////		ПараметрыФормы.Вставить("ТолькоПервыйУровень", Ложь);
////////		ПараметрыФормы.Вставить("ВозвращатьКраткоеИмя", Истина);
////////		ПараметрыФормы.Вставить("ВыборРесурса", Истина); //*****
////////		ПараметрыФормы.Вставить("НачальныеТаблицы", Новый Массив());
////////		ПараметрыФормы.НачальныеТаблицы.Добавить(Новый Структура("ТипСтроки, Имя, Представление, ТипЗначения",	"", "Ссылка", Новый ОписаниеТипов(стрТип), Новый ОписаниеТипов(стрТип)));
////////		
////////		ПараметрыФормы.Вставить("НаборНастроек", Новый Структура());
////////		ПараметрыФормы.НаборНастроек.Вставить("Реквизит", Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Новый ОписаниеТипов("Число"), Истина, Истина));
////////		ПараметрыФормы.НаборНастроек.Вставить("Таблица" , Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Ложь));
////////		ПараметрыФормы.НаборНастроек.Вставить("КорневыеЭлементы", Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Ложь));
////////		
////////		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборРесурса", ЭтотОбъект, Параметр2);
////////		ОткрытьФорму("Справочник.ТиповыеОперации.Форма.ФормаВыбораРеквизита", ПараметрыФормы,,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

////////	ИначеЕсли Параметр1.Значение="ТонкаяНастройка" Тогда
////////		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборТонкойНастройки", ЭтотОбъект, Параметр2);
////////		ПараметрыФормы=Новый Структура("РежимВыбора", Истина);
////////		ОткрытьФорму("Справочник.НастройкаТОП.ФормаВыбора", ПараметрыФормы, Параметр2.Элемент, УникальныйИдентификатор,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
////////	Иначе
////////		Элементы[Параметр2.ИмяТаблицы].ТекущиеДанные[Параметр2.стрКолонка]=Параметр1.Значение;
////////	КонецЕсли;
////////КонецПроцедуры

////////&НаКлиенте
////////Процедура ОбработчикОповещения_ВыборТонкойНастройки(Параметр1, Параметр2) Экспорт
////////	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
////////	Элементы[Параметр2.ИмяТаблицы].ТекущиеДанные[Параметр2.стрКолонка]=Параметр1;
////////КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличной части "Настройка аналитики УУ"

////&НаСервереБезКонтекста
////Функция ОпределитьТипАналитики(ВидАналитики)
////	Если ТипЗнч(ВидАналитики)=Тип("СправочникСсылка.МетаКонфигуратор") Тогда
////		стрИсточникДанных=Справочники.МетаКонфигуратор.ПолучитьИмяПредопределенного(ВидАналитики);
////		стрИсточникДанных=стрЗаменить(стрИсточникДанных, "_", Символы.ПС);

////		стрИмя1=СтрПолучитьСтроку(стрИсточникДанных, 1); //РегистрыНакопления
////		стрИмя2=СтрПолучитьСтроку(стрИсточникДанных, 2); //УправленческийУчетОстатки
////		стрИмя3=СтрПолучитьСтроку(стрИсточникДанных, 3); //Измерения
////		стрИмя4=СтрПолучитьСтроку(стрИсточникДанных, 4); //РазделУчета	
////	
////		Возврат Метаданные[стрИмя1][стрИмя2][стрИмя3][стрИмя4].Тип;
////	КонецЕсли;

////	Возврат ВидАналитики.ТипЗначения;
////КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличная части "Настройка аналитики"

&НаКлиенте
Процедура тпНастройкаАналитикиОбщая_ВыполнитьДействие(Кнопка)
	Если Кнопка.Имя="НастройкаАналитикиОбщаяОбновить" Тогда
		тпНастройкаАналитикиОбщая_Обновить();
	ИначеЕсли Кнопка.Имя="НастройкаАналитикиОбновитьБУ" Тогда
		тпНастройкаАналитикиОбщая_Обновить("ПроводкиБУ");
	ИначеЕсли Кнопка.Имя="НастройкаАналитикиОбновитьФУ" Тогда
		тпНастройкаАналитикиОбщая_Обновить("ПроводкиФУ");
	ИначеЕсли Кнопка.Имя="НастройкаАналитикиОбновитьУУ" Тогда
		НастройкаАналитикиОбновитьУУ();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НастройкаАналитикиОбновитьУУ()
	СтрокаТабличнойЧасти=Объект.ПроводкиУУ.НайтиПоИдентификатору(Элементы.ПроводкиУУ.ТекущаяСтрока);
	Если СтрокаТабличнойЧасти=Неопределено Тогда Возврат; КонецЕсли;

	стрРегистр=СтрЗаменить(СтрокаТабличнойЧасти.Регистр.ПолноеИмя, "РегистрНакопления.", "");
	Если ПустаяСтрока(стрРегистр) Тогда Возврат; КонецЕсли;	
	
	Для каждого мдОбъект Из Метаданные.РегистрыНакопления[стрРегистр]["Измерения"] Цикл
		СправочникСсылка=Справочники.РеквизитыОбъектовМетаданных.НайтиПоРеквизиту("Идентификатор", "Измерение."+мдОбъект.Имя,,СтрокаТабличнойЧасти.Регистр);
		Если СправочникСсылка.Пустая() Тогда
			СправочникОбъект=Справочники.РеквизитыОбъектовМетаданных.СоздатьЭлемент();
			СправочникОбъект.Владелец=СтрокаТабличнойЧасти.Регистр;
			СправочникОбъект.Наименование=мдОбъект.Представление();
			СправочникОбъект.Идентификатор="Измерение."+мдОбъект.Имя;
			СправочникОбъект.Записать();
			СправочникСсылка=СправочникОбъект.Ссылка;
		КонецЕсли;
		Отбор=Новый Структура("ВидАналитики,ID", СправочникСсылка, СтрокаТабличнойЧасти.ID);
		МассивСтрок=Объект.НастройкаАналитики.НайтиСтроки(Отбор);
		Если МассивСтрок.Количество()=0 Тогда
			НоваяСтрока=Объект.НастройкаАналитики.Добавить();
			НоваяСтрока.ВидАналитики=СправочникСсылка;
			НоваяСтрока.ID=СтрокаТабличнойЧасти.ID;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры	 

&НаСервере
Процедура тпНастройкаАналитикиОбщая_Обновить(стрТаблица=Неопределено)
	Если стрТаблица=Неопределено Тогда
		Запрос=Новый Запрос;
		Запрос.УстановитьПараметр("Владелец", Объект.Владелец);
		Запрос.Текст="
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсточникДанных.Счет КАК Счет
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИсточникДанных.СчетДебет КАК Счет
		|	ИЗ
		|		Справочник.ТиповыеОперации.ПроводкиБУ КАК ИсточникДанных
		|	ГДЕ
		|		ИсточникДанных.Ссылка.Владелец = &Владелец
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ИсточникДанных.СчетКредит
		|	ИЗ
		|		Справочник.ТиповыеОперации.ПроводкиБУ КАК ИсточникДанных
		|	ГДЕ
		|		ИсточникДанных.Ссылка.Владелец = &Владелец
		|	) КАК ИсточникДанных
		|";
		
		//Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		//Запрос.Текст="
		//|ВЫБРАТЬ РАЗЛИЧНЫЕ
		//|	ИсточникДанных.Счет КАК Счет
		//|ИЗ
		//|	(ВЫБРАТЬ
		//|		ИсточникДанных.СчетДебет КАК Счет
		//|	ИЗ
		//|		Справочник.ТиповыеОперации.ПроводкиБУ КАК ИсточникДанных
		//|	ГДЕ
		//|		ИсточникДанных.Ссылка = &Ссылка
		//|	
		//|	ОБЪЕДИНИТЬ ВСЕ
		//|	
		//|	ВЫБРАТЬ
		//|		ИсточникДанных.СчетКредит
		//|	ИЗ
		//|		Справочник.ТиповыеОперации.ПроводкиБУ КАК ИсточникДанных
		//|	ГДЕ
		//|		ИсточникДанных.Ссылка = &Ссылка) КАК ИсточникДанных
		//|";
		Выборка=Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Для каждого СтрокаКоллекции Из Выборка.Счет.ВидыСубконто Цикл
				РезультатПоиска=Объект.НастройкаАналитики.НайтиСтроки(Новый Структура("ВидАналитики", СтрокаКоллекции.ВидСубконто));
				Если НЕ РезультатПоиска.Количество()=0 Тогда Продолжить; КонецЕсли; 
				НоваяСтрока=Объект.НастройкаАналитики.Добавить();
				НоваяСтрока.ВидАналитики=СтрокаКоллекции.ВидСубконто;
			КонецЦикла;
		КонецЦикла;
	Иначе
		СтрокаТабличнойЧасти=Объект[стрТаблица].НайтиПоИдентификатору(Элементы[стрТаблица].ТекущаяСтрока);

		СтруктураПоиска=Новый Структура;
		СтруктураПоиска.Вставить("ID", СтрокаТабличнойЧасти.ID);

		МассивСчетов=Новый Массив;
		МассивСчетов.Добавить(СтрокаТабличнойЧасти.СчетДебет);
		МассивСчетов.Добавить(СтрокаТабличнойЧасти.СчетКредит);
		Для каждого Счет Из МассивСчетов Цикл
			Для каждого СтрокаКоллекции Из Счет.ВидыСубконто Цикл
				СтруктураПоиска.Вставить("ВидАналитики", СтрокаКоллекции.ВидСубконто);

				МассивСтрок=Объект.НастройкаАналитики.НайтиСтроки(СтруктураПоиска);
				Если НЕ МассивСтрок.Количество()=0 Тогда Продолжить; КонецЕсли;

				НоваяСтрока=Объект.НастройкаАналитики.Добавить();
				НоваяСтрока.ВидАналитики=СтрокаКоллекции.ВидСубконто;
				НоваяСтрока.ID=СтрокаТабличнойЧасти.ID;
			КонецЦикла;
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпНастройкаАналитики_Колонка_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//стрТаблица=Элемент.Родитель.Имя;
	стрТаблица=ИмяТаблицы(Элемент);
	стрКолонка=стрЗаменить(Элемент.Имя, стрТаблица, "");
	ТекущиеДанные=Элементы[стрТаблица].ТекущиеДанные;

	Если стрКолонка="Значение" Тогда
		СтандартнаяОбработка=Ложь;
		Если ТекущиеДанные.Значение=Неопределено Тогда 
			ТекущиеДанные.Значение="";
		КонецЕсли;

		стрТип=ОпределитьТип();

		ПараметрыФормы=Новый Структура();	
		ПараметрыФормы.Вставить("Заголовок", "Выберите реквизит");
		ПараметрыФормы.Вставить("ТолькоПервыйУровень", Ложь);
		ПараметрыФормы.Вставить("ВозвращатьКраткоеИмя", Истина);
		ПараметрыФормы.Вставить("НачальныеТаблицы", Новый Массив());
		ПараметрыФормы.НачальныеТаблицы.Добавить(Новый Структура("ТипСтроки, Имя, Представление, ТипЗначения",	"", "Ссылка", Новый ОписаниеТипов(стрТип), Новый ОписаниеТипов(стрТип)));
		
		ПараметрыФормы.Вставить("НаборНастроек", Новый Структура());	
		ПараметрыФормы.НаборНастроек.Вставить("Реквизит", Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Истина));
		ПараметрыФормы.НаборНастроек.Вставить("Таблица" , Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Ложь));
		ПараметрыФормы.НаборНастроек.Вставить("КорневыеЭлементы", Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Ложь));

		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборАналитики", ЭтотОбъект, Новый Структура("ИмяТаблицы", стрТаблица));
		ОткрытьФорму("Справочник.ТиповыеОперации.Форма.ФормаВыбораРеквизитаАналитики", ПараметрыФормы,,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	ИначеЕсли стрКолонка="ВидАналитики" Тогда
		Если стрТаблица="НастройкаАналитикиУУ" Тогда
			Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ВидАналитики) Тогда
				ТекущиеДанные.ВидАналитики=ПредопределенноеЗначение("Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка");
			КонецЕсли;	
		Иначе
			Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ВидАналитики) Тогда
				ТекущиеДанные.ВидАналитики=ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка");
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпНастройкаАналитики_ПриАктивизацииСтроки(Элемент)
	ТекущиеДанные=Элементы.НастройкаАналитики.ТекущиеДанные;
	Если ТекущиеДанные=Неопределено Тогда Возврат; КонецЕсли;
	Если Не ПустаяСтрока(ТекущиеДанные.ТекстМодуля) Тогда
		ТекстМодуля=ТекущиеДанные.ТекстМодуля;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ИмяТаблицы(Поле)
	Если Тип(Поле.Родитель)=Тип("ТаблицаФормы") Тогда
		Возврат Поле.Родитель.Имя;
	КонецЕсли;
	Возврат ИмяТаблицы(Поле.Родитель);
КонецФункции

&НаКлиенте
Процедура тпНастройкаАналитики_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	стрТаблица=ИмяТаблицы(Поле);
	стрКолонка=стрЗаменить(Поле.Имя, стрТаблица, "");

	ТекущиеДанные=Элементы[стрТаблица].ТекущиеДанные;
	Если стрКолонка="КартинкаДК" Тогда
		Если ПустаяСтрока(ТекущиеДанные.ДК) Тогда
			ТекущиеДанные.ДК="Д";
			ТекущиеДанные.КартинкаДК=БиблиотекаКартинок.Дебет;
		ИначеЕсли ТекущиеДанные.ДК="Д" Тогда
			ТекущиеДанные.ДК="К";
			ТекущиеДанные.КартинкаДК=БиблиотекаКартинок.Кредит;
		ИначеЕсли ТекущиеДанные.ДК="К" Тогда
			ТекущиеДанные.ДК="";
			ТекущиеДанные.КартинкаДК=Новый Картинка;
		КонецЕсли;

	ИначеЕсли стрКолонка="КартинкаФК" Тогда
		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_РедактированиеТекстаМодуля", ЭтотОбъект, Новый Структура("ИмяТаблицы", стрТаблица));

		ПараметрыФормы=Новый Структура;
		ПараметрыФормы.Вставить("РедактируемыйТекст", ТекущиеДанные.ТекстМодуля);
		ОткрытьФорму("Справочник.ТиповыеОперации.Форма.ФормаРедактированияТекста", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_РедактированиеТекстаМодуля(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	Элементы[Параметр2.ИмяТаблицы].ТекущиеДанные.ТекстМодуля=Параметр1;
	Элементы[Параметр2.ИмяТаблицы].ТекущиеДанные.КартинкаФК=НЕ ПустаяСтрока(Параметр1);
КонецПроцедуры

&НаСервере
Процедура тпНастройкаАналитики_Инициализация()
	Для каждого СтрокаКоллекции Из Объект.НастройкаАналитики Цикл
		Если ПустаяСтрока(СтрокаКоллекции.ДК) Тогда
			СтрокаКоллекции.КартинкаДК=Новый Картинка;
		ИначеЕсли СтрокаКоллекции.ДК="Д" Тогда
			СтрокаКоллекции.КартинкаДК=БиблиотекаКартинок.Дебет;
		ИначеЕсли СтрокаКоллекции.ДК="К" Тогда
			СтрокаКоллекции.КартинкаДК=БиблиотекаКартинок.Кредит;
		КонецЕсли;
		СтрокаКоллекции.КартинкаФК=НЕ ПустаяСтрока(СтрокаКоллекции.ТекстМодуля);
	КонецЦикла;	 
КонецПроцедуры	 

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличная части "Настройка аналитики БУ"

&НаКлиенте
Процедура тпНастройкаАналитикиБУ_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ=Элементы.ПроводкиБУ.ТекущиеДанные=Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура тпНастройкаАналитикиБУ_ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекущиеДанные=Элементы.НастройкаАналитикиБУ.ТекущиеДанные;
	Если ПустаяСтрока(ТекущиеДанные.ID) Тогда
		ТекущиеДанные.ID=Элементы.ПроводкиБУ.ТекущиеДанные.ID;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличная части "Настройка аналитики ФУ"

&НаКлиенте
Процедура тпНастройкаАналитикиФУ_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ=Элементы.ПроводкиФУ.ТекущиеДанные=Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура тпНастройкаАналитикиФУ_ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекущиеДанные=Элементы.НастройкаАналитикиФУ.ТекущиеДанные;
	Если ПустаяСтрока(ТекущиеДанные.ID) Тогда
		ТекущиеДанные.ID=Элементы.ПроводкиФУ.ТекущиеДанные.ID;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличная части "Проводки УУ"

&НаКлиенте
Процедура тпПроводкиУУ_ПриАктивизацииСтроки(Элемент)
	ТекущиеДанные=Элементы.ПроводкиУУ.ТекущиеДанные;
	ЗначениеОтбора=?(ТекущиеДанные=Неопределено, "1", ТекущиеДанные.ID);
	Если ПустаяСтрока(ЗначениеОтбора) Тогда
		ЗначениеОтбора=Строка(Новый УникальныйИдентификатор);
		ТекущиеДанные.ID=ЗначениеОтбора;
	КонецЕсли;
	Элементы.НастройкаАналитикиУУ.ОтборСтрок=Новый ФиксированнаяСтруктура(Новый Структура("ID", ЗначениеОтбора));
	Элементы.РесурсыПроводкиУУ.ОтборСтрок=Новый ФиксированнаяСтруктура(Новый Структура("ID", ЗначениеОтбора));
	ВидимостьЭлементовФормы();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличная части "Аналитика УУ"

&НаКлиенте
Процедура тпНастройкаАналитикиУУ_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ=Элементы.ПроводкиУУ.ТекущиеДанные=Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура тпНастройкаАналитикиУУ_ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекущиеДанные=Элементы.НастройкаАналитикиУУ.ТекущиеДанные;
	Если ПустаяСтрока(ТекущиеДанные.ID) Тогда
		ТекущиеДанные.ID=Элементы.ПроводкиУУ.ТекущиеДанные.ID;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличная части "Ресурсы УУ"

&НаКлиенте
Процедура тпНастройкаРесурсыПроводкиУУ_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ=Элементы.ПроводкиУУ.ТекущиеДанные=Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура тпНастройкаРесурсыПроводкиУУ_ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекущиеДанные=Элементы.РесурсыПроводкиУУ.ТекущиеДанные;
	Если ПустаяСтрока(ТекущиеДанные.ID) Тогда
		ТекущиеДанные.ID=Элементы.ПроводкиУУ.ТекущиеДанные.ID;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура тпНастройкаРесурсыПроводкиУУ_Обновить()
	СтрокаТабличнойЧасти=Объект.ПроводкиУУ.НайтиПоИдентификатору(Элементы.ПроводкиУУ.ТекущаяСтрока);
	Если СтрокаТабличнойЧасти=Неопределено Тогда Возврат; КонецЕсли;

	стрРегистр=СтрЗаменить(СтрокаТабличнойЧасти.Регистр.ПолноеИмя, "РегистрНакопления.", "");
	Если ПустаяСтрока(стрРегистр) Тогда Возврат; КонецЕсли;	
	
	Для каждого мдОбъект Из Метаданные.РегистрыНакопления[стрРегистр]["Ресурсы"] Цикл
		СправочникСсылка=Справочники.РеквизитыОбъектовМетаданных.НайтиПоРеквизиту("Идентификатор", "Ресурсы."+мдОбъект.Имя,,СтрокаТабличнойЧасти.Регистр);
		Если СправочникСсылка.Пустая() Тогда
			СправочникОбъект=Справочники.РеквизитыОбъектовМетаданных.СоздатьЭлемент();
			СправочникОбъект.Владелец=СтрокаТабличнойЧасти.Регистр;
			СправочникОбъект.Наименование=мдОбъект.Представление();
			СправочникОбъект.Идентификатор="Ресурсы."+мдОбъект.Имя;
			СправочникОбъект.Записать();
			СправочникСсылка=СправочникОбъект.Ссылка;
		КонецЕсли;
		Отбор=Новый Структура("Имя,ID", СправочникСсылка, СтрокаТабличнойЧасти.ID);
		МассивСтрок=Объект.РесурсыПроводкиУУ.НайтиСтроки(Отбор);
		Если МассивСтрок.Количество()=0 Тогда
			НоваяСтрока=Объект.РесурсыПроводкиУУ.Добавить();
			НоваяСтрока.Имя=СправочникСсылка;
			НоваяСтрока.ID=СтрокаТабличнойЧасти.ID;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры	 

&НаКлиенте
Процедура НастройкаРесурсовОбновитьУУ(Команда)
	тпНастройкаРесурсыПроводкиУУ_Обновить();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличная части "Проводки" общие обработчики

&НаКлиенте
Процедура тпПроводки_ПриАктивизацииСтроки(Элемент)
	ТекущиеДанные=Элементы[Элемент.Имя].ТекущиеДанные;
	ЗначениеОтбора=?(ТекущиеДанные=Неопределено, "1", ТекущиеДанные.ID);
	Если ПустаяСтрока(ЗначениеОтбора) Тогда
		ЗначениеОтбора=Строка(Новый УникальныйИдентификатор);
		ТекущиеДанные.ID=ЗначениеОтбора;
	КонецЕсли;
	Элементы["НастройкаАналитики"+Прав(Элемент.Имя, 2)].ОтборСтрок=Новый ФиксированнаяСтруктура(Новый Структура("ID", ЗначениеОтбора));
КонецПроцедуры

&НаКлиенте
Процедура тпПроводки_ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если ОтменаРедактирования Тогда Возврат; КонецЕсли; 

	ТекущиеДанные=Элементы[Элемент.Имя].ТекущиеДанные;
	Если НоваяСтрока И ПустаяСтрока(ТекущиеДанные.ID) Тогда
		ТекущиеДанные.ID=Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
	
	ВидимостьЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура тпПроводки_ПередНачаломИзменения(Элемент, Отказ)
	стрКолонка=стрЗаменить(Элемент.ТекущийЭлемент.Имя, Элементы[Элемент.Имя].ИМя, "");
	Если стрКолонка="Количество" Или Лев(стрКолонка, 5)="Сумма" Тогда
		Отказ=Истина; тпПроводки_ВыбратьЗначениеРесурса(Элемент, Элемент.Имя, стрКолонка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпПроводки_ВыбратьЗначениеРесурса(Элемент, стрТаблица, стрКолонка)
	тпСсылка=Элементы[стрТаблица]; стрТип=ОпределитьТип();

	ПараметрыФормы=Новый Структура();	
	ПараметрыФормы.Вставить("Заголовок", "Выберите значение ресурса");
	ПараметрыФормы.Вставить("ТолькоПервыйУровень", Ложь);
	ПараметрыФормы.Вставить("ВозвращатьКраткоеИмя", Истина);
	ПараметрыФормы.Вставить("ВыборРесурса", Истина);
	ПараметрыФормы.Вставить("НачальныеТаблицы", Новый Массив());
	ПараметрыФормы.Вставить("ТекущееЗначение",  тпСсылка.ТекущиеДанные[стрКолонка]);
	ПараметрыФормы.НачальныеТаблицы.Добавить(Новый Структура("ТипСтроки, Имя, Представление, ТипЗначения",	"", "Ссылка", Новый ОписаниеТипов(стрТип), Новый ОписаниеТипов(стрТип)));

	ПараметрыФормы.Вставить("НаборНастроек", Новый Структура());
	ПараметрыФормы.НаборНастроек.Вставить("Реквизит", Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Новый ОписаниеТипов("Число"), Истина, Истина));
	ПараметрыФормы.НаборНастроек.Вставить("Таблица" , Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Ложь));
	ПараметрыФормы.НаборНастроек.Вставить("КорневыеЭлементы", Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Ложь));

	ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборРесурса", ЭтотОбъект, Новый Структура("ИмяТаблицы,стрКолонка,Элемент", стрТаблица, стрКолонка, Элемент));
	ОткрытьФорму("Справочник.ТиповыеОперации.Форма.ФормаВыбораРеквизита", ПараметрыФормы,,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);			
КонецПроцедуры

&НаКлиенте
Процедура тпПроводки_Колонка_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	стрТаблица=ИмяТаблицы(Элемент); СтандартнаяОбработка=Ложь;
	стрКолонка=СтрЗаменить(Элемент.Имя, стрТаблица, "");
	тпПроводки_ВыбратьЗначениеРесурса(Элемент, стрТаблица, стрКолонка);
КонецПроцедуры

&НаКлиенте
Процедура тпПроводки_ПослеУдаления(Элемент)
	ВидимостьЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура тпПроводки_ПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	РеквизитПеретаскивания=?(Поле=Неопределено, "", Поле.Имя);
КонецПроцедуры

&НаКлиенте
Процедура тпПроводки_ОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	Если ПустаяСтрока(РеквизитПеретаскивания) Тогда Возврат; КонецЕсли;

	стрРеквизит1=СтрЗаменить(РеквизитПеретаскивания, Элемент.Имя, "");
	стрРеквизит2=СтрЗаменить(Элемент.ТекущийЭлемент.Имя, Элемент.Имя, "");	
	Если стрРеквизит1="Количество" Или Лев(стрРеквизит1, 5)="Сумма" Тогда
		Элементы[Элемент.Имя].ТекущиеДанные[стрРеквизит1]=Элементы[Элемент.Имя].ТекущиеДанные[стрРеквизит2];
	КонецЕсли;

	РеквизитПеретаскивания="";
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличная части "Значения по умолчанию"

&НаКлиенте
Процедура тпЗначенияПоУмолчанию_Колонка_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элемент.Имя="ЗначенияПоУмолчаниюПредставление" Тогда
		стрТип=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ПолноеИмя");
		стрТип=СтрЗаменить(стрТип, "Документ.", "ДокументСсылка.");
		стрТип=СтрЗаменить(стрТип, "Справочник.", "СправочникСсылка.");
		стрТип=СтрЗаменить(стрТип, "РегистрНакопления.", "РегистрНакопленияКлючЗаписи.");
		стрТип=СтрЗаменить(стрТип, "РегистрБухгалтерии.", "РегистрБухгалтерииКлючЗаписи.");
		стрТип=СтрЗаменить(стрТип, "РегистрСведений.", "РегистрСведенийКлючЗаписи.");
		
		ПараметрыВыбораРеквизита=Новый Структура();	
		ПараметрыВыбораРеквизита.Вставить("Заголовок", "Выберите реквизит");
		ПараметрыВыбораРеквизита.Вставить("ТолькоПервыйУровень", Истина);
		ПараметрыВыбораРеквизита.Вставить("НачальныеТаблицы", Новый Массив());
		//*** ПараметрыВыбораРеквизита.Вставить("ВозвращатьКраткоеИмя", Истина);

		ПараметрыВыбораРеквизита.НачальныеТаблицы.Добавить(Новый Структура("ТипСтроки, Имя, Представление, ТипЗначения", "", "Ссылка", СокрЛП(Объект.Владелец), Новый ОписаниеТипов(стрТип)));
		
		ПараметрыВыбораРеквизита.Вставить("НаборНастроек", Новый Структура());	
		ПараметрыВыбораРеквизита.НаборНастроек.Вставить("Реквизит", Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Истина));
		ПараметрыВыбораРеквизита.НаборНастроек.Вставить("Таблица" , Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Ложь));
		ПараметрыВыбораРеквизита.НаборНастроек.Вставить("КорневыеЭлементы", Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Ложь));
		
		ОписаниеОповещения=Новый ОписаниеОповещения("тпЗначенияПоУмолчанию_ОбработкаВыбораРеквизита", ЭтотОбъект, Новый Структура("Тип", стрТип));
		ОткрытьФорму("ОбщаяФорма.ФормаВыбораРеквизита", ПараметрыВыбораРеквизита,,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпЗначенияПоУмолчанию_ОбработкаВыбораРеквизита(Параметр1, Параметр2) Экспорт
	МассивДанных=СтрРазделить(Параметр1, ".");
	Если НЕ МассивДанных.Количество()=3 Тогда
		Сообщить("Выбирать можно только реквизиты табличных частей!");
		Возврат;
	КонецЕсли;
	СтруктураРеквизита=тпЗначенияПоУмолчанию_СтруктураРеквизита(Параметр2.Тип, Параметр1);
	ЗаполнитьЗначенияСвойств(Элементы.ЗначенияПоУмолчанию.ТекущиеДанные, СтруктураРеквизита);
КонецПроцедуры

&НаСервереБезКонтекста
Функция тпЗначенияПоУмолчанию_СтруктураРеквизита(стрОбъект, стрПуть)
	МассивДанных1=СтрРазделить(стрОбъект, ".");
	МассивДанных2=СтрРазделить(стрПуть, ".");
	
	ТабличнаяЧастьМД=Метаданные.Документы[МассивДанных1[МассивДанных1.Количество()-1]].ТабличныеЧасти[МассивДанных2[1]];
	РеквизитМД=ТабличнаяЧастьМД.Реквизиты[МассивДанных2[2]];

	СтруктураВозврата=Новый Структура;
	СтруктураВозврата.Вставить("Реквизит", РеквизитМД.Имя);
	СтруктураВозврата.Вставить("Представление", ТабличнаяЧастьМД.Представление()+"."+РеквизитМД.Представление());
	СтруктураВозврата.Вставить("Значение", УправлениеКонфигурациейСервер.ПолучитьЗначениеПоТипу(РеквизитМД.Тип));
	
	Возврат СтруктураВозврата;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтруктураПредставленияРесурсов=Новый Структура;
	СтруктураПредставленияРесурсов.Вставить("СуммаНДС", "Сумма НДС");
	СтруктураПредставленияРесурсов.Вставить("СуммаСНДС", "Сумма с НДС");
	СтруктураПредставленияРесурсов.Вставить("СуммаБезНДС", "Сумма без НДС");
	СтруктураПредставленияРесурсов.Вставить("УчетнаяСтоимостьДебета", "Учетная стоимость дебета");
	СтруктураПредставленияРесурсов.Вставить("УчетнаяСтоимостьКредита", "Учетная стоимость кредита");
	СтруктураПредставленияРесурсов.Вставить("СуммаВзаиморасчетов", "Сумма взаиморасчетов");
	СтруктураПредставленияРесурсов.Вставить("СуммаУпр", "Сумма упр.");
	СтруктураПредставленияРесурсов.Вставить("СуммаРегл", "Сумма регл.");
	СтруктураПредставленияРесурсов.Вставить("СуммаПлатежа", "Сумма платежа");
	СтруктураПредставленияРесурсов.Вставить("СуммаДокумента", "Сумма документа");
	
	тпНастройкаАналитики_Инициализация();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидимостьЭлементовФормы();
	Элементы.СтраницаНастройкаАналитики.Видимость=Объект.ОсновнаяНастройка;
	Если Объект.ОсновнаяНастройка Тогда
		Элементы.Наименование.Видимость=Ложь;
		Элементы.Родитель.Видимость=Ложь;
		Если Объект.Ссылка.Пустая() Тогда
			Объект.Наименование=СокрЛП(Объект.Владелец);
		КонецЕсли;
	КонецЕсли;
	Заголовок="Типовые операции документа: "+СокрЛП(СокрЛП(Объект.Владелец))+?(Объект.Ссылка.Пустая(), " (создание)", "");
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	тпНастройкаАналитики_Инициализация();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Для каждого СтрокаКоллекции Из Объект.ПроводкиБУ Цикл
		СтруктураСчетаДт=ОбщегоНазначенияСервер.ЗначенияРеквизитовОбъекта(СтрокаКоллекции.СчетДебет, "Количественный,НалоговыйУчет");
		СтруктураСчетаКт=ОбщегоНазначенияСервер.ЗначенияРеквизитовОбъекта(СтрокаКоллекции.СчетКредит, "Количественный,НалоговыйУчет");
		
		Если СтруктураСчетаДт.Количественный=Истина Или СтруктураСчетаКт.Количественный=Истина Тогда
			Если НЕ ЗначениеЗаполнено(СтрокаКоллекции.Количество) Тогда Сообщить("На счете ведется количественный учет, надо заполнить количество");	КонецЕсли; 
		КонецЕсли; 
		Если СтруктураСчетаДт.НалоговыйУчет=Истина Тогда
			Если НЕ ЗначениеЗаполнено(СтрокаКоллекции.СуммаНУ_Дт) Тогда
				Сообщить("На счете "+СтрокаКоллекции.СчетДебет+" ведется налоговый учет, необходимо заполнить сумму НУ дебета");
			КонецЕсли; 
		КонецЕсли; 
		Если СтруктураСчетаКт.НалоговыйУчет=Истина Тогда
			Если НЕ ЗначениеЗаполнено(СтрокаКоллекции.СуммаНУ_Кт) Тогда
				Сообщить("На счете "+СтрокаКоллекции.СчетКредит+" ведется налоговый учет, необходимо заполнить сумму НУ кредита");
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	ПроверкаАналитики();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	тпНастройкаАналитики_Инициализация();
	Заголовок="Типовые операции документа: "+СокрЛП(СокрЛП(Объект.Владелец));
КонецПроцедуры
