&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	ДинамическиеСпискиКлиент.ВыполнитьДействие(Команда.Имя, ЭтаФорма);
	
	Если Команда.Имя="ОткрытьНастройкуАналитики" Тогда
		ОсновнаяНастройкаОткрыть();

	ИначеЕсли Команда.Имя="ЗаполнитьТиповыеОперацииПоУмолчанию" Тогда
		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ОбновитьФормуСписка", ЭтотОбъект);
		ОткрытьФорму("Справочник.ТиповыеОперации.Форма.ФормаЗаполненияПроводокПоУмолчанию",,ЭтаФорма, УникальныйИдентификатор,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ОбновитьФормуСписка(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	Элементы.ДинамическийСписок.Обновить();
КонецПроцедуры

&НаСервере
Функция ОсновнаяНастройкаНайти(ВладелецНастройки)
	Возврат Справочники.ТиповыеОперации.НайтиПоРеквизиту("ОсновнаяНастройка", Истина,,ВладелецНастройки);
КонецФункции	 

&НаКлиенте
Процедура ОсновнаяНастройкаОткрыть()
	ТекущиеДанные=Элементы.тзВидыДокументов.ТекущиеДанные;
	Если ТекущиеДанные=Неопределено Тогда Возврат; КонецЕсли;
	
	ВладелецНастройки=ОсновнаяНастройкаНайти(ТекущиеДанные.Ссылка);
	Если ВладелецНастройки.Пустая() Тогда
		ПараметрыФормы=Новый Структура("ЗначенияЗаполнения", Новый Структура("ОсновнаяНастройка,Владелец", Истина, ТекущиеДанные.Ссылка));
	Иначе
		ПараметрыФормы=Новый Структура("Ключ", ВладелецНастройки);
	КонецЕсли;
	ОткрытьФорму("Справочник.ТиповыеОперации.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.Независимый);	
КонецПроцедуры	 

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Виды документов"

&НаСервере
Процедура тзВидыДокументов_Заполнить()
	Выборка=Справочники.ИдентификаторыОбъектовМетаданных.Выбрать(Справочники.ИдентификаторыОбъектовМетаданных.Документы);
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПометкаУдаления Тогда Продолжить; КонецЕсли;
		НоваяСтрока=тзВидыДокументов.Добавить();
		НоваяСтрока.Ссылка=Выборка.Ссылка;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура тзВидыДокументов_ПриАктивизацииСтроки(Элемент)
	ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(ДинамическийСписок, "Владелец", Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура тзВидыДокументов_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОсновнаяНастройкаОткрыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Динамический список"

&НаКлиенте
Процедура ДинамическийСписок_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ДинамическиеСпискиКлиент.Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ДинамическийСписок_ВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	Если ТипЗнч(Значение)=Тип("Массив") Тогда
		ОповеститьОВыборе(Значение[0]);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДинамическиеСпискиСервер.НастройкаПоПравилам(ДинамическийСписок, ЭтаФорма);
	Элементы.ДинамическийСписок.РежимВыбора=Параметры.РежимВыбора;
	ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(ДинамическийСписок, "ОсновнаяНастройка", Ложь);

	Элементы.тзВидыДокументов.Видимость=НЕ Параметры.РежимВыбора;
	тзВидыДокументов_Заполнить();

	Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
		Если ТипЗнч(Параметры.ТекущаяСтрока)=Тип("СправочникСсылка.ТиповыеОперации") Тогда
			МассивСтрок=тзВидыДокументов.НайтиСтроки(Новый Структура("Ссылка", Параметры.ТекущаяСтрока.Владелец));
			Если Не МассивСтрок.Количество()=0 Тогда
				Элементы.тзВидыДокументов.ТекущаяСтрока=МассивСтрок[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДинамическиеСпискиКлиент.ПриОткрытии(Отказ, ДинамическийСписок, ЭтаФорма);
КонецПроцедуры












&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

Процедура ЗаполнитьНаСервере()
	МассивГрупп=Новый Массив;
	
	Выборка=Справочники.ТиповыеОперации.Выбрать();
	Пока Выборка.Следующий() Цикл
		Попытка ТекущийВладелец=УправлениеКонфигурациейСервер.ИдентификаторОбъектовМетаданныхСсылка(Выборка.ПолноеИмя);
		Исключение Продолжить;
		КонецПопытки;		
		ТекущийОбъект=Выборка.ПолучитьОбъект();
		ТекущийОбъект.ОбменДанными.Загрузка=Истина;
		ТекущийОбъект.Владелец=ТекущийВладелец;
		//Если ТекущийОбъект.ЭтоГруппа И ТекущийОбъект.Родитель.Пустая() И ТекущийОбъект.ПометкаУдаления Тогда
		//	ТекущийОбъект.ПометкаУдаления=Ложь; //*** ТекущийОбъект.ОсновнаяНастройка=Истина;
		//КонецЕсли;
		Если ТекущийОбъект.ЭтоГруппа И ТекущийОбъект.Родитель.Пустая() Тогда
			МассивГрупп.Добавить(Выборка.Ссылка);
			ТиповыеОперации_СоздатьПредопределенныйЭлемент(ТекущийОбъект); //Создаем регламетный элемент
		КонецЕсли;
		ТекущийОбъект.Записать();
	КонецЦикла;
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", МассивГрупп);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ТиповыеОперации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ТиповыеОперации КАК ТиповыеОперации
	|ГДЕ
	|	ТиповыеОперации.Родитель В (&Родитель)
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекущийОбъект=Выборка.Ссылка.ПолучитьОбъект();
		ТекущийОбъект.ОбменДанными.Загрузка=Истина;
		ТекущийОбъект.Родитель=Неопределено;
		ТекущийОбъект.Записать();		
	КонецЦикла;

КонецПроцедуры

Процедура ТиповыеОперации_СоздатьПредопределенныйЭлемент(ТекущийОбъект)
	Если НЕ Справочники.ТиповыеОперации.НайтиПоРеквизиту("ОсновнаяНастройка", Истина,,ТекущийОбъект.Владелец).Пустая() Тогда
		Возврат;
	КонецЕсли;	
	СправочникОбъект=Справочники.ТиповыеОперации.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(СправочникОбъект, ТекущийОбъект);
	СправочникОбъект.ОсновнаяНастройка=Истина;
	СправочникОбъект.ПроводкиБУ.Загрузить(ТекущийОбъект.ПроводкиБУ.Выгрузить());
	СправочникОбъект.ПроводкиУУ.Загрузить(ТекущийОбъект.ПроводкиУУ.Выгрузить());
	СправочникОбъект.ПроводкиФУ.Загрузить(ТекущийОбъект.ПроводкиФУ.Выгрузить());
	СправочникОбъект.НастройкаАналитики.Загрузить(ТекущийОбъект.НастройкаАналитики.Выгрузить());
	СправочникОбъект.РесурсыПроводкиУУ.Загрузить(ТекущийОбъект.РесурсыПроводкиУУ.Выгрузить());
	СправочникОбъект.ЗначенияПоУмолчанию.Загрузить(ТекущийОбъект.ЗначенияПоУмолчанию.Выгрузить());
	СправочникОбъект.Записать();	
КонецПроцедуры	 
