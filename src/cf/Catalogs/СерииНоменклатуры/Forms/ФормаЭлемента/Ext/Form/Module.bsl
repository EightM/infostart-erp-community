&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="ЗаполнитьНаименование" Тогда
		Объект.Наименование=СформироватьНаименование();	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Функция СформироватьНаименование()

	Строка = "";

	Если ЗначениеЗаполнено(Объект.СерийныйНомер) Тогда
		Строка = Строка + Объект.СерийныйНомер + ", ";
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.Сертификат) Тогда
		Строка = Строка + Объект.Сертификат + ", ";
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.СрокГодности) Тогда
		Строка = Строка + Формат(Объект.СрокГодности,"ДФ=""дд.ММ.гггг""") + ", ";
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.НомерГТД) Тогда
		Строка = Строка + СокрЛП(ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Объект.НомерГТД, "Код")) + ", ";
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.СтранаПроисхождения) Тогда
		Строка = Строка + СокрЛП(ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Объект.СтранаПроисхождения, "Наименование")) + ", ";
	КонецЕсли;

	Строка = Лев(Строка, СтрДлина(Строка) - 2);

	Если ПустаяСтрока(Строка) Тогда
		Строка = "<Свойства не назначены>";
	КонецЕсли;

	Возврат Строка;
КонецФункции

&НаКлиенте
Процедура ЗаполнитьГТДИСтрануИзВладельца(ТолькоНезаполненные=Ложь)
	СтрутураДанныхКонтрагента=ОбщегоНазначенияСервер.ЗначенияРеквизитовОбъекта(объект.Владелец, "СтранаПроисхождения,НомерГТД");
	
	Если ТолькоНезаполненные Тогда
		Объект.СтранаПроисхождения = ?(НЕ ЗначениеЗаполнено(Объект.СтранаПроисхождения), СтрутураДанныхКонтрагента.СтранаПроисхождения, Объект.СтранаПроисхождения);
		Объект.НомерГТД = ?(НЕ ЗначениеЗаполнено(Объект.НомерГТД), СтрутураДанныхКонтрагента.НомерГТД, Объект.НомерГТД);
	Иначе
		Объект.СтранаПроисхождения = СтрутураДанныхКонтрагента.СтранаПроисхождения;
		Объект.НомерГТД = СтрутураДанныхКонтрагента.НомерГТД;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики оповещений

&НаКлиенте
Процедура ОбработчикОповещения_ВыборКартинки(Параметр1, Параметр2) Экспорт
	Если НЕ ТипЗнч(Параметр1)=Тип("Массив") Тогда Возврат; КонецЕсли;
	АдресКартинки=ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Параметр1[0]), УникальныйИдентификатор);
КонецПроцедуры	 

///////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="Владелец" Тогда
		ЗаполнитьГТДИСтрануИзВладельца();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_Нажатие(Элемент, СтандартнаяОбработка)
	Если Элемент.Имя="Картинка" Тогда
		СтандартнаяОбработка=Ложь;

		ДиалогОткрытияФайла=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.ПолноеИмяФайла="";
		//ДиалогОткрытияФайла.Каталог=Каталог;
			//Если Фильтр="Картинки" Тогда
			//	Фильтр="Все картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|" 
			//	+ "Формат bmp (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|"
			//	+ "Формат JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|"
			//	+ "Формат TIFF (*.tif)|*.tif|"
			//	+ "Формат GIF (*.gif)|*.gif|"
			//	+ "Формат PNG (*.png)|*.png|"
			//	+ "Формат icon (*.ico)|*.ico|"
			//	+ "Формат метафайл (*.wmf;*.emf)|*.wmf;*.emf|";
			//КонецЕсли;		
			//ДиалогОткрытияФайла.Фильтр=Фильтр;
		//ДиалогОткрытияФайла.ИндексФильтра=ИндексФильтра;
		ДиалогОткрытияФайла.Заголовок="Выберите файл картинки";
		ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("ОбработчикОповещения_ВыборКартинки", ЭтотОбъект));
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СобытияФормыСервер.ПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.Ссылка.Пустая() Тогда
		ЗаполнитьГТДИСтрануИзВладельца(Истина);
		Если НЕ Объект.Владелец.Пустая() Тогда	
			Объект.ЕдиницаИзмерения=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ЕдиницаХраненияОстатков");
		КонецЕсли;
	КонецЕсли;	
	СобытияФормыКлиент.ПриОткрытии(Отказ, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СобытияФормыКлиент.ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	СобытияФормыКлиент.ПриЗакрытии(ЗавершениеРаботы, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	СобытияФормыКлиент.ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	СобытияФормыКлиент.ОбработкаОповещения(ИмяСобытия, Параметр, Источник, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	СобытияФормыКлиент.ОбработкаАктивизации(АктивныйОбъект, Источник, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	СобытияФормыКлиент.ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	АдресКартинки=ПолучитьНавигационнуюСсылку(ТекущийОбъект.Ссылка, "ОсновноеИзображение");
	СобытияФормыСервер.ПриЧтенииНаСервере(ТекущийОбъект, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СобытияФормыКлиент.ПередЗаписью(Отказ, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЭтоАдресВременногоХранилища(АдресКартинки) Тогда 
		ДвоичныеДанные=ПолучитьИзВременногоХранилища(АдресКартинки);
		ТекущийОбъект.ОсновноеИзображение=Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
	КонецЕсли;
	СобытияФормыСервер.ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);	
КонецПроцедуры
 
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)	
	СобытияФормыСервер.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)	
	СобытияФормыСервер.ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	СобытияФормыКлиент.ПослеЗаписи(ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	СобытияФормыКлиент.ВнешнееСобытие(Источник, Событие, Данные, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначения(СтандартнаяОбработка)
	СобытияФормыКлиент.ВыборЗначения(СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры