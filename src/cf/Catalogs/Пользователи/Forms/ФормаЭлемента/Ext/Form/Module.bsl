////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Настройки"

&НаСервере
Процедура дзНастройки_Заполнить()
	ЗначенияПоУмолчанию=Новый Соответствие;
	ЗначенияПоУмолчанию.Вставить(ПланыВидовХарактеристик.НастройкиПользователей.ЗапрашиватьПодтверждениеПриЗакрытии, Истина);

	дзБуфер=РеквизитФормыВЗначение("дзНастройки");
	дзБуфер.Строки.Очистить();
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Объект.Ссылка);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Родитель,
	|	Ссылка,
	|	Наименование,
	|	ЭтоГруппа,
	|	ЗначениеНастроек.Значение 
	|ИЗ
	|	ПланВидовХарактеристик.НастройкиПользователей КАК Настройки
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.НастройкиПользователей КАК ЗначениеНастроек
	|ПО
	|	ЗначениеНастроек.Настройка=Настройки.Ссылка
	|	И  ЗначениеНастроек.Пользователь=&Пользователь
	|ГДЕ
	|	НЕ ПометкаУдаления
	|УПОРЯДОЧИТЬ ПО
	|	Настройки.ЭтоГруппа ИЕРАРХИЯ,
	|	Настройки.Наименование
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не Выборка.Родитель.Пустая() Тогда
			СтрокаГруппы=дзБуфер.Строки.Найти(Выборка.Родитель, "Настройка", Истина);
			Если СтрокаГруппы=Неопределено Тогда
				СтрокаГруппы=дзБуфер.Строки.Добавить();
				СтрокаГруппы.Настройка=Выборка.Родитель;
				СтрокаГруппы.ЭтоГруппа=Выборка.ЭтоГруппа;
			КонецЕсли;
		Иначе
			СтрокаГруппы=дзБуфер;
		КонецЕсли;		
		
		СтрокаНастройки=СтрокаГруппы.Строки.Добавить();
		СтрокаНастройки.Настройка=Выборка.Ссылка;
		
		Если Объект.Ссылка.Пустая() Тогда
			СтрокаНастройки.Значение=Выборка.Ссылка.ТипЗначения.ПривестиЗначение(ЗначенияПоУмолчанию[Выборка.Ссылка]);
		Иначе
			СтрокаНастройки.Значение=Выборка.Ссылка.ТипЗначения.ПривестиЗначение(Выборка.Значение);
		КонецЕсли;
		
		СтрокаНастройки.ЭтоГруппа=Выборка.ЭтоГруппа;

		Если СтрокаНастройки.Настройка.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Организации")) Тогда
			Организация=СтрокаНастройки.Значение;
		КонецЕсли;
	КонецЦикла;
	ЗначениеВРеквизитФормы(дзБуфер, "дзНастройки");
КонецПроцедуры

&НаКлиенте
Процедура дзНастройки_ПередНачаломИзменения(Элемент, Отказ)
	Отказ=Элемент.ТекущиеДанные.ЭтоГруппа;
	Если ТипЗнч(Элемент.ТекущиеДанные.Значение)=Тип("Булево") Тогда
		Отказ=Истина; Модифицированность=Истина;
		Элемент.ТекущиеДанные.Значение=НЕ Элемент.ТекущиеДанные.Значение;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьНастройки()
	дзБуфер=РеквизитФормыВЗначение("дзНастройки");
	НаборЗаписей=РегистрыСведений.НастройкиПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Использование=Истина;
	НаборЗаписей.Отбор.Пользователь.Значение=Объект.Ссылка;
	ЗаполнитьНаборЗаписей(дзБуфер.Строки, НаборЗаписей);
	НаборЗаписей.Записать();	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаборЗаписей(СтрокиДерева, НаборЗаписей)
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Если Не СтрокаДерева.ЭтоГруппа Тогда
			Если СтрокаДерева.Настройка.ПометкаУдаления Тогда Продолжить; КонецЕсли;

			Запись=НаборЗаписей.Добавить();
			Запись.Пользователь=Объект.Ссылка;
			Запись.Настройка=СтрокаДерева.Настройка;
			Запись.Значение=СтрокаДерева.Настройка.ТипЗначения.ПривестиЗначение(СтрокаДерева.Значение);
			ЕСли Запись.Настройка=ПланыВидовХарактеристик.НастройкиПользователей.ОсновнойОтветственный И Запись.Значение.Пустая() Тогда
				 Запись.Значение=Объект.Ссылка;
			КонецЕсли;
		Иначе
			ЗаполнитьНаборЗаписей(СтрокаДерева.Строки, НаборЗаписей)
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СобытияФормыСервер.ПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
	дзНастройки_Заполнить();
	Для каждого СтрокаКоллекции Из Метаданные.Стили Цикл
		Элементы.Стиль.СписокВыбора.Добавить(СокрЛП(СтрокаКоллекции.Имя), СтрокаКоллекции.Представление());
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СобытияФормыКлиент.ПриОткрытии(Отказ, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СобытияФормыКлиент.ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	СобытияФормыКлиент.ПриЗакрытии(ЗавершениеРаботы, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	СобытияФормыКлиент.ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	СобытияФормыКлиент.ОбработкаОповещения(ИмяСобытия, Параметр, Источник, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	СобытияФормыКлиент.ОбработкаАктивизации(АктивныйОбъект, Источник, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	СобытияФормыКлиент.ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	СобытияФормыСервер.ПриЧтенииНаСервере(ТекущийОбъект, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СобытияФормыКлиент.ПередЗаписью(Отказ, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СобытияФормыСервер.ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)	
	СобытияФормыСервер.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)	
	ОбновитьНастройки();
	СобытияФормыСервер.ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	СобытияФормыКлиент.ПослеЗаписи(ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	СобытияФормыКлиент.ВнешнееСобытие(Источник, Событие, Данные, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначения(СтандартнаяОбработка)
	СобытияФормыКлиент.ВыборЗначения(СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры
