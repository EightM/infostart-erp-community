&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	УправлениеДиалогамиКлиент.ВыполнитьДействие(Команда.Имя, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПолноеНаименование(Команда)
	//стрИмя=УправлениеСобытиямиАтрибутовФормы.Нажатие(Элемент, ЭтаФорма);
	//Если стрИмя="ЗаполнитьПолноеНаименование" Тогда
	Объект.НаименованиеПолное=Объект.Наименование;
	//КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПроверитьЕдиницуХраненияОстатков(Ссылка, Отказ)
	Если ЗначениеЗаполнено(Объект.ЕдиницаХраненияОстатков) Тогда Возврат Неопределено; КонецЕсли;
	
	ВыборкаЕдиниц=Справочники.ЕдиницыИзмерения.Выбрать(, Ссылка);
	Если ВыборкаЕдиниц.Следующий() Тогда
		Возврат ВыборкаЕдиниц.Ссылка;
	КонецЕсли;
	
	НайденнаяЕдиницаОбъект=Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
	НайденнаяЕдиницаОбъект.Наименование=СокрЛП(Объект.БазоваяЕдиницаИзмерения);
	НайденнаяЕдиницаОбъект.ЕдиницаПоКлассификатору=Объект.БазоваяЕдиницаИзмерения;
	НайденнаяЕдиницаОбъект.Коэффициент=1;
	НайденнаяЕдиницаОбъект.Владелец=Ссылка;

	Попытка
		НайденнаяЕдиницаОбъект.Записать();
	Исключение
		Сообщить("Не удалось записать единицу хранения остатков: " + ОписаниеОшибки(), СтатусСообщения.Важное);
		Отказ=Истина; Возврат Неопределено;
	КонецПопытки;

	Возврат НайденнаяЕдиницаОбъект.Ссылка;	
КонецФункции

&НаСервере
Процедура СнятьФлаги(СтруктураФлагов)
	Для Каждого ИмяФлага Из СтруктураФлагов Цикл
		Если Объект[ИмяФлага.Ключ] Тогда
			Объект[ИмяФлага.Ключ] = Ложь;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПризнакиПоВидуНоменклатуры()
	
	Объект.Услуга   = (Объект.ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга);
	Объект.Набор    = (Объект.ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Набор);
	Объект.Комплект = (Объект.ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Комплект);
	
	Если Объект.Услуга Или Объект.Набор Или Объект.Комплект Тогда
		СтруктураФлагов=Новый Структура;
		СтруктураФлагов.Вставить("ВестиУчетПоСериям");
		СтруктураФлагов.Вставить("ВестиПартионныйУчетПоСериям");
		СтруктураФлагов.Вставить("Весовой");
		
		Если Объект.Услуга Или Объект.Набор Тогда
			СтруктураФлагов.Вставить("ВестиУчетПоХарактеристикам");
		КонецЕсли;
		
		СнятьФлаги(СтруктураФлагов);
		
		Объект.НомерГТД=Неопределено;
		Объект.СтранаПроисхождения=Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыПоУмолчанию()
	Если НЕ ЗначениеЗаполнено(Объект.БазоваяЕдиницаИзмерения) Тогда
		Объект.БазоваяЕдиницаИзмерения=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяЕдиницаПоКлассификатору");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СтавкаНДС) Тогда
		Объект.СтавкаНДС=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
		Если ЗначениеЗаполнено(Объект.Родитель.ВидНоменклатуры) Тогда
			Объект.ВидНоменклатуры=Объект.Родитель.ВидНоменклатуры;
		Иначе
			Объект.ВидНоменклатуры=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнойВидНоменклатуры");
		КонецЕсли;		
		ЗаполнитьПризнакиПоВидуНоменклатуры();
	КонецЕсли;	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики оповещений

&НаКлиенте
Процедура ОбработчикОповещения_ВыборКартинки(Параметр1, Параметр2) Экспорт
	Если НЕ ТипЗнч(Параметр1)=Тип("Массив") Тогда Возврат; КонецЕсли;
	АдресКартинки=ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Параметр1[0]), УникальныйИдентификатор);
КонецПроцедуры	 

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов шапки

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="ВидНоменклатуры" Тогда
		ЗаполнитьПризнакиПоВидуНоменклатуры();
		
	ИначеЕсли Элемент.Имя="ВидДинамическогоСписка" Тогда
		дсСсылка_Заполнить();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элемент.Имя="ЕдиницаХраненияОстатков" Или Элемент.Имя="ЕдиницаДляОтчетов" Тогда
		спОтбор=Новый СписокЗначений;
		спОтбор.Добавить(Объект.Ссылка);

		МассивПараметров=Новый Массив();
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец", спОтбор));

		Элементы[Элемент.Имя].ПараметрыВыбора=Новый ФиксированныйМассив(МассивПараметров);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_Нажатие(Элемент, СтандартнаяОбработка)
	Если Элемент.Имя="Картинка" Тогда
		СтандартнаяОбработка=Ложь;
		
		ДиалогОткрытияФайла=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.ПолноеИмяФайла="";
		//ДиалогОткрытияФайла.Каталог=Каталог;
			//Если Фильтр="Картинки" Тогда
			//	Фильтр="Все картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|" 
			//	+ "Формат bmp (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|"
			//	+ "Формат JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|"
			//	+ "Формат TIFF (*.tif)|*.tif|"
			//	+ "Формат GIF (*.gif)|*.gif|"
			//	+ "Формат PNG (*.png)|*.png|"
			//	+ "Формат icon (*.ico)|*.ico|"
			//	+ "Формат метафайл (*.wmf;*.emf)|*.wmf;*.emf|";
			//КонецЕсли;		
			//ДиалогОткрытияФайла.Фильтр=Фильтр;
		//ДиалогОткрытияФайла.ИндексФильтра=ИндексФильтра;
		ДиалогОткрытияФайла.Заголовок="Выберите файл картинки";
		ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("ОбработчикОповещения_ВыборКартинки", ЭтотОбъект));	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_Открытие(Элемент, СтандартнаяОбработка)
	СобытияЭлементовФормыКлиент.Открытие(ЭтаФорма, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СобытияЭлементовФормыКлиент.АвтоПодбор(ЭтаФорма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СобытияЭлементовФормыКлиент.ОбработкаВыбора(ЭтаФорма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка, Объект, Элемент.Имя);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "дсСсылка"

&НаСервере
Процедура дсСсылка_Заполнить()
	СоответствиеВладельцев=Новый Соответствие;
	СоответствиеВладельцев.Вставить("РегистрСведений.Штрихкоды", "Владелец");
	СоответствиеВладельцев.Вставить("РегистрСведений.АналогиНоменклатуры", "Номенклатура");
	СоответствиеВладельцев.Вставить("РегистрСведений.МестаХраненияНоменклатуры", "Номенклатура");
	СоответствиеВладельцев.Вставить("РегистрСведений.МинимальныеОстаткиНоменклатуры", "Номенклатура");
	СоответствиеВладельцев.Вставить("РегистрСведений.НоменклатураКонтрагентов", "Номенклатура");
	СоответствиеВладельцев.Вставить("РегистрСведений.НастройкаСписанияПоТипуЦены", "Номенклатура");
	СоответствиеВладельцев.Вставить("Справочник.ХарактеристикиНоменклатуры", "Владелец");
	СоответствиеВладельцев.Вставить("Справочник.СерииНоменклатуры", "Владелец");
	СоответствиеВладельцев.Вставить("РегистрНакопления.ПартииТоваровНаСкладах", "Номенклатура");

	//Удаляем ранее добавленные элементы\колонки динамического списка
	МассивЭлементов=Новый Массив;
	Для каждого Элемент Из Элементы.дсСсылка.ПодчиненныеЭлементы Цикл
		МассивЭлементов.Добавить(Элемент);
	КонецЦикла;
	Для каждого СтрокаКоллекции Из МассивЭлементов Цикл
		Элементы.Удалить(СтрокаКоллекции);
	КонецЦикла;
	
	//Удаляем ранее добавленные отборы динамического списка
	МассивЭлементов=Новый Массив;
	Для каждого СтрокаКоллекции Из дсСсылка.Отбор.Элементы Цикл
		МассивЭлементов.Добавить(СтрокаКоллекции);
	КонецЦикла; 
	Для каждого СтрокаКоллекции Из МассивЭлементов Цикл
		дсСсылка.Отбор.Элементы.Удалить(СтрокаКоллекции);
	КонецЦикла; 

	//Удаляем ранее добавленные пользовательские настройки динамического списка
	Для каждого СтрокаКоллекции1 Из дсСсылка.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(СтрокаКоллекции1)=Тип("СтруктураНастроекКомпоновкиДанных") Тогда
			МассивЭлементов=Новый Массив;
			Для каждого СтрокаКоллекции2 Из СтрокаКоллекции1.Структура Цикл
				МассивЭлементов.Добавить(СтрокаКоллекции2);
			КонецЦикла;
			Для каждого СтрокаКоллекции Из МассивЭлементов Цикл
				СтрокаКоллекции1.Структура.Удалить(СтрокаКоллекции);
			КонецЦикла;
		Иначе
			МассивЭлементов=Новый Массив;
			Для каждого СтрокаКоллекции2 Из СтрокаКоллекции1.Элементы Цикл
				МассивЭлементов.Добавить(СтрокаКоллекции2);
			КонецЦикла;
			Для каждого СтрокаКоллекции Из МассивЭлементов Цикл
				СтрокаКоллекции1.Элементы.Удалить(СтрокаКоллекции);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла; 

	стрВладелец=СоответствиеВладельцев.Получить(ВидДинамическогоСписка);

	Массив=СтрРазделить(ВидДинамическогоСписка, ".");
	стрТип=Массив[0];
	стрВид=Массив[1];

	дсСсылка.ТекстЗапроса="
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	"+ВидДинамическогоСписка+" КАК ИсточникДанных
	|";
	дсСсылка.ОсновнаяТаблица=ВидДинамическогоСписка;

	стрТип=СтрЗаменить(стрТип, "Регистр", "Регистры");
	стрТип=СтрЗаменить(стрТип, "Справочник", "Справочники");
	мдСсылка=Метаданные[стрТип][стрВид];

	Если стрТип="РегистрыСведений" Или стрТип="РегистрыНакопления" Тогда
		МассивИсключений=Новый Массив;
		МассивИсключений.Добавить("Активность");
		МассивИсключений.Добавить("НомерСтроки");
		МассивИсключений.Добавить("ВидДвижения");
		Для каждого СтрокаКоллекции Из мдСсылка.СтандартныеРеквизиты Цикл
			Если НЕ МассивИсключений.Найти(СтрокаКоллекции.Имя)=Неопределено Тогда Продолжить; КонецЕсли;
			ЭлементТаблицы=Элементы.Добавить("дсСсылка_"+СтрокаКоллекции.Имя, Тип("ПолеФормы"), Элементы.дсСсылка);
			ЭлементТаблицы.Вид=ВидПоляФормы.ПолеВвода;
			ЭлементТаблицы.ПутьКДанным="дсСсылка."+СтрокаКоллекции.Имя;
			ЭлементТаблицы.Заголовок=СтрокаКоллекции.Представление();
		КонецЦикла;
		Для каждого СтрокаКоллекции Из мдСсылка.Измерения Цикл
			Если стрВладелец=СтрокаКоллекции.Имя Тогда Продолжить; КонецЕсли;
			ЭлементТаблицы=Элементы.Добавить("дсСсылка_"+СтрокаКоллекции.Имя, Тип("ПолеФормы"), Элементы.дсСсылка);
			ЭлементТаблицы.Вид=ВидПоляФормы.ПолеВвода;
			ЭлементТаблицы.ПутьКДанным="дсСсылка."+СтрокаКоллекции.Имя;
			ЭлементТаблицы.Заголовок=СтрокаКоллекции.Представление();
		КонецЦикла;
		Для каждого СтрокаКоллекции Из мдСсылка.Ресурсы Цикл
			ЭлементТаблицы=Элементы.Добавить("дсСсылка_"+СтрокаКоллекции.Имя, Тип("ПолеФормы"), Элементы.дсСсылка);
			ЭлементТаблицы.Вид=ВидПоляФормы.ПолеВвода;
			ЭлементТаблицы.ПутьКДанным="дсСсылка."+СтрокаКоллекции.Имя;
			ЭлементТаблицы.Заголовок=СтрокаКоллекции.Представление();
		КонецЦикла;

	ИначеЕсли стрТип="Справочники" Тогда
		ЭлементТаблицы=Элементы.Добавить("дсСсылка_Наименование", Тип("ПолеФормы"), Элементы.дсСсылка);
		ЭлементТаблицы.Вид=ВидПоляФормы.ПолеВвода;
		ЭлементТаблицы.ПутьКДанным="дсСсылка.Наименование";
		ЭлементТаблицы.Заголовок="Наименование";	
	КонецЕсли;

	Для каждого СтрокаКоллекции Из мдСсылка.Реквизиты Цикл
		Если стрВладелец=СтрокаКоллекции.Имя Тогда Продолжить; КонецЕсли;
		Попытка
			ЭлементТаблицы=Элементы.Добавить("дсСсылка_"+СтрокаКоллекции.Имя, Тип("ПолеФормы"), Элементы.дсСсылка);
			ЭлементТаблицы.Вид=ВидПоляФормы.ПолеВвода;
			ЭлементТаблицы.ПутьКДанным="дсСсылка."+СтрокаКоллекции.Имя;
			ЭлементТаблицы.Заголовок=СтрокаКоллекции.Представление();
		Исключение		
		КонецПопытки;
	КонецЦикла;
	
	ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(дсСсылка, стрВладелец, Объект.Ссылка);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда ЗаполнитьРеквизитыПоУмолчанию(); КонецЕсли;
	СобытияФормыСервер.ПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЭтоАдресВременногоХранилища(АдресКартинки) Тогда 
		ДвоичныеДанные=ПолучитьИзВременногоХранилища(АдресКартинки);
		ТекущийОбъект.ОсновноеИзображение=Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
	КонецЕсли;

	Если Не Объект.ОсновнаяСпецификация.Пустая() И НЕ Объект.ОсновнаяСпецификация.Владелец=Объект.Ссылка Тогда
		ТекущийОбъект.ОсновнаяСпецификация=Справочники.СпецификацияНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	СобытияФормыСервер.ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ЕдиницаХраненияОстатков=ПроверитьЕдиницуХраненияОстатков(ТекущийОбъект.Ссылка, Отказ);
	Если НЕ ЕдиницаХраненияОстатков=Неопределено Тогда
		ТекущийОбъект.ЕдиницаХраненияОстатков=ЕдиницаХраненияОстатков;
		ТекущийОбъект.ОбменДанными.Загрузка=Истина;
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ОтключитьРегистрыПравил");
		ТекущийОбъект.Записать();
	КонецЕсли;	
	СобытияФормыСервер.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	АдресКартинки=ПолучитьНавигационнуюСсылку(ТекущийОбъект.Ссылка, "ОсновноеИзображение");
	ВидДинамическогоСписка="РегистрСведений.Штрихкоды"; дсСсылка_Заполнить();	
	СобытияФормыСервер.ПриЧтенииНаСервере(ТекущийОбъект, ЭтаФорма, Объект);
КонецПроцедуры
