
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("ЭтоНовый",ЭтоНовый);
	Параметры.Свойство("Копирование",Копирование);
	Параметры.Свойство("мСтруктураРеквизитовЗаполняемыхПоУмолчанию",мСтруктураРеквизитовЗаполняемыхПоУмолчанию);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//// Нужно получить реально
	//УСН=ОбщегоНазначения.ПрименениеУСН(ВладелецФормы.Объект.Организация, ВладелецФормы.Объект.Дата);
	//УСНДоходы=ОбщегоНазначения.ПрименениеУСНДоходы(ВладелецФормы.Объект.Организация, ВладелецФормы.Объект.Дата);
	УСН=Ложь;
	УСНДоходы=Ложь;
	Если НЕ (ЭтоНовый И НЕ Копирование) Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ВладелецФормы.Элементы.ОС.ТекущиеДанные);
	Иначе
		ЗаполнитьЗначенияСвойств(ЭтаФорма, мСтруктураРеквизитовЗаполняемыхПоУмолчанию);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОсновноеСредствоПриИзменении(Элемент)
	ИнвентарныйНомерРегл = ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ОсновноеСредство, "Код");
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммыРазниц()
	
	ТекущаяСтоимостьВР       = ТекущаяСтоимостьБУ - ТекущаяСтоимостьНУ - ТекущаяСтоимостьПР;
	НакопленнаяАмортизацияВР = ?(ПорядокПогашенияСтоимостиБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса"),
	                             0,
	                             НакопленнаяАмортизацияБУ)
	                         - НакопленнаяАмортизацияНУ 
	                         - НакопленнаяАмортизацияПР;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ЗАКЛАДКИ "НАЧАЛЬНЫЕ ОСТАТКИ"

&НаКлиенте
Процедура ПервоначальнаяСтоимостьБУПриИзменении(Элемент)
	
	Если ТекущаяСтоимостьБУ = 0 И НЕ (ПорядокПогашенияСтоимостиБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету")) Тогда
		ТекущаяСтоимостьБУ = ПервоначальнаяСтоимостьБУ;
	КонецЕсли;
	
	Если НЕ УСН Тогда
		
		Если ПервоначальнаяСтоимостьНУ = 0 Тогда
			ПервоначальнаяСтоимостьНУ = ПервоначальнаяСтоимостьБУ;
		КонецЕсли;
		ПервоначальнаяСтоимостьНУПриИзменении(Неопределено);
		
	ИначеЕсли (УСН И НЕ УСНДоходы) Тогда
		
		Если ПервоначальнаяСтоимостьУСН = 0 Тогда
			ПервоначальнаяСтоимостьУСН = ПервоначальнаяСтоимостьБУ;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяСтоимостьБУПриИзменении(Элемент)
	
	ПересчитатьСуммыРазниц();
	
КонецПроцедуры 

&НаКлиенте
Процедура НакопленнаяАмортизацияБУПриИзменении(Элемент)
	
	Если УСН Тогда		
		Если НакопленнаяАмортизацияНУ = 0 И НЕ ПорядокПогашенияСтоимостиБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса") Тогда
			НакопленнаяАмортизацияНУ = НакопленнаяАмортизацияБУ;
		КонецЕсли;
	КонецЕсли;
	
	ПересчитатьСуммыРазниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ПервоначальнаяСтоимостьНУПриИзменении(Элемент)
	
	Если ТекущаяСтоимостьНУ = 0 И НЕ (ПорядокВключенияСтоимостиВСоставРасходовНУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету"))Тогда
		ТекущаяСтоимостьНУ = ПервоначальнаяСтоимостьНУ;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ТекущаяСтоимостьНУПриИзменении(Элемент)
	
	ПересчитатьСуммыРазниц();
	
КонецПроцедуры 

&НаКлиенте
Процедура ТекущаяСтоимостьПРПриИзменении(Элемент)
	
	ПересчитатьСуммыРазниц();
	
КонецПроцедуры 

&НаКлиенте
Процедура НакопленнаяАмортизацияНУПриИзменении(Элемент)
	
	ПересчитатьСуммыРазниц();
	
КонецПроцедуры 

&НаКлиенте
Процедура НакопленнаяАмортизацияПРПриИзменении(Элемент)
	
	ПересчитатьСуммыРазниц();
	
КонецПроцедуры 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ЗАКЛАДКИ "БУХГАЛТЕРСКИЙ УЧЕТ"

&НаКлиенте
Процедура СрокПолезногоИспользованияБУПриИзменении(Элемент)
	
	Если НЕ УСН Тогда
		
		Если СрокПолезногоИспользованияНУ = 0 Тогда
			СрокПолезногоИспользованияНУ = СрокПолезногоИспользованияБУ;
		КонецЕсли;
		
	ИначеЕсли (УСН И НЕ УСНДоходы) Тогда
		
		Если СрокПолезногоИспользованияУСН = 0 Тогда
			СрокПолезногоИспользованияУСН = СрокПолезногоИспользованияБУ;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура СуммаПоследнейМодернизацииБУПриИзменении(Элемент)
	Если НЕ УСН Тогда
		Если СуммаПоследнейМодернизацииНУ = 0 Тогда
			СуммаПоследнейМодернизацииНУ = СуммаПоследнейМодернизацииБУ;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЭтоНовый Тогда
		ДанныеДляЗаписи = ВладелецФормы.Объект.ОС.Добавить();
	Иначе
		ДанныеДляЗаписи = ВладелецФормы.Элементы.ОС.ТекущиеДанные;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДанныеДляЗаписи, ЭтаФорма);
КонецПроцедуры
