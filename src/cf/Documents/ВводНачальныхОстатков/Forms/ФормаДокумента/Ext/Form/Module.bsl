&НаКлиенте
Процедура СопоставитьРазделыУчетаСтраницам()
	Если ЗначениеЗаполнено(Объект.РазделУчета) Тогда
		ТекущийРаздел = РазделыУчета.НайтиПоЗначению(Объект.РазделУчета);
		Если ТекущийРаздел <> Неопределено Тогда
			мРазделУчета = Число(ТекущийРаздел.Представление);
		КонецЕсли;
	Иначе
		мРазделУчета = 0;
	КонецЕсли;
	
	Если Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.ОсновныеСредства") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОС;
		ТекущееТабличноеПоле = Элементы.ОС;
		
	ИначеЕсли Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.НематериальныеАктивыИНИОКР") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаНМА;
		ТекущееТабличноеПоле = Элементы.НМА;
		
	ИначеЕсли Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПокупателямиИЗаказчиками")
		ИЛИ Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПоставщикамиИПодрядчиками")
		ИЛИ Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПрочимиДебиторамиИКредиторами") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРасчетыСКонтрагентами;
		ТекущееТабличноеПоле = Элементы.РасчетыСКонтрагентами;
		
	ИначеЕсли Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасчетыПоНалогамИСборам") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПрочиеСчета;
		ТекущееТабличноеПоле = Элементы.БухСправка;
		
	ИначеЕсли Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПодотчетнымиЛицами") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПодотчетныеЛица;
		ТекущееТабличноеПоле = Элементы.РасчетыСПодотчетнымиЛицами;
		
	ИначеЕсли (Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.Материалы")
		ИЛИ Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.Товары")
		ИЛИ Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.ГотоваяПродукцияИПолуфабрикаты")) 
		ИЛИ Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.КапитальныеВложения") Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаНоменклатура;
		ТекущееТабличноеПоле = Элементы.МПЗПриобретенные;
		
	ИначеЕсли Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.НДСПоПриобретеннымЦенностям")
		ИЛИ Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.НДСПоАвансамПолученным")
		ИЛИ Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.НДСНачисленный") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаНДС;
		ТекущееТабличноеПоле = Элементы.ДанныеПоСФНДС;
		
	ИначеЕсли Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.ТоварыОтгруженные") Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТМЦОтгруженные;
		ТекущееТабличноеПоле = Элементы.МПЗОтгруженные;
		
	ИначеЕсли Объект.РазделУчета = ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасходыБудущихПериодов") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПрочиеСчета;
		ТекущееТабличноеПоле = Элементы.БухСправка;
		
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПрочиеСчета;
		ТекущееТабличноеПоле = Элементы.БухСправка;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АтрибутФормы_ПриИзменении(Элемент)
	стрИмя=Элемент.Имя;
	Если стрИмя=Неопределено Тогда Возврат; КонецЕсли;
	
	Если стрИмя="РазделУчета" Тогда
		СопоставитьРазделыУчетаСтраницам();
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.ОсновныеСредства"),							1);
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.НематериальныеАктивыИНИОКР"),					2);
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.КапитальныеВложения"),						3);
	//Материально производственные запасы
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.Материалы"),									4);
	//НДС
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.НДСПоПриобретеннымЦенностям"),				17);
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.НДСПоАвансамПолученным"),						18);
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.НДСНачисленный"),								24);
	//НЗП
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.НезавершенноеПроизводство"),					5);
	//Готовая продукция и товары
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.Товары"),										6);
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.ГотоваяПродукцияИПолуфабрикаты"),				7);
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.ТоварыОтгруженные"),							8);
	//Денежные средства
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.ДенежныеСредства"),							9);
	//Расчеты
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПоставщикамиИПодрядчиками"),			10);
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПокупателямиИЗаказчиками"),			11);
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасчетыПоНалогамИСборам"),					12);
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПодотчетнымиЛицами"),					14);
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСУчредителями"),						15);
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасчетыСПрочимиДебиторамиИКредиторами"),		16);
	//Капитал
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.Капитал"),									19);
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.РасходыБудущихПериодов"),						20);
	//Финансовые результаты
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.ОтложенныеНалоговыеАктивыОбязательства"),		21);
	//Забалансовые счета
	РазделыУчета.Добавить(ПредопределенноеЗначение("Перечисление.РазделыУчетаДляВводаОстатков.ПрочиеСчетаБухгалтерскогоУчета"),				22);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СопоставитьРазделыУчетаСтраницам();
КонецПроцедуры

//// Основные средства
&НаКлиенте
Процедура ОСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Отказ=Истина;
	ПараметрыФормы=Новый Структура();
	ОткрытьФорму("Документ.ВводНачальныхОстатков.Форма.ФормаРедактированияСтрокиОС",ПараметрыФормы,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОСПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Отказ=Истина;
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию = Новый Структура;
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("ПорядокВключенияСтоимостиВСоставРасходовНУ", ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации"));
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("ПорядокПогашенияСтоимостиБУ",                ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации"));
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("СпособНачисленияАмортизацииБУ",              ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный"));
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("МетодНачисленияАмортизацииНУ",               ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный"));
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("НачислятьАмортизациюБУ",                     Истина);
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("НачислятьАмортизациюНУ",                     Истина);
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("СпециальныйКоэффициентНУ",                   1);
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("СчетУчетаБУ",                                ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ОСвОрганизации"));
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("СчетАмортизацииБУ",                          ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.АмортизацияОС_01"));
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("ВводВЭксплуатациюПриПринятииРегл",           Истина);
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("ПодразделениеОрганизации", "");
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("ОтражатьВНалоговомУчете", Истина);

	ПараметрыФормы=Новый Структура("Копирование, ЭтоНовый, мСтруктураРеквизитовЗаполняемыхПоУмолчанию",Копирование,Истина, мСтруктураРеквизитовЗаполняемыхПоУмолчанию);
	ОткрытьФорму("Документ.ВводНачальныхОстатков.Форма.ФормаРедактированияСтрокиОС",ПараметрыФормы,ЭтаФорма);
КонецПроцедуры

//// Нематериальные активы
&НаКлиенте
Процедура НМАВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Отказ=Истина;
	ПараметрыФормы=Новый Структура();
	ОткрытьФорму("Документ.ВводНачальныхОстатков.Форма.ФормаРедактированияСтрокиНМА",ПараметрыФормы,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура НМАПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ=Истина;
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию = Новый Структура;
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("СпособНачисленияАмортизацииБУ",               ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный"));
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("МетодНачисленияАмортизацииНУ",                ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный"));
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("НачислятьАмортизациюБУ",                      Истина);
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("НачислятьАмортизациюНУ",                      Истина);
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("СпециальныйКоэффициентНУ",                    1);
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("СчетУчетаБУ",                                 ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.НематериальныеАктивыОрганизации"));
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("СчетаНачисленияАмортизацииБУ",                ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.АмортизацияНематериальныхАктивов"));
	мСтруктураРеквизитовЗаполняемыхПоУмолчанию.Вставить("ОтражатьВНалоговомУчете", Истина);
	ПараметрыФормы=Новый Структура("Копирование, ЭтоНовый, мСтруктураРеквизитовЗаполняемыхПоУмолчанию",Копирование,Истина, мСтруктураРеквизитовЗаполняемыхПоУмолчанию);
	ОткрытьФорму("Документ.ВводНачальныхОстатков.Форма.ФормаРедактированияСтрокиНМА",ПараметрыФормы,ЭтаФорма);
КонецПроцедуры


//// Прочие счета
&НаКлиенте
Процедура БухСправкаСчетУчетаПриИзменении(Элемент)
КонецПроцедуры

&НаСервере
Функция ПолучитьКурсИКратность(Валюта)
	СтруктураКурсИКратность=Новый Структура("Курс,Кратность",1,1);
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	КурсыВалютСрезПоследних.Курс КАК Курс,
	             |	КурсыВалютСрезПоследних.Кратность КАК Кратность
	             |ИЗ
	             |	РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &Валюта) КАК КурсыВалютСрезПоследних";
	Запрос.УстановитьПараметр("Валюта",Валюта);
	Запрос.УстановитьПараметр("Дата",Объект.Дата);
	тзДанные=Запрос.Выполнить().Выгрузить();
	Если НЕ тзДанные.Количество()=0 Тогда
		СтруктураКурсИКратность.Курс=тзДанные[0].Курс;
		СтруктураКурсИКратность.Кратность=тзДанные[0].Кратность;
	КонецЕсли;
	
	Возврат СтруктураКурсИКратность;
КонецФункции

&НаКлиенте
Процедура тпРасчетыСКонтрагентами_Колонка_ПриИзменении(Элемент)
	ТекущиеДанные=Элементы.РасчетыСКонтрагентами.ТекущиеДанные;
	Если Элемент.Имя="РасчетыСКонтрагентамиДоговорКонтрагента" Тогда
		ВалютаДоговора=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
		Если ЗначениеЗаполнено(ВалютаДоговора) Тогда
			СтруктураКурсИКратность=ПолучитьКурсИКратность(ВалютаДоговора);
			ТекущиеДанные.Валюта=ВалютаДоговора;
			ТекущиеДанные.КурсВзаиморасчетов=СтруктураКурсИКратность.Курс;
			ТекущиеДанные.КратностьВзаиморасчетов=СтруктураКурсИКратность.Кратность;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
