////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("АктСверки", "Акт сверки");
	Структура.Вставить("АктСверкиСДоговором", "Акт сверки (группировка по договору)");	
	Структура.Вставить("АктСверкиСТарой", "Акт сверки (с возвратной тарой)");
	Структура.Вставить("БухгалтерскаяСправка", "Бухгалтерская cправка");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;	
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция ПолучитьДанныеДокумента(СсылкаНаОбъект, стрРеквизиты="")
	Если НЕ ПустаяСтрока(стрРеквизиты) Тогда стрРеквизиты=","+стрРеквизиты; КонецЕсли; 
	Для каждого мдРеквизит Из СсылкаНаОбъект.Метаданные().Реквизиты Цикл
		стрРеквизиты=стрРеквизиты+","+Символы.ПС+мдРеквизит.Имя;
	КонецЦикла;	
	
	Запрос=Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Дата,
	|	Номер,
	|	Проведен
	|	"+стрРеквизиты+",
	|	ПоДаннымОрганизации,
	|	ПоДаннымКонтрагента,
	|	СчетаУчета
	|ИЗ
	|	Документ.АктСверкиВзаиморасчетов КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент
	|";
	
	#Если НаСервере Тогда
		Запрос.Выполнить();
	#КонецЕсли
	Реквизиты=Запрос.Результат.Выбрать();
	Реквизиты.Следующий();
	
	Возврат Реквизиты;
КонецФункции 	

Функция Печать_АктаСверки(СтруктураПараметров, ГруппироватьПоДоговору=Ложь, ВыводитьТару=Ложь)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	
	РеквизитыШапки=ПолучитьДанныеДокумента(СсылкаНаОбъект);
	
	ПоДаннымОрганизации=РеквизитыШапки.ПоДаннымОрганизации.Выгрузить();
	ПоДаннымКонтрагента=РеквизитыШапки.ПоДаннымКонтрагента.Выгрузить();
	СчетаУчета=РеквизитыШапки.СчетаУчета.Выгрузить();
	
	ОстатокНаНачало=РеквизитыШапки.ОстатокНаНачало;
	
	ТабДок=Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати="ПАРАМЕТРЫ_ПЕЧАТИ_АктСверкиВзаиморасчетов_АктСверки"; //ИмяПараметровПечати ;
	
	Макет=ИнициализацияМакета(СтруктураПараметров, "АктСверки");
	
	ОбластьЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьНачОстатки   = Макет.ПолучитьОбласть("НачОстатки");
	ОбластьОбороты      = Макет.ПолучитьОбласть("Обороты");
	ОбластьОборотыИтог  = Макет.ПолучитьОбласть("ОборотыИтог");
	ОбластьКонОстатки   = Макет.ПолучитьОбласть("КонОстатки");
	ОбластьПодвал       = Макет.ПолучитьОбласть("Подвал");
	ОбластьДоговор      = Макет.ПолучитьОбласть("Договор");
	
	НазваниеОрганизации = РеквизитыШапки.Организация.НаименованиеПолное;
	Если ПустаяСтрока(НазваниеОрганизации) Тогда
		НазваниеОрганизации = РеквизитыШапки.Организация;
	КонецЕсли;
	
	НаименованиеКонтрагента = РеквизитыШапки.Контрагент.НаименованиеПолное;
	Если ПустаяСтрока(НаименованиеКонтрагента) Тогда
		НаименованиеКонтрагента = РеквизитыШапки.Контрагент;
	КонецЕсли;

	ОбластьЗаголовок.Параметры.Заголовок="Акт сверки №"+ОбщегоНазначенияСервер.НомерНаПечать(СсылкаНаОбъект);
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьЗаголовок.Параметры.НаименованиеКонтрагента = НаименованиеКонтрагента;
	
	ИмяПредставителяОрганизации = РеквизитыШапки.ПредставительОрганизации;
	ИмяПредсатвителяКонтрагента = РеквизитыШапки.ПредставительКонтрагента;
	
	Если ЗначениеЗаполнено(РеквизитыШапки.ПредставительОрганизации) Тогда
		Запрос=Новый Запрос;
		Запрос.УстановитьПараметр("Организация", РеквизитыШапки.Организация);
		Запрос.УстановитьПараметр("ФизическоеЛицо", РеквизитыШапки.ПредставительОрганизации);
		Запрос.УстановитьПараметр("КонДата", РеквизитыШапки.Дата);		
		Запрос.Текст="
		|ВЫБРАТЬ
		|	ИсточникДанных.Должность
		|ИЗ
		|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&КонДата, СтруктурнаяЕдиница = &Организация И ФизическоеЛицо = &ФизическоеЛицо) КАК ИсточникДанных
		|";
		Рез=Запрос.Выполнить();
		Если Рез.Пустой() тогда
			ДолжностьПредставителяОрганизации = "";
		Иначе
			Выборка=Рез.Выбрать();
			Выборка.Следующий();
			ДолжностьПредставителяОрганизации = СокрЛП(Выборка.Должность);
		КонецЕсли;
	Иначе
		Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(РеквизитыШапки.Организация, РеквизитыШапки.Дата, СсылкаНаОбъект);
		ДолжностьПредставителяОрганизации = Руководители.РуководительДолжность;
		ПредставительОрганизации=Руководители.РуководительФизЛицо;
		ИмяПредставителяОрганизации = ПредставительОрганизации;
	КонецЕсли;
	
	ДолжностьПредставителяКонтрагента = ?(НЕ ЗначениеЗаполнено(РеквизитыШапки.ПредставительКонтрагента),"",СокрЛП(РеквизитыШапки.ПредставительКонтрагента.Должность));
	
	Если НЕ ЗначениеЗаполнено(РеквизитыШапки.ДатаНачала) Тогда
		Если ПоДаннымОрганизации.Количество()>0 Тогда
			ДатаНачалаПериода = ПоДаннымОрганизации[0].Дата;
		Иначе
			ДатаНачалаПериода = РеквизитыШапки.ДатаНачала;
		КонецЕсли;
	Иначе
		ДатаНачалаПериода = РеквизитыШапки.ДатаНачала;
	КонецЕсли;		
	
	ТекстЗаголовка = "взаимных расчетов за период с " + Формат(ДатаНачалаПериода, "ДФ=dd.MM.yyyy") + " по " + Формат(РеквизитыШапки.ДатаОкончания, "ДФ=dd.MM.yyyy") + Символы.ПС
	+ "между " + НазваниеОрганизации + Символы.ПС + "и " + НаименованиеКонтрагента;
	Если ЗначениеЗаполнено(РеквизитыШапки.ДоговорКонтрагента) Тогда
		ТекстЗаголовка = ТекстЗаголовка + Символы.ПС + "по договору " + СокрЛП(РеквизитыШапки.ДоговорКонтрагента);
	КонецЕсли;
	ОбластьЗаголовок.Параметры.ТекстЗаголовка = ТекстЗаголовка;
	
	Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(РеквизитыШапки.Организация, РеквизитыШапки.Дата, СтруктураПараметров.СсылкаНаОбъект);
	
	РуководительКонтрагента="";
	ГлавБухКонтрагента="";
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент",РеквизитыШапки.Контрагент);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	КонтактныеЛицаКонтрагентов.КонтактноеЛицо,
	|	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица
	|ИЗ
	|	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
	|ГДЕ
	|	КонтактныеЛицаКонтрагентов.Владелец = &Контрагент
	|";
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Если Результат.РольКонтактногоЛица=Справочники.КлассификаторПеречислений.РолиКонтактныхЛиц_Руководитель Тогда
			РуководительКонтрагента=Результат.КонтактноеЛицо;
		ИначеЕсли Результат.РольКонтактногоЛица=Справочники.КлассификаторПеречислений.РолиКонтактныхЛиц_ГлавныйБухгалтер Тогда
			ГлавБухКонтрагента=Результат.КонтактноеЛицо;
		КонецЕсли;
	КонецЦикла;
	
	ФИО=УправлениеКонфигурациейСервер.ФИО(РуководительКонтрагента,,Истина);	
	ФИОГлав=УправлениеКонфигурациейСервер.ФИО(ГлавБухКонтрагента,,Истина);	
	
	ФИОПредставителя = Руководители.Руководитель;	
	СтрЗаголовокТаблица = "Мы, нижеподписавшиеся, "
	+ ?(ДолжностьПредставителяОрганизации<>"",ДолжностьПредставителяОрганизации,"_______________________")+" "
	+ НазваниеОрганизации 
	+ " " + ?(ФИОПредставителя<>"",ФИОПредставителя,"__________________________________________") + ", с одной стороны, "
	+ "и " + ?(ДолжностьПредставителяКонтрагента<>"",ДолжностьПредставителяКонтрагента,"Руководитель") 
	+ " " + НаименованиеКонтрагента + " " 
	+ " " + ?(ФИО<>"",ФИО,"__________________________________________") + ", с другой стороны, "
	+ "составили настоящий акт сверки в том, что состояние взаимных расчетов по данным учета следующее:";
	
	ОбластьЗаголовок.Параметры.СтрЗаголовокТаблица = СтрЗаголовокТаблица;
	ОбластьЗаголовок.Параметры.ВалютаДокумента = РеквизитыШапки.ВалютаДокумента;
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	ИтСуммаОборотДт      = 0;
	ИтСуммаОборотКт      = 0;
	ИтСуммаОборотДтКонтр = 0;
	ИтСуммаОборотКтКонтр = 0;
	
	Если ГруппироватьПоДоговору Тогда
		ЗапросОстаток=Новый Запрос;
		ЗапросОстаток.УстановитьПараметр("ДатаНачала",РеквизитыШапки.ДатаНачала);
		ЗапросОстаток.УстановитьПараметр("ДатаКонца", КонецДня(РеквизитыШапки.ДатаОкончания));
		ЗапросОстаток.УстановитьПараметр("Организация",РеквизитыШапки.Организация);
		ЗапросОстаток.УстановитьПараметр("Контрагент", РеквизитыШапки.Контрагент);
		ЗапросОстаток.УстановитьПараметр("Ссылка",    СсылкаНаОбъект);
		
		ЗапросДоговоры=Новый Запрос;
		ЗапросДоговоры.Текст="ВЫБРАТЬ
		                     |	ДоговорыКонтрагентов.Ссылка КАК Договор
		                     |ИЗ
		                     |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		                     |ГДЕ
		                     |	ДоговорыКонтрагентов.Владелец = &Владелец
		                     |	И ДоговорыКонтрагентов.Организация = &Организация";
		 ЗапросДоговоры.УстановитьПараметр("Владелец", РеквизитыШапки.Контрагент);
		 ЗапросДоговоры.УстановитьПараметр("Организация", РеквизитыШапки.Организация);
		 тзДоговоры=ЗапросДоговоры.Выполнить().Выгрузить();
		ЗапросОстаток.УстановитьПараметр("Договоры",    тзДоговоры.ВыгрузитьКолонку("Договор"));
		 
		Если РеквизитыШапки.ВидОперации="УУ" Тогда
			стрРесурс=?(РеквизитыШапки.ВалютаДокумента=МодульВалютногоУчета.ПолучитьВалюту("Бух"), "СуммаБух", "СуммаВал");
			ЗапросОстаток.Текст="
			|ВЫБРАТЬ
			|	ИсточникДанных.ДоговорКонтрагента КАК ДоговорКонтрагента,
			|	ИсточникДанных."+стрРесурс+"НачальныйОстаток КАК НачальныйОстаток,
			|	ИсточникДанных."+стрРесурс+"КонечныйОстаток КАК КонечныйОстаток
			|ИЗ
			|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Авто, Движения,
			|			ДоговорКонтрагента В (&Договоры)
			|				И Контрагент = &Контрагент
			|				И Организация = &Организация) КАК ИсточникДанных
			|";
		Иначе
			ФильтрСчетаУчета=Новый массив();
			Для каждого СтрокаСчета Из СчетаУчета Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаСчета.Счет) или СтрокаСчета.УчаствуетВРасчетах = Ложь Тогда
					Продолжить;
				КонецЕсли; 
				ФильтрСчетаУчета.Добавить(СтрокаСчета.Счет);
			КонецЦикла;
			
			ЗапросОстаток.УстановитьПараметр("ФильтрСчетов", ФильтрСчетаУчета);
			ЗапросОстаток.Текст="
			|ВЫБРАТЬ
			|	ИсточникДанных.Субконто2 КАК ДоговорКонтрагента,
			|	ИсточникДанных.СуммаНачальныйОстаток КАК НачальныйОстаток,
			|	ИсточникДанных.СуммаКонечныйОстаток КАК КонечныйОстаток
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Авто, Движения, Счет В ИЕРАРХИИ (&ФильтрСчетов),,
			|			Субконто2 В (&Договоры)
			|				И Субконто1 = &Контрагент
			|				И Организация = &Организация) КАК ИсточникДанных
			|";		
		КонецЕсли;
		ВыборкаОстаток=ЗапросОстаток.Выполнить().Выбрать(); 
	КонецЕсли;

		
		
	//	Если РеквизитыШапки.ВидОперации="УУ" Тогда
	//		стрРесурс=?(РеквизитыШапки.ВалютаДокумента=МодульВалютногоУчета.ПолучитьВалюту("Бух"), "СуммаБух", "СуммаВал");
	//		ЗапросОстаток.Текст="
	//		|ВЫБРАТЬ
	//		|	ИсточникДанных.ДоговорКонтрагента КАК ДоговорКонтрагента,
	//		|	ИсточникДанных."+стрРесурс+"НачальныйОстаток КАК НачальныйОстаток,
	//		|	ИсточникДанных."+стрРесурс+"КонечныйОстаток КАК КонечныйОстаток
	//		|ИЗ
	//		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Авто, Движения,
	//		|			ДоговорКонтрагента В
	//		|					(ВЫБРАТЬ
	//		|						АктСверкиВзаиморасчетовПоДаннымКонтрагента.ДоговорКонтрагента
	//		|					ИЗ
	//		|						Документ.АктСверкиВзаиморасчетов.ПоДаннымКонтрагента КАК АктСверкиВзаиморасчетовПоДаннымКонтрагента
	//		|						ГДЕ
	//		|						АктСверкиВзаиморасчетовПоДаннымКонтрагента.Ссылка = &Ссылка
	//		|			
	//		|					ОБЪЕДИНИТЬ
	//		|			
	//		|					ВЫБРАТЬ
	//		|						АктСверкиВзаиморасчетовПоДаннымОрганизации.ДоговорКонтрагента
	//		|					ИЗ
	//		|						Документ.АктСверкиВзаиморасчетов.ПоДаннымОрганизации КАК АктСверкиВзаиморасчетовПоДаннымОрганизации
	//		|					ГДЕ
	//		|						АктСверкиВзаиморасчетовПоДаннымОрганизации.Ссылка = &Ссылка)
	//		|				И Контрагент = &Контрагент
	//		|				И Организация = &Организация) КАК ИсточникДанных
	//		|";
	//	Иначе
	//		ФильтрСчетаУчета=Новый массив();
	//		Для каждого СтрокаСчета Из СчетаУчета Цикл
	//			Если НЕ ЗначениеЗаполнено(СтрокаСчета.Счет) или СтрокаСчета.УчаствуетВРасчетах = Ложь Тогда
	//				Продолжить;
	//			КонецЕсли; 
	//			ФильтрСчетаУчета.Добавить(СтрокаСчета.Счет);
	//		КонецЦикла;
	//		
	//		ЗапросОстаток.УстановитьПараметр("ФильтрСчетов", ФильтрСчетаУчета);
	//		ЗапросОстаток.Текст="
	//		|ВЫБРАТЬ
	//		|	ИсточникДанных.Субконто2 КАК ДоговорКонтрагента,
	//		|	ИсточникДанных.СуммаНачальныйОстаток КАК НачальныйОстаток,
	//		|	ИсточникДанных.СуммаКонечныйОстаток КАК КонечныйОстаток
	//		|ИЗ
	//		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Авто, Движения, Счет В ИЕРАРХИИ (&ФильтрСчетов),,
	//		|			Субконто2 В
	//		|					(ВЫБРАТЬ
	//		|						АктСверкиВзаиморасчетовПоДаннымКонтрагента.ДоговорКонтрагента
	//		|					ИЗ
	//		|						Документ.АктСверкиВзаиморасчетов.ПоДаннымКонтрагента КАК АктСверкиВзаиморасчетовПоДаннымКонтрагента
	//		|						ГДЕ
	//		|						АктСверкиВзаиморасчетовПоДаннымКонтрагента.Ссылка = &Ссылка
	//		|			
	//		|					ОБЪЕДИНИТЬ
	//		|			
	//		|					ВЫБРАТЬ
	//		|						АктСверкиВзаиморасчетовПоДаннымОрганизации.ДоговорКонтрагента
	//		|					ИЗ
	//		|						Документ.АктСверкиВзаиморасчетов.ПоДаннымОрганизации КАК АктСверкиВзаиморасчетовПоДаннымОрганизации
	//		|					ГДЕ
	//		|						АктСверкиВзаиморасчетовПоДаннымОрганизации.Ссылка = &Ссылка)
	//		|				И Субконто1 = &Контрагент
	//		|				И Организация = &Организация) КАК ИсточникДанных
	//		|";		
	//	КонецЕсли;
	//	ВыборкаОстаток=ЗапросОстаток.Выполнить().Выбрать(); 
	//КонецЕсли;
	НачОстДебет  = ?(ОстатокНаНачало > 0, ОстатокНаНачало, 0);
	НачОстКредит = ?(ОстатокНаНачало < 0, -ОстатокНаНачало, 0);
	
	ОстатокНаКонец = ОстатокНаНачало + ПоДаннымОрганизации.Итог("Дебет") -  ПоДаннымОрганизации.Итог("Кредит");
	
	КонОстДебет  = ?(ОстатокНаКонец > 0, ОстатокНаКонец, 0);
	КонОстКредит = ?(ОстатокНаКонец < 0, -ОстатокНаКонец, 0);
	
	ОстатокНаКонецК = -ОстатокНаНачало + ПоДаннымКонтрагента.Итог("Дебет") -  ПоДаннымКонтрагента.Итог("Кредит");
	
	КонОстДебетК  = ?(ОстатокНаКонецК > 0, ОстатокНаКонецК, 0);
	КонОстКредитК = ?(ОстатокНаКонецК < 0, -ОстатокНаКонецК, 0);
	
	ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт = НачОстДебет;
	ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт = НачОстКредит;
	ТабДок.Вывести(ОбластьНачОстатки);
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ПоДаннымОрганизации.Сортировать("Дата Возр");
	ПоДаннымКонтрагента.Сортировать("Дата Возр");
	Если ГруппироватьПоДоговору Тогда
		ПоДаннымОрганизации.Сортировать("ДоговорКонтрагента Возр, Дата Возр");
		ПоДаннымКонтрагента.Сортировать("ДоговорКонтрагента Возр, Дата Возр");
	КонецЕсли;
	
	МаксИндекс = Макс(ПоДаннымОрганизации.Количество(), ПоДаннымКонтрагента.Количество()) - 1;
	предДоговор=""; ИтСуммаОборотДтДоговор=0;ИтСуммаОборотКтДоговор = 0;
	Для Инд = 0 По МаксИндекс Цикл
		Если Инд < ПоДаннымОрганизации.Количество() Тогда
			СтрокаОрганизации = ПоДаннымОрганизации[Инд];
			Если ГруппироватьПоДоговору Тогда
				текСтрока=тзДоговоры.Найти(СтрокаОрганизации.ДоговорКонтрагента,"Договор");
				Если НЕ текСтрока=Неопределено Тогда
					тзДоговоры.Удалить(текСтрока);
				КонецЕсли;	
				Если СтрокаОрганизации.ДоговорКонтрагента<>предДоговор Тогда
					Если ТипЗнч(предДоговор) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
						Если ВыборкаОстаток.НайтиСледующий(Новый Структура("ДоговорКонтрагента",предДоговор)) Тогда
							ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = ?(ВыборкаОстаток.КонечныйОстаток<0, 0, ВыборкаОстаток.КонечныйОстаток);
							ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = ?(ВыборкаОстаток.КонечныйОстаток<0, -ВыборкаОстаток.КонечныйОстаток, 0);
						Иначе
							ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = 0;
							ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = 0;
						КонецЕсли; 
						ОбластьОборотыИтог.Параметры.СуммаОборотДт = ИтСуммаОборотДтДоговор;
						ОбластьОборотыИтог.Параметры.СуммаОборотКт = ИтСуммаОборотКтДоговор;
						
						ТабДок.Вывести(ОбластьОборотыИтог);
						ТабДок.Вывести(ОбластьКонОстатки);
						
						ВыборкаОстаток.Сбросить();
						ИтСуммаОборотДтДоговор = 0;
						ИтСуммаОборотКтДоговор = 0;
					КонецЕсли;
					ОбластьДоговор.Параметры.Договор= СтрокаОрганизации.ДоговорКонтрагента;
					ТабДок.Вывести(ОбластьДоговор);
					Если ВыборкаОстаток.НайтиСледующий(Новый Структура("ДоговорКонтрагента",СтрокаОрганизации.ДоговорКонтрагента)) Тогда
						ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт = ?(ВыборкаОстаток.НачальныйОстаток<0,0,ВыборкаОстаток.НачальныйОстаток);
						ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт = ?(ВыборкаОстаток.НачальныйОстаток<0,-ВыборкаОстаток.НачальныйОстаток,0);
					Иначе
						ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт=0;
						ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт=0;
					КонецЕсли; 
					ТабДок.Вывести(ОбластьНачОстатки);
					ВыборкаОстаток.Сбросить();
				КонецЕсли;
			КонецЕсли;
			предДоговор=СтрокаОрганизации.ДоговорКонтрагента;
			Регистратор = 	СтрокаОрганизации.Представление;
			СуммаОборотДт = СтрокаОрганизации.Дебет;
			СуммаОборотКт = СтрокаОрганизации.Кредит;
			ОбластьОбороты.Параметры.СуммаОборотДт = СуммаОборотДт;
			ОбластьОбороты.Параметры.СуммаОборотКт = СуммаОборотКт;
			ИтСуммаОборотДт = ИтСуммаОборотДт + СуммаОборотДт;
			ИтСуммаОборотКт = ИтСуммаОборотКт + СуммаОборотКт;
			ИтСуммаОборотДтДоговор = ИтСуммаОборотДтДоговор + СуммаОборотДт;
			ИтСуммаОборотКтДоговор = ИтСуммаОборотКтДоговор + СуммаОборотКт;
			ОбластьОбороты.Параметры.РегистраторПредставление = СтрокаОрганизации.Представление;
			ОбластьОбороты.Параметры.Регистратор = СтрокаОрганизации.Документ;
			ОбластьОбороты.Параметры.ДатаДокумента = Формат(СтрокаОрганизации.Дата,"ЧЦ=21; ЧДЦ=2; ДФ=dd.MM.yy");
		Иначе
			ОбластьОбороты.Параметры.СуммаОборотДт = "";
			ОбластьОбороты.Параметры.СуммаОборотКт = "";
			ОбластьОбороты.Параметры.РегистраторПредставление = "";
			ОбластьОбороты.Параметры.Регистратор = "";
			ОбластьОбороты.Параметры.ДатаДокумента = "";
		КонецЕсли;
		Если Инд < ПоДаннымКонтрагента.Количество() Тогда
			СтрокаОрганизации = ПоДаннымКонтрагента[Инд];
			Регистратор = 	СтрокаОрганизации.Представление;
			СуммаОборотДт = СтрокаОрганизации.Дебет;
			СуммаОборотКт = СтрокаОрганизации.Кредит;
			ОбластьОбороты.Параметры.СуммаОборотДтКонтр = СуммаОборотДт;
			ОбластьОбороты.Параметры.СуммаОборотКтКонтр = СуммаОборотКт;
			ИтСуммаОборотДтКонтр = ИтСуммаОборотДтКонтр + СуммаОборотДт;
			ИтСуммаОборотКтКонтр = ИтСуммаОборотКтКонтр + СуммаОборотКт;
			ОбластьОбороты.Параметры.РегистраторПредставлениеКонтр = СтрокаОрганизации.Представление;
			ОбластьОбороты.Параметры.ДатаДокументаКонтр = Формат(СтрокаОрганизации.Дата,"ЧЦ=21; ЧДЦ=2; ДФ=dd.MM.yy");
		Иначе
			ОбластьОбороты.Параметры.СуммаОборотДтКонтр = "";
			ОбластьОбороты.Параметры.СуммаОборотКтКонтр = "";
			ОбластьОбороты.Параметры.РегистраторПредставлениеКонтр = "";
			ОбластьОбороты.Параметры.ДатаДокументаКонтр = "";
		КонецЕсли;
		ТабДок.Вывести(ОбластьОбороты);
	КонецЦикла;
	ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = 0;
	ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = 0;
	Если ГруппироватьПоДоговору Тогда
		Если ВыборкаОстаток.НайтиСледующий(Новый Структура("ДоговорКонтрагента",предДоговор)) Тогда
			ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = ?(ВыборкаОстаток.КонечныйОстаток<0, 0, ВыборкаОстаток.КонечныйОстаток);
			ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = ?(ВыборкаОстаток.КонечныйОстаток<0, -ВыборкаОстаток.КонечныйОстаток, 0);
		КонецЕсли;
		ВыборкаОстаток.Сбросить();
	КонецЕсли;
	ОбластьОборотыИтог.Параметры.СуммаОборотДт = ИтСуммаОборотДтДоговор;
	ОбластьОборотыИтог.Параметры.СуммаОборотКт = ИтСуммаОборотКтДоговор;
	
	Если ГруппироватьПоДоговору Тогда
		ТабДок.Вывести(ОбластьОборотыИтог);
		ТабДок.Вывести(ОбластьКонОстатки);
		Для Каждого СтрокаДоговор ИЗ тзДоговоры Цикл
			Если НЕ ВыборкаОстаток.НайтиСледующий(Новый Структура("ДоговорКонтрагента",СтрокаДоговор.Договор)) Тогда Продолжить; КонецЕсли;
			ОбластьДоговор.Параметры.Договор=СтрокаДоговор.Договор;
			ТабДок.Вывести(ОбластьДоговор);
			ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт = ?(ВыборкаОстаток.НачальныйОстаток<0,0,ВыборкаОстаток.НачальныйОстаток);
			ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт = ?(ВыборкаОстаток.НачальныйОстаток<0,-ВыборкаОстаток.НачальныйОстаток,0);
			
			ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = ?(ВыборкаОстаток.КонечныйОстаток<0, 0, ВыборкаОстаток.КонечныйОстаток);
			ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = ?(ВыборкаОстаток.КонечныйОстаток<0, -ВыборкаОстаток.КонечныйОстаток, 0);
			ТабДок.Вывести(ОбластьНачОстатки);
			ТабДок.Вывести(ОбластьКонОстатки);
			ВыборкаОстаток.Сбросить();
		КонецЦикла;	
	КонецЕсли;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ОбластьОборотыИтог.Параметры.СуммаОборотДт = ИтСуммаОборотДт;
	ОбластьОборотыИтог.Параметры.СуммаОборотКт = ИтСуммаОборотКт;
	Если РеквизитыШапки.СверкаСогласована тогда
		ОбластьОборотыИтог.Параметры.СуммаОборотДтКонтр = ИтСуммаОборотДтКонтр;
		ОбластьОборотыИтог.Параметры.СуммаОборотКтКонтр = ИтСуммаОборотКтКонтр;
	КонецЕсли;
	ТабДок.Вывести(ОбластьОборотыИтог);
	
	ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = КонОстДебет;
	ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = КонОстКредит;
	
	Если РеквизитыШапки.СверкаСогласована тогда
		ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДтКонтр = КонОстДебетК;
		ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКтКонтр = КонОстКредитК;
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьКонОстатки);
	
	// Возвратная тара
	ОстатокНаКонецТара=0;
	Если ВыводитьТару Тогда
		ПоказатьТару=СсылкаНаОбъект.ПоказатьТару;
		ОбластьПечати=Макет.ПолучитьОбласть("ШапкаТара");
		ТабДок.Вывести(ОбластьПечати);
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		
		ОбластьНачОстатки   = Макет.ПолучитьОбласть("НачОстатки");
		Если СсылкаНаОбъект.ОстатокНаНачалоТара<0 Тогда
			ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт = -СсылкаНаОбъект.ОстатокНаНачалоТара;
		Иначе
			ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт = СсылкаНаОбъект.ОстатокНаНачалоТара;
		КонецЕсли;
		ТабДок.Вывести(ОбластьНачОстатки);
		
		тзТары=СсылкаНаОбъект.ПоДаннымОрганизацииТара.Выгрузить();
		тзДокументов=тзТары.Скопировать(,"Дата,Документ,Представление,Дебет,Кредит");
		тзДокументов.Свернуть("Дата,Документ,Представление","Дебет,Кредит"); 
		Для Каждого Документ ИЗ тзДокументов Цикл
			мСтрок=тзТары.НайтиСтроки(Новый Структура("Документ",Документ.Документ));
			ОбластьОбороты=Макет.ПолучитьОбласть("Обороты");
			ОбластьОбороты.Параметры.СуммаОборотДт = Документ.Дебет;
			ОбластьОбороты.Параметры.СуммаОборотКт = Документ.Кредит;
			ОбластьОбороты.Параметры.РегистраторПредставление = Документ.Представление;
			ОбластьОбороты.Параметры.Регистратор = Документ.Документ;
			ОбластьОбороты.Параметры.ДатаДокумента = Формат(Документ.Дата,"ЧЦ=21; ЧДЦ=2; ДФ=dd.MM.yy");			
			ТабДок.Вывести(ОбластьОбороты);
			Если ПоказатьТару Тогда
				Для каждого СтрокаТара Из мСтрок Цикл
					ОбластьТара=Макет.ПолучитьОбласть("Тара");
					ОбластьТара.Параметры.ТараПредставление=СтрокаТара.Номенклатура;
					ОбластьТара.Параметры.СуммаОборотДт=СтрокаТара.Дебет;
					ОбластьТара.Параметры.СуммаОборотКт=СтрокаТара.Кредит;
					ТабДок.Вывести(ОбластьТара);
				КонецЦикла;
			КонецЕсли;		
		КонецЦикла;	
		
		ОбластьКонОстатки= Макет.ПолучитьОбласть("КонОстатки");
		
		ОстатокНаКонецТара = СсылкаНаОбъект.ОстатокНаНачалоТара+СсылкаНаОбъект.ПоДаннымОрганизацииТара.Итог("Дебет")- СсылкаНаОбъект.ПоДаннымОрганизацииТара.Итог("Кредит");
		Если ОстатокНаКонецТара <0 Тогда
			ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = -ОстатокНаКонецТара;
		Иначе
			ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = ОстатокНаКонецТара;
		КонецЕсли;
		ТабДок.Вывести(ОбластьКонОстатки);
	КонецЕсли;
	
	// Результаты сверки
	Если ПоДаннымОрганизации.Количество() = 0 и ОстатокНаНачало = 0 Тогда
		РезультатыСверки = "<сверка не проведена>";
	ИначеЕсли НЕ ЗначениеЗаполнено(РеквизитыШапки.ДатаОкончания) Тогда
		РезультатыСверки = "<не указана дата сверки>";
	ИначеЕсли НЕ ЗначениеЗаполнено(РеквизитыШапки.Контрагент) Тогда
		РезультатыСверки = "<не указан контрагент>";
	Иначе
		РезультатыСверки = "на " + Формат(РеквизитыШапки.ДатаОкончания, "ДФ=dd.MM.yyyy") + " задолженность ";
		
		Если ОстатокНаКонец > 0 Тогда
			РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НазваниеОрганизации) + " " + Формат(ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2") + " " + строка(РеквизитыШапки.ВалютаДокумента);
			
		ИначеЕсли ОстатокНаКонец < 0 Тогда
			РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НаименованиеКонтрагента) + " " + Формат(-ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2") + " " + строка(РеквизитыШапки.ВалютаДокумента);
			
		Иначе
			РезультатыСверки = РезультатыСверки + "отсутствует.";
		КонецЕсли;
	КонецЕсли;
	ОбластьПодвал.Параметры.РезультатыСверки = РезультатыСверки;
	
	Если РеквизитыШапки.СверкаСогласована тогда
		ОбластьПодвал.Параметры.ПоДаннымКонтрагента = "По данным " + СокрЛП(НаименованиеКонтрагента);
		
		Если ПоДаннымКонтрагента.Количество() = 0 и ОстатокНаНачало = 0 Тогда
			РезультатыСверки = "<сверка не проведена>";
		ИначеЕсли НЕ ЗначениеЗаполнено(РеквизитыШапки.ДатаОкончания) Тогда
			РезультатыСверки = "<не указана дата сверки>";
		ИначеЕсли НЕ ЗначениеЗаполнено(РеквизитыШапки.Контрагент) Тогда
			РезультатыСверки = "<не указан контрагент>";
		Иначе
			РезультатыСверки = "на " + Формат(РеквизитыШапки.ДатаОкончания, "ДФ=dd.MM.yyyy") + " задолженность ";
			
			Если ОстатокНаКонецК < 0 Тогда
				РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НазваниеОрганизации) + " " + Формат(-ОстатокНаКонецК, "ЧЦ=21; ЧДЦ=2") + " " + Строка(РеквизитыШапки.ВалютаДокумента);
				
			ИначеЕсли ОстатокНаКонецК > 0 Тогда
				РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НаименованиеКонтрагента) + " " + Формат(ОстатокНаКонецК, "ЧЦ=21; ЧДЦ=2") + " " + Строка(РеквизитыШапки.ВалютаДокумента);
				
			Иначе
				РезультатыСверки = РезультатыСверки + "отсутствует.";
			КонецЕсли;
		КонецЕсли;
		
		ОбластьПодвал.Параметры.РезультатыСверкиК = РезультатыСверки;
		
		Если ОстатокНаКонец+ОстатокНаКонецК<>0 Тогда
			ИтогСверки = "В результате сверки выявлено расхождение информации о состоянии расчетов в размере "+Формат(?(ОстатокНаКонец+ОстатокНаКонецК>0,1,-1)*(ОстатокНаКонец+ОстатокНаКонецК), "ЧЦ=21; ЧДЦ=2") +" "+ Строка(РеквизитыШапки.ВалютаДокумента);
			ОбластьПодвал.Параметры.ИтогСверки = Символы.ПС+ ИтогСверки+Символы.ПС+" ";
		КонецЕсли; 
	КонецЕсли;
	
	ОбластьПодвал.Параметры.НазваниеОрганизации = СокрЛП(НазваниеОрганизации);
	ОбластьПодвал.Параметры.НаименованиеКонтрагента = СокрЛП(НаименованиеКонтрагента);
	
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(РеквизитыШапки.Организация, РеквизитыШапки.Дата);
	СведенияОКонтрагенте  = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(РеквизитыШапки.Контрагент, РеквизитыШапки.Дата);
	
	ОбластьПодвал.Параметры.ИННОрганизации="ИНН: "+Строка(СведенияОбОрганизации.ИНН);
	ОбластьПодвал.Параметры.АдресОрганизации="Адрес: "+Строка(СведенияОбОрганизации.ЮридическийАдрес);
	ОбластьПодвал.Параметры.ТелефонОрганизации="Телефон: "+Строка(СведенияОбОрганизации.Телефоны);
	
	ОбластьПодвал.Параметры.ИННКонтрагента="ИНН: "+Строка(СведенияОКонтрагенте.ИНН);
	ОбластьПодвал.Параметры.АдресКонтрагента="Адрес: "+Строка(СведенияОКонтрагенте.ЮридическийАдрес);
	ОбластьПодвал.Параметры.ТелефонКонтрагента="Телефон: "+Строка(СведенияОКонтрагенте.Телефоны);
	
	Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(РеквизитыШапки.Организация, РеквизитыШапки.Дата, СтруктураПараметров.СсылкаНаОбъект);
	
	ОбластьПодвал.Параметры.Руководитель=Строка(Руководители.РуководительДолжность)+"_______________"+Строка(Руководители.Руководитель);
	ОбластьПодвал.Параметры.ГлавБухгалтер=Строка(Руководители.ГлавныйБухгалтерДолжность)+"_______________"+Строка(Руководители.ГлавныйБухгалтер);
	ОбластьПодвал.Параметры.РуководительКонтрагента="Руководитель_______________"+Строка(ФИО);
	ОбластьПодвал.Параметры.ГлБухгалтерКонтрагента="Главный бухгалтер_______________"+Строка(ФИОГлав);
	ОбластьПодвал.Параметры.Исполнитель=ПараметрыСеанса.ТекущийПользователь;
	ОбластьПодвал.Параметры.Телефон=СведенияОбОрганизации.Телефоны;
	
	Если ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо) Тогда
		Запрос=Новый Запрос;
		Запрос.УстановитьПараметр("Объект", ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
		//Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации["ТелефонФизЛицаСлужебный"].ПолучитьОбъект().Ссылка); //Вид телефона
		Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации["ТелефонФизЛицаСлужебный"].Ссылка); //Вид телефона
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	КонтактнаяИнформация.Представление
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип  = &Тип
		|	И КонтактнаяИнформация.Вид  = &Вид
		|";
		Выборка=Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ОбластьПодвал.Параметры.Телефон=Выборка.Представление;
		КонецЕсли;	
	КонецЕсли;
	ТабДок.Вывести(ОбластьПодвал);
	
	Возврат ТабДок;
КонецФункции

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	Если СтруктураПараметров.ИмяМакета="АктСверки" Тогда
		ТабДокумент=Печать_АктаСверки(СтруктураПараметров);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="АктСверкиСДоговором" Тогда	
		ТабДокумент=Печать_АктаСверки(СтруктураПараметров, Истина);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="АктСверкиСТарой" Тогда	
		ТабДокумент=Печать_АктаСверки(СтруктураПараметров,,Истина);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="БухгалтерскаяСправка" Тогда
		ТабДокумент=ПечатныеФормыСервер.БухгалтерскаяСправка(СтруктураПараметров, "Хозрасчетный");		
	КонецЕсли;
	
	Возврат ТабДокумент;
КонецФункции