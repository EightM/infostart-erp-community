Процедура ЗаполнитьПоДаннымБухгалтерскогоУчета(ФильтрСчетаУчета=Неопределено, МассивДоговоров=Неопределено, ПоВсемОрганизациям=Ложь) Экспорт
	
	КоличествоСчетов = СчетаУчета.Количество();
	Если ФильтрСчетаУчета = неопределено Тогда
		ФильтрСчетаУчета = Новый массив();
		Для каждого СтрокаСчета Из СчетаУчета Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаСчета.Счет) или СтрокаСчета.УчаствуетВРасчетах = Ложь Тогда
				Продолжить;
			КонецЕсли; 
			ФильтрСчетаУчета.Добавить(СтрокаСчета.Счет);
		КонецЦикла; 
		Если ФильтрСчетаУчета.Количество() = 0 Тогда
		    ОбщегоНазначения.СообщитьОбОшибке("Неверно задан список счетов, по которым производится сверка!",,,СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//МассивСчетовТары=Новый Массив;
	//Для каждого СтрокаСчета Из СчетаУчетаТара Цикл
	//	Если НЕ ЗначениеЗаполнено(СтрокаСчета.Счет) или СтрокаСчета.УчаствуетВРасчетах = Ложь Тогда
	//		Продолжить;
	//	КонецЕсли; 
	//	Для Каждого Счет Из ФильтрСчетаУчета Цикл
	//		Если СтрокаСчета.Счет.ПринадлежитЭлементу(Счет) Тогда
	//			МассивСчетовТары.Добавить(СтрокаСчета.Счет);
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЦикла; 
	
	//Если МассивСчетовТары.Количество()>0 Тогда
	//	Ответ=Вопрос("Исключить тару из заполнения?", РежимДиалогаВопрос.ДаНет, 0);
	//	Если Ответ=КодВозвратаДиалога.Нет Тогда
	//		МассивСчетовТары.Очистить();
	//	КонецЕсли;
	//КонецЕсли;
	АналитикаРасчетов=Новый Массив();
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала",    ?(НЕ ЗначениеЗаполнено(ДатаНачала),Неопределено, Новый граница (ДатаНачала,ВидГраницы.Включая)));
	Запрос.УстановитьПараметр("ДатаОкончания", ?(НЕ ЗначениеЗаполнено(ДатаОкончания),неопределено,новый граница(КонецДня(ДатаОкончания), ВидГраницы.Включая)));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Контрагент",    Контрагент);
	Запрос.УстановитьПараметр("Валюта",        ?(НЕ ЗначениеЗаполнено(ВалютаДокумента) или (ВалютаДокумента = ДополнительныеСвойства.ВалютаБухУчета), неопределено,ВалютаДокумента));
	Запрос.УстановитьПараметр("ФильтрСчетаУчета", ФильтрСчетаУчета);
	//Запрос.УстановитьПараметр("ФильтрСчетовТары", МассивСчетовТары);
	Запрос.УстановитьПараметр("АналитикаРасчетов", АналитикаРасчетов);
	
	ОтборПоДоговору=Ложь;
	Если НЕ МассивДоговоров=Неопределено ИЛИ ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		ОтборПоДоговору=Истина;
	КонецЕсли;	
	Если НЕ МассивДоговоров=Неопределено Тогда
		Запрос.УстановитьПараметр("ДоговорКонтрагента", МассивДоговоров);
	Иначе	
		Запрос.УстановитьПараметр("ДоговорКонтрагента", ?(НЕ ЗначениеЗаполнено(ДоговорКонтрагента), Неопределено, ДоговорКонтрагента));
	КонецЕсли;
	Если ПоВсемОрганизациям Тогда ОтборПоДоговору=Ложь; КонецЕсли; 
	Запрос.УстановитьПараметр("ОтборПоДоговору", ОтборПоДоговору);

	Запрос.Текст="
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.Регистратор.Дата КАК Дата,
	|	ХозрасчетныйОбороты.Регистратор.Номер КАК Номер,
	|	ХозрасчетныйОбороты.Регистратор КАК Документ,
	|	ХозрасчетныйОбороты.Субконто2 КАК Договор,
	|	ВЫБОР
	|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
	|		ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт
	|	КОНЕЦ КАК Дебет,
	|	ВЫБОР
	|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|			ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	|		ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
	|	КОНЕЦ КАК Кредит,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Регистратор.НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО) КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Регистратор.ДатаВходящегоДокумента, НЕОПРЕДЕЛЕНО) КАК ДатаВходящегоДокумента,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ХозрасчетныйОбороты.КорСубконто2,
	|	ХозрасчетныйОбороты.КорСубконто3,
	|	ХозрасчетныйОбороты.Валюта,
	|	ХозрасчетныйОбороты.ВалютнаяСуммаОборот,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСубконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ХозрасчетныйОбороты.КорСубконто1.ВидПрочихДоходовИРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидПрочихДоходовИРасходов,
	|	ХозрасчетныйОбороты.Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|		&ДатаНачала,
	|		&ДатаОкончания,
	|		Регистратор,
	|		Счет В ИЕРАРХИИ (&ФильтрСчетаУчета),
	|		&АналитикаРасчетов,
	|		Организация=&Организация
	|		    И ВЫБОР
	|		        КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Валюта = &Валюта
	|		    КОНЕЦ
	|		    И Субконто1 = &Контрагент
	|		    И ВЫБОР
	|		        КОГДА &ОтборПоДоговору = ЛОЖЬ
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Субконто2 В (&ДоговорКонтрагента)
	|		    КОНЕЦ,
	|		,
	|		) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (&ФильтрСчетаУчета)
	|				ТОГДА ВЫБОР
	|						КОГДА &ОтборПоДоговору = ЛОЖЬ
	|							ТОГДА (НЕ ХозрасчетныйОбороты.КорСубконто1 = ХозрасчетныйОбороты.Субконто1)
	|						ИНАЧЕ (НЕ(ХозрасчетныйОбороты.КорСубконто1 = ХозрасчетныйОбороты.Субконто1
	|									И ХозрасчетныйОбороты.КорСубконто2 = ХозрасчетныйОбороты.Субконто2))
	|					КОНЕЦ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И (НЕ (ВЫБОР
	|					КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|						ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
	|					ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт
	|				КОНЕЦ = 0
	|			И ВЫБОР
	|				КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|					ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	|				ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
	|			КОНЕЦ = 0))
	//|	И ХозрасчетныйОбороты.Счет НЕ В ИЕРАРХИИ (&ФильтрСчетовТары)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Документ
	|";
	Если ПоВсемОрганизациям Тогда
		Запрос.Текст=стрЗаменить(Запрос.Текст, "Организация=&Организация", "Истина");
	КонецЕсли; 
	Выборка=Запрос.Выполнить().Выбрать();
	
	НаборДвижений = ПоДаннымОрганизации.Выгрузить();
	НаборДвижений.Колонки.Добавить("Валюта", Новый описаниеТипов("СправочникСсылка.Валюты"));
	НаборДвижений.Колонки.Добавить("ВалютнаяСумма", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2));
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Дебет = 0 И Выборка.Кредит = 0 Тогда Продолжить; КонецЕсли;
		НоваяСтрока = НаборДвижений.Добавить();
		НоваяСтрока.Документ           = Выборка.Документ;
		НоваяСтрока.ДоговорКонтрагента = Выборка.Договор;
		НоваяСтрока.Дата               = Выборка.Дата;
		НоваяСтрока.Дебет              = Выборка.Дебет;
		НоваяСтрока.Кредит             = Выборка.Кредит;
		НоваяСтрока.Валюта             = Выборка.Валюта;
		НоваяСтрока.ВалютнаяСумма      = Выборка.ВалютнаяСуммаОборот;
		Если НЕ НоваяСтрока.Документ=Неопределено Тогда 
			мдДокумент=НоваяСтрока.Документ.Метаданные();
			Если УправлениеМетаданными.ЕстьРеквизит("ДатаОплаты", мдДокумент) Тогда
				НоваяСтрока.Дата = НоваяСтрока.Документ.ДатаОплаты;
			КонецЕсли;
			НомерДокумента = ?(УправлениеМетаданными.ЕстьРеквизит("НомерВходящегоДокумента", мдДокумент), НоваяСтрока.Документ.НомерВходящегоДокумента, ОбщегоНазначенияСервер.НомерНаПечать(НоваяСтрока.Документ));
			ДатаДокумента  = ?(УправлениеМетаданными.ЕстьРеквизит("ДатаВходящегоДокумента", мдДокумент), НоваяСтрока.Документ.ДатаВходящегоДокумента, НоваяСтрока.Документ.Дата);
			НоваяСтрока.Представление = мдДокумент.Синоним+" № "+НомерДокумента+" от "+Формат(ДатаДокумента, "ДФ='дд ММ гггг'");
        КонецЕсли;
	КонецЦикла;

	Запрос.УстановитьПараметр("ДатаНачала", ?(НЕ ЗначениеЗаполнено(ДатаНачала),Неопределено, Новый граница (ДатаНачала,ВидГраницы.Исключая)));
	Запрос.Текст = ?(НЕ ЗначениеЗаполнено(ДатаНачала), 
	"ВЫБРАТЬ
	|	0 КАК ОстатокНаНачало, 
	|	0 КАК ОстатокНаКонец",
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|			ТОГДА ХозрасчетныйОстаткиНаНачало.СуммаОстаток
	|		ИНАЧЕ ХозрасчетныйОстаткиНаНачало.ВалютнаяСуммаОстаток
	|	КОНЕЦ КАК ОстатокНаНачало, 
	|	0 КАК ОстатокНаКонец
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|		&ДатаНачала,
	|		Счет В ИЕРАРХИИ (&ФильтрСчетаУчета),
	|		&АналитикаРасчетов,
	|		Организация = &Организация
	|		    И ВЫБОР
	|		        КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Валюта = &Валюта
	|		    КОНЕЦ
	|		    И Субконто1 = &Контрагент
	|		    И ВЫБОР
	|		        КОГДА &ОтборПоДоговору = ЛОЖЬ
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Субконто2 В (&ДоговорКонтрагента)
	|		    КОНЕЦ) КАК ХозрасчетныйОстаткиНаНачало")
	//|ГДЕ
	//|	ХозрасчетныйОстаткиНаНачало.Счет НЕ В ИЕРАРХИИ (&ФильтрСчетовТары)")
	+ "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|0,
	|	ВЫБОР
	|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|			ТОГДА ХозрасчетныйОстаткиНаНачало.СуммаОстаток
	|		ИНАЧЕ ХозрасчетныйОстаткиНаНачало.ВалютнаяСуммаОстаток
	|	КОНЕЦ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|		&ДатаОкончания,
	|		Счет В ИЕРАРХИИ (&ФильтрСчетаУчета),
	|		&АналитикаРасчетов,
	|		Организация=&Организация
	|		    И ВЫБОР
	|		        КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Валюта = &Валюта
	|		    КОНЕЦ
	|		    И Субконто1 = &Контрагент
	|		    И ВЫБОР
	|		        КОГДА &ОтборПоДоговору = ЛОЖЬ
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Субконто2 В (&ДоговорКонтрагента)
	|		    КОНЕЦ) КАК ХозрасчетныйОстаткиНаНачало
	//|ГДЕ
	//|	ХозрасчетныйОстаткиНаНачало.Счет НЕ В ИЕРАРХИИ (&ФильтрСчетовТары)
	|ИТОГИ
	|	СУММА(ОстатокНаНачало),
	|	СУММА(ОстатокНаКонец)
	|ПО ОБЩИЕ
	|";
	Если ПоВсемОрганизациям Тогда
		Запрос.Текст=стрЗаменить(Запрос.Текст, "Организация=&Организация", "Истина");
	КонецЕсли;
	
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
	Выборка.Следующий();

	ОстатокНаНачало = Выборка.ОстатокНаНачало;
	ОстатокНаКонец  = Выборка.ОстатокНаКонец;
	
	//Если ВалютаДокумента = ДополнительныеСвойства.ВалютаБухУчета И НЕ ВыводитьПолныеНазванияДокументов  Тогда
	Если ВалютаДокумента = ДополнительныеСвойства.ВалютаБухУчета Тогда
		НаборДвижений.Свернуть("Дата,Документ,Представление,ДоговорКонтрагента,Валюта","Дебет, Кредит, ВалютнаяСумма");
		Для каждого СтрокаДвижений Из НаборДвижений Цикл
			Если СтрокаДвижений.ВалютнаяСумма>0 тогда
				СтрокаДвижений.Представление = СтрокаДвижений.Представление+" ("+Формат(СтрокаДвижений.ВалютнаяСумма, "ЧЦ=15; ЧДЦ=2")+" "+строка(СтрокаДвижений.Валюта) +")";
			ИначеЕсли СтрокаДвижений.ВалютнаяСумма <0 тогда
				Множитель = ?(СтрокаДвижений.Дебет + СтрокаДвижений.Кредит>0, -1,1);
				СтрокаДвижений.Представление = СтрокаДвижений.Представление+" ("+Формат(Множитель*СтрокаДвижений.ВалютнаяСумма, "ЧЦ=15; ЧДЦ=2")+" "+строка(СтрокаДвижений.Валюта) +")";
			КонецЕсли;
		КонецЦикла; 
	Иначе
		НаборДвижений.Свернуть("Дата,Документ,Представление,ДоговорКонтрагента", "Дебет, Кредит");
	КонецЕсли; 
	
	//Если ВыводитьПолныеНазванияДокументов Тогда	
	//	НаборДвижений.Свернуть("Дата,Документ,Представление,ДоговорКонтрагента", "Дебет, Кредит");
	//КонецЕсли;
	//
	//Если РазбитьПоДоговорам Тогда		
	//	НаборДвижений.Сортировать("ДоговорКонтрагента,Дата,Документ,Представление");
	//Иначе	
		НаборДвижений.Сортировать("Дата,Документ,Представление,ДоговорКонтрагента");
	//КонецЕсли;

	ПоДаннымОрганизации.Загрузить(НаборДвижений);	
КонецПроцедуры

Процедура ЗаполнитьПоДаннымУправленческогоУчета(МассивДоговоров=Неопределено, ПоВсемОрганизациям=Ложь) Экспорт
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала",    ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Контрагент",    Контрагент);
	Запрос.УстановитьПараметр("Валюта",        ВалютаДокумента);

	Если НЕ МассивДоговоров=Неопределено Тогда
		Запрос.УстановитьПараметр("ДоговорКонтрагента", МассивДоговоров);
	Иначе	
		Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
			Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
		КонецЕсли;
	КонецЕсли;
	
	ОтборПоДоговору=Ложь;
	Если НЕ МассивДоговоров=Неопределено ИЛИ ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		ОтборПоДоговору=Истина;
	КонецЕсли;
	Если ПоВсемОрганизациям Тогда ОтборПоДоговору=Ложь; КонецЕсли;
	Запрос.УстановитьПараметр("ОтборПоДоговору", ОтборПоДоговору);

	стрРесурс=?(ВалютаДокумента=МодульВалютногоУчета.ПолучитьВалюту("Бух"), "СуммаБух", "СуммаВал");

	Запрос.Текст="
	|ВЫБРАТЬ 
	|	Взаиморасчеты.Регистратор         КАК Документ,
	|	Взаиморасчеты.Период              КАК Дата,
	|	Взаиморасчеты.ДоговорКонтрагента  КАК ДоговорКонтрагента,
	|	Взаиморасчеты."+стрРесурс+"Приход КАК Дебет,
	|	Взаиморасчеты."+стрРесурс+"Расход КАК Кредит
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, Регистратор,,
	|		Организация=&Организация И Контрагент = &Контрагент " 
	+ ?(НЕ ОтборПоДоговору, "", " И ДоговорКонтрагента В (&ДоговорКонтрагента) ") + "
	|		И ДоговорКонтрагента.ВалютаВзаиморасчетов = &Валюта) КАК Взаиморасчеты";

	ЗапросПоОстаткам=Новый Запрос;
	ЗапросПоОстаткам.УстановитьПараметр("ДатаНачала",    ДатаНачала);
	ЗапросПоОстаткам.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
	ЗапросПоОстаткам.УстановитьПараметр("Организация",   Организация);
	ЗапросПоОстаткам.УстановитьПараметр("Контрагент",    Контрагент);
	ЗапросПоОстаткам.УстановитьПараметр("Валюта",        ВалютаДокумента);

	Если НЕ МассивДоговоров=Неопределено Тогда
		ЗапросПоОстаткам.УстановитьПараметр("ДоговорКонтрагента", МассивДоговоров);
	Иначе	
		Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
			ЗапросПоОстаткам.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
		КонецЕсли;
	КонецЕсли;
	ЗапросПоОстаткам.УстановитьПараметр("ОтборПоДоговору", ОтборПоДоговору);

	ЗапросПоОстаткам.Текст = "
	|ВЫБРАТЬ 
	|	Взаиморасчеты."+стрРесурс+"НачальныйОстаток КАК ОстатокНаНачало,
	|	Взаиморасчеты."+стрРесурс+"КонечныйОстаток  КАК ОстатокНаКонец
	|ИЗ 
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания,,,
	|		Организация=&Организация И Контрагент = &Контрагент " 
	+ ?(НЕ ОтборПоДоговору, "", " И ДоговорКонтрагента В (&ДоговорКонтрагента) ") + "
	|		И ДоговорКонтрагента.ВалютаВзаиморасчетов = &Валюта) КАК Взаиморасчеты";

	ОстатокНаНачало = 0; ОстатокНаКонец  = 0;
	
	//****
	Если ПоВсемОрганизациям Тогда
		ЗапросПоОстаткам.Текст=стрЗаменить(ЗапросПоОстаткам.Текст, "Организация=&Организация", "Истина");
	КонецЕсли; 
	Если ПоВсемОрганизациям Тогда
		Запрос.Текст=стрЗаменить(Запрос.Текст, "Организация=&Организация", "Истина");
	КонецЕсли; 
	//****

	Выборка=ЗапросПоОстаткам.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОстатокНаНачало = Выборка.ОстатокНаНачало;
		ОстатокНаКонец  = Выборка.ОстатокНаКонец;
	КонецЦикла; 

	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Дебет = 0 И Выборка.Кредит = 0 Тогда Продолжить; КонецЕсли;

		НоваяСтрока=ПоДаннымОрганизации.Добавить();
		НоваяСтрока.Документ  = Выборка.Документ;
		НоваяСтрока.ДоговорКонтрагента  = Выборка.ДоговорКонтрагента;
		НоваяСтрока.Дата      = Выборка.Дата;
		НоваяСтрока.Дебет     = Выборка.Дебет;
		НоваяСтрока.Кредит    = Выборка.Кредит;

		// Сформируем строку представления
		мдДокумент=НоваяСтрока.Документ.Метаданные();
		НомерДокумента = ?(УправлениеМетаданными.ЕстьРеквизит("НомерВходящегоДокумента", мдДокумент), НоваяСтрока.Документ.НомерВходящегоДокумента, ОбщегоНазначенияСервер.НомерНаПечать(НоваяСтрока.Документ));
		ДатаДокумента  = ?(УправлениеМетаданными.ЕстьРеквизит("ДатаВходящегоДокумента", мдДокумент), НоваяСтрока.Документ.ДатаВходящегоДокумента, НоваяСтрока.Документ.Дата);
		НоваяСтрока.Представление = мдДокумент.Синоним+" № "+НомерДокумента+" от "+Формат(ДатаДокумента, "ДФ='дд ММ гггг'");
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьПоДаннымБухгалтерскогоУчетаТара(ФильтрСчетаУчета=неопределено) Экспорт
	
	КоличествоСчетов = СчетаУчета.Количество();
	Если ФильтрСчетаУчета = неопределено Тогда
		ФильтрСчетаУчета = Новый массив();
		Для каждого СтрокаСчета Из СчетаУчета Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаСчета.Счет) или СтрокаСчета.УчаствуетВРасчетах = Ложь Тогда
				Продолжить;
			КонецЕсли; 
			ФильтрСчетаУчета.Добавить(СтрокаСчета.Счет);
		КонецЦикла; 
		Если ФильтрСчетаУчета.Количество() = 0 Тогда
		    ОбщегоНазначения.СообщитьОбОшибке("Неверно задан список счетов, по которым производится сверка!",,,СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	АналитикаРасчетов=Новый Массив();
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Если ПоказатьТару Тогда
		АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
		ОтборПоДоговору="";
	Иначе
		АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
		ОтборПоДоговору="
		|И ВЫБОР
		|		КОГДА &ДоговорКонтрагента = НЕОПРЕДЕЛЕНО
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ Субконто2 = &ДоговорКонтрагента
		|	КОНЕЦ";
	КонецЕсли;

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала",    ?(НЕ ЗначениеЗаполнено(ДатаНачала),Неопределено, Новый граница (ДатаНачала,ВидГраницы.Включая)));
	Запрос.УстановитьПараметр("ДатаОкончания", ?(НЕ ЗначениеЗаполнено(ДатаОкончания),неопределено,новый граница(КонецДня(ДатаОкончания), ВидГраницы.Включая)));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Контрагент",    Контрагент);
	Запрос.УстановитьПараметр("Валюта",        ?(НЕ ЗначениеЗаполнено(ВалютаДокумента) или (ВалютаДокумента = ДополнительныеСвойства.ВалютаБухУчета), неопределено,ВалютаДокумента));
	Запрос.УстановитьПараметр("ФильтрСчетаУчета", ФильтрСчетаУчета);
	Запрос.УстановитьПараметр("АналитикаРасчетов", АналитикаРасчетов);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ?(НЕ ЗначениеЗаполнено(ДоговорКонтрагента),Неопределено,ДоговорКонтрагента));
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.Регистратор.Дата КАК Дата,
	|	ХозрасчетныйОбороты.Регистратор.Номер КАК Номер,
	|	ХозрасчетныйОбороты.Регистратор КАК Документ,
	|	ХозрасчетныйОбороты.Субконто2 КАК Договор,
	|	ВЫБОР
	|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
	|		ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт
	|	КОНЕЦ КАК Дебет,
	|	ВЫБОР
	|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|			ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	|		ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
	|	КОНЕЦ КАК Кредит,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Регистратор.НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО) КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Регистратор.ДатаВходящегоДокумента, НЕОПРЕДЕЛЕНО) КАК ДатаВходящегоДокумента,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ХозрасчетныйОбороты.КорСубконто2,
	|	ХозрасчетныйОбороты.КорСубконто3,
	|	ХозрасчетныйОбороты.Валюта,
	|	ХозрасчетныйОбороты.ВалютнаяСуммаОборот,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСубконто1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ХозрасчетныйОбороты.КорСубконто1.ВидПрочихДоходовИРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидПрочихДоходовИРасходов,
	|	ХозрасчетныйОбороты.Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор,
	|		Счет В ИЕРАРХИИ (&ФильтрСчетаУчета),
	|		&АналитикаРасчетов,
	|		Организация = &Организация
	|		    И ВЫБОР
	|		        КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Валюта = &Валюта
	|		    КОНЕЦ
	|		    И Субконто1 = &Контрагент
	|"+ОтборПоДоговору+"
	|		) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (&ФильтрСчетаУчета)
	|				ТОГДА ВЫБОР
	|						КОГДА &ДоговорКонтрагента = НЕОПРЕДЕЛЕНО
	|							ТОГДА (НЕ ХозрасчетныйОбороты.КорСубконто1 = &Контрагент)
	|						ИНАЧЕ (НЕ(ХозрасчетныйОбороты.КорСубконто1 = &Контрагент
	|									И ХозрасчетныйОбороты.КорСубконто2 = &ДоговорКонтрагента))
	|					КОНЕЦ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И (НЕ (ВЫБОР
	|					КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|						ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
	|					ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт
	|				КОНЕЦ = 0
	|			И ВЫБОР
	|				КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|					ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	|				ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
	|			КОНЕЦ = 0))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Документ
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	
	НаборДвижений = ПоДаннымОрганизацииТара.Выгрузить();
	НаборДвижений.Колонки.Добавить("Валюта", Новый описаниеТипов("СправочникСсылка.Валюты"));
	НаборДвижений.Колонки.Добавить("ВалютнаяСумма", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2));
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Дебет = 0 И Выборка.Кредит = 0 Тогда Продолжить; КонецЕсли;

		НоваяСтрока = НаборДвижений.Добавить();
		НоваяСтрока.Документ           = Выборка.Документ;
		Если ПоказатьТару Тогда
			НоваяСтрока.Номенклатура=Выборка.Договор;
		Иначе
			НоваяСтрока.ДоговорКонтрагента = Выборка.Договор;
		КонецЕсли; 
		НоваяСтрока.Дата               = Выборка.Дата;
		НоваяСтрока.Дебет              = Выборка.Дебет;
		НоваяСтрока.Кредит             = Выборка.Кредит;
		НоваяСтрока.Валюта             = Выборка.Валюта;
		НоваяСтрока.ВалютнаяСумма      = Выборка.ВалютнаяСуммаОборот;

		Если НЕ НоваяСтрока.Документ=Неопределено Тогда 
			мдДокумент=НоваяСтрока.Документ.Метаданные();
			НомерДокумента = ?(УправлениеМетаданными.ЕстьРеквизит("НомерВходящегоДокумента", мдДокумент), НоваяСтрока.Документ.НомерВходящегоДокумента, ОбщегоНазначенияСервер.НомерНаПечать(НоваяСтрока.Документ));
			ДатаДокумента  = ?(УправлениеМетаданными.ЕстьРеквизит("ДатаВходящегоДокумента", мдДокумент), НоваяСтрока.Документ.ДатаВходящегоДокумента, НоваяСтрока.Документ.Дата);
			НоваяСтрока.Представление = мдДокумент.Синоним+" № "+НомерДокумента+" от "+Формат(ДатаДокумента, "ДФ='дд ММ гггг'");
        КонецЕсли;
	КонецЦикла;

	Запрос.УстановитьПараметр("ДатаНачала", ?(НЕ ЗначениеЗаполнено(ДатаНачала),Неопределено, Новый граница (ДатаНачала,ВидГраницы.Исключая)));
	Запрос.Текст = ?(НЕ ЗначениеЗаполнено(ДатаНачала), 
	"ВЫБРАТЬ
	|	0 КАК ОстатокНаНачалоТара, 
	|	0 КАК ОстатокНаКонецТара", 
	
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|			ТОГДА ХозрасчетныйОстаткиНаНачало.СуммаОстаток
	|		ИНАЧЕ ХозрасчетныйОстаткиНаНачало.ВалютнаяСуммаОстаток
	|	КОНЕЦ КАК ОстатокНаНачалоТара, 
	|	0 КАК ОстатокНаКонецТара
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаНачала,
	|		Счет В ИЕРАРХИИ (&ФильтрСчетаУчета),
	|		&АналитикаРасчетов,
	|		Организация = &Организация
	|		    И ВЫБОР
	|		        КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Валюта = &Валюта
	|		    КОНЕЦ
	|		    И Субконто1 = &Контрагент
	|		    "+?(ПоказатьТару,"","И ВЫБОР
	|		        КОГДА &ДоговорКонтрагента = НЕОПРЕДЕЛЕНО
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Субконто2 = &ДоговорКонтрагента
	|		    КОНЕЦ")+") КАК ХозрасчетныйОстаткиНаНачало")
	+ "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|0,
	|	ВЫБОР
	|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|			ТОГДА ХозрасчетныйОстаткиНаНачало.СуммаОстаток
	|		ИНАЧЕ ХозрасчетныйОстаткиНаНачало.ВалютнаяСуммаОстаток
	|	КОНЕЦ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаОкончания,
	|		Счет В ИЕРАРХИИ (&ФильтрСчетаУчета),
	|		&АналитикаРасчетов,
	|		Организация = &Организация
	|		    И ВЫБОР
	|		        КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Валюта = &Валюта
	|		    КОНЕЦ
	|		    И Субконто1 = &Контрагент
	|		    "+?(ПоказатьТару,"","И ВЫБОР
	|		        КОГДА &ДоговорКонтрагента = НЕОПРЕДЕЛЕНО
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Субконто2 = &ДоговорКонтрагента
	|		    КОНЕЦ")+") КАК ХозрасчетныйОстаткиНаНачало 
	|ИТОГИ
	|	СУММА(ОстатокНаНачалоТара),
	|	СУММА(ОстатокНаКонецТара)
	|ПО ОБЩИЕ
	|";
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
	Выборка.Следующий();

	ОстатокНаНачалоТара = Выборка.ОстатокНаНачалоТара;
	ОстатокНаКонецТара  = Выборка.ОстатокНаКонецТара;
	
	//Если ВалютаДокумента = ДополнительныеСвойства.ВалютаБухУчета И НЕ ВыводитьПолныеНазванияДокументов  Тогда
	Если ВалютаДокумента = ДополнительныеСвойства.ВалютаБухУчета Тогда
		НаборДвижений.Свернуть("Дата,Документ,Представление,ДоговорКонтрагента,Номенклатура,Валюта","Дебет, Кредит, ВалютнаяСумма");
		Для каждого СтрокаДвижений Из НаборДвижений Цикл
			Если СтрокаДвижений.ВалютнаяСумма>0 тогда
				СтрокаДвижений.Представление = СтрокаДвижений.Представление+" ("+Формат(СтрокаДвижений.ВалютнаяСумма, "ЧЦ=15; ЧДЦ=2")+" "+строка(СтрокаДвижений.Валюта) +")";
			ИначеЕсли СтрокаДвижений.ВалютнаяСумма <0 тогда
				Множитель = ?(СтрокаДвижений.Дебет + СтрокаДвижений.Кредит>0, -1,1);
				СтрокаДвижений.Представление = СтрокаДвижений.Представление+" ("+Формат(Множитель*СтрокаДвижений.ВалютнаяСумма, "ЧЦ=15; ЧДЦ=2")+" "+строка(СтрокаДвижений.Валюта) +")";
			КонецЕсли;
		КонецЦикла; 
	Иначе
		НаборДвижений.Свернуть("Дата,Документ,Представление,ДоговорКонтрагента,Номенклатура", "Дебет, Кредит");
	КонецЕсли; 
	
	////Если ВыводитьПолныеНазванияДокументов Тогда	
	////	НаборДвижений.Свернуть("Дата,Документ,Представление,ДоговорКонтрагента,Номенклатура", "Дебет, Кредит");
	////КонецЕсли;
	
	//Если РазбитьПоДоговорам Тогда		
	//	НаборДвижений.Сортировать("ДоговорКонтрагента,Дата,Документ,Представление");
	//Иначе	
		НаборДвижений.Сортировать("Дата,Документ,Представление,ДоговорКонтрагента");
	//КонецЕсли;

	ПоДаннымОрганизацииТара.Загрузить(НаборДвижений);
КонецПроцедуры

Процедура ЗаполнитьПоДаннымУправленческогоУчетаТара() Экспорт
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала",    ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Контрагент",    Контрагент);
	Запрос.УстановитьПараметр("Валюта",        ВалютаДокумента);

	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	КонецЕсли;

	Запрос.Текст="
	|ВЫБРАТЬ 
	|	Взаиморасчеты.Регистратор        КАК Документ,
	|	Взаиморасчеты.Период             КАК Дата,
	|	Взаиморасчеты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Взаиморасчеты.Номенклатура		 КАК Номенклатура,	
	|	Взаиморасчеты.СуммаВзаиморасчетовПриход  	 КАК Дебет,
	|	Взаиморасчеты.СуммаВзаиморасчетовРасход 	 КАК Кредит
	|ИЗ
	|	РегистрНакопления.ТоварыПереданные.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, Регистратор,,
	|		Организация=&Организация И Контрагент=&Контрагент " 
	+ ?(НЕ ЗначениеЗаполнено(ДоговорКонтрагента), "", " И ДоговорКонтрагента = &ДоговорКонтрагента ") + "
	|		И ДоговорКонтрагента.ВалютаВзаиморасчетов = &Валюта) КАК Взаиморасчеты";

	ЗапросПоОстаткам=Новый Запрос;
	ЗапросПоОстаткам.УстановитьПараметр("ДатаНачала",    ДатаНачала);
	ЗапросПоОстаткам.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
	ЗапросПоОстаткам.УстановитьПараметр("Организация",   Организация);
	ЗапросПоОстаткам.УстановитьПараметр("Контрагент",    Контрагент);
	ЗапросПоОстаткам.УстановитьПараметр("Валюта",        ВалютаДокумента);

	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		ЗапросПоОстаткам.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	КонецЕсли;

	ЗапросПоОстаткам.Текст = "
	|ВЫБРАТЬ 
	|	Взаиморасчеты.СуммаВзаиморасчетовНачальныйОстаток КАК ОстатокНаНачалоТара,
	|	Взаиморасчеты.СуммаВзаиморасчетовКонечныйОстаток  КАК ОстатокНаКонецТара
	|ИЗ РегистрНакопления.ТоварыПереданные.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания,,,
	|		Организация=&Организация И Контрагент=&Контрагент " 
	+ ?(НЕ ЗначениеЗаполнено(ДоговорКонтрагента), "", " И ДоговорКонтрагента = &ДоговорКонтрагента ") + "
	|		И ДоговорКонтрагента.ВалютаВзаиморасчетов = &Валюта) КАК Взаиморасчеты";

	ОстатокНаНачалоТара = 0; ОстатокНаКонецТара  = 0;
	Выборка=ЗапросПоОстаткам.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОстатокНаНачалоТара = Выборка.ОстатокНаНачалоТара;
		ОстатокНаКонецТара  = Выборка.ОстатокНаКонецТара;
	КонецЦикла; 

	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Дебет = 0 И Выборка.Кредит = 0 Тогда Продолжить; КонецЕсли;

		НоваяСтрока=ПоДаннымОрганизацииТара.Добавить();
		НоваяСтрока.Документ  = Выборка.Документ;
		НоваяСтрока.ДоговорКонтрагента  = Выборка.ДоговорКонтрагента;
		НоваяСтрока.Дата      = Выборка.Дата;
		НоваяСтрока.Номенклатура = Выборка.Номенклатура;
		НоваяСтрока.Дебет     = Выборка.Дебет;
		НоваяСтрока.Кредит    = Выборка.Кредит;

		// Сформируем строку представления
		мдДокумент=НоваяСтрока.Документ.Метаданные();
		НомерДокумента = ?(УправлениеМетаданными.ЕстьРеквизит("НомерВходящегоДокумента", мдДокумент), НоваяСтрока.Документ.НомерВходящегоДокумента, ОбщегоНазначенияСервер.НомерНаПечать(НоваяСтрока.Документ));
		ДатаДокумента  = ?(УправлениеМетаданными.ЕстьРеквизит("ДатаВходящегоДокумента", мдДокумент), НоваяСтрока.Документ.ДатаВходящегоДокумента, НоваяСтрока.Документ.Дата);
		НоваяСтрока.Представление = мдДокумент.Синоним+" № "+НомерДокумента+" от "+Формат(ДатаДокумента, "ДФ='дд ММ гггг'");
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьПоДаннымОрганизации() Экспорт
	тзДанные=ПоДаннымОрганизации.Выгрузить();
	тзДанные.Колонки.Дебет.Имя  = "КредитК";
	тзДанные.Колонки.Кредит.Имя = "Дебет";
	тзДанные.Колонки.КредитК.Имя= "Кредит";

	ПоДаннымКонтрагента.Загрузить(тзДанные);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства, "Продажа");