Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт

	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;

КонецФункции

Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	СуммаДокумента=РасшифровкаПлатежа.Итог("СуммаПлатежа");
	СуммаДокументаУСН=РасшифровкаПлатежа.Итог("СуммаУСН");

	Для каждого СтрокаКоллекции Из РасшифровкаПлатежа Цикл
		Если СтрокаКоллекции.Подразделение.Пустая() Тогда
			СтрокаКоллекции.Подразделение=Подразделение;
		КонецЕсли;
	КонецЦикла;

	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
// Проведение по регистрам

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ)
	//Движения по регистру "Денежные средства (остатки)"
	ДвижениеПоРегистру_ДенежныеСредства(СтруктураШД, СтруктураТД, Отказ);
	
	//Движения по регистру "Денежные средства (обороты)"
	ДвижениеПоРегистру_ДвиженияДенежныхСредств(СтруктураШД, СтруктураТД, Отказ);
	
	//Движения по регистру "Взаиморасчеты с контрагентами"
	ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистрам "КУДиР"
	ДвижениеПоРегистру_КУДиР(СтруктураШД, СтруктураТД, Отказ);
	
	ДвижениеПоРегистру_РасходыПриУСН(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистрам "Учет ДНС"
	ДвижениеПоРегистру_УчетНДС(СтруктураШД, СтруктураТД, Отказ);
	
	//Движения по регистру "Затраты"
	ДвижениеПоРегистру_Затраты(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_КУДиР(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ Оплачено Тогда Возврат; КонецЕсли;
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "КнигаУчетаДоходовИРасходов") Тогда Возврат; КонецЕсли;
	НалоговыйУчет.ДвиженияДенежныхСредствКУДиР(Ссылка, ДополнительныеСвойства, СтруктураШД, СтруктураТД.РасшифровкаПлатежа, "Доходы");	
КонецПроцедуры

Процедура ДвижениеПоРегистру_РасходыПриУСН(СтруктураШД, СтруктураТД, Отказ)
	Если Не Оплачено Тогда Возврат; КонецЕсли; 
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "РасходыПриУСН") Тогда Возврат; КонецЕсли;
	УчетнаяПолитика=СтруктураШД.УчетнаяПолитика;
	Если УчетнаяПолитика.ОбъектНалогообложенияУСН=Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда	Возврат; КонецЕсли;	
	Если ВидОперации<>Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ВозвратДенежныхСредствПоставщиком Тогда Возврат; КонецЕсли;
	СистемаНалогообложения=УчетнаяПолитика.СистемаНалогообложения;
	ВключитьДвиженияУСН=Ложь;
	Если ДополнительныеСвойства.Свойство("ВключитьДвиженияУСН") Тогда
		ВключитьДвиженияУСН=ДополнительныеСвойства.ВключитьДвиженияУСН;
	КонецЕсли;

	Если СистемаНалогообложения=Перечисления.СистемыНалогообложения.Упрощенная Или СистемаНалогообложения=Перечисления.СистемыНалогообложения.Упрощенная_ЕНВД ИЛИ ВключитьДвиженияУСН Тогда
		Если СтруктураТД.РасшифровкаПлатежа.Количество()<>0 Тогда
			тзДанные=СтруктураТД.РасшифровкаПлатежа.Скопировать();
			тзДанные.Свернуть("ДоговорКонтрагента,ТОП,НомерСтрокиТабличнойЧасти,ВидТабличнойЧасти","СуммаПлатежа");
			Для Каждого СтрокаКоллекции ИЗ тзДанные Цикл
				НоваяСтрока=Движения.РасходыПриУСН.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаКоллекции);
				НоваяСтрока.Сумма=-СтрокаКоллекции.СуммаПлатежа;
				НоваяСтрока.ТОП=СтрокаКоллекции.ТОП;
				НоваяСтрока.Активность=Истина;
				НоваяСтрока.Период=Дата;
				НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
				НоваяСтрока.Организация=Организация;
				НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.ПредоплатаПоставщику;
				НоваяСтрока.РасчетныйДокумент=Ссылка;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
 
Процедура ДвижениеПоРегистру_УчетНДС(СтруктураШД, СтруктураТД, Отказ)
	Если Оплачено И ДенежныеСредстваСервер.ЕстьВзаиморасчеты(ВидОперации) Тогда
		УчетНДС.ДвижениеДенежныхСредств(ЭтотОбъект);
	КонецЕсли;	
КонецПроцедуры
 
Процедура ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ВзаиморасчетыСКонтрагентами") Тогда Возврат; КонецЕсли;

	Если Оплачено И ДенежныеСредстваСервер.ЕстьВзаиморасчеты(ВидОперации) Тогда
		тзДвижения=СтруктураТД.Взаиморасчеты.Скопировать();

		//доп.движения по регистру
		Если ВидОперации=Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПоступлениеОплатыПоПлатежнымКартам И СуммаУслуг <> 0 Тогда
			РасчетыВозврат=ДенежныеСредстваСервер.НаправленияДвижения(ВидОперации);
			КоэффициентСторно=?(РасчетыВозврат=Перечисления.РасчетыВозврат.Возврат, -1, 1);

			НоваяСтрока=тзДвижения.Добавить();
			НоваяСтрока.Период=Дата;
			НоваяСтрока.Активность=Истина;
			НоваяСтрока.Регистратор=Ссылка;
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления[?(КоэффициентСторно=1, "Расход", "Приход")];
			НоваяСтрока.ДоговорКонтрагента=РасшифровкаПлатежа[0].ДоговорКонтрагента;
			НоваяСтрока.Организация=Организация;
			НоваяСтрока.Контрагент=Контрагент;
			НоваяСтрока.СуммаВал=СуммаУслуг;

			Если НЕ СчетОрганизации.ВалютаДенежныхСредств=СтруктураШД.ВалютаРегламентированногоУчета Тогда
				СтруктураКурсов=МодульВалютногоУчета.КурсВалюты(СчетОрганизации.ВалютаДенежныхСредств, Дата);
				НоваяСтрока.СуммаВал=МодульВалютногоУчета.ПересчитатьБухВал(СуммаУслуг, СтруктураКурсов.Курс, СтруктураКурсов.Кратность);
			КонецЕсли;			
		КонецЕсли;
		Движения.ВзаиморасчетыСКонтрагентами.Загрузить(тзДвижения);
	КонецЕсли;
КонецПроцедуры
 
Процедура ДвижениеПоРегистру_Затраты(СтруктураШД, СтруктураТД, Отказ)
	Если Оплачено И ВидОперации=Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПоступлениеОплатыПоПлатежнымКартам Тогда
		ТаблицаЗатрат=ОбщегоНазначения.СформироватьТаблицуЗатрат();
		НоваяСтрока=ТаблицаЗатрат.Добавить();
		НоваяСтрока.Подразделение=СтруктураШД.ПодразделениеЗатраты;
		НоваяСтрока.СтатьяЗатрат=СтруктураШД.СтатьяЗатрат;
		НоваяСтрока.НоменклатурнаяГруппа=СтруктураШД.НоменклатурнаяГруппа;
		НоваяСтрока.Проект=СтруктураТД.РасшифровкаПлатежа[0].Проект;
		НоваяСтрока.Сумма=СтруктураШД.СуммаУслуг;

		ДопПараметры=Новый Структура;
		ДопПараметры.Вставить("Организация", Организация);
		ДопПараметры.Вставить("Контрагент", Контрагент);
		ОбщегоНазначения.ДвиженияПоПрочимЗатратамУпр(ЭтотОбъект, ТаблицаЗатрат, СтруктураШД, Неопределено, ДопПараметры);
	КонецЕсли;	
КонецПроцедуры

Процедура ДвижениеПоРегистру_ДенежныеСредства(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ Оплачено Тогда Возврат; КонецЕсли;

	НоваяСтрока=Движения.ДенежныеСредства.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭтотОбъект);
	НоваяСтрока.БанковскийСчетКасса=СчетОрганизации;
	НоваяСтрока.ВидДенежныхСредств=Перечисления.ВидыДенежныхСредств.Безналичные;
	НоваяСтрока.Период=СтруктураШД.ДатаДвижений;
	НоваяСтрока.Активность=Истина;
	НоваяСтрока.Регистратор=Ссылка;
	НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
	НоваяСтрока.Сумма=СтруктураТД.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	НоваяСтрока.СуммаУпр=СтруктураТД.РасшифровкаПлатежа.Итог("СуммаВал");
КонецПроцедуры

Процедура ДвижениеПоРегистру_ДвиженияДенежныхСредств(СтруктураШД, СтруктураТД, Отказ)
	тзДвижения=Движения.ДвиженияДенежныхСредств.ВыгрузитьКолонки();

	Для каждого СтрокаКоллекции Из СтруктураТД.Взаиморасчеты Цикл
		НоваяСтрока=тзДвижения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.Сумма=СтрокаКоллекции.СуммаБух;
		НоваяСтрока.СуммаУпр=СтрокаКоллекции.СуммаВал;
	КонецЦикла;

	тзДвижения.ЗаполнитьЗначения(СтруктураШД.ДатаДвижений, "Период");
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(Перечисления.ВидыДенежныхСредств.Безналичные, "ВидДенежныхСредств");
	тзДвижения.ЗаполнитьЗначения(Перечисления.ВидыДвиженийПриходРасход.Приход, "ПриходРасход");
	тзДвижения.ЗаполнитьЗначения(СчетОрганизации, "БанковскийСчетКасса");
	тзДвижения.ЗаполнитьЗначения(Организация, "Организация");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "ДокументДвижения");
	тзДвижения.ЗаполнитьЗначения(Контрагент, "Контрагент");
	тзДвижения.ЗаполнитьЗначения(Подразделение, "ЦФО");

	Движения.ДвиженияДенежныхСредств.Загрузить(тзДвижения);
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
// Проведение по регистрам (по нескольким регистрам одного типа)

Процедура ДвижениеПоРегистру_УчетВзаиморасчетов(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетДенежныхСведств(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_ДенежныеСредства(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_ДвиженияДенежныхСредств(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ОбработкаЗаполнения(Основание)
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание) Тогда Возврат; КонецЕсли; 
	ДенежныеСредстваСервер.ЗаполнитьПриходПоОснованию(ЭтотОбъект, Основание);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;
	СтруктураТД.Вставить("Взаиморасчеты", ВзаиморасчетыСервер.СформироватьТаблицуОплаты(СтруктураШД, СтруктураТД, ВидДвиженияНакопления.Расход, Движения.ВзаиморасчетыСКонтрагентами.ВыгрузитьКолонки(), Отказ, ДополнительныеСвойства.Заголовок));

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);
	
	Если Оплачено Тогда
		ПроверяемыеРеквизиты.Добавить("СчетОрганизации");
		ПроверяемыеРеквизиты.Добавить("СуммаДокумента");
		ПроверяемыеРеквизиты.Добавить("ДатаОплаты");
	КонецЕсли;
	
	Если ДенежныеСредстваСервер.ЕстьВзаиморасчеты(ВидОперации) Тогда
		ПроверяемыеРеквизиты.Добавить("РасшифровкаПлатежа.ДоговорКонтрагента");
	КонецЕсли;

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	//Формируем структуру шапки документа "СтруктураШД"
	СтруктураШД=УправлениеДокументамиСервер.СформироватьСтруктуруШД(ЭтотОбъект);
	СтруктураШД.Вставить("ДатаОплаты", ?(Оплачено, ДенежныеСредстваСервер.ПолучитьДатуДвижений(Дата, ДатаОплаты, Организация), Дата));	
	СтруктураШД.Вставить("ДатаДвижений", СтруктураШД.ДатаОплаты);

	//Формируем структуру таблиц документа "СтруктураТД"
	СтруктураТД=Новый Структура;
	СтруктураТД.Вставить("РасшифровкаПлатежа", ДенежныеСредстваСервер.СформироватьТаблицуПлатежей(ЭтотОбъект, Отказ, Заголовок));
	СтруктураТД.Вставить("ОплачиваемыеДокументы", ОплачиваемыеДокументы.Выгрузить());

	ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);