////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("Ведомость"         , "Инвентаризация товаров на складе");
	Структура.Вставить("ИНВ3"              , "ИНВ-3 (Инвентаризационная опись товаров)");
	Структура.Вставить("ИНВ3_БезФактДанных", "ИНВ-3 (Инвентаризационная опись с пустыми фактическими данными)");
	Структура.Вставить("ИНВ19"             , "ИНВ-19 (Сличительная ведомость)");
	Структура.Вставить("Бланк"             , "Бланк товарного наполнения");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция ПолучитьДанныеДляПечатиДокумента(СсылкаНаОбъект) Экспорт
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ТекстКодАртикул=?(Колонка="", "Код", Колонка); 
	
	ПараметрыПечати=Новый Структура;
	ПараметрыПечати.Вставить("ВыводитьКоды", Не ПустаяСтрока(Колонка));
	ПараметрыПечати.Вставить("ИмяКолонкиКодов", Колонка);

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВидСкладаРозничный",    Перечисления.ВидыСкладов.Розничный);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	Организация,
	|	Склад.Представление КАК ПредставлениеСклада,
	|	Организация,
	|	Склад,
	|	Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Номенклатура."+ ТекстКодАртикул + " КАК КодАртикул,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Количество                      КАК Количество,
	|		КоличествоУчет                  КАК КоличествоПоУчету,
	|		ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмерения,
	|		ВЫБОР
	|			КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА ЦенаВРознице
	|			ИНАЧЕ Цена
	|		КОНЕЦ КАК Цена,
	|		ВЫБОР
	|			КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА Количество * ЦенаВРознице
	|			ИНАЧЕ Сумма
	|		КОНЕЦ КАК Сумма,
	|		ВЫБОР
	|			КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА КоличествоУчет *ЦенаВРознице
	|			ИНАЧЕ СуммаУчет
	|		КОНЕЦ КАК СуммаПоУчету,
	|		ХарактеристикаНоменклатуры      КАК Характеристика,
	|		СерияНоменклатуры               КАК Серия
	|	)
	|ИЗ
	|	Документ.ИнвентаризацияТМЦ КАК ИнвентаризацияТМЦ
	|
	|ГДЕ
	|	ИнвентаризацияТМЦ.Ссылка = &ТекущийДокумент
	|УПОРЯДОЧИТЬ ПО ИнвентаризацияТМЦ.Товары.Номенклатура.Наименование";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ВалютаПечати = МодульВалютногоУчета.ПолучитьВалюту("Бух");

	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();

	// Выводим шапку накладной
	ПараметрыПечати.Вставить("ТекстЗаголовка", ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Инвентаризация товаров на складе"));

	// Выводим данные об организации и складе
	ПараметрыПечати.Вставить("ПредставлениеОрганизации", ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ПолноеНаименование,"));
	ПараметрыПечати.Вставить("ПредставлениеСклада", Шапка.ПредставлениеСклада);
	ПараметрыПечати.Вставить("ВалютаНаименование", СокрЛП(ВалютаПечати));
	ПараметрыПечати.Вставить("Валюта", ВалютаПечати);
	
	Позиции = Новый Массив;
	
	ИтогСуммы        = 0;
	ИтогСуммыПоУчету = 0;

	Пока ВыборкаСтрокТовары.Следующий() Цикл
		ПараметрыПозиции=Новый Структура;
		ПараметрыПозиции.Вставить("Номенклатура", ВыборкаСтрокТовары.Номенклатура);		
        ПараметрыПозиции.Вставить("НомерСтроки", ВыборкаСтрокТовары.НомерСтроки);		
		ПараметрыПозиции.Вставить("Товар", ВыборкаСтрокТовары.Товар + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары));
		ПараметрыПозиции.Вставить("Количество", ВыборкаСтрокТовары.Количество);
		ПараметрыПозиции.Вставить("КоличествоПоУчету", ВыборкаСтрокТовары.КоличествоПоУчету);
		ПараметрыПозиции.Вставить("ЕдиницаИзмерения", ВыборкаСтрокТовары.ЕдиницаИзмерения);
		ПараметрыПозиции.Вставить("Цена", ВыборкаСтрокТовары.Цена);
		ПараметрыПозиции.Вставить("Сумма", ВыборкаСтрокТовары.Сумма);
		ПараметрыПозиции.Вставить("СуммаПоУчету", ВыборкаСтрокТовары.СуммаПоУчету);

		Если ПараметрыПечати.ВыводитьКоды Тогда
			ПараметрыПозиции.Вставить("КодАртикул", ВыборкаСтрокТовары.КодАртикул);
		КонецЕсли;

		ИтогСуммы        = ИтогСуммы        + ВыборкаСтрокТовары.Сумма;
		ИтогСуммыПоУчету = ИтогСуммыПоУчету + ВыборкаСтрокТовары.СуммаПоУчету;

		Позиции.Добавить(ПараметрыПозиции);
	КонецЦикла;
	
	ПараметрыПечати.Вставить("Позиции", Позиции);

	// Вывести Итого
	ПараметрыПечати.Вставить("Всего", ОбщегоНазначения.ФорматСумм(ИтогСуммы));
	ПараметрыПечати.Вставить("ВсегоПоУчету", ОбщегоНазначения.ФорматСумм(ИтогСуммыПоУчету));	

	Возврат ПараметрыПечати;	
КонецФункции

Функция ДанныеФизЛица(Организация, ФизЛицо, ДатаСреза, ФИОКратко = Истина) 
	Запрос=Новый Запрос();
	Запрос.УстановитьПараметр("ДатаСреза",   ДатаСреза);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	РаботникиОрганизаций.ТабельныйНомер,
	|	РаботникиОрганизаций.Должность,
	|	РаботникиОрганизаций.ПодразделениеОрганизации,
	|	ПаспортныеДанные.ДокументВид,
	|	ПаспортныеДанные.ДокументСерия,
	|	ПаспортныеДанные.ДокументНомер,
	|	ПаспортныеДанные.ДокументДатаВыдачи,
	|	ПаспортныеДанные.ДокументКемВыдан,
	|	ПаспортныеДанные.ДокументКодПодразделения
	|ИЗ
	|	(ВЫБРАТЬ Ссылка КАК ФизЛицо ИЗ Справочник.ФизическиеЛица ГДЕ Ссылка = &ФизЛицо) КАК ФизЛица
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаСреза, ФизЛицо = &ФизЛицо) КАК ФИО
	|	ПО ФизЛица.ФизЛицо = ФИО.ФизЛицо
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&ДатаСреза, ФизЛицо = &ФизЛицо) КАК ПаспортныеДанные
	|	ПО ФизЛица.ФизЛицо = ПаспортныеДанные.ФизЛицо
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		(ВЫБРАТЬ 
	|			РаботникиОрганизаций.ТабНомер КАК ТабельныйНомер,
	|			РаботникиОрганизаций.Сотрудник КАК ФизЛицо,
	|			РаботникиОрганизаций.Должность КАК Должность,
	|			РаботникиОрганизаций.Подразделение КАК ПодразделениеОрганизации
	|		ИЗ
	|			РегистрСведений.КадровыеСведения.СрезПоследних(&ДатаСреза,	Сотрудник = &ФизЛицо И Организация = &Организация) КАК РаботникиОрганизаций
	|		) КАК РаботникиОрганизаций
	|	ПО ФизЛица.ФизЛицо = РаботникиОрганизаций.Физлицо
	|";
	
	Данные=Запрос.Выполнить().Выбрать();
	Данные.Следующий();
	
	Результат=Новый Структура("Фамилия, Имя, Отчество, Представление, 
								|ТабельныйНомер, Должность, ПодразделениеОрганизации, 
								|ДокументВид, ДокументСерия, ДокументНомер,  
								|ДокументДатаВыдачи, ДокументКемВыдан, ДокументКодПодразделения, 
								|ПредставлениеДокумента");

	ЗаполнитьЗначенияСвойств(Результат, Данные);
	Результат.Представление=ОбщегоНазначения.ПолучитьФамилиюИмяОтчество(Данные.Фамилия, Данные.Имя, Данные.Отчество, ФИОКратко);
	
	Возврат Результат;	
КонецФункции

Функция ПолучитьРеквизитыШапки(СсылкаНаОбъект)
	Запрос=Новый Запрос;
	Запрос.Параметры.Вставить("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Дата,
	|	СчетУчета,
	|	Товары.*,
	|	Склад
	|ИЗ
	|	Документ.ИнвентаризацияТМЦ КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент
	|";
	              
	РеквизитыШапки=Запрос.Выполнить().Выбрать();
	РеквизитыШапки.Следующий();

	Возврат РеквизитыШапки;
КонецФункции 	

Функция Печать_Документа(СтруктураПараметров, ТабДокумент=Неопределено)
	ПараметрыПечати=ПолучитьДанныеДляПечатиДокумента(СтруктураПараметров.СсылкаНаОбъект);

	Если СтруктураПараметров.Свойство("ПараметрыПечати") Тогда
		Возврат ПараметрыПечати;
	КонецЕсли;

	Если СтруктураПараметров.Свойство("ВыполняемыйМодуль") Тогда
		Если Не ПустаяСтрока(СтруктураПараметров.ВыполняемыйМодуль) Тогда
			Выполнить(СтруктураПараметров.ВыполняемыйМодуль);
		КонецЕсли;
	КонецЕсли;

	Если ПараметрыПечати.ВыводитьКоды Тогда
		ОбластьШапки  = "ШапкаСКодом";
		ОбластьСтроки = "СтрокаСКодом";
	Иначе
		ОбластьШапки  = "ШапкаТаблицы";
		ОбластьСтроки = "Строка";
	Конецесли;

	Если ТабДокумент=Неопределено Тогда
		ТабДокумент=Новый ТабличныйДокумент;
	КонецЕсли; 

	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТМЦ_ИнвентаризацияТМЦ";

	Макет=ИнициализацияМакета(СтруктураПараметров, "ИнвентаризацияТМЦ");

	// Выводим шапку накладной
	ОбластьМакета=Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим данные об организации и складе
	ОбластьМакета=Макет.ПолучитьОбласть("Поставщик");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим шапку таблицы
	ОбластьМакета=Макет.ПолучитьОбласть(ОбластьШапки);
	Если ПараметрыПечати.ВыводитьКоды Тогда
		ОбластьМакета.Параметры.Колонка=ПараметрыПечати.ИмяКолонкиКодов;
	КонецЕсли;
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета=Макет.ПолучитьОбласть(ОбластьСтроки);
	Для каждого ПараметрыПозиции Из ПараметрыПечати.Позиции Цикл
		ОбластьМакета.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	// Вывести Итого
	ОбластьМакета=Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим подписи к документу
	ОбластьМакета=Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;
КонецФункции

Функция Печать_ИНВ3(СтруктураПараметров, БезФактическихДанных=Ложь, ТабДокумент=Неопределено)
	ДанныеДокумента=ПолучитьРеквизитыШапки(СтруктураПараметров.СсылкаНаОбъект);
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ТоварКод=?(Колонка="", "Код", Колонка);

	//ВалютаПересчета = МодульВалютногоУчета.ПолучитьВалюту("Бух");
	ВалютаПечати = МодульВалютногоУчета.ПолучитьВалюту("Бух");
	//Параметры    = МодульВалютногоУчета.КурсВалюты(ВалютаПересчета, ДанныеДокумента.Дата);
	Параметры=ВалютныйУчетСервер.КурсВалюты(ДанныеДокумента.Дата);
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент",      СтруктураПараметров.СсылкаНаОбъект);
	Запрос.УстановитьПараметр("Курс",                 Параметры.Курс);
	Запрос.УстановитьПараметр("Кратность",            Параметры.Кратность);
	Запрос.УстановитьПараметр("ВидСкладаРозничный",   Перечисления.ВидыСкладов.Розничный);
	Запрос.УстановитьПараметр("БезФактическихДанных", БезФактическихДанных);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Номер КАК НомерДокумента,
	|	Дата  КАК ДатаДокумента,
	|	Дата  КАК ДатаСнятияОстатков,
	|	ОснованиеДата КАК ОснованиеДата,
	|	ОснованиеНомер КАК ОснованиеНомер,
	|	ДатаНачалаИнвентаризации  КАК ДатаНачалаИнвентаризации,
	|	ДатаКонцаИнвентаризации  КАК ДатаКонцаИнвентаризации,
	|	Организация,
	|	Подразделение,
	|	Склад,
	|	Склад.Представление КАК ПредставлениеСклада,
	|	Товары.(
	|		НомерСтроки                     КАК Номер,
	|		СчетУчета КАК СубСчет,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|		Номенклатура."+ТоварКод+" КАК ТоварКод,
	|		ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмеренияНаименование,
	|		ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		ВЫБОР
	|			КОГДА &БезФактическихДанных ТОГДА 0
	|			ИНАЧЕ Количество
	|		КОНЕЦ КАК ФактКоличество,
	|		КоличествоУчет КАК БухКоличество,
	|		ВЫБОР
	|			КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА ЦенаВРознице
	|			ИНАЧЕ Цена * &Курс / &Кратность
	|		КОНЕЦ КАК Цена,
	|		ВЫБОР
	|			КОГДА &БезФактическихДанных ТОГДА 0
	|			ИНАЧЕ ВЫБОР КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА Количество * ЦенаВРознице ИНАЧЕ Сумма * &Курс / &Кратность КОНЕЦ
	|		КОНЕЦ КАК ФактСумма,
	|		ВЫБОР
	|			КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА КоличествоУчет * ЦенаВРознице
	|			ИНАЧЕ СуммаУчет * &Курс / &Кратность
	|		КОНЕЦ КАК БухСумма,
	|		ХарактеристикаНоменклатуры КАК Характеристика,
	|		СерияНоменклатуры КАК Серия
	|	)
	|ИЗ
	|	Документ.ИнвентаризацияТМЦ КАК ИнвентаризацияТМЦ
	|
	|ГДЕ
	|	ИнвентаризацияТМЦ.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО	
	|	ИнвентаризацияТМЦ.Товары.НомерСтроки
	|";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары=Шапка.Товары.Выбрать();
	
	Если ТабДокумент=Неопределено Тогда
		ТабДокумент=Новый ТабличныйДокумент;
	КонецЕсли; 

	ТабДокумент.ИмяПараметровПечати="ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТМЦ_ИНВ3";
	Макет=ИнициализацияМакета(СтруктураПараметров, "ИНВ3");

	СведенияОбОрганизации=КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	
	ФИОМОЛ=""; ДолжностьМОЛ="";
	Если ЗначениеЗаполнено(Шапка.Склад) Тогда
		тзДанные=РегистрыСведений.ОтветственныеЛица.СрезПоследних(Шапка.ДатаДокумента,Новый Структура("СтруктурнаяЕдиница", Шапка.Склад));
		Если НЕ тзДанные.Количество()=0 Тогда
			ФИОМОЛ=УправлениеКонфигурациейСервер.ФИО(тзДанные[0].ФизическоеЛицо,,Истина);
			//тзДанныеДолжность=РегистрыСведений.КадровыеСведения.СрезПоследних(Шапка.ДатаДокумента,Новый Структура("Сотрудник,Организация", тзДанные[0].ФизическоеЛицо,Шапка.Организация));
			//Если НЕ тзДанныеДолжность.Количество()=0 Тогда
			//	тзДанныеДолжность.Сортировать("Период Убыв");
			//	ДолжностьМОЛ=тзДанныеДолжность[0].Должность;
			//КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	ПараметрыПечати=Новый Структура;
	ПараметрыПечати.Вставить("ПредставлениеОрганизации", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации));
	ПараметрыПечати.Вставить("ОрганизацияПоОКПО", СведенияОбОрганизации.КодПоОКПО);
	ПараметрыПечати.Вставить("Подразделение", Шапка.Подразделение);
	ПараметрыПечати.Вставить("ДатаДокумента", Шапка.ДатаДокумента);
	ПараметрыПечати.Вставить("ДатаСнятияОстатков", Шапка.ДатаСнятияОстатков);
	ПараметрыПечати.Вставить("НомерДокумента", ОбщегоНазначенияСервер.НомерНаПечать(СтруктураПараметров.СсылкаНаОбъект));
	ПараметрыПечати.Вставить("ОснованиеНомер", Шапка.ОснованиеНомер);
	ПараметрыПечати.Вставить("ОснованиеДата", Шапка.ОснованиеДата);
	ПараметрыПечати.Вставить("ДатаНачала", Шапка.ДатаНачалаИнвентаризации);
	ПараметрыПечати.Вставить("ДатаОкончания", Шапка.ДатаКонцаИнвентаризации);
	ПараметрыПечати.Вставить("ФИОМОЛ1", ФИОМОЛ);
	ПараметрыПечати.Вставить("ДолжностьМОЛ1", ДолжностьМОЛ);
	
	//ПараметрыПечати.Вставить("", );
	//ПараметрыПечати.Вставить("", );

	Если СтруктураПараметров.Свойство("ПараметрыПечати") Тогда
		Возврат ПараметрыПечати;
	КонецЕсли;

	Если СтруктураПараметров.Свойство("ВыполняемыйМодуль") Тогда
		Если Не ПустаяСтрока(СтруктураПараметров.ВыполняемыйМодуль) Тогда
			Выполнить(СтруктураПараметров.ВыполняемыйМодуль);
		КонецЕсли;
	КонецЕсли;

	// Выводим шапку накладной
	ОбластьМакета=Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	СтрокНаСтранице = 19;
	СтрокШапки      = 5;
	СтрокПодвала    = 5;
	НомерСтраницы   = 2;
	Ном             = 0;

	ИтогФактКоличество = 0;
	ИтогФактСумма      = 0;
	ИтогБухКоличество  = 0;
	ИтогБухСумма       = 0;

	КолвоСтрокПоСтранице = 0;
	КолвоПостранице      = 0;
	СуммаЛиста           = 0;
	ИтогоКолво           = 0;
	ИтогоСумма           = 0;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы=Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы="Страница "+НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	КоличествоСтрок=ВыборкаСтрокТовары.Количество();

	Если КоличествоСтрок=1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// Выводим многострочную часть докмента
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда

			ОбластьИтоговПоСтранице                               = Макет.ПолучитьОбласть("ПодвалСтраницы");
			ОбластьИтоговПоСтранице.Параметры.ИтогоФактКоличество = ИтогФактКоличество;
			ОбластьИтоговПоСтранице.Параметры.ИтогоФактСумма      = ИтогФактСумма;
			ОбластьИтоговПоСтранице.Параметры.ИтогоБухКоличество  = ИтогБухКоличество;
			ОбластьИтоговПоСтранице.Параметры.ИтогоБухСумма       = ИтогБухСумма;

			ОбластьИтоговПоСтранице.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
			Если НЕ БезФактическихДанных Тогда
				ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ПечатныеФормыСервер.КоличествоПрописью(КолвоПостранице);
				ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью                 = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);
			КонецЕсли;
			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);

			ИтогФактКоличество = 0;
			ИтогФактСумма      = 0;
			ИтогБухКоличество  = 0;
			ИтогБухСумма       = 0;

			КолвоСтрокПоСтранице = 0;
			КолвоПостранице      = 0;
			СуммаЛиста           = 0;

		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.Номер   = Ном;
//		ОбластьМакета.Параметры.СубСчет = ДанныеДокумента.СчетУчета;

		ТабДокумент.Вывести(ОбластьМакета);

		ИтогФактКоличество = ИтогФактКоличество + ВыборкаСтрокТовары.ФактКоличество;
		ИтогФактСумма      = ИтогФактСумма      + ВыборкаСтрокТовары.ФактСумма;
		ИтогБухКоличество  = ИтогБухКоличество  + ВыборкаСтрокТовары.БухКоличество;
		ИтогБухСумма       = ИтогБухСумма       + ВыборкаСтрокТовары.БухСумма;
		ИтогоКолво         = ИтогоКолво         + ВыборкаСтрокТовары.ФактКоличество;
		ИтогоСумма         = ИтогоСумма         + ВыборкаСтрокТовары.ФактСумма;

		КолвоСтрокПоСтранице = КолвоСтрокПоСтранице + 1;
		КолвоПостранице      = КолвоПостранице      + ВыборкаСтрокТовары.ФактКоличество;
		СуммаЛиста           = СуммаЛиста           + ВыборкаСтрокТовары.ФактСумма;

	КонецЦикла;

	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице=Макет.ПолучитьОбласть("ПодвалСтраницыПоследняя");
	ОбластьИтоговПоСтранице.Параметры.ИтогоФактКоличество  = ИтогФактКоличество;
	ОбластьИтоговПоСтранице.Параметры.ИтогоФактСумма       = ИтогФактСумма;
	ОбластьИтоговПоСтранице.Параметры.ИтогоБухКоличество   = ИтогБухКоличество;
	ОбластьИтоговПоСтранице.Параметры.ИтогоБухСумма        = ИтогБухСумма;
	ОбластьИтоговПоСтранице.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
	Если НЕ БезФактическихДанных Тогда
		ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ПечатныеФормыСервер.КоличествоПрописью(КолвоПостранице);
		ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью                 = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);
	КонецЕсли;
	
	тзТовары=ДанныеДокумента.Товары.Выгрузить();
	ОбластьИтоговПоСтранице.Параметры.ИтогоФактКоличествоПоОписи = тзТовары.Итог("Количество");
	ОбластьИтоговПоСтранице.Параметры.ИтогоФактСуммаПоОписи      = тзТовары.Итог("Сумма");
	ОбластьИтоговПоСтранице.Параметры.ИтогоБухКоличествоПоОписи  = тзТовары.Итог("КоличествоУчет");
	ОбластьИтоговПоСтранице.Параметры.ИтогоБухСуммаПоОписи       = тзТовары.Итог("СуммаУчет");
	
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

	// Выводим подвал документа
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ОбластьМакета=Макет.ПолучитьОбласть("ПодвалОписи");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.НачальныйНомерПоПорядку = 1;
	ОбластьМакета.Параметры.НомерКонца=ВыборкаСтрокТовары.Количество();
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = ЧислоПрописью(ВыборкаСтрокТовары.Количество(), ,",,,,,,,,0");
	Если НЕ БезФактическихДанных Тогда
		ОбластьМакета.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью=ПечатныеФормыСервер.КоличествоПрописью(ИтогоКолво);
		ОбластьМакета.Параметры.СуммаФактическиНаСтраницеПрописью=ОбщегоНазначения.СформироватьСуммуПрописью(ИтогоСумма, ВалютаПечати);
	КонецЕсли;
		
	Запрос=Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.ФизЛицо КАК ФизЛицо,
	|	ИсточникДанных.Председатель КАК Председатель
	|ИЗ
	|	Документ.ИнвентаризацияТМЦ.ИнвентаризационнаяКомиссия КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсточникДанных.НомерСтроки
	|";	
	ТаблицаИнвентаризационнаяКомиссия=Запрос.Выполнить().Выгрузить();
	Если ТаблицаИнвентаризационнаяКомиссия.Количество()=0 Тогда
		Руководители=ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(Шапка.Организация,Шапка.ДатаДокумента, СтруктураПараметров.СсылкаНаОбъект);
		
		ОбластьМакета.Параметры.ФИОПредседателя=Руководители.ПредседательКомиссии;
		ОбластьМакета.Параметры.ФИОЧленаКомиссии2=Руководители.ЧленКомиссии1;
		ОбластьМакета.Параметры.ФИОЧленаКомиссии3=Руководители.ЧленКомиссии2;
		ОбластьМакета.Параметры.ФИОЧленаКомиссии4=Руководители.ЧленКомиссии3;
		
		ОбластьМакета.Параметры.ДолжностьПредседателя=Руководители.ПредседательКомиссииДолжность;
		ОбластьМакета.Параметры.ДолжностьЧленаКомиссии2=Руководители.ЧленКомиссииДолжность1;
		ОбластьМакета.Параметры.ДолжностьЧленаКомиссии3=Руководители.ЧленКомиссииДолжность2;
		ОбластьМакета.Параметры.ДолжностьЧленаКомиссии4=Руководители.ЧленКомиссииДолжность3;
	Иначе
		КоличествоЧленовКомиссии=1;
		Для Каждого ЧленКомиссии Из ТаблицаИнвентаризационнаяКомиссия Цикл
			Если КоличествоЧленовКомиссии=4 Тогда Прервать;	КонецЕсли; //Не должно быть больше 4 членов комиссии
			ДанныеЧленаКомиссии=ДанныеФизЛица(Шапка.Организация, ЧленКомиссии.ФизЛицо, ДанныеДокумента.Дата);
			Если ЧленКомиссии.Председатель Тогда
				ОбластьМакета.Параметры.ДолжностьПредседателя=ДанныеЧленаКомиссии.Должность;
				ОбластьМакета.Параметры.ФИОПредседателя=ДанныеЧленаКомиссии.Представление;
				Продолжить;
			КонецЕсли;
			КоличествоЧленовКомиссии=КоличествоЧленовКомиссии+1;
			ОбластьМакета.Параметры["ДолжностьЧленаКомиссии"+КоличествоЧленовКомиссии]=ДанныеЧленаКомиссии.Должность;
			ОбластьМакета.Параметры["ФИОЧленаКомиссии"+КоличествоЧленовКомиссии] = ДанныеЧленаКомиссии.Представление;
		КонецЦикла;
	КонецЕсли;	
	ОбластьМакета.Параметры.ФИОМОЛ1=ФИОМОЛ;
	ОбластьМакета.Параметры.ДолжностьМОЛ1=ДолжностьМОЛ;

	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;

КонецФункции

Функция Печать_ИНВ19(СтруктураПараметров, ТабДокумент=Неопределено)

	ДанныеДокумента=ПолучитьРеквизитыШапки(СтруктураПараметров.СсылкаНаОбъект);
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ТоварКод=?(Колонка="","Код",Колонка);

	ВалютаПересчета = МодульВалютногоУчета.ПолучитьВалюту("Бух");

	ВалютаПечати = МодульВалютногоУчета.ПолучитьВалюту("Бух");
	Параметры    = МодульВалютногоУчета.КурсВалюты(ВалютаПересчета, ДанныеДокумента.Дата);
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.УстановитьПараметр("Курс",            Параметры.Курс);
	Запрос.УстановитьПараметр("Кратность",       Параметры.Кратность);
	Запрос.УстановитьПараметр("ВидСкладаРозничный", Перечисления.ВидыСкладов.Розничный);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Номер  КАК НомерДокумента,
	|	Дата   КАК ДатаДокумента,
	|	Дата   КАК ДатаНачалаИнвентаризации,
	|	Организация КАК Руководители,
	|	Организация,
	|	Склад.Представление КАК ПредставлениеСклада,
	|	Товары.(
	|		НомерСтроки КАК Номер,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|		Номенклатура." + ТоварКод + "   КАК ТоварКод,
	|		ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмеренияНаименование,
	|		ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		Количество                     КАК ФактКоличество,
	|		КоличествоУчет                 КАК БухКоличество,
	|		ВЫБОР
	|			КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА ЦенаВРознице
	|			ИНАЧЕ Цена * &Курс / &Кратность
	|		КОНЕЦ КАК Цена,
	|		ВЫБОР
	|			КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА Количество * ЦенаВРознице
	|			ИНАЧЕ Сумма * &Курс / &Кратность
	|		КОНЕЦ КАК ФактСумма,
	|		ВЫБОР
	|			КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА КоличествоУчет *ЦенаВРознице
	|			ИНАЧЕ СуммаУчет * &Курс / &Кратность
	|		КОНЕЦ КАК БухСумма,
	|		ХарактеристикаНоменклатуры     КАК Характеристика,
	|		СерияНоменклатуры КАК Серия
	|	)
	|ИЗ
	|	Документ.ИнвентаризацияТМЦ КАК ИнвентаризацияТМЦ
	|
	|ГДЕ
	|	ИнвентаризацияТМЦ.Ссылка = &ТекущийДокумент
	|";

	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();

	Если ТабДокумент=Неопределено Тогда
		ТабДокумент=Новый ТабличныйДокумент;
	КонецЕсли; 
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТМЦ_ИНВ19";
	Макет=ИнициализацияМакета(СтруктураПараметров, "ИНВ19");

	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
	ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.ДатаНачалаИнвентаризации = Шапка.ДатаНачалаИнвентаризации;
	ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначенияСервер.НомерНаПечать(СтруктураПараметров.СсылкаНаОбъект);

	Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента, СтруктураПараметров.СсылкаНаОбъект);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;

	ТабДокумент.Вывести(ОбластьМакета);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	Ном             = 0;
	НомерСтраницы   = 2;

	ИтогоРезультатИзлишекКолво   = 0;
	ИтогоРезультатИзлишекСумма   = 0;
	ИтогоРезультатНедостачаКолво = 0;
	ИтогоРезультатНедостачаСумма = 0;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы1");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	КоличествоСтрок = ВыборкаСтрокТовары.Количество();

	// Выводим многострочную часть докмента
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	// Выводим многострочную часть докмента
	ОбластьМакета           = Макет.ПолучитьОбласть("СтрокаТаблицы1");
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоТаблицы1");
	ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		МассивВыводимыхОбластей.Очистить();
		МассивВыводимыхОбластей.Добавить(ОбластьМакета);
		МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
		Если Ном = КоличествоСтрок Тогда
			МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		КонецЕсли;		
		
		Если НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары);

		Разница     = 0;
		РазницаСумм = 0;

		Разница     = ВыборкаСтрокТовары.ФактКоличество - ВыборкаСтрокТовары.БухКоличество;
		РазницаСумм = ВыборкаСтрокТовары.ФактСумма      - ВыборкаСтрокТовары.БухСумма;
		Если Разница = 0 Тогда Продолжить; КонецЕсли;

		Если Разница < 0 И РазницаСумм < 0 Тогда
			ОбластьМакета.Параметры.РезультатНедостачаКолво = - Разница;
			ОбластьМакета.Параметры.РезультатНедостачаСумма = - РазницаСумм;
			ОбластьМакета.Параметры.РезультатИзлишекКолво   = 0;
			ОбластьМакета.Параметры.РезультатИзлишекСумма   = 0;

			ИтогоРезультатНедостачаКолво = ИтогоРезультатНедостачаКолво + (- Разница);
			ИтогоРезультатНедостачаСумма = ИтогоРезультатНедостачаСумма + (- РазницаСумм);
			ИтогоРезультатИзлишекКолво   = ИтогоРезультатИзлишекКолво   + 0;
			ИтогоРезультатИзлишекСумма   = ИтогоРезультатИзлишекСумма   + 0;
		ИначеЕсли Разница < 0 И РазницаСумм >= 0 Тогда
			ОбластьМакета.Параметры.РезультатНедостачаКолво = - Разница;
			ОбластьМакета.Параметры.РезультатНедостачаСумма = РазницаСумм;
			ОбластьМакета.Параметры.РезультатИзлишекКолво   = 0;
			ОбластьМакета.Параметры.РезультатИзлишекСумма   = 0;

			ИтогоРезультатНедостачаКолво = ИтогоРезультатНедостачаКолво + (- Разница);
			ИтогоРезультатНедостачаСумма = ИтогоРезультатНедостачаСумма + РазницаСумм;
			ИтогоРезультатИзлишекКолво   = ИтогоРезультатИзлишекКолво   + 0;
			ИтогоРезультатИзлишекСумма   = ИтогоРезультатИзлишекСумма   + 0;
		Иначе
			ОбластьМакета.Параметры.РезультатНедостачаКолво = 0;
			ОбластьМакета.Параметры.РезультатНедостачаСумма = 0;
			ОбластьМакета.Параметры.РезультатИзлишекКолво   = Разница;
			ОбластьМакета.Параметры.РезультатИзлишекСумма   = РазницаСумм;

			ИтогоРезультатНедостачаКолво = ИтогоРезультатНедостачаКолво + 0;
			ИтогоРезультатНедостачаСумма = ИтогоРезультатНедостачаСумма + 0;
			ИтогоРезультатИзлишекКолво   = ИтогоРезультатИзлишекКолво   + Разница;
			ИтогоРезультатИзлишекСумма   = ИтогоРезультатИзлишекСумма   + РазницаСумм;
		КонецЕсли;

		ТабДокумент.Вывести(ОбластьМакета);

		Ном = Ном + 1;

	КонецЦикла;

	ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатИзлишекКолво   = ИтогоРезультатИзлишекКолво;
	ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатИзлишекСумма   = ИтогоРезультатИзлишекСумма;
	ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатНедостачаКолво = ИтогоРезультатНедостачаКолво;
	ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатНедостачаСумма = ИтогоРезультатНедостачаСумма;
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

	ОбластьМакета=Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.ФИОБухгалтера =  Бухгалтер;
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
    	
	Возврат ТабДокумент;
КонецФункции

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	Если СтруктураПараметров.ИмяМакета="Ведомость" Тогда
		ТабДокумент=Печать_Документа(СтруктураПараметров, ТабДокумент);

	ИначеЕсли СтруктураПараметров.ИмяМакета="ИНВ3" тогда
		ТабДокумент=Печать_ИНВ3(СтруктураПараметров, Ложь, ТабДокумент);

	ИначеЕсли СтруктураПараметров.ИмяМакета="ИНВ3_БезФактДанных" тогда
		ТабДокумент=Печать_ИНВ3(СтруктураПараметров, Истина, ТабДокумент);

	ИначеЕсли СтруктураПараметров.ИмяМакета="ИНВ19" тогда
		ТабДокумент=Печать_ИНВ19(СтруктураПараметров, ТабДокумент);

	ИначеЕсли СтруктураПараметров.ИмяМакета="Бланк" Тогда
		ТабДокумент="БланкТоварногоНаполнения";
		//ТабДокумент=Печать_Бланк(СтруктураПараметров, НаПринтер);
	КонецЕсли;

	Возврат ТабДокумент;
КонецФункции
