&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	УправлениеДиалогамиКлиент.ВыполнитьДействие(Команда.Имя, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРеквизитыФормы(стрРеквизиты)
	МассивРеквизитов=СтрРазделить(стрРеквизиты, ",");
	Для каждого ИмяРеквизита Из МассивРеквизитов Цикл
		Если ИмяРеквизита="УчетнаяПолитика" Тогда
			УчетнаяПолитика=ОбщегоНазначенияСервер.ПараметрыУчетнойПолитики(Объект.Организация, Объект.Дата);
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьНалоговыйПериод()
	Если УчетнаяПолитика.НДСНалоговыйПериод=ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		Объект.КонецПериода=КонецКвартала(Объект.Дата);
	Иначе
		Объект.КонецПериода=КонецКвартала(Объект.Дата);
	КонецЕсли;
	Элементы.НалоговыйПериод.Заголовок = "Налоговый период: " + ПредставлениеПериода(НачалоДня(Объект.НачалоПериода), КонецДня(Объект.КонецПериода), "ФП = Истина");;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.СтатьяЗатратНДС.АвтоОтметкаНезаполненного=Не( Объект.ВыручкаБезНДС = 0) или не Объект.СоставКосвенныхРасходов.Итог("БезНДС") = 0;
	Если не Элементы.СтатьяЗатратНДС.АвтоОтметкаНезаполненного и Элементы.СтатьяЗатратНДС.ОтметкаНезаполненного Тогда
		Элементы.СтатьяЗатратНДС.ОтметкаНезаполненного=Ложь;
	КонецЕсли; 
	
	Элементы.СтатьяЗатратНДСприЕНВД.АвтоОтметкаНезаполненного=Не( Объект.ВыручкаЕНВД = 0) или не Объект.СоставКосвенныхРасходов.Итог("ЕНВДНДС") = 0;
	Если не Элементы.СтатьяЗатратНДСприЕНВД.АвтоОтметкаНезаполненного и Элементы.СтатьяЗатратНДСприЕНВД.ОтметкаНезаполненного Тогда
		Элементы.СтатьяЗатратНДСприЕНВД.ОтметкаНезаполненного=Ложь;
	КонецЕсли; 
	
	Элементы.кпСоставКосвенныхРасходов_ЗаполнитьПоСчету.Доступность=Не ТолькоПросмотр;

	ВидимостьСчетовСписанияБУ=Объект.ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат;
	Элементы.СчетСписанияНДС.Видимость=ВидимостьСчетовСписанияБУ;
	Элементы.ГруппаСчетСписанияНДС.Видимость=ВидимостьСчетовСписанияБУ;
	Элементы.СубконтоПодразделение.Видимость=ВидимостьСчетовСписанияБУ;

	//Видимость субконто счета списания НДС	
	УстановитьВидимостьСубконто(ВидимостьСчетовСписанияБУ);
Конецпроцедуры

&НаСервере
Процедура УстановитьВидимостьСубконто(ВидимостьСчетовСписанияБУ)
	ВидыСубконтоСчета=Объект.СчетСписанияНДС.ВидыСубконто;
	КоличествоСубконто=ВидыСубконтоСчета.Количество();
	Для ъ=1 по 3 Цикл
		Если ВидимостьСчетовСписанияБУ И (ъ <= КоличествоСубконто) и  (ЗначениеЗаполнено(Объект.СчетСписанияНДС)) Тогда
			Элементы["СубконтоСписанияНДС"+ъ].Заголовок=Строка(ВидыСубконтоСчета[ъ-1].ВидСубконто);
			Элементы["СубконтоСписанияНДС"+ъ].Видимость=Истина;
		Иначе
			Элементы["СубконтоСписанияНДС"+ъ].Видимость=Ложь;
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоВыручке() Экспорт

	БазаРаспределенияСЕНВД = Объект.ВыручкаНДС + Объект.ВыручкаБезНДС + Объект.ВыручкаЕНВД + Объект.ВыручкаНДС0;
	БазаРаспределенияБезЕНВД =  Объект.ВыручкаНДС + Объект.ВыручкаБезНДС + Объект.ВыручкаНДС0;

	Если БазаРаспределенияСЕНВД = 0 Тогда
		ПоказатьПредупреждение(,"На закладке ""Выручка от реализации"" не указаны параметры реализации!", 10);
		Возврат;
	КонецЕсли;

	Для Каждого СтрТабЧасти Из Объект.СоставКосвенныхРасходов Цикл
		
		Если СтрТабЧасти.БазисРаспределенияВключаетЕНВД Тогда
		    БазаРаспределения = БазаРаспределенияСЕНВД;
		Иначе
		    БазаРаспределения = БазаРаспределенияБезЕНВД;
		КонецЕсли; 

		УчтеноСуммы   = 0;
		УчтеноНДС     = 0;
		УчтеноВыручки = 0;

		Если Не Объект.ВыручкаНДС=0 Тогда
			СтрТабЧасти.НДССумма = Окр(СтрТабЧасти.СуммаВсего * (Объект.ВыручкаНДС + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноСуммы;
			СтрТабЧасти.НДС      = Окр(СтрТабЧасти.НДСВсего * (Объект.ВыручкаНДС + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноНДС;

			УчтеноСуммы     = УчтеноСуммы + СтрТабЧасти.НДССумма;
			УчтеноНДС       = УчтеноНДС + СтрТабЧасти.НДС;
			УчтеноВыручки   = УчтеноВыручки + Объект.ВыручкаНДС;
		Иначе
			СтрТабЧасти.НДССумма = 0;
			СтрТабЧасти.НДС      = 0;
		КонецЕсли;

		Если Не Объект.ВыручкаБезНДС=0 Тогда
			СтрТабЧасти.БезНДССумма = Окр(СтрТабЧасти.СуммаВсего * (Объект.ВыручкаБезНДС + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноСуммы;
			СтрТабЧасти.БезНДС      = Окр(СтрТабЧасти.НДСВсего * (Объект.ВыручкаБезНДС + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноНДС;

			УчтеноСуммы   = УчтеноСуммы + СтрТабЧасти.БезНДССумма;
			УчтеноНДС     = УчтеноНДС + СтрТабЧасти.БезНДС;
			УчтеноВыручки = УчтеноВыручки + Объект.ВыручкаБезНДС;
		Иначе
			СтрТабЧасти.БезНДССумма = 0;
			СтрТабЧасти.БезНДС      = 0;
		КонецЕсли;

		Если Не Объект.ВыручкаЕНВД=0 и СтрТабЧасти.БазисРаспределенияВключаетЕНВД Тогда
			СтрТабЧасти.ЕНВДСумма = Окр(СтрТабЧасти.СуммаВсего * (Объект.ВыручкаЕНВД + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноСуммы;
			СтрТабЧасти.ЕНВДНДС   = Окр(СтрТабЧасти.НДСВсего *   (Объект.ВыручкаЕНВД + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноНДС;

			УчтеноСуммы   = УчтеноСуммы + СтрТабЧасти.ЕНВДСумма;
			УчтеноНДС     = УчтеноНДС + СтрТабЧасти.ЕНВДНДС;
			УчтеноВыручки = УчтеноВыручки + Объект.ВыручкаЕНВД;
		Иначе
			СтрТабЧасти.ЕНВДСумма = 0;
			СтрТабЧасти.ЕНВДНДС   = 0;
		КонецЕсли;
		
		Если Не Объект.ВыручкаНДС0=0 Тогда
			СтрТабЧасти.НДС0Сумма = Окр(СтрТабЧасти.СуммаВсего * (Объект.ВыручкаНДС0 + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноСуммы;
			СтрТабЧасти.НДС0      = Окр(СтрТабЧасти.НДСВсего * (Объект.ВыручкаНДС0 + УчтеноВыручки)/БазаРаспределения, 2) - УчтеноНДС;

			УчтеноСуммы   = УчтеноСуммы + СтрТабЧасти.НДС0Сумма;
			УчтеноНДС     = УчтеноНДС + СтрТабЧасти.НДС0;
			УчтеноВыручки = УчтеноВыручки + Объект.ВыручкаНДС0;
		Иначе
			СтрТабЧасти.НДС0Сумма = 0;
			СтрТабЧасти.НДС0      = 0;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоСчету(ВыбСчет)
	Если ТипЗнч(ВыбСчет)=Тип("Массив") Тогда ВыбСчет=ВыбСчет[0]; КонецЕсли; 	
		Запрос=Новый Запрос;
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.НачалоПериода));
		Запрос.УстановитьПараметр("ДатаКонца", КонецДня(Объект.КонецПериода));
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("СчетУчетаНДС", ВыбСчет);
		Запрос.Текст="
		|ВЫБРАТЬ
		|	ИсточникДанных.Организация,
		|	ИсточникДанных.СчетФактура,
		|	ИсточникДанных.ВидЦенности,
		|	ИсточникДанных.СтавкаНДС,
		|	ИсточникДанных.Поставщик,
		|	ИсточникДанных.СчетУчетаНДС,
		|	ИсточникДанных.ДоговорКонтрагента,
		|	ИсточникДанных.СуммаБезНДС,
		|	ИсточникДанных.НДС,
		|	ИсточникДанных.ВидТабличнойЧасти,
		|	ИсточникДанных.НомерСтрокиТабличнойЧасти
		|ИЗ
		|	РегистрНакопления.НДСПредъявленный КАК ИсточникДанных
		|ГДЕ
		|	ИсточникДанных.Период МЕЖДУ &ДатаНачала И &ДатаКонца
		|	И ИсточникДанных.Организация = &Организация
		|	И ИсточникДанных.СчетУчетаНДС = &СчетУчетаНДС
		|";
		тзРезультат=Запрос.Выполнить().Выгрузить();

		НаборЗаписей=РегистрыСведений.СоответствияСчетовУчета.СоздатьНаборЗаписей();
		НаборЗаписей.Прочитать();
		тзСчетаУчетаЗатрат=НаборЗаписей.Выгрузить(, "Счет");

		//Объект.СоставКосвенныхРасходов.Очистить();
		//Объект.СчетаУчетаРасходов.Очистить();
		Для Каждого СтрокаКоллекции ИЗ тзРезультат Цикл
			Док=СтрокаКоллекции.СчетФактура;
			Если ТипЗнч(Док)=Тип("ДокументСсылка.СчетФактураПолученный") Тогда Продолжить; КонецЕсли;
			Попытка
			Док=СтрокаКоллекции.СчетФактура;
			тзАналитика=Справочники.ТиповыеОперации["Документ_"+Док.Метаданные().Имя].НастройкаАналитики.Выгрузить();
			ТабличнаяЧасть=Док[СокрЛП(СтрокаКоллекции.ВидТабличнойЧасти)];
			СтрокаДок=ТабличнаяЧасть[СтрокаКоллекции.НомерСтрокиТабличнойЧасти-1];

			СчетЗатратБУ=УчетНалоговСервер.НайтиСчетУчета(СтрокаДок.ТОП.ПроводкиБУ, тзСчетаУчетаЗатрат);
			Если СчетЗатратБУ=Неопределено Тогда Продолжить; КонецЕсли;
			
			НоваяСтрока=Объект.СоставКосвенныхРасходов.Добавить();
			НоваяСтрока.ВидЦенности = СтрокаКоллекции.ВидЦенности;
			НоваяСтрока.Поставщик   = ?(Не СтрокаКоллекции.Поставщик=Неопределено, СтрокаКоллекции.Поставщик, Справочники.Контрагенты.ПустаяСсылка());
			НоваяСтрока.СчетФактура = СтрокаКоллекции.СчетФактура;
			НоваяСтрока.СтавкаНДС   = СтрокаКоллекции.СтавкаНДС;
			НоваяСтрока.СчетУчетаНДС= СтрокаКоллекции.СчетУчетаНДС;
			НоваяСтрока.ID			= Новый УникальныйИдентификатор;
			НоваяСтрока.СуммаВсего  = СтрокаКоллекции.СуммаБезНДС;
			НоваяСтрока.НДСВсего    = СтрокаКоллекции.НДС;
			
			НоваяСтрокаСчетов=Объект.СчетаУчетаРасходов.Добавить();
			НоваяСтрокаСчетов.ID_СоставКосвенныхРасходов=НоваяСтрока.ID;
			
			Если Не СчетЗатратБУ=Неопределено Тогда
				НоваяСтрокаСчетов.СчетЗатрат=СчетЗатратБУ; 
				ВидыСубконтоБУ=Новый Структура;
				УправлениеПроведением.УстановитьСубконто(Док, НоваяСтрокаСчетов.СчетЗатрат, ВидыСубконтоБУ, тзАналитика, "Д", СокрЛП(СтрокаКоллекции.ВидТабличнойЧасти), СтрокаДок);
				ВидыСубконтоБУ.Свойство("Субконто1", НоваяСтрокаСчетов.Субконто1);
				ВидыСубконтоБУ.Свойство("Субконто2", НоваяСтрокаСчетов.Субконто2);
				ВидыСубконтоБУ.Свойство("Субконто3", НоваяСтрокаСчетов.Субконто3);
				Если СчетЗатратБУ.УчетПоПодразделениям Тогда
					НоваяСтрокаСчетов.Подразделение=Док.Подразделение;
					Если ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Подразделение",Док.Метаданные(),СокрЛП(СтрокаКоллекции.ВидТабличнойЧасти))<>Неопределено Тогда
						Если ЗначениеЗаполнено(СтрокаДок.Подразделение) Тогда
							НоваяСтрокаСчетов.Подразделение=СтрокаДок.Подразделение;
						КонецЕсли;	
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли; 
			НоваяСтрокаСчетов.СуммаБезНДС = НоваяСтрока.СуммаВсего;
			НоваяСтрокаСчетов.НДС         = НоваяСтрока.НДСВсего;
			Исключение
			КонецПопытки;
		КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьНаправленияСписания()
	ТекСтрокаРасходов=Элементы.СоставКосвенныхРасходов.ТекущиеДанные;
	Если Не ТекСтрокаРасходов=Неопределено Тогда
		Элементы.СчетаУчетаРасходов.ТолькоПросмотр=Ложь;
	Иначе
		Элементы.СчетаУчетаРасходов.ТолькоПросмотр=Истина;
		Если Объект.СоставКосвенныхРасходов.Количество()=0 Тогда
			Объект.СчетаУчетаРасходов.Очистить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Вложения"

&НаКлиенте
Процедура тпВложение_ВыполнитьДействие(Команда)
	Если Команда.Имя="ВложенияПредпросмотр" Тогда
		Элементы.ВложенияПредпросмотр.Пометка=НЕ Элементы.ВложенияПредпросмотр.Пометка;
		Элементы.ВложенияГруппаПросмотр.Видимость=Элементы.ВложенияПредпросмотр.Пометка;
		Если Элементы.ВложенияПредпросмотр.Пометка Тогда
			тпВложения_ОбработчикОжидания();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры	 

&НаКлиенте
Процедура тпВложения_ПриАктивизацииСтроки(Элемент)
	Если Элементы.тпВложения.ТекущиеДанные=Неопределено Тогда Возврат; КонецЕсли;
	Если НЕ Элементы.ВложенияПредпросмотр.Пометка Тогда Возврат; КонецЕсли;
	
	тпВложения_ОбработчикОжидания();
КонецПроцедуры

&НаКлиенте
Процедура тпВложения_ПредпросмотПоказать(СтруктураДанных)
	Модуль=ОбщегоНазначенияКлиент.ОбщийМодуль("ВложенияКлиент");
	Модуль.ПредпросмотрПоказать(ЭтаФорма, СтруктураДанных);
КонецПроцедуры

&НаСервере
Процедура тпВложения_ПредпросмотСоздать(СтруктураДанных)
	Модуль=ОбщегоНазначенияСервер.ОбщийМодуль("ВложенияСервер");
	Модуль.ПредпросмотрСоздать(ЭтаФорма, СтруктураДанных);
КонецПроцедуры

&НаКлиенте
Процедура тпВложения_ОбработчикОжидания()
	Если Элементы.тпВложения.ТекущиеДанные=Неопределено Тогда Возврат; КонецЕсли;

	СтруктураДанных=Новый Структура("ИмяФайла,Каталог,ТипID,ID,ВариантХранения,ИндексПиктограммы");
	ЗаполнитьЗначенияСвойств(СтруктураДанных, Элементы.тпВложения.ТекущиеДанные);
	СтруктураДанных.Вставить("Ссылка", Объект.Ссылка);
	СтруктураДанных.Вставить("ИмяРеквизита", ОбщегоНазначенияКлиент.ОбщийМодуль("ВложенияОбщий").ИмяРеквизитаПоИндексуПиктограммы(СтруктураДанных.ИндексПиктограммы));

	Если Элементы.Найти("ВложениеПросмотр"+СтруктураДанных.ИмяРеквизита)=Неопределено Тогда	
		тпВложения_ПредпросмотСоздать(СтруктураДанных);
	КонецЕсли;

	тпВложения_ПредпросмотПоказать(СтруктураДанных);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Обработчики оповещения

&НаКлиенте
Процедура ОбработчикОповещения_Дата(Параметр1, Параметр2) Экспорт
	Если Параметр1=КодВозвратаДиалога.Да Тогда
		Объект.НачалоПериода=Параметр2;
		ОтобразитьНалоговыйПериод();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_СоставКосвенныхРасходов_Заполнить(Параметр1, Параметр2) Экспорт
	Если Параметр1=КодВозвратаДиалога.Отмена Тогда Возврат; КонецЕсли; 

	Если Параметр1=КодВозвратаДиалога.Да Тогда		
		Объект.СоставКосвенныхРасходов.Очистить();
		Объект.СчетаУчетаРасходов.Очистить();
	КонецЕсли;

	тпСоставКосвенныхРасходов_ВыбратьСчет(Параметр2);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ВыбСчет(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	Если Параметр2.Команда="ЗаполнитьПоСчету" Тогда
		ЗаполнитьПоСчету(Параметр1);
	КонецЕсли;	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Стандартные (универсальные) процедуры\функции

&НаСервере
Процедура ВыполнитьСортировкуТабличнойЧасти(ИмяТабличнойЧасти, стрСортировка) Экспорт
	СортировкаТабличнойЧастиСервер.Сортировать(ИмяТабличнойЧасти, стрСортировка, Объект);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="Дата" Тогда
		Если УчетнаяПолитика.НДСНалоговыйПериод=ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
			НовоеНачалоПериода=НачалоКвартала(Объект.Дата);
		Иначе
			НовоеНачалоПериода=НачалоМесяца(Объект.Дата);
		КонецЕсли;
		
		Если Не Объект.НачалоПериода=НовоеНачалоПериода Тогда
			ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_Дата", ЭтотОбъект, НовоеНачалоПериода);
			ПоказатьВопрос(ОписаниеОповещения, "Установить значение периода документа по текущей дате?", РежимДиалогаВопрос.ДаНет, 20, КодВозвратаДиалога.Нет, "Внимание", КодВозвратаДиалога.Нет);
		Иначе
			Объект.НачалоПериода=НовоеНачалоПериода;
			ОтобразитьНалоговыйПериод();
		КонецЕсли;

	ИначеЕсли Элемент.Имя="Организация" Тогда
		ОбновитьРеквизитыФормы("УчетнаяПолитика");
	КонецЕсли;

	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элемент.Имя="СтатьяЗатратНДС" Или Элемент.Имя="СтатьяЗатратНДСПриЕНВД" Тогда		
		СтандартнаяОбработка=Ложь;

		Если Элемент.Имя="СтатьяЗатратНДС" Тогда
			ЗначениеОтбора=ПредопределенноеЗначение("Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьНеОблагаемаяЕНВД");
		Иначе
			ЗначениеОтбора=ПредопределенноеЗначение("Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ПредпринимательскаяДеятельностьОблагаемаяЕНВД");
		КонецЕсли; 

		ПараметрыФормы=Новый Структура;
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ПараметрыФормы.Вставить("Отбор", Новый Структура("ВидДеятельностиДляНалоговогоУчетаЗатрат", ЗначениеОтбора));
		ОткрытьФорму("Справочник.СтатьиЗатрат.ФормаСписка", ПараметрыФормы, Элемент, УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли; 
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля УНИВЕРСАЛЬНЫЕ

&НаКлиенте
Процедура кпТабличноеПоле_ВыполнитьДействие(Команда)
	стрКоманда=Команда.Имя;
	Если стрКоманда="Сортировать" Тогда
		стрТабличнаяЧасть=стрЗаменить(ЭтаФорма.Элементы.ТабличныеЧасти.ТекущаяСтраница.Имя, "Страница", "");
		СортировкаТабличнойЧастиКлиент.Открыть(стрТабличнаяЧасть, ЭтаФорма, Объект);
		
	ИначеЕсли стрКоманда="Рассчитать" Тогда
		Объект.ВыручкаЕНВД=0;
		Объект.ВыручкаБезНДС=0;
		Объект.ВыручкаНДС0=0;
		Объект.ВыручкаНДС=0;

		Если НЕ УчетнаяПолитика=Неопределено И УчетнаяПолитика.НДСНалоговыйПериод=ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
			Объект.КонецПериода=КонецКвартала(Объект.Дата);
		Иначе
			Объект.КонецПериода=КонецМесяца(Объект.Дата);
		КонецЕсли;

		СтруктураДанных=УчетНалоговСервер.РассчитатьВыручкуДляНДС(Объект.Организация, Объект.НачалоПериода, Объект.КонецПериода);
		ЗаполнитьЗначенияСвойств(Объект, СтруктураДанных);

		УстановитьВидимость();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Товары"

&НаКлиенте
Процедура кпСоставКосвенныхРасходов_ВыполнитьДействие(Команда)
	стрТабличнаяЧасть="СоставКосвенныхРасходов"; стрКоманда=стрЗаменить(Команда.Имя, "кп"+стрТабличнаяЧасть+"_", "");
	
	Если стрКоманда="Распределить" Тогда
		РаспределитьПоВыручке();
	ИначеЕсли стрКоманда="ЗаполнитьПоСчету" Тогда
		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_СоставКосвенныхРасходов_Заполнить", ЭтотОбъект, стрКоманда);
		ПоказатьВопрос(ОписаниеОповещения, "Перед заполнением табличные части будут очищены. Заполнить?", РежимДиалогаВопрос.ДаНетОтмена, 20, КодВозвратаДиалога.Отмена, "Внимание", КодВозвратаДиалога.Отмена);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпСоставКосвенныхРасходов_ВыбратьСчет(стрКоманда)
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Команда", стрКоманда);
	СтруктураПараметров.Вставить("Постфикс", ?(Прав(стрКоманда, 5)="Дебет", "Дт", "Кт"));

	ВыбСчет=ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.НДСпоПриобретеннымУслугам");
	ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыбСчет", ЭтотОбъект, СтруктураПараметров);
	ПоказатьВводЗначения(ОписаниеОповещения, ВыбСчет, "Укажите счет");	
КонецПроцедуры

&НаКлиенте
Процедура тпСоставКосвенныхРасходов_ПриАктивизацииСтроки(Элемент)
	ОтобразитьНаправленияСписания();
	ТекущиеДанные=Элементы.СоставКосвенныхРасходов.ТекущиеДанные;
	Если ТекущиеДанные=Неопределено Тогда Возврат; КонецЕсли; 

	СтруктураОтбора=Новый Структура("ID_СоставКосвенныхРасходов", ТекущиеДанные.ID);
	Элементы.СчетаУчетаРасходов.ОтборСтрок=Новый ФиксированнаяСтруктура(СтруктураОтбора);
КонецПроцедуры

&НаКлиенте
Процедура тпСоставКосвенныхРасходов_ПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ID=Строка(Новый УникальныйИдентификатор);
		ОтобразитьНаправленияСписания();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпСоставКосвенныхРасходов_ПередУдалением(Элемент, Отказ)
	СтруктураПоиска=Новый Структура;
	СтруктураПоиска.Вставить("ID_СоставКосвенныхРасходов", Элемент.ТекущиеДанные.ID);
	МассивСтрок=Объект.СчетаУчетаРасходов.НайтиСтроки(СтруктураПоиска);
	Для каждого СтрокаКоллекции Из МассивСтрок Цикл
		Объект.СчетаУчетаРасходов.Удалить(СтрокаКоллекции);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура тпСоставКосвенныхРасходов_ПослеУдаления(Элемент)
	ОтобразитьНаправленияСписания();
КонецПроцедуры

&НаКлиенте
Процедура тпСоставКосвенныхРасходов_Колонка_ПриИзменении(Элемент, ТекущиеДанные=Неопределено)
	стрКолонка=стрЗаменить(Элемент.Имя, "СоставКосвенныхРасходов", "");
	ТекущиеДанные=Элементы.СоставКосвенныхРасходов.ТекущиеДанные;
	СтавкаНДС=УчетНалоговСервер.СтавкаНДС(ТекущиеДанные.СтавкаНДС);
	
	Если стрКолонка="СуммаВсего" Тогда
		ТекущиеДанные.НДСВсего=УчетНалоговСервер.РассчитатьСуммуНДС(ТекущиеДанные.СуммаВсего, Истина, Ложь, СтавкаНДС);
		
	ИначеЕсли стрКолонка="НДССумма" Тогда
		ТекущиеДанные.НДС=УчетНалоговСервер.РассчитатьСуммуНДС(ТекущиеДанные.НДССумма, Истина, Ложь, СтавкаНДС);
		
	ИначеЕсли стрКолонка="БезНДССумма" Тогда
		ТекущиеДанные.БезНДС=УчетНалоговСервер.РассчитатьСуммуНДС(ТекущиеДанные.БезНДССумма, Истина, Ложь, СтавкаНДС);
		
	ИначеЕсли стрКолонка="ЕНВДСумма" Тогда
		ТекущиеДанные.ЕНВДНДС=УчетНалоговСервер.РассчитатьСуммуНДС(ТекущиеДанные.ЕНВДСумма, Истина, Ложь, СтавкаНДС);
		
	ИначеЕсли стрКолонка="НДС0Сумма" Тогда
		ТекущиеДанные.НДС0=УчетНалоговСервер.РассчитатьСуммуНДС(ТекущиеДанные.НДС0Сумма, Истина, Ложь, СтавкаНДС);
		
	ИначеЕсли стрКолонка="СтавкаНДС" Тогда
		ТекущиеДанные.НДСВсего=УчетНалоговСервер.РассчитатьСуммуНДС(ТекущиеДанные.СуммаВсего, Истина, Ложь, СтавкаНДС);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий дополнительных реквизитов табличных частей

&НаКлиенте
Процедура тзРеквизитыТЧ_ПриИзменении_Клиент(Элемент)
	тзРеквизитыТЧ_ПриИзменении_Сервер(Элемент.Имя);
КонецПроцедуры

&НаСервере
Процедура тзРеквизитыТЧ_ПриИзменении_Сервер(стрИмя)
	МетаконфигураторСервер.ДопРеквизиты_ПриИзменении(стрИмя, ЭтаФорма);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СобытияФормыСервер.ПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьРеквизитыФормы("УчетнаяПолитика");
	Если Объект.Ссылка.Пустая() Тогда
		Если НЕ УчетнаяПолитика=Неопределено И УчетнаяПолитика.НДСНалоговыйПериод=ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
			Объект.НачалоПериода=НачалоКвартала(Объект.Дата);
		Иначе
			Объект.НачалоПериода=НачалоМесяца(Объект.Дата);
		КонецЕсли;
	КонецЕсли;
	
	ОтобразитьНалоговыйПериод();
	УстановитьВидимость();
	
	СобытияФормыКлиент.ПриОткрытии(Отказ, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СобытияФормыКлиент.ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	СобытияФормыКлиент.ПриЗакрытии(ЗавершениеРаботы, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	СобытияФормыКлиент.ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	СобытияФормыКлиент.ОбработкаОповещения(ИмяСобытия, Параметр, Источник, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	СобытияФормыКлиент.ОбработкаАктивизации(АктивныйОбъект, Источник, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	СобытияФормыКлиент.ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	СобытияФормыСервер.ПриЧтенииНаСервере(ТекущийОбъект, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СобытияФормыКлиент.ПередЗаписью(Отказ, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СобытияФормыСервер.ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)	
	СобытияФормыСервер.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)	
	СобытияФормыСервер.ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	СобытияФормыКлиент.ПослеЗаписи(ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	СобытияФормыКлиент.ВнешнееСобытие(Источник, Событие, Данные, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначения(СтандартнаяОбработка)
	СобытияФормыКлиент.ВыборЗначения(СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры