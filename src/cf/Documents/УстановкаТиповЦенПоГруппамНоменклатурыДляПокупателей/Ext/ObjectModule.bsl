Процедура ПроверитьПересекающиесяДокументы(Отказ, Заголовок)

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ПустойТипЦен", Справочники.ТипыЦенНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата", ДатаНачала);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Док.НоменклатурнаяЦеноваяГруппа КАК Группа,
	|	РегТипыДляПокупателей.ТипЦен КАК ТипЦен,
	|	РегТипыДляПокупателей.Период КАК ДатаНачала,
	|	РегТипыДляПокупателей.Регистратор КАК Регистратор
	|ИЗ
	|	Документ.УстановкаТиповЦенПоГруппамНоменклатурыДляПокупателей.НоменклатурныеЦеновыеГруппы КАК Док
	|СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|ПО Док.Ссылка = &ДокументСсылка
	|И (СпрНоменклатура.НоменклатурнаяГруппа = Док.НоменклатурнаяЦеноваяГруппа
	|ИЛИ СпрНоменклатура.ЦеноваяГруппа = Док.НоменклатурнаяЦеноваяГруппа)
	|СОЕДИНЕНИЕ РегистрСведений.ТипыЦенПоГруппамНоменклатурыДляПокупателей КАК РегТипыДляПокупателей
	|ПО (СпрНоменклатура.НоменклатурнаяГруппа = РегТипыДляПокупателей.НоменклатурнаяЦеноваяГруппа
	|ИЛИ СпрНоменклатура.ЦеноваяГруппа = РегТипыДляПокупателей.НоменклатурнаяЦеноваяГруппа)
	|И Контрагент = &Контрагент
	|УПОРЯДОЧИТЬ ПО Период Возр, Группа Возр, ТипЦен Убыв
	|";

	ТЗ = Запрос.Выполнить().Выгрузить();
	ТЗ.Колонки.Добавить("ДатаОкончания");
	ТЗ.ЗаполнитьЗначения('00010101' ,"ДатаОкончания");

	КоличествоСтрок = ТЗ.Количество() - 1;
	Для Тмп = 0 По КоличествоСтрок Цикл
		СтрокаТЗ = ТЗ[КоличествоСтрок - Тмп];

		Если НЕ ЗначениеЗаполнено(СтрокаТЗ.ТипЦен) Тогда
			Для Тмп1 = 0 По ТЗ.Количество() -1 Цикл
				СтрокаПоиска = ТЗ[Тмп];

				Если СтрокаПоиска.Группа = СтрокаТЗ.Группа
				   И НЕ ЗначениеЗаполнено(СтрокаПоиска.ДатаОкончания) Тогда
					СтрокаПоиска.ДатаОкончания = СтрокаТЗ.ДатаНачала;
					ТЗ.Удалить(СтрокаТЗ);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	СтрокаДокументовПересечений = "";
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		Если НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
			Если СтрокаТЗ.ДатаОкончания > Дата Или НЕ ЗначениеЗаполнено(СтрокаТЗ.ДатаОкончания) Тогда 
				СтрокаДокументовПересечений = СтрокаДокументовПересечений + Символы.ПС + СтрокаТЗ.Группа +": " + СтрокаТЗ.Регистратор;
			КонецЕсли;
		Иначе
			Если (ДатаНачала >= СтрокаТЗ.ДатаНачала И ДатаОкончания <= СтрокаТЗ.ДатаОкончания)
			  Или (ДатаНачала <= СтрокаТЗ.ДатаНачала И ДатаОкончания >= СтрокаТЗ.ДатаОкончания)
			  Или (ДатаНачала <= СтрокаТЗ.ДатаНачала И ДатаОкончания >= СтрокаТЗ.ДатаНачала)
			  Или (ДатаНачала <= СтрокаТЗ.ДатаОкончания И ДатаОкончания >= СтрокаТЗ.ДатаОкончания) Тогда
				СтрокаДокументовПересечений = СтрокаДокументовПересечений + Символы.ПС + СтрокаТЗ.Группа +": " + СтрокаТЗ.Регистратор;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Если НЕ ПустаяСтрока(СтрокаДокументовПересечений) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Найдены записи о типах цен для групп, которые уже действуют в выбранном периоде:" + СтрокаДокументовПересечений, Отказ, Заголовок);
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Функция СформироватьЗапросПоГруппам(Режим, ВыборкаПоШапкеДокумента)

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Док.НоменклатурнаяЦеноваяГруппа КАК НоменклатурнаяЦеноваяГруппа,
	|	Док.ТипЦен,
	|	Док.Ссылка.ДатаОкончания,
	|	Док.Ссылка.ДатаНачала,
	|	Док.Ссылка.Контрагент,
	|	Док.НомерСтроки, // Для контроля заполнения
	|	1 КАК КоличествоДублей
	|ИЗ
	|	Документ.УстановкаТиповЦенПоГруппамНоменклатурыДляПокупателей.НоменклатурныеЦеновыеГруппы КАК Док
	|ГДЕ
	|	Док.Ссылка = &ДокументСсылка
	|ИТОГИ КОЛИЧЕСТВО(КоличествоДублей)
	|ПО НоменклатурнаяЦеноваяГруппа
	|";

	Возврат Запрос.Выполнить();
КонецФункции

Процедура ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоСтрокамДокумента)

	Движение = Движения.ТипыЦенПоГруппамНоменклатурыДляПокупателей.Добавить();

	// Свойства
	Движение.Период                     = ВыборкаПоСтрокамДокумента.ДатаНачала;

	// Измерения
	Движение.Контрагент                  = ВыборкаПоСтрокамДокумента.Контрагент;
	Движение.НоменклатурнаяЦеноваяГруппа = ВыборкаПоСтрокамДокумента.НоменклатурнаяЦеноваяГруппа;

	// Ресурсы
	Движение.ТипЦен                      = ВыборкаПоСтрокамДокумента.ТипЦен;

	Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаОкончания) Тогда
		Движение = Движения.ТипыЦенПоГруппамНоменклатурыДляПокупателей.Добавить();

		// Свойства
		Движение.Период             = КонецДня(ВыборкаПоСтрокамДокумента.ДатаОкончания);

		// Измерения
		Движение.Контрагент                  = ВыборкаПоСтрокамДокумента.Контрагент;
		Движение.НоменклатурнаяЦеноваяГруппа = ВыборкаПоСтрокамДокумента.НоменклатурнаяЦеноваяГруппа;

		// Ресурсы
		// все пусто, т.к. условия с этой даты не действуют
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьДублиЦеновыхНоменклатурныхГрупп(ВыборкаПоСтрокамДокумента, Отказ, Заголовок)

	Если ВыборкаПоСтрокамДокумента.КоличествоДублей > 1 Тогда
		Если ВидОперации = Перечисления.ВидыОперацийУстановкаТиповЦенПоГруппамНоменклатурыДляПокупателей.ПоНоменклатурнымГруппам Тогда
			НазваниеГрупп = "номенклатурных";
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийУстановкаТиповЦенПоГруппамНоменклатурыДляПокупателей.ПоЦеновымГруппам Тогда
			НазваниеГрупп = "ценовых";
		КонецЕсли;

		ОбщегоНазначения.СообщитьОбОшибке("""" + СокрЛП(ВыборкаПоСтрокамДокумента.НоменклатурнаяЦеноваяГруппа) + """
			               |: дублей строк " + НазваниеГрупп + " групп в этом документе быть не должно!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли;

	Заголовок=ДополнительныеСвойства.Заголовок;
	СтруктураШД = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	ДеревоПолейЗапросаПоШапке = УправлениеЗапасами.СформироватьДеревоПолейЗапросаПоШапке();
	СтруктураШД = УправлениеЗапасами.СформироватьЗапросПоДеревуПолей(ЭтотОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШД, "");

	Если ЗначениеЗаполнено(СтруктураШД.ДатаОкончания) И СтруктураШД.ДатаОкончания < СтруктураШД.ДатаНачала Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата окончания не может быть меньше даты начала!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ Отказ Тогда
		ПроверитьПересекающиесяДокументы(Отказ, Заголовок);
	КонецЕсли;

	РезультатЗапросаПоГруппам = СформироватьЗапросПоГруппам(РежимПроведения, СтруктураШД);
	Если РезультатЗапросаПоГруппам.Пустой() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнена табличная часть документа!", Отказ, Заголовок);
	КонецЕсли;
	ВыборкаПоСтрокамДокумента = РезультатЗапросаПоГруппам.Выбрать();
	Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
		ПроверитьДублиЦеновыхНоменклатурныхГрупп(ВыборкаПоСтрокамДокумента, Отказ, Заголовок);
		Если ВыборкаПоСтрокамДокумента.ТипЗаписи() <> ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			Продолжить;
		КонецЕсли;
		Если Отказ Тогда Продолжить; КонецЕсли;
		ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоСтрокамДокумента);
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);