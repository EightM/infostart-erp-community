Перем мСложныйУчетНДС Экспорт;

Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	СуммаДокумента=Товары.Итог("Сумма");

	Для каждого СтрокаКоллекции Из Товары Цикл
		Если ЗначениеЗаполнено(СтрокаКоллекции.ЕдиницаИзмеренияМест) И СтрокаКоллекции.КоличествоМест=0 Тогда
			СтрокаКоллекции.ЕдиницаИзмеренияМест=Неопределено;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СтрокаКоллекции.Качество) Тогда
			СтрокаКоллекции.Качество=Справочники.Качество.Новый;
		КонецЕсли;
		Если СтрокаКоллекции.Склад.Пустая() Тогда
			СтрокаКоллекции.Склад=Склад;
		КонецЕсли;
	КонецЦикла;

	Для каждого СтрокаКоллекции Из ВозвратнаяТара Цикл
		Если СтрокаКоллекции.Склад.Пустая() Тогда
			СтрокаКоллекции.Склад=Склад;
		КонецЕсли;
	КонецЦикла;

	
КонецПроцедуры

Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт

	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;
КонецФункции

Процедура ЗаполнитьТоварыПоИнвентаризацииТоваров(ДокументОснование, ПодтверждатьОчисткуСтрок=Истина) Экспорт
	Если НЕ ЗначениеЗаполнено(ИнвентаризацияТМЦ) Тогда Возврат; КонецЕсли;

	Склад=ДокументОснование.Склад;

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ДокументОснованиеСсылка", ДокументОснование);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	МИНИМУМ(Док.НомерСтроки) КАК НомерСтроки,
	|	Док.Номенклатура,
	|	Док.ЕдиницаИзмерения,
	|	Док.ЕдиницаИзмеренияМест,
	|	Док.Ссылка.Склад                              КАК Склад,
	|	МАКСИМУМ(Док.КоличествоУчет - Док.Количество) КАК КоличествоОтклонение,
	|	ВЫБОР
	|		КОГДА СУММА(ВложенныйЗапрос.Количество) ЕСТЬ NULL ТОГДА
	|			0
	|		ИНАЧЕ
	|			СУММА(ВложенныйЗапрос.Количество)
	|		КОНЕЦ КАК КоличествоСписанное,
	|	Док.ЦенаВРознице КАК Цена,
	|	Док.КоличествоУчет,
	|	Док.СуммаУчет,
	|	Док.ХарактеристикаНоменклатуры,
	|	Док.СерияНоменклатуры,
	|	Док.Качество
	|ИЗ
	|	Документ.ИнвентаризацияТМЦ.Товары КАК Док
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ 
	|       ДокСписание.Номенклатура,
	|       ДокСписание.ХарактеристикаНоменклатуры,
	|       ДокСписание.СерияНоменклатуры,
	|       ДокСписание.Ссылка.Склад                 КАК Склад,
	|		ДокСписание.Количество                   КАК Количество,
	|       ДокСписание.Цена
	|	 ИЗ
	|       Документ.СписаниеТоваров.Товары КАК ДокСписание
	|    ГДЕ
	|       ДокСписание.Ссылка <> &ДокументСсылка
	|       И ДокСписание.Ссылка.Проведен
	|       И ДокСписание.Ссылка.ИнвентаризацияТМЦ = &ДокументОснованиеСсылка
	|
	|    ОБЪЕДИНИТЬ ВСЕ
	|
	|	 ВЫБРАТЬ 
	|       ДокОтчетККМ.Номенклатура,
	|       ДокОтчетККМ.ХарактеристикаНоменклатуры,
	|       ДокОтчетККМ.СерияНоменклатуры,
	|       ДокОтчетККМ.Склад                        КАК Склад,
	|		ДокОтчетККМ.Количество                   КАК Количество,
	|       ДокОтчетККМ.Цена
	|	 ИЗ
	|       Документ.ОтчетОРозничныхПродажах.Товары КАК ДокОтчетККМ
	|    ГДЕ
	|         ДокОтчетККМ.Ссылка.Проведен
	|       И ДокОтчетККМ.Ссылка.ИнвентаризацияТМЦ = &ДокументОснованиеСсылка) КАК ВложенныйЗапрос
	|ПО
	|      Док.Номенклатура               = ВложенныйЗапрос.Номенклатура
	|    И Док.ХарактеристикаНоменклатуры = ВложенныйЗапрос.ХарактеристикаНоменклатуры
	|    И Док.СерияНоменклатуры          = ВложенныйЗапрос.СерияНоменклатуры
	|    И Док.Ссылка.Склад               = ВложенныйЗапрос.Склад " +
	?(Склад.ВидСклада = Перечисления.ВидыСкладов.Розничный, " 
	|    И Док.Цена                       = ВложенныйЗапрос.Цена", "") + "
	|
	|ГДЕ
	|	  Док.Ссылка = &ДокументОснованиеСсылка И Док.КоличествоУчет - Док.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Ссылка.Склад,
	|	Док.Номенклатура,
	|	Док.ЕдиницаИзмерения,
	|	Док.ЕдиницаИзмеренияМест,
	|	Док.ЦенаВРознице,
	|	Док.КоличествоУчет,
	|	Док.СуммаУчет,
	|	Док.ХарактеристикаНоменклатуры,
	|	Док.СерияНоменклатуры,
	|	Док.Качество
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		КоличествоСписать = Выборка.КоличествоОтклонение - Выборка.КоличествоСписанное;
		Если КоличествоСписать <= 0 Тогда Продолжить; КонецЕсли;

		СтрокаТабличнойЧасти=Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
		СтрокаТабличнойЧасти.Коэффициент=Выборка.ЕдиницаИзмерения.Коэффициент;
		СтрокаТабличнойЧасти.Количество=КоличествоСписать;

		Если Выборка.КоличествоУчет > 0 Тогда //И Выборка.КорректировкаУчетнойСтоимости
			СтрокаТабличнойЧасти.УчетнаяСтоимостьУУ = (Выборка.СуммаУчет/Выборка.КоличествоУчет)*КоличествоСписать;
		КонецЕсли; 
		ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);

		Если Склад.ВидСклада=Перечисления.ВидыСкладов.Розничный Тогда
			СтрокаТабличнойЧасти.Цена=Выборка.Цена;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОпределитьСложныйУчетНДС() Экспорт
	УчетнаяПолитика=ПараметрыУчетнойПолитики(Истина);
	УчетнаяПолитика.Свойство("СложныйУчетНДС", мСложныйУчетНДС);
	Если мСложныйУчетНДС=Неопределено Тогда мСложныйУчетНДС=Ложь; КонецЕсли; 
КонецПроцедуры

Функция ПолучитьСложныйУчетНДС() Экспорт
	Если мСложныйУчетНДС = Неопределено Тогда	
		ОпределитьСложныйУчетНДС();	
	КонецЕсли; 
	Возврат мСложныйУчетНДС; 	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Подготовка таблиц для проведения

Процедура ДополнитьТаблицуАтрибутамиШапки(СтруктураШД, тзСсылка, стрВидТабличнойЧасти="")
	СтруктураРеквизитов=Новый Структура;
	СтруктураРеквизитов.Вставить("Организация", Организация);
	СтруктураРеквизитов.Вставить("Период", Дата);
	СтруктураРеквизитов.Вставить("Активность", Истина);
	СтруктураРеквизитов.Вставить("Регистратор", Ссылка);
	СтруктураРеквизитов.Вставить("ВидТабличнойЧасти", стрВидТабличнойЧасти);
	Для каждого СтрокаКоллекции Из СтруктураРеквизитов Цикл
		тзСсылка.Колонки.Добавить(СтрокаКоллекции.Ключ);
		тзСсылка.ЗаполнитьЗначения(СтрокаКоллекции.Значение, СтрокаКоллекции.Ключ);
	КонецЦикла;	
КонецПроцедуры
 
Функция СформироватьТаблицу_Товары(СтруктураШД, Отказ, Заголовок)
	тзДанные=Товары.Выгрузить();
	тзДанные.Колонки.Добавить("КоличествоДок");
	тзДанные.Колонки.Добавить("ЗаказПартии");	
	тзДанные.Колонки.Добавить("НомерСтрокиТабличнойЧасти");
	Для каждого СтрокаКоллекции Из тзДанные Цикл
		СтрокаКоллекции.КоличествоДок=СтрокаКоллекции.Количество;
		СтрокаКоллекции.Количество=СтрокаКоллекции.Количество*СтрокаКоллекции.Коэффициент/СтрокаКоллекции.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент;
		СтрокаКоллекции.ЗаказПартии=СтрокаКоллекции.ДокументРезерва;		
		СтрокаКоллекции.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтроки;
	КонецЦикла;
	ДополнитьТаблицуАтрибутамиШапки(СтруктураШД, тзДанные, "Товары");
	Возврат тзДанные;
КонецФункции

Функция СформироватьТаблицу_ТараВТ(СтруктураШД, Отказ, Заголовок)
	тзДанные=ВозвратнаяТара.Выгрузить();
	тзДанные.Колонки.Добавить("НомерСтрокиТабличнойЧасти");
	Для каждого СтрокаКоллекции Из тзДанные Цикл
		стрСообщение="";
		Если СтрокаКоллекции.Номенклатура.Услуга Тогда
			стрСообщение="содержится услуга. Услуг здесь быть не должно!";
		ИначеЕсли СтрокаКоллекции.Номенклатура.Набор Тогда
			стрСообщение="содержится набор-пакет. Наборов-пакетов здесь быть не должно!";
		ИначеЕсли СтрокаКоллекции.Номенклатура.ВестиУчетПоХарактеристикам Тогда
			стрСообщение="содержится номенклатура, по которой ведется учет по характеристикам. По возвратной таре не ведется учет по характеристикам!";
		КонецЕсли;
		Если НЕ ПустаяСтрока(стрСообщение) Тогда
			стрСообщение="В строке номер """+СокрЛП(СтрокаКоллекции.НомерСтроки)+""" табличной части ""Возвратная тара"": "+Символы.ПС+стрСообщение;
			ОбщегоНазначения.СообщитьОбОшибке(стрСообщение, Отказ, Заголовок);
		КонецЕсли;
		СтрокаКоллекции.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтроки;
	КонецЦикла;
	ДополнитьТаблицуАтрибутамиШапки(СтруктураШД, тзДанные, "Тара");
	Возврат тзДанные;	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Движения по регистрам 

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_ТоварыКПередачеСоСкладов(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_СписанныеТоварам(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетТМЦ(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетПартийТМЦ(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетРезервовТМЦ(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетТМЦ(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ТоварыНаСкладах") Тогда Возврат; КонецЕсли;

	тзДвижения=Движения.ТоварыНаСкладах.ВыгрузитьКолонки();

	//Товары
	Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
		Если СтрокаКоллекции.Склад.ВидСклада=Перечисления.ВидыСкладов.Оптовый Тогда
			Если Не СтрокаКоллекции.Склад.Ячеистый Тогда Продолжить; КонецЕсли;
			ЗаполнитьЗначенияСвойств(тзДвижения.Добавить(), СтрокаКоллекции);
		КонецЕсли;
	КонецЦикла;

	//Возвратная тара
	Для каждого СтрокаКоллекции Из СтруктураТД.ТараВТ Цикл
		Если СтрокаКоллекции.Склад.ВидСклада=Перечисления.ВидыСкладов.Оптовый Тогда
			Если Не СтрокаКоллекции.Склад.Ячеистый Тогда Продолжить; КонецЕсли;
			НоваяСтрока=тзДвижения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.Качество=Справочники.Качество.Новый;
		КонецЕсли;
	КонецЦикла;

	тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");

	Движения.ТоварыНаСкладах.Загрузить(тзДвижения);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ТоварыКПередачеСоСкладов(СтруктураШД, СтруктураТД, Отказ)
	тзДвижения=Движения.ТоварыКПередачеСоСкладов.ВыгрузитьКолонки();
	
	Для каждого СтрокаКоллекции1 Из СтруктураТД Цикл
		Для каждого СтрокаКоллекции2 Из СтрокаКоллекции1.Значение Цикл
			текДокументРезерва=СтрокаКоллекции2.ДокументРезерва;
			Если НЕ ЗначениеЗаполнено(текДокументРезерва) Тогда Продолжить; КонецЕсли;
			Если НЕ ТипЗнч(текДокументРезерва)=Тип("ДокументСсылка.РеализацияТоваровУслуг") И НЕ ТипЗнч(текДокументРезерва)=Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока=тзДвижения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции2);
			НоваяСтрока.ДокументПередачи=текДокументРезерва;
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Склад) Тогда
				НоваяСтрока.Склад=Склад;
			КонецЕсли; 
		КонецЦикла;
	КонецЦикла;

	тзДвижения.ЗаполнитьЗначения(Перечисления.СтатусыПартийТоваров.Купленный, "СтатусПартии");

	Движения.ТоварыКПередачеСоСкладов.Загрузить(тзДвижения);
КонецПроцедуры

Процедура ДвижениеПоРегистру_СписанныеТоварам(СтруктураШД, СтруктураТД, Отказ)

	НомерСтроки=1; тзДвижения=Движения.СписанныеТовары.ВыгрузитьКолонки();

	//Товары
	Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
		НоваяСтрока=тзДвижения.Добавить(); НомерСтроки=НомерСтроки+1;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.НомерСтрокиДокумента=НомерСтроки;
		НоваяСтрока.ДопустимыйСтатус1=Перечисления.СтатусыПартийТоваров.Купленный;
		НоваяСтрока.ДопустимыйСтатус2=Перечисления.СтатусыПартийТоваров.НаКомиссию;
		НоваяСтрока.СтоимостьСписаниеНУ=СтрокаКоллекции.УчетнаяСтоимостьНУ;
		НоваяСтрока.СтоимостьСписаниеУУ=СтрокаКоллекции.УчетнаяСтоимостьУУ;
		//*** НоваяСтрока.Склад=Склад;
		Если ЗначениеЗаполнено(СтрокаКоллекции.ДокументРезерва) тогда
			Если СтрокаКоллекции.ДокументРезерва.Метаданные().Имя="ЗаказПокупателя"  тогда
				НоваяСтрока.ЗаказСписания=СтрокаКоллекции.ДокументРезерва;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	//Возвратная тара
	Для каждого СтрокаКоллекции Из СтруктураТД.ТараВТ Цикл
		НоваяСтрока=тзДвижения.Добавить(); НомерСтроки=НомерСтроки+1;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.НомерСтрокиДокумента=НомерСтроки;
	КонецЦикла;

	//Заполнение регистра
	тзДвижения.ЗаполнитьЗначения(Подразделение, "Подразделение");
	тзДвижения.ЗаполнитьЗначения(Перечисления.КодыОперацийПартииТоваров.СписаниеПоИнвентаризации, "КодОперацииПартииТоваров");

	Движения.СписанныеТовары.Загрузить(тзДвижения);
	Движения.СписанныеТовары.Записать(Истина);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетРезервовТМЦ(СтруктураШД, СтруктураТД, Отказ)
	СтруктураПараметров=Новый Структура("МоментВремени,Дата,Ссылка,Организация");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, СтруктураШД);
	СтруктураПараметров.Вставить("тзУчетРезервовТМЦ", Движения.УчетРезервовТМЦ.ВыгрузитьКолонки());
	УправлениеРезервамиСервер.СформироватьДвиженияРасход(СтруктураПараметров, СтруктураТД, Отказ);
	Если НЕ СтруктураПараметров.тзУчетРезервовТМЦ.Количество()=0 Тогда
		Движения.УчетРезервовТМЦ.Загрузить(СтруктураПараметров.тзУчетРезервовТМЦ);
	КонецЕсли;
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
// Проведение по регистрам (по нескольким регистрам одного типа)

Процедура ДвижениеПоРегистру_УчетПартийТМЦ(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ПартииТоваровНаСкладах") Тогда Возврат; КонецЕсли;

	СтруктураШД.Вставить("Отказ", Отказ);
	СтруктураШД.Вставить("ТаблицаСписания", Движения.СписанныеТовары.Выгрузить());
	УправлениеЗапасамиПартионныйУчет.ДвижениеПартийТоваров(Ссылка, СтруктураШД);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ОбработкаЗаполнения(Основание)
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание) Тогда Возврат; КонецЕсли;

	Если ТипЗнч(Основание)=Тип("ДокументСсылка.ИнвентаризацияТМЦ") Тогда
		ИнвентаризацияТМЦ=Основание;
		ЗаполнитьТоварыПоИнвентаризацииТоваров(Основание, Ложь);		
	КонецЕсли;
	
	ОбработкаТабличныхЧастей.ЗаполнитьТиповыеОперации(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли;	
	
	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);    

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	//Формирование значений реквизитов шапки документа
	СтруктураШД=УправлениеДокументамиСервер.СформироватьСтруктуруШД(ЭтотОбъект);

	//Формирование значений реквизитов табличных частей
	СтруктураТД=Новый Структура;
	СтруктураТД.Вставить("Товары", СформироватьТаблицу_Товары(СтруктураШД, Отказ, Заголовок));
	СтруктураТД.Вставить("ТараВТ", СформироватьТаблицу_ТараВТ(СтруктураШД, Отказ, Заголовок));
	СтруктураТД.Вставить("Сделки", Сделки.Выгрузить());

	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);