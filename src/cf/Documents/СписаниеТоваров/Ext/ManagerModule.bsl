//////////////////////////////////////////////////////
//Доп.процедуры\функции управления печатными формами

Функция ПолучитьДанныеДляПечатиСписанияТоваров(СсылкаНаОбъект) Экспорт
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВидСкладаРозничный", Перечисления.ВидыСкладов.Розничный);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	Организация,
	|	Склад,
	|	Склад.Представление         КАК ПредставлениеСклада,
	|	Подразделение               КАК Подразделение,
	|	Подразделение.Представление КАК ПредставлениеПодразделения,
	|	СуммаДокумента,
	|	Константы.ВалютаРегламентированногоУчета ВалютаДокумента,
	|	Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Код                КАК Код,
	|		Номенклатура.Артикул            КАК Артикул,
	|		Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|		КоличествоМест,
	|		Количество,
	|		Качество,
	|		ЕдиницаИзмерения.Представление     КАК ЕдиницаИзмерения,
	|		ЕдиницаИзмеренияМест.Представление КАК ЕдиницаИзмеренияМест,
	|		ВЫБОР
	|			КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА Цена
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Цена,
	|		ВЫБОР
	|			КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Сумма,
	|		ХарактеристикаНоменклатуры КАК Характеристика,
	|		СерияНоменклатуры КАК Серия
	|	),
	|	ВозвратнаяТара.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Код                КАК Код,
	|		Номенклатура.Артикул            КАК Артикул,
	|		Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|		НЕОПРЕДЕЛЕНО КАК Характеристика,
	|		НЕОПРЕДЕЛЕНО КАК Серия,
	|		НЕОПРЕДЕЛЕНО КАК Качество,
	|		Количество,
	|		Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаИзмерения,
	|		0 КАК Цена,
	|		0 КАК Сумма
	|	)
	|ИЗ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров,
	|	Константы
	|
	|ГДЕ
	|	СписаниеТоваров.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки,
	|	ВозвратнаяТара.НомерСтроки
	|";
	
	ПараметрыПечати=Новый Структура;
	ПараметрыПечати.Вставить("ЭтоСкладРозничный", (СсылкаНаОбъект.Склад.ВидСклада=Перечисления.ВидыСкладов.Розничный));

	ВалютаПечати = МодульВалютногоУчета.ПолучитьВалюту("Бух");

	Если НЕ ПараметрыПечати.ЭтоСкладРозничный Тогда
		ТаблицаСтоимости=ПолучитьТаблицуСтоимостиТоваров(СсылкаНаОбъект);
		ТаблицаСтоимости.Индексы.Добавить("Номенклатура,Характеристика,Серия,Качество");
	КонецЕсли;

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	ВыборкаСтрокТара   = Шапка.ВозвратнаяТара.Выбрать();

	// Выводим шапку накладной
	ПараметрыПечати.Вставить("ТекстЗаголовка", ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Списание товаров"));

	ПараметрыПечати.Вставить("ПредставлениеОрганизации", ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ПолноеНаименование,"));
	ПараметрыПечати.Вставить("ПредставлениеПодразделения", Шапка.ПредставлениеПодразделения);
	ПараметрыПечати.Вставить("ПредставлениеСклада", Шапка.ПредставлениеСклада);
	
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ПараметрыПечати.Вставить("ВыводитьКоды", Не ПустаяСтрока(Колонка));
	ПараметрыПечати.Вставить("ИмяКолонкиКодов", Колонка);
	ПараметрыПечати.Вставить("ФлагПечатиМест", (СсылкаНаОбъект.Товары.Итог("КоличествоМест") > 0));
	
	Позиции=Новый Массив; СуммаИтого=0; Ном=0;

	// Товары
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		ПараметрыПозиции=Новый Структура; Ном=Ном+1;
		ПараметрыПозиции.Вставить("Номенклатура", ВыборкаСтрокТовары.Номенклатура);		
		ПараметрыПозиции.Вставить("НомерСтроки", Ном);

		Если ПараметрыПечати.ВыводитьКоды Тогда
			Если ПараметрыПечати.ИмяКолонкиКодов="Артикул" Тогда
				ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТовары.Артикул);
			Иначе
				ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТовары.Код);
			КонецЕсли;
		КонецЕсли;

		ПараметрыПозиции.Вставить("Товар", ВыборкаСтрокТовары.Товар + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары));

		Если ПараметрыПечати.ФлагПечатиМест Тогда
			ПараметрыПозиции.Вставить("КоличествоМест", ВыборкаСтрокТовары.КоличествоМест);
			ПараметрыПозиции.Вставить("ЕдиницаИзмеренияМест", ВыборкаСтрокТовары.ЕдиницаИзмеренияМест);
		КонецЕсли;
		
		ПараметрыПозиции.Вставить("Количество", ВыборкаСтрокТовары.Количество);
		ПараметрыПозиции.Вставить("ЕдиницаИзмерения", ВыборкаСтрокТовары.ЕдиницаИзмерения);
		ПараметрыПозиции.Вставить("Цена", ВыборкаСтрокТовары.Цена);
		ПараметрыПозиции.Вставить("Сумма", ВыборкаСтрокТовары.Сумма);
		Если ПараметрыПечати.ЭтоСкладРозничный Тогда
			Сумма = ВыборкаСтрокТовары.Сумма;
		Иначе
			Сумма = ПолучитьСтоимостьТовара(ТаблицаСтоимости, ВыборкаСтрокТовары);
			ПараметрыПозиции.Сумма = Сумма;
		КонецЕсли;

		СуммаИтого = СуммаИтого + Сумма;

		Позиции.Добавить(ПараметрыПозиции);
	КонецЦикла;

	// Тара
	Пока ВыборкаСтрокТара.Следующий() Цикл
		ПараметрыПозиции = Новый Структура; Ном=Ном+1;
		ПараметрыПозиции.Вставить("Номенклатура", ВыборкаСтрокТара.Номенклатура);		
		ПараметрыПозиции.Вставить("НомерСтроки", Ном);

		Если ПараметрыПечати.ВыводитьКоды Тогда
			Если ПараметрыПечати.ИмяКолонкиКодов = "Артикул" Тогда
				ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТара.Артикул);
			Иначе
				ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТара.Код);
			КонецЕсли;
		КонецЕсли;

		ПараметрыПозиции.Вставить("Товар", ВыборкаСтрокТара.Товар + " (возвратная тара)");

		Если ПараметрыПечати.ФлагПечатиМест Тогда
			ПараметрыПозиции.Вставить("КоличествоМест", 0);
			ПараметрыПозиции.Вставить("ЕдиницаИзмеренияМест", Справочники.ЕдиницыИзмерения.ПустаяСсылка());
		КонецЕсли;

		ПараметрыПозиции.Вставить("Количество", ВыборкаСтрокТара.Количество);
		ПараметрыПозиции.Вставить("ЕдиницаИзмерения", ВыборкаСтрокТара.ЕдиницаИзмерения);
		ПараметрыПозиции.Вставить("Цена", ВыборкаСтрокТара.Цена);
		ПараметрыПозиции.Вставить("Сумма", ВыборкаСтрокТара.Сумма);
		
		Если ПараметрыПечати.ЭтоСкладРозничный Тогда
			Сумма = ВыборкаСтрокТара.Сумма;
		Иначе
			Сумма = ПолучитьСтоимостьТовара(ТаблицаСтоимости, ВыборкаСтрокТара);
			ПараметрыПозиции.Сумма = Сумма;
		КонецЕсли;

		СуммаИтого = СуммаИтого + Сумма;

		Позиции.Добавить(ПараметрыПозиции);
	КонецЦикла;

	ПараметрыПечати.Вставить("Позиции", Позиции);
	ПараметрыПечати.Вставить("Всего", ОбщегоНазначения.ФорматСумм(СуммаИтого));

	// Вывести Сумму прописью
	ПараметрыПечати.Вставить("ИтоговаяСтрока", "Всего наименований "+Ном+", на сумму "+ОбщегоНазначения.ФорматСумм(СуммаИтого, ВалютаПечати));
	ПараметрыПечати.Вставить("СуммаПрописью", ОбщегоНазначения.СформироватьСуммуПрописью(СуммаИтого, ВалютаПечати));

	Возврат ПараметрыПечати;
КонецФункции

Функция ПолучитьТаблицуСтоимостиТоваров(СсылкаНаОбъект)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.Номенклатура               КАК Номенклатура,
	|	ИсточникДанных.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ИсточникДанных.СерияНоменклатуры          КАК Серия,
	|	ИсточникДанных.Качество                   КАК Качество,
	|	СУММА(ИсточникДанных.Количество)          КАК Количество,
	|	СУММА(ИсточникДанных.Стоимость)           КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Регистратор = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.ХарактеристикаНоменклатуры,
	|	ИсточникДанных.СерияНоменклатуры,
	|	ИсточникДанных.Качество
	|";
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьСтоимостьТовара(Таблица, ТекСтрока)
	СтруктураПоиска=Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура",   ТекСтрока.Номенклатура);
	СтруктураПоиска.Вставить("Характеристика", ТекСтрока.Характеристика);
	Если ТекСтрока.ВестиПартионныйУчетПоСериям Тогда
		СтруктураПоиска.Вставить("Серия", ТекСтрока.Серия);
	Иначе
		СтруктураПоиска.Вставить("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	КонецЕсли;
	СтруктураПоиска.Вставить("Качество", ТекСтрока.Качество);
		
	НаборСтрок = Таблица.НайтиСтроки(СтруктураПоиска);
	КолСписать = ТекСтрока.Количество;
	Стоимость  = 0;

	Для Каждого Строка Из НаборСтрок Цикл
		Если КолСписать >= Строка.Количество Тогда
			Стоимость         = Стоимость  + Строка.Стоимость;
			КолСписать        = КолСписать - Строка.Количество;
			Строка.Стоимость  = 0;
			Строка.Количество = 0;
		Иначе
			Если Не Строка.Количество = 0 Тогда
				СумСписать        = Окр(Строка.Стоимость * КолСписать / Строка.Количество, 2, 1);
				Стоимость         = Стоимость + СумСписать;
				Строка.Стоимость  = Строка.Стоимость  - СумСписать;
				Строка.Количество = Строка.Количество - КолСписать;
			Иначе
				Стоимость        = Стоимость + Строка.Стоимость;
				Строка.Стоимость = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат Стоимость;
КонецФункции

//////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("Ведомость", "Акт списания товаров");
	Структура.Вставить("ТОРГ16", "ТОРГ-16 (Акт о списании товаров)");
	Структура.Вставить("РасходСРозничныхСкладовВЦенахАТТ" , "Расход с розничных складов в ценах АТТ");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция Печать_СписаниеТоваров(СтруктураПараметров)
	
	ПараметрыПечати = ПолучитьДанныеДляПечатиСписанияТоваров(СтруктураПараметров.СсылкаНаОбъект);

	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеТоваров_Накладная";

	Макет = ИнициализацияМакета(СтруктураПараметров, "Накладная");

	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("РевизитыОрганизации");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьНомера  = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодов   = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьТовар   = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
	ОбластьМест    = Макет.ПолучитьОбласть("ШапкаТаблицы|Мест");
	ОбластьДанных  = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");

	ТабДокумент.Вывести(ОбластьНомера);
	Если ПараметрыПечати.ВыводитьКоды Тогда
		ОбластьКодов.Параметры.Заполнить(ПараметрыПечати);
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьТовар);
	ОбластьКолонкаТовар = Макет.Область("Товар");
	Если ПараметрыПечати.ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки=ОбластьКолонкаТовар.ШиринаКолонки+?(ПараметрыПечати.ФлагПечатиМест, 0, Макет.Область("R14C5").ШиринаКолонки + Макет.Область("R14C6").ШиринаКолонки);
	Иначе
		ОбластьКолонкаТовар.ШиринаКолонки=ОбластьКолонкаТовар.ШиринаКолонки+Макет.Область("КолонкаКодов").ШиринаКолонки+?(ПараметрыПечати.ФлагПечатиМест, 0, Макет.Область("R14C5").ШиринаКолонки + Макет.Область("R14C6").ШиринаКолонки);
	КонецЕсли;
	Если ПараметрыПечати.ФлагПечатиМест Тогда
		ТабДокумент.Присоединить(ОбластьМест);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьДанных);

	ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьТовар  = Макет.ПолучитьОбласть("Строка|Товар");
	ОбластьМест   = Макет.ПолучитьОбласть("Строка|Мест");
	ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");

	СуммаИтого = 0;
	Ном        = 0;

	// Товары и тара
	Для каждого ПараметрыПозиции Из ПараметрыПечати.Позиции Цикл
		Если НЕ ЗначениеЗаполнено(ПараметрыПозиции.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьНомера.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Вывести(ОбластьНомера);

		Если ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьКодов.Параметры.Заполнить(ПараметрыПозиции);
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;

		ОбластьТовар.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Присоединить(ОбластьТовар);

		Если ПараметрыПечати.ФлагПечатиМест Тогда
			ОбластьМест.Параметры.Заполнить(ПараметрыПозиции);
			ТабДокумент.Присоединить(ОбластьМест);
		КонецЕсли;

		ОбластьДанных.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Присоединить(ОбластьДанных);
	КонецЦикла;

	// Вывести Итого
	ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьТовар  = Макет.ПолучитьОбласть("Итого|Товар");
	ОбластьМест   = Макет.ПолучитьОбласть("Итого|Мест");
	ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");

	ТабДокумент.Вывести(ОбластьНомера);
	Если ПараметрыПечати.ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьТовар);
	Если ПараметрыПечати.ФлагПечатиМест Тогда
		ТабДокумент.Присоединить(ОбластьМест);
	КонецЕсли;
	ОбластьДанных.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Присоединить(ОбластьДанных);

	// Вывести Сумму прописью
	ОбластьМакета=Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести подписи
	ОбластьМакета=Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;
КонецФункции

Функция Печать_ТОРГ16(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;

	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ТоварКод=?(Колонка="","Код",Колонка);
	СкладРозничный=Перечисления.ВидыСкладов.Розничный;
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВидСкладаРозничный", Перечисления.ВидыСкладов.Розничный);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер                                    КАК НомерДокумента,
	|	Дата                                     КАК ДатаДокумента,
	|	Организация,
	|	Организация                              КАК Руководители,
	|	Склад,
	|	Склад.Представление                      КАК ПредставлениеСклада,
	|	Подразделение                            КАК Подразделение,
	|	Подразделение.Представление              КАК ПредставлениеПодразделения,
	|	Основание                                КАК Основание,
	|	Комментарий                              КАК Комментарий,
	|	Ответственный,
	|	СуммаДокумента,
	|	Константы.ВалютаРегламентированногоУчета КАК ВалютаДокумента,
	|	Товары.(
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное      КАК ТоварНаименование,
	|		Номенклатура."+ ТоварКод + "         КАК ТоварКод,
	|		Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|		Количество,
	|		КоличествоМест,
	|		Качество,
	|		ЕдиницаИзмерения.Представление               КАК ЕдиницаИзмеренияНаименование,
	|		ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		ЕдиницаИзмеренияМест.Представление           КАК ЕдиницаИзмеренияМестНаименование,
	|		ЕдиницаИзмерения.Вес                 КАК МассаОдногоМеста,
	|		Склад.ВидСклада		                 КАК ВидСклада,
	|		ВЫБОР
	|			КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА Цена
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Цена,
	|		ВЫБОР
	|			КОГДА Склад.ВидСклада = &ВидСкладаРозничный ТОГДА Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Стоимость,
	|		ХарактеристикаНоменклатуры           КАК Характеристика,
	|		СерияНоменклатуры                    КАК Серия
	|	),
	|	ВозвратнаяТара.(
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|		Номенклатура."+ ТоварКод + "    КАК ТоварКод,
	|		Количество,
	|		Номенклатура.ЕдиницаХраненияОстатков.Представление               КАК ЕдиницаИзмеренияНаименование,
	|		Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		Номенклатура.ЕдиницаХраненияОстатков.Вес КАК МассаОдногоМеста,
	|		Номенклатура.ВестиПартионныйУчетПоСериям КАК ВестиПартионныйУчетПоСериям,
	|		НЕОПРЕДЕЛЕНО КАК Характеристика,
	|		НЕОПРЕДЕЛЕНО КАК Серия,
	|		НЕОПРЕДЕЛЕНО КАК Качество,
	|		Склад.ВидСклада		                 КАК ВидСклада,
	|		0 КАК Цена,
	|		0 КАК Стоимость
	|	)
	|ИЗ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров, Константы
	|
	|ГДЕ
	|	СписаниеТоваров.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки,
	|	ВозвратнаяТара.НомерСтроки
	|";

	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Макет=ИнициализацияМакета(СтруктураПараметров, "ТОРГ16");
	
	ТабДокумент=Новый ТабличныйДокумент;
	//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеТоваров_ТОРГ16";

	// Выводим общие реквизиты шапки
	ОписаниеОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	
	ОбластьМакета=Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ПечатныеФормыСервер.ОписаниеОрганизации(ОписаниеОрганизации);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = ОписаниеОрганизации.КодПоОКПО;

	Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента, СтруктураПараметров.СсылкаНаОбъект);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.ФИОРуководителя = Руководитель;

	ТабДокумент.Вывести(ОбластьМакета);

	СтрокНаСтранице = 23;
	СтрокШапки      = 11;
	СтрокПодвала    = 0;
	НомерСтраницы   = 1;
	Ном             = 0;

	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	ВыборкаСтрокТара   = Шапка.ВозвратнаяТара.Выбрать();
	КоличествоСтрок    = ВыборкаСтрокТовары.Количество() + ВыборкаСтрокТара.Количество();

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицыПервогоЛиста");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПервогоЛиста");

	// Товары
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	ТаблицаСтоимости=ПолучитьТаблицуСтоимостиТоваров(СсылкаНаОбъект);
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;

		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) Или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			ИтогоСтоимостьПоСтранице=0;
			НомерСтраницы=НомерСтраницы+1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.ДатаСписанияТовара = Шапка.ДатаДокумента;

		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	// Тара
	ВыборкаСтрокТара=Шапка.ВозвратнаяТара.Выбрать();
	Пока ВыборкаСтрокТара.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТара.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;

		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		Если (ЦелаяСтраница=Цел(ЦелаяСтраница)) Или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			ИтогоСтоимостьПоСтранице=0;
			НомерСтраницы=НомерСтраницы+1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТара);
		ОбластьМакета.Параметры.ДатаСписанияТовара = Шапка.ДатаДокумента;

		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	СтрокНаСтранице = 27;
	СтрокШапки      = 5;
	СтрокПодвала    = 11;
	НомерСтраницы   = 1;
	Ном             = 0;

	//ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	НомерСтраницы=НомерСтраницы + 1;
	ЗаголовокТаблицы=Макет.ПолучитьОбласть("ЗаголовокТаблицыВторогоЛиста");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	ИтогоСтоимость = 0;

	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаВторогоЛиста");

	// Товары
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	Пока ВыборкаСтрокТовары.Следующий() Цикл
        Стоимость=0;
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;

		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			ИтогоСтоимостьПоСтранице = 0;
			НомерСтраницы            = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;
	
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		
		//Если НЕ ВыборкаСтрокТовары.ВидСклада=СкладРозничный Тогда
			Стоимость=ПолучитьСтоимостьТовара(ТаблицаСтоимости, ВыборкаСтрокТовары);
			ОбластьМакета.Параметры.Стоимость=Стоимость;
			ОбластьМакета.Параметры.Цена=Стоимость/ВыборкаСтрокТовары.Количество;
		//КонецЕсли; 

		КоличествоМест = Формат(ВыборкаСтрокТовары.Количество, "ЧЦ=15; ЧДЦ=3");

		Если ВыборкаСтрокТовары.КоличествоМест <> 0 И ЗначениеЗаполнено(ВыборкаСтрокТовары.ЕдиницаИзмеренияМестНаименование) Тогда
			КоличествоМест=КоличествоМест+Символы.ПС+" ("+Формат(ВыборкаСтрокТовары.КоличествоМест,"ЧЦ=15; ЧДЦ=0")+" "+ВыборкаСтрокТовары.ЕдиницаИзмеренияМестНаименование+")";
		КонецЕсли;

		ОбластьМакета.Параметры.КоличествоМест    = КоличествоМест;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
		МассаНетто                                = ВыборкаСтрокТовары.МассаОдногоМеста * ВыборкаСтрокТовары.КоличествоМест;
		ОбластьМакета.Параметры.МассаНетто        = МассаНетто;

		ТабДокумент.Вывести(ОбластьМакета);

		// Обновим итоги по документу
		ИтогоСтоимость = ИтогоСтоимость + Стоимость;
	КонецЦикла;

	// Тара
	ВыборкаСтрокТара = Шапка.ВозвратнаяТара.Выбрать();
	Пока ВыборкаСтрокТара.Следующий() Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТара.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;

		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) Или ((ПереноситьПоследнююСтроку = 1) И (Ном = КоличествоСтрок)) Тогда
			ИтогоСтоимостьПоСтранице=0;
			НомерСтраницы=НомерСтраницы+1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;
	
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТара);

		//Если НЕ ВыборкаСтрокТара.ВидСклада=СкладРозничный Тогда
			Стоимость=ПолучитьСтоимостьТовара(ТаблицаСтоимости, ВыборкаСтрокТара);
			ОбластьМакета.Параметры.Стоимость=Стоимость;
			ОбластьМакета.Параметры.Цена=Стоимость/ВыборкаСтрокТара.Количество;
		//КонецЕсли; 
		
		ОбластьМакета.Параметры.КоличествоМест    = Формат(ВыборкаСтрокТара.Количество, "ЧЦ=15; ЧДЦ=3");
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТара.ТоварНаименование + " (возвратная тара)";

		ТабДокумент.Вывести(ОбластьМакета);

		// Обновим итоги по документу
		ИтогоСтоимость = ИтогоСтоимость + ВыборкаСтрокТара.Стоимость;
	КонецЦикла;

	// Выводим итоги по документу в общем
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Итого = ИтогоСтоимость;
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.СуммаСписанияПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(ИтогоСтоимость, Шапка.ВалютаДокумента);
	
	ОтветственныеЛицаОрганизации = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.ДатаДокумента, СсылкаНаОбъект);
	ДолжностьМОЛ=Шапка.Ответственный; //?(ЗначениеЗаполнено(Шапка.Ответственный),РегистрыСведений.КадровыеСведения.СрезПоследних(Шапка.ДатаДокумента, Новый Структура("Организация, Сотрудник",Шапка.Организация, Шапка.Ответственный.ФизЛицо)), "");

	Если ТипЗнч(ДолжностьМОЛ)=Тип("ТаблицаЗначений") И ДолжностьМОЛ.Количество()>0 Тогда
		ДолжностьМОЛ=ДолжностьМОЛ[0].Должность;
	Иначе
		ДолжностьМОЛ="";
	КонецЕсли; 
	ФИОМОЛ=?(ЗначениеЗаполнено(Шапка.Ответственный), ПечатныеФормыСервер.ФамилияИмяОтчество(Шапка.Ответственный.ФизЛицо,Шапка.ДатаДокумента), "");
	ОбластьМакета.Параметры.ФИОПредседателя=ОтветственныеЛицаОрганизации.ПредседательКомиссии;
	ОбластьМакета.Параметры.ФИОЧленаКомиссии2=ОтветственныеЛицаОрганизации.ЧленКомиссии1;
	ОбластьМакета.Параметры.ФИОЧленаКомиссии3=ОтветственныеЛицаОрганизации.ЧленКомиссии2;
	ОбластьМакета.Параметры.ФИОЧленаКомиссии4=ОтветственныеЛицаОрганизации.ЧленКомиссии3;
	ОбластьМакета.Параметры.ФИОМОЛ=?(ЗначениеЗаполнено(ФИОМОЛ), СокрЛП(ФИОМОЛ.Фамилия)+" "+Лев(ФИОМОЛ.Имя,1)+"."+Лев(ФИОМОЛ.Отчество,1)+".","");
	ОбластьМакета.Параметры.ДолжностьМОЛ=ДолжностьМОЛ;
	ОбластьМакета.Параметры.ДолжностьПредседателя=ОтветственныеЛицаОрганизации.ПредседательКомиссииДолжность;
	ОбластьМакета.Параметры.ДолжностьЧленаКомиссии2=ОтветственныеЛицаОрганизации.ЧленКомиссииДолжность1;
	ОбластьМакета.Параметры.ДолжностьЧленаКомиссии3=ОтветственныеЛицаОрганизации.ЧленКомиссииДолжность2;
	ОбластьМакета.Параметры.ДолжностьЧленаКомиссии4=ОтветственныеЛицаОрганизации.ЧленКомиссииДолжность3;
	ОбластьМакета.Параметры.ИсточникПокрытияУбытка=СокрЛП(Шапка.Комментарий);
	
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;
КонецФункции

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	Если СтруктураПараметров.ИмяМакета="Ведомость" Тогда
		ТабДокумент=Печать_СписаниеТоваров(СтруктураПараметров);

	ИначеЕсли СтруктураПараметров.ИмяМакета="ТОРГ16" тогда
		ТабДокумент=Печать_ТОРГ16(СтруктураПараметров);

	ИначеЕсли СтруктураПараметров.ИмяМакета="РасходСРозничныхСкладовВЦенахАТТ" Тогда
		ТабДокумент=ПечатныеФормыСервер.ПриходРасходСРозничныхСкладовВЦенахАТТ(СтруктураПараметров.СсылкаНаОбъект, МодульВалютногоУчета.ПолучитьВалюту("Бух"), Ложь);
	КонецЕсли; 

	Возврат ТабДокумент;
КонецФункции