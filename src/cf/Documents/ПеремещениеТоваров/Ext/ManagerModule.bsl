////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("Ведомость", "Перемещение товаров");
	Структура.Вставить("ТОРГ13", "ТОРГ-13 (Накладная на внутреннее перемещение)");
	Структура.Вставить("_1Т", "1-Т (Товарно-транспортная накладная)");
	Структура.Вставить("М4", "М-4 (Приходный ордер)");
	Структура.Вставить("М11", "M-11 (Требование-накладная)");
	Структура.Вставить("БланкОтправитель", "Бланк товарного наполнения, склад отправитель");
	Структура.Вставить("БланкПолучатель", "Бланк товарного наполнения, склад получатель");
	Структура.Вставить("РасходСРозничныхСкладовВЦенахАТТ", "Расход с розничных складов в ценах АТТ");
	Структура.Вставить("ПриходНаРозничныеСкладыВЦенахАТТ", "Приход на розничные склады в ценах АТТ");
	Структура.Вставить("МХ1", "МХ-1 (Передача на хранение)");
	Структура.Вставить("МХ3", "МХ-3 (Акт Возврат ТМЦ)");
	Структура.Вставить("БухгалтерскаяСправка", "Бухгалтерская справка");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция СформироватьЗапросПоТабличнойЧасти(ДокументОбъект, ИмяТабличнойЧасти)
	ТекстЗапроса="";
	Для Каждого мдРеквизит Из ДокументОбъект.Метаданные().ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты Цикл
		ТекстЗапроса=ТекстЗапроса+",Док."+мдРеквизит.Имя;
	КонецЦикла;

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка" , ДокументОбъект);
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|	Док.НомерСтроки "+ТекстЗапроса+"
	|ИЗ 
	|	Документ."+ДокументОбъект.Метаданные().Имя+"."+СокрЛП(ИмяТабличнойЧасти)+" КАК Док
	|ГДЕ
	|	Док.Ссылка = &ДокументСсылка
	|";
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьДанныеДляПечатиПеремещенияТоваров(СтруктураПараметров) Экспорт
	ПараметрыПечати=Новый Структура;
	ВалютаПечати = МодульВалютногоУчета.ПолучитьВалюту("Бух");
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	Организация,
	|	СкладОтправитель,
	|	СкладОтправитель.Ячеистый Как СкладОтправительЯчеистый,
	|	СкладОтправитель.Представление КАК Поставщик,
	|	СкладПолучатель,
	|	СкладПолучатель.Ячеистый Как СкладПолучательЯчеистый,
	|	СкладПолучатель.Представление  КАК Покупатель,
	|	Товары.(
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Код                КАК Код,
	|		Номенклатура.Артикул            Как Артикул,
	|		КоличествоМест,
	|		Количество,
	|		Номенклатура.ВестиПартионныйУчетПоСериям КАК ПартионныйУчетПоСериям,
	|		ЕдиницаИзмерения.Представление     КАК ЕдиницаИзмерения,
	|		ЕдиницаИзмеренияМест.Представление КАК ЕдиницаИзмеренияМест,
	|		Цена,
	|		ХарактеристикаНоменклатуры КАК Характеристика,
	|		СерияНоменклатуры КАК Серия,
	|		НомерСтроки КАК НомерСтроки,
	|		Ячейка КАК Ячейка,
	|		ЯчейкаНовая КАК ЯчейкаНовая
	|	),
	|	ВозвратнаяТара.(
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Код                КАК Код,
	|		Номенклатура.Артикул            КАК Артикул,
	|		0 КАК КоличествоМест,
	|		Количество,
	|		Номенклатура.ВестиПартионныйУчетПоСериям     КАК ПартионныйУчетПоСериям,
	|		0 КАК Цена,
	|		Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаИзмерения,
	|		NULL                                               КАК ЕдиницаИзмеренияМест,
	|		НомерСтроки КАК НомерСтроки,
	|	)
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки,
	|	ВозвратнаяТара.НомерСтроки
	|";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	ВыборкаСтрокТара   = Шапка.ВозвратнаяТара.Выбрать();

	ЭтоСкладРозничный=(Шапка.СкладОтправитель.ВидСклада = Перечисления.ВидыСкладов.Розничный ИЛИ Шапка.СкладПолучатель.ВидСклада = Перечисления.ВидыСкладов.Розничный);
	Если НЕ ЭтоСкладРозничный Тогда
		ТаблицаСтоимости=ПолучитьТаблицуСтоимостиТоваров(СтруктураПараметров.СсылкаНаОбъект);
		ТаблицаСтоимости.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");

		ВалютаУпрУчета=МодульВалютногоУчета.ПолучитьВалюту("Упр");
		Параметры=МодульВалютногоУчета.КурсВалюты(ВалютаУпрУчета, Шапка.Дата);
		КурсВалютыУпрУчета=Параметры.Курс;
		КратностьВалютыУпрУчета=Параметры.Кратность;
	КонецЕсли;
	тзТовары=Шапка.Товары.Выгрузить();
	
	ЯчеистыйУчет1=Шапка.СкладОтправительЯчеистый;
	ЯчеистыйУчет2=Шапка.СкладПолучательЯчеистый;
	ЕстьЯчеистыйУчет=ЯчеистыйУчет1 Или ЯчеистыйУчет2;
	стрНомерСтроки=?(ЕстьЯчеистыйУчет, "", ",НомерСтроки");
	
	ТаблицаТовары=тзТовары.Скопировать(); 
	ТаблицаТовары.Колонки.Характеристика.Имя="ХарактеристикаНоменклатуры";
	ТаблицаТовары.Колонки.Серия.Имя="СерияНоменклатуры";
	ТаблицаТовары.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры"+стрНомерСтроки, "Количество");
	ТаблицаТовары.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры"+стрНомерСтроки);

	СтруктураПоискаПоТоварам=Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры"+стрНомерСтроки);

	// Выводим шапку накладной
	ПараметрыПечати.Вставить("ТекстЗаголовка", ОбщегоНазначения.СформироватьЗаголовокДокумента(СтруктураПараметров.СсылкаНаОбъект, "Накладная на перемещение"));

	ПараметрыПечати.Вставить("ПредставлениеПоставщика", Шапка.Поставщик);
	ПараметрыПечати.Вставить("Поставщик", Шапка.СкладОтправитель);

	ПараметрыПечати.Вставить("ПредставлениеПолучателя", Шапка.Покупатель);
	ПараметрыПечати.Вставить("Получатель", Шапка.СкладПолучатель);

	// Вывести табличную часть
	
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ПараметрыПечати.Вставить("ВыводитьКоды", Не ПустаяСтрока(Колонка));
	ПараметрыПечати.Вставить("ИмяКолонкиКодов", Колонка);
	ПараметрыПечати.Вставить("ВыводитьЦены", Шапка.СкладОтправитель.ВидСклада = Перечисления.ВидыСкладов.Розничный ИЛИ Шапка.СкладПолучатель.ВидСклада = Перечисления.ВидыСкладов.Розничный);
	ПараметрыПечати.Вставить("ФлагПечатиМест", (СтруктураПараметров.СсылкаНаОбъект.Товары.Итог("КоличествоМест") > 0));
	
	Позиции=Новый Массив; Ном=0;

	// Выборка товаров	
	тзДанные=тзТовары.Скопировать();
	тзДанные.Свернуть("Артикул,ЕдиницаИзмерения,ЕдиницаИзмеренияМест,Код,Номенклатура,ПартионныйУчетПоСериям,Серия,Товар,Характеристика"+стрНомерСтроки, "Цена,Количество,КоличествоМест");
	Для каждого ВыборкаСтрокТовары Из тзДанные Цикл
		ПараметрыПозиции=Новый Структура; Ном=Ном+1;
		ПараметрыПозиции.Вставить("Номенклатура", ВыборкаСтрокТовары.Номенклатура);		
		
		Если НЕ ЕстьЯчеистыйУчет Тогда
			ПараметрыПозиции.Вставить("НомерСтроки", Ном);
		КонецЕсли;

		Если ПараметрыПечати.ВыводитьКоды Тогда
			Если ПараметрыПечати.ИмяКолонкиКодов = "Артикул" Тогда
				ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТовары.Артикул);
			Иначе
				ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТовары.Код);
			КонецЕсли;
		КонецЕсли;

		ПараметрыПозиции.Вставить("Товар", ВыборкаСтрокТовары.Товар + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары));

		Если ПараметрыПечати.ФлагПечатиМест Тогда
			ПараметрыПозиции.Вставить("КоличествоМест", ВыборкаСтрокТовары.КоличествоМест);
			ПараметрыПозиции.Вставить("ЕдиницаИзмеренияМест", ВыборкаСтрокТовары.ЕдиницаИзмеренияМест);
		КонецЕсли;

		ПараметрыПозиции.Вставить("Количество", ВыборкаСтрокТовары.Количество);
		ПараметрыПозиции.Вставить("ЕдиницаИзмерения", ВыборкаСтрокТовары.ЕдиницаИзмерения);
		
		Если Шапка.СкладОтправитель.ВидСклада = Перечисления.ВидыСкладов.Розничный ИЛИ Шапка.СкладПолучатель.ВидСклада = Перечисления.ВидыСкладов.Розничный Тогда
			ПараметрыПозиции.Вставить("Цена", ВыборкаСтрокТовары.Цена);
			ПараметрыПозиции.Вставить("Сумма", ВыборкаСтрокТовары.Цена*ВыборкаСтрокТовары.Количество);
		Иначе
			
			Если ВыборкаСтрокТовары.Количество = 0 Тогда
				Сумма = 0;
				Цена  = 0;
			Иначе
				Количество = 0;
				Сумма = ПолучитьСтоимостьТовара(ТаблицаСтоимости,
				                                ВыборкаСтрокТовары.Номенклатура,
				                                ВыборкаСтрокТовары.Характеристика,
				                                ВыборкаСтрокТовары.Серия,
				                                ВыборкаСтрокТовары.ПартионныйУчетПоСериям,
				                                Количество, ?(ЕстьЯчеистыйУчет, 0, ВыборкаСтрокТовары.НомерСтроки));
				Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(Сумма, ВалютаУпрУчета, ВалютаПечати, КурсВалютыУпрУчета, 1, КратностьВалютыУпрУчета, 1);
				
				СтруктураПоискаПоТоварам.Номенклатура = ВыборкаСтрокТовары.Номенклатура;
				СтруктураПоискаПоТоварам.ХарактеристикаНоменклатуры = ВыборкаСтрокТовары.Характеристика;
				СтруктураПоискаПоТоварам.СерияНоменклатуры = ВыборкаСтрокТовары.Серия;
				СтрокиТаблицыТовары = ТаблицаТовары.НайтиСтроки(СтруктураПоискаПоТоварам);
				Цена = Окр(?(Количество > 0, Сумма / Количество, 0), 2);
				Сумма = Цена * ВыборкаСтрокТовары.Количество;
			КонецЕсли;
			
			ПараметрыПозиции.Вставить("Цена", Цена);
			ПараметрыПозиции.Вставить("Сумма", Сумма);
		КонецЕсли;
		
		Позиции.Добавить(ПараметрыПозиции);
	КонецЦикла;

	// Выборка возвратная тара
	Пока ВыборкаСтрокТара.Следующий() Цикл
		ПараметрыПозиции=Новый Структура; Ном=Ном+1;
		ПараметрыПозиции.Вставить("Номенклатура", ВыборкаСтрокТара.Номенклатура);		
		ПараметрыПозиции.Вставить("НомерСтроки", Ном);

		Если ПараметрыПечати.ВыводитьКоды Тогда
			Если ПараметрыПечати.ИмяКолонкиКодов = "Артикул" Тогда
				ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТара.Артикул);
			Иначе
				ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТара.Код);
			КонецЕсли;
		КонецЕсли;

		ПараметрыПозиции.Вставить("Товар", ВыборкаСтрокТара.Товар);

		Если ПараметрыПечати.ФлагПечатиМест Тогда
			ПараметрыПозиции.Вставить("КоличествоМест", ВыборкаСтрокТара.КоличествоМест);
			ПараметрыПозиции.Вставить("ЕдиницаИзмеренияМест", ВыборкаСтрокТара.ЕдиницаИзмеренияМест);
		КонецЕсли;
		
		ПараметрыПозиции.Вставить("Количество", ВыборкаСтрокТара.Количество);
		ПараметрыПозиции.Вставить("ЕдиницаИзмерения", ВыборкаСтрокТара.ЕдиницаИзмерения);
		ПараметрыПозиции.Вставить("Цена", ВыборкаСтрокТара.Цена);

		Позиции.Добавить(ПараметрыПозиции);
	КонецЦикла;

	ПараметрыПечати.Вставить("Позиции", Позиции);
	ПараметрыПечати.Вставить("Товары", Шапка.Товары.Выгрузить());

	ПараметрыПечати.Вставить("ЯчеистыйУчет1", Шапка.СкладОтправительЯчеистый);
	ПараметрыПечати.Вставить("ЯчеистыйУчет2", Шапка.СкладПолучательЯчеистый);

	Возврат ПараметрыПечати;
КонецФункции

Функция ПолучитьТаблицуСтоимостиТоваров(СсылкаНаОбъект)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВидДвижения",     ВидДвиженияНакопления.Расход);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ПартииТоваровНаСкладах.Номенклатура,
	|	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладах.СерияНоменклатуры,
	|	ПартииТоваровНаСкладах.НомерСтрокиТабличнойЧасти КАК НомерСтроки,
	|	СУММА(ПартииТоваровНаСкладах.Стоимость) КАК Стоимость,
	|	СУММА(ПартииТоваровНаСкладах.Количество) КАК Количество
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	|
	|ГДЕ
	|	ПартииТоваровНаСкладах.Регистратор   = &ТекущийДокумент
	|	И ПартииТоваровНаСкладах.ВидДвижения = &ВидДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладах.Номенклатура,
	|	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладах.СерияНоменклатуры,
	|	ПартииТоваровНаСкладах.НомерСтрокиТабличнойЧасти
	|";
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьСтоимостьТовара(Таблица, Номенклатура, Характеристика = Неопределено, Серия = Неопределено, ПартионныйУчетПоСериям = Ложь, Количество, НомерСтроки=0)

	СтруктураПоиска=Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", Номенклатура);
	Если НомерСтроки > 0 Тогда
		СтруктураПоиска.Вставить("НомерСтроки", НомерСтроки);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Характеристика) Тогда
		СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры", Характеристика);
	КонецЕсли;
	Если ПартионныйУчетПоСериям И ЗначениеЗаполнено(Серия) Тогда
		СтруктураПоиска.Вставить("СерияНоменклатуры", Серия);
	КонецЕсли;

	Строки=Таблица.НайтиСтроки(СтруктураПоиска);
	Если Строки.Количество()=1 Тогда
		Стоимость=Строки[0].Стоимость;
		Количество=Строки[0].Количество;

	ИначеЕсли Строки.Количество() > 1 Тогда
		тзДанные=Таблица.Скопировать(Строки);
		Стоимость=тзДанные.Итог("Стоимость");
		Количество=тзДанные.Итог("Количество");
	Иначе
		Стоимость=0;
		Количество=0;
	КонецЕсли;

	Возврат Стоимость;
КонецФункции

Функция Печать_ПеремещениеТоваров(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	ПараметрыПечати=ПолучитьДанныеДляПечатиПеремещенияТоваров(СтруктураПараметров);     

	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;	

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_Накладная";
	
	Макет=ИнициализацияМакета(СтруктураПараметров, "Накладная");

	// Выводим шапку накладной	
	ОбластьМакета=Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета=Макет.ПолучитьОбласть("Поставщик");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета=Макет.ПолучитьОбласть("Покупатель");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ОбластьМакета.Параметры.Комментарий="Комментарий: "+СокрЛП(СсылкаНаОбъект.Комментарий);
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести табличную часть
	Если ПараметрыПечати.ВыводитьЦены Тогда
		ИмяШапки  = "ШапкаТаблицыСЦенами";
		ИмяСтроки = "СтрокаСЦенами";
	Иначе
		ИмяШапки  = "ШапкаТаблицы";
		ИмяСтроки = "Строка";
	КонецЕсли;

	ОбластьНомера  = Макет.ПолучитьОбласть(ИмяШапки + "|НомерСтроки");
	ОбластьКодов   = Макет.ПолучитьОбласть(ИмяШапки + "|КолонкаКодов");
	ОбластьТовар   = Макет.ПолучитьОбласть(ИмяШапки + "|Товар");
	ОбластьМест    = Макет.ПолучитьОбласть(ИмяШапки + "|Мест");
	ОбластьДанных  = Макет.ПолучитьОбласть(ИмяШапки + "|Данные");

	ТабДокумент.Вывести(ОбластьНомера);
	
	Если ПараметрыПечати.ВыводитьКоды Тогда
		ОбластьКодов.Параметры.ИмяКолонкиКодов = ПараметрыПечати.ИмяКолонкиКодов;
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	
	ТабДокумент.Присоединить(ОбластьТовар);

	ОбластьКолонкаТовар=Макет.Область("Товар");

	Если ПараметрыПечати.ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки+?(ПараметрыПечати.ФлагПечатиМест, 0, Макет.Область("R14C5").ШиринаКолонки + Макет.Область("R14C6").ШиринаКолонки);
	Иначе
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки+Макет.Область("КолонкаКодов").ШиринаКолонки+?(ПараметрыПечати.ФлагПечатиМест, 0, Макет.Область("R14C5").ШиринаКолонки + Макет.Область("R14C6").ШиринаКолонки);
	КонецЕсли;
	
	Ячеистый1=ПараметрыПечати.ЯчеистыйУчет1;
	Ячеистый2=ПараметрыПечати.ЯчеистыйУчет1;

	Если Ячеистый1 Тогда
		ОбластьЯчейки=Макет.ПолучитьОбласть(ИмяШапки+"|Ячейки1");
		ТабДокумент.Присоединить(ОбластьЯчейки);
	КонецЕсли;
	
	Если Ячеистый2 Тогда
		ОбластьЯчейки=Макет.ПолучитьОбласть(ИмяШапки+"|Ячейки2");
		ТабДокумент.Присоединить(ОбластьЯчейки);
	КонецЕсли;

	Если ПараметрыПечати.ФлагПечатиМест Тогда
		ТабДокумент.Присоединить(ОбластьМест);
	КонецЕсли;
	
	ТабДокумент.Присоединить(ОбластьДанных);

	ОбластьНомера  = Макет.ПолучитьОбласть(ИмяСтроки+"|НомерСтроки");
	ОбластьКодов   = Макет.ПолучитьОбласть(ИмяСтроки+"|КолонкаКодов");
	ОбластьТовар   = Макет.ПолучитьОбласть(ИмяСтроки+"|Товар");
	ОбластьМест    = Макет.ПолучитьОбласть(ИмяСтроки+"|Мест");
	ОбластьДанных  = Макет.ПолучитьОбласть(ИмяСтроки+"|Данные");
	ОбластьЯчейки1 = Макет.ПолучитьОбласть(ИмяСтроки+"|Ячейки1");
	ОбластьЯчейки2 = Макет.ПолучитьОбласть(ИмяСтроки+"|Ячейки2");

	// Выборка товаров
	
	Для каждого ПараметрыПозиции Из ПараметрыПечати.Позиции Цикл
		Если НЕ ЗначениеЗаполнено(ПараметрыПозиции.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьНомера.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Вывести(ОбластьНомера);
		
		Если ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьКодов.Параметры.Заполнить(ПараметрыПозиции);
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;

		ОбластьТовар.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Присоединить(ОбластьТовар);

		Если Ячеистый1 Тогда
			стрЯчейки="";
			МассивСтрок=ПараметрыПечати.Товары.НайтиСтроки(Новый Структура("Номенклатура", ПараметрыПозиции.Номенклатура));
			МассивСтрок=ПараметрыПечати.Товары.Скопировать(МассивСтрок, "Ячейка");
			МассивСтрок.Свернуть("Ячейка", "");              
			Для каждого СтрокаКоллекции Из МассивСтрок Цикл
				стрЯчейки=стрЯчейки+?(стрЯчейки="", "", Символы.ПС)+СокрЛП(СтрокаКоллекции.Ячейка);
			КонецЦикла;
			ОбластьЯчейки1.Параметры.Ячейки1=стрЯчейки;
			ТабДокумент.Присоединить(ОбластьЯчейки1);
		КонецЕсли;
		
		Если Ячеистый2 Тогда
			стрЯчейки="";
			МассивСтрок=ПараметрыПечати.Товары.НайтиСтроки(Новый Структура("Номенклатура", ПараметрыПозиции.Номенклатура));
			МассивСтрок=ПараметрыПечати.Товары.Скопировать(МассивСтрок, "ЯчейкаНовая");
			МассивСтрок.Свернуть("ЯчейкаНовая", "");                                                   
			Для каждого СтрокаКоллекции Из МассивСтрок Цикл
				стрЯчейки=стрЯчейки+?(стрЯчейки="", "", Символы.ПС)+СокрЛП(СтрокаКоллекции.ЯчейкаНовая);
			КонецЦикла;
			ОбластьЯчейки2.Параметры.Ячейки2=стрЯчейки;
			ТабДокумент.Присоединить(ОбластьЯчейки2);
		КонецЕсли;

		Если ПараметрыПечати.ФлагПечатиМест Тогда
			ОбластьМест.Параметры.Заполнить(ПараметрыПозиции);
			ТабДокумент.Присоединить(ОбластьМест);
		КонецЕсли;
		
		ОбластьДанных.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Присоединить(ОбластьДанных);
	КонецЦикла;
	
	// Вывести подвал	
	ОбластьНомера = Макет.ПолучитьОбласть("Подвал|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Подвал|КолонкаКодов");
	ОбластьТовар  = Макет.ПолучитьОбласть("Подвал|Товар");
	ОбластьМест   = Макет.ПолучитьОбласть("Подвал|Мест");
	ОбластьДанных = Макет.ПолучитьОбласть("Подвал|Данные");

	ТабДокумент.Вывести(ОбластьНомера);
	Если ПараметрыПечати.ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	
	ТабДокумент.Присоединить(ОбластьТовар);
	
	Если Ячеистый1 Тогда
		ТабДокумент.Присоединить(Макет.ПолучитьОбласть("Подвал|Ячейки1"));
	КонецЕсли;
	
	Если Ячеистый2 Тогда
		ТабДокумент.Присоединить(Макет.ПолучитьОбласть("Подвал|Ячейки2"));
	КонецЕсли;
	
	Если ПараметрыПечати.ФлагПечатиМест Тогда
		ТабДокумент.Присоединить(ОбластьМест);
	КонецЕсли;
	
	ТабДокумент.Присоединить(ОбластьДанных);
	
	// Вывести подписи
	ОбластьМакета=Макет.ПолучитьОбласть("Подписи");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;	
КонецФункции

Функция Печать_ТОРГ13(СтруктураПараметров)

	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ТоварКод=?(Колонка="","Код",Колонка);

	ВалютаПечати = МодульВалютногоУчета.ПолучитьВалюту("Бух");
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Дата  КАК Дата,
	|	Номер КАК НомерДокумента,
	|	Дата  КАК ДатаДокумента,
	|	Организация,
	|	СкладОтправитель КАК ОтправительПодразделение,
	|	СкладПолучатель  КАК ПолучательПодразделение,
	|	СкладОтправитель.ВидСклада КАК ОтправительВидСклада,
	|	СкладПолучатель.ВидСклада  КАК ПолучательВидСклада,
	|	Товары.(
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|		Номенклатура." + ТоварКод + " КАК ТоварКод,
	|		Цена,
	|		Количество,
	|		КоличествоМест,
	|		ЕдиницаИзмерения.Представление               КАК ЕдиницаИзмеренияНаименование,
	|		ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		ЕдиницаИзмеренияМест.Представление           КАК ЕдиницаИзмеренияМестНаименование,
	|		ВЫБОР
	|			КОГДА КоличествоМест > 0 ТОГДА ЕдиницаИзмеренияМест.Коэффициент / Коэффициент
	|			ИНАЧЕ NULL
	|		КОНЕЦ                                        КАК КоличествоВОдномМесте,
	|		ХарактеристикаНоменклатуры                   КАК Характеристика,
	|		СерияНоменклатуры                            КАК Серия,
	|		Номенклатура.ВестиПартионныйУчетПоСериям     КАК ПартионныйУчетПоСериям,
	|		НомерСтроки КАК НомерСтроки
	|	),
	|	ВозвратнаяТара.(
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|		Номенклатура." + ТоварКод + " КАК ТоварКод,
	|		0 КАК Цена,
	|		0 КАК Сумма,
	|		0 КАК КоличествоВОдномМесте,
	|		Количество,
	|		Номенклатура.ЕдиницаХраненияОстатков.Представление               КАК ЕдиницаИзмеренияНаименование,
	|		Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		НомерСтроки КАК НомерСтроки
	|	)
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки,
	|	ВозвратнаяТара.НомерСтроки
	|";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	ВыборкаСтрокТара   = Шапка.ВозвратнаяТара.Выбрать();

	ЭтоСкладРозничный=(Шапка.ОтправительВидСклада = Перечисления.ВидыСкладов.Розничный ИЛИ Шапка.ПолучательВидСклада = Перечисления.ВидыСкладов.Розничный);
	Если НЕ ЭтоСкладРозничный Тогда
		ТаблицаСтоимости        = ПолучитьТаблицуСтоимостиТоваров(СтруктураПараметров.СсылкаНаОбъект);
		ТаблицаСтоимости.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
		ВалютаУпрУчета          = МодульВалютногоУчета.ПолучитьВалюту("Упр");
		Параметры               = МодульВалютногоУчета.КурсВалюты(ВалютаУпрУчета, Шапка.Дата);
		КурсВалютыУпрУчета      = Параметры.Курс;
		КратностьВалютыУпрУчета = Параметры.Кратность;
	КонецЕсли;
	
	ТаблицаТовары = СформироватьЗапросПоТабличнойЧасти(СсылкаНаОбъект, "Товары");
	ТаблицаТовары.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки", "Количество");
	ТаблицаТовары.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
	СтруктураПоискаПоТоварам = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");

	Макет = ИнициализацияМакета(СтруктураПараметров, "ТОРГ13");

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТОРГ13";

	// Выводим общие реквизиты шапки
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОбластьМакета         = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента));
	ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначенияСервер.НомерНаПечать(СсылкаНаОбъект);
	ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
	ТабДокумент.Вывести(ОбластьМакета);

	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	КоличествоСтрок = ВыборкаСтрокТовары.Количество();

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// инициализация итогов по странице
	ИтогКоличествоМестПоСтранице = 0;
	ИтогМассаБруттоПоСтранице    = 0;
	ИтогМассыНеттоПоСтранице     = 0;
	ИтогСуммыПоСтранице          = 0;

	// инициализация итогов по документу
	ИтогоКоличество  = 0;
	ИтогоМассаБрутто = 0;
	ИтогоМассаНетто  = 0;
	ИтогоСумма       = 0;

	Ном = 0;

	// Выводим многострочную часть докмента
	ВыборкаСтрокТовары      = Шапка.Товары.Выбрать();
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
	ОбластьМакета           = Макет.ПолучитьОбласть("Строка");

	// Выборка товаров
	Пока ВыборкаСтрокТовары.Следующий() Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;

			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

			// инициализация итогов по странице
			ИтогКоличествоМестПоСтранице = 0;
			ИтогМассаБруттоПоСтранице    = 0;
			ИтогМассаНеттоПоСтранице     = 0;
			ИтогСуммыПоСтранице          = 0;

			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

		КоличествоМест = Формат(ВыборкаСтрокТовары.Количество, "ЧЦ=15; ЧДЦ=3");

		Если ВыборкаСтрокТовары.КоличествоМест <> 0 И ЗначениеЗаполнено(ВыборкаСтрокТовары.ЕдиницаИзмеренияМестНаименование) Тогда
			КоличествоМест = КоличествоМест 
			                 + Символы.ПС
			                 + " (" + Формат(ВыборкаСтрокТовары.КоличествоМест,"ЧЦ=15; ЧДЦ=0")
			                 + " "
			                 + ВыборкаСтрокТовары.ЕдиницаИзмеренияМестНаименование
			                 + ")";
		КонецЕсли;

		ОбластьМакета.Параметры.КоличествоМест    = КоличествоМест;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары);

		Если ЭтоСкладРозничный Тогда
			Сумма = ВыборкаСтрокТовары.Количество * ВыборкаСтрокТовары.Цена;
		Иначе
			Если ВыборкаСтрокТовары.Количество = 0 Тогда
				Сумма = 0;
				Цена  = 0;
			Иначе
				Количество = 0;
				Сумма = ПолучитьСтоимостьТовара(ТаблицаСтоимости,
				                                ВыборкаСтрокТовары.Номенклатура,
				                                ВыборкаСтрокТовары.Характеристика,
				                                ВыборкаСтрокТовары.Серия,
				                                ВыборкаСтрокТовары.ПартионныйУчетПоСериям,
				                                Количество,ВыборкаСтрокТовары.НомерСтроки);
				//Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(Сумма, ВалютаУпрУчета, ВалютаПечати, КурсВалютыУпрУчета, 1, КратностьВалютыУпрУчета, 1);
				
				СтруктураПоискаПоТоварам.Номенклатура = ВыборкаСтрокТовары.Номенклатура;
				СтруктураПоискаПоТоварам.ХарактеристикаНоменклатуры = ВыборкаСтрокТовары.Характеристика;
				СтруктураПоискаПоТоварам.СерияНоменклатуры = ВыборкаСтрокТовары.Серия;
				СтрокиТаблицыТовары = ТаблицаТовары.НайтиСтроки(СтруктураПоискаПоТоварам);
				Цена = Окр(?(Количество > 0, Сумма / Количество, 0), 2);
				Сумма = Цена * ВыборкаСтрокТовары.Количество;
			КонецЕсли;

			ОбластьМакета.Параметры.Цена = Цена;
		КонецЕсли;

		ОбластьМакета.Параметры.Сумма = Сумма;

		ТабДокумент.Вывести(ОбластьМакета);

		// Обновим итоги по странице
		ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + ВыборкаСтрокТовары.Количество;
		ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице    + 0;
		ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице     + 0;
		ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице          + Сумма;

		// Обновим итогов по документу
		ИтогоКоличество  = ИтогоКоличество  + ВыборкаСтрокТовары.Количество;
		ИтогоМассаБрутто = ИтогоМассаБрутто + 0;
		ИтогоМассаНетто  = ИтогоМассаНетто  + 0;
		ИтогоСумма       = ИтогоСумма       + Сумма;
	КонецЦикла;

	// Выборка возвратная тара
	Пока ВыборкаСтрокТара.Следующий() Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТара.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда

			ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;

			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

			// инициализация итогов по странице
			ИтогКоличествоМестПоСтранице = 0;
			ИтогМассаБруттоПоСтранице    = 0;
			ИтогМассаНеттоПоСтранице     = 0;
			ИтогСуммыПоСтранице          = 0;

			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТара);

		ОбластьМакета.Параметры.КоличествоМест    = Формат(ВыборкаСтрокТара.Количество, "ЧЦ=15; ЧДЦ=3");
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТара.ТоварНаименование + " (возвратная тара)";

		ТабДокумент.Вывести(ОбластьМакета);

		// Обновим итоги по странице
		ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + ВыборкаСтрокТара.Количество;
		ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице    + 0;
		ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице     + 0;
		ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице          + 0;

		// Обновим итогов по документу
		ИтогоКоличество  = ИтогоКоличество  + ВыборкаСтрокТара.Количество;
		ИтогоМассаБрутто = ИтогоМассаБрутто + 0;
		ИтогоМассаНетто  = ИтогоМассаНетто  + 0;
		ИтогоСумма       = ИтогоСумма       + 0;

	КонецЦикла;

	ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;

	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличествоМест = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоМассаБрутто    = ИтогоМассаБрутто;
	ОбластьМакета.Параметры.ИтогоМассаНетто     = ИтогоМассаНетто;
	ОбластьМакета.Параметры.ИтогоСумма          = ИтогоСумма;

	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ПараметрыПрописиНаРусском = ВалютаПечати.ПараметрыПрописиНаРусском;
	ПараметрыПрописиНаРусском = СтрЗаменить(ПараметрыПрописиНаРусском, "1", "0");
	ПараметрыПрописиНаРусском = СтрЗаменить(ПараметрыПрописиНаРусском, "2", "0");
	ПараметрыПрописиНаРусском = СтрЗаменить(ПараметрыПрописиНаРусском, "3", "0");
	ОбластьМакета.Параметры.ИтогоСуммаПрописью = ЧислоПрописью(Цел(ИтогоСумма), "L=ru_RU; НП=Ложь; НД=Ложь", ПараметрыПрописиНаРусском);
	ОбластьМакета.Параметры.ИтогоСуммаКоп      = Формат(Цел((ИтогоСумма-Цел(ИтогоСумма))*100), "ЧЦ=2; ЧН=00");
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;
КонецФункции

Функция Печать_М4(СтруктураПараметров)
    СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВидПоступленияОрдер", Перечисления.ВидыПоступленияТоваров.ПоОрдеру);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Номер КАК Номер,
	|	Дата  КАК ДатаСоставления,
	|	Организация,
	|	Организация             КАК ЮрФизЛицо,
	|	СкладПолучатель         КАК МестоПриемки,
	|	СкладПолучатель.Представление КАК СкладНаименование,
	|	Подразделение,
	|	Подразделение  КАК ПредставлениеПодразделения
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ТекущийДокумент
	|";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	ЗапросПоТоварам.Текст = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код                КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.КоличествоПринято,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка       КАК Метка
	|
	|ИЗ
	|	(
	|	ВЫБРАТЬ
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		СУММА(Количество)                    КАК КоличествоПринято,
	|		ХарактеристикаНоменклатуры           КАК Характеристика,
	|		СерияНоменклатуры                    КАК Серия,
	|		МИНИМУМ(НомерСтроки)                 КАК НомерСтроки,
	|		0                                    КАК Метка
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваров
	|	ГДЕ
	|		ПеремещениеТоваров.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО 
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		ХарактеристикаНоменклатуры,
	|		СерияНоменклатуры
	|	) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура,
	|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК Строка(1000)),
	|	Номенклатура.Код,
	|	Номенклатура.ЕдиницаХраненияОстатков.Представление  КАК ЕдиницаИзмеренияНаименование,
	|	Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	Количество,
	|	NULL,
	|	NULL,
	|	НомерСтроки КАК НомерСтроки,
	|	2           КАК Метка
	|ИЗ
	|	Документ.ПеремещениеТоваров.ВозвратнаяТара КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|
	|";
	ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

	Макет = ИнициализацияМакета(СтруктураПараметров, "М4");

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_М4";

	// Выводим общие реквизиты шапки
	СведенияОПокупателе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначенияСервер.НомерНаПечать(СсылкаНаОбъект);
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим заголовок докмента
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ДатаСоставления = Шапка.ДатаСоставления;
	ПредставлениеКонтрагента = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаСоставления), "ПолноеНаименование,");
	ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеКонтрагента;
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	НомерСтраницы   = 1;

	КоличествоСтрок = ВыборкаСтрокТовары.Количество();

	// Инициализация итогов в документе
	ИтогоКоличествоПринято = 0;
	Ном = 0;

	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;	

	// Выводим многострочную часть докмента
	ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтрок");
	ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
	Пока ВыборкаСтрокТовары.Следующий() Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

		КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;

		ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование)
		                                          + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары)
		                                          + ?(ВыборкаСтрокТовары.Метка = 2, " (возвратная тара)", "");
												  
		МассивВыводимыхОбластей.Очистить();
		МассивВыводимыхОбластей.Добавить(ОбластьМакета);
		МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
		Если Ном = КоличествоСтрок Тогда
			МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		КонецЕсли;

		Если НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда

			НомерСтраницы = НомерСтраницы + 1;
			ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
			ТабДокумент.Вывести(ПодвалСтрок);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;												  
												  
		ТабДокумент.Вывести(ОбластьМакета);

		ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;

	КонецЦикла;

	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");

	ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;
КонецФункции

Функция Печать_М11(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ТоварКод=?(Колонка="","Код",Колонка);

	ВалютаПечати = МодульВалютногоУчета.ПолучитьВалюту("Бух");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Номер 	КАК НомерДокумента,
	|	Дата	КАК ДатаДокумента,
	|	Дата	КАК ДатаСоставления,
	|	Организация,
	|	СкладОтправитель КАК Склад,
	|	СкладПолучатель КАК Подразделение,
	|	СкладОтправитель КАК Отпустил,
	|	СкладПолучатель КАК Получил
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ТекущийДокумент
	|";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК МатериалНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                 КАК НоменклатурныйНомер,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
	|	ВложенныйЗапрос.Серия                КАК Серия,
	|	ВложенныйЗапрос.ТОП                  КАК ТОП,
	|	ВложенныйЗапрос.Номенклатура.ВестиПартионныйУчетПоСериям     КАК ПартионныйУчетПоСериям,
	|	ВложенныйЗапрос.Количество           КАК Количество,
	|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки
	|ИЗ 
	|	(
	|	ВЫБРАТЬ
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		ХарактеристикаНоменклатуры	КАК Характеристика,
	|		СерияНоменклатуры           КАК Серия,
	|		ТОП       				    КАК ТОП,
	|		СУММА(Количество)           КАК Количество,
	|		НомерСтроки 	        	КАК НомерСтроки
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваров
	|	ГДЕ
	|		ПеремещениеТоваров.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		ХарактеристикаНоменклатуры,
	|		ТОП,
	|		СерияНоменклатуры,
	|		НомерСтроки
	|
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР
	|";

	ЗапросПоНоменклатуре = Запрос.Выполнить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_М11";
	
	ТаблицаТовары = СформироватьЗапросПоТабличнойЧасти(СсылкаНаОбъект, "Товары");
	ТаблицаТовары.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки", "Количество");
	ТаблицаТовары.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
	СтруктураПоискаПоТоварам = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
	
	ЭтоСкладРозничный=(Шапка.Склад.ВидСклада = Перечисления.ВидыСкладов.Розничный ИЛИ Шапка.Подразделение.ВидСклада = Перечисления.ВидыСкладов.Розничный);
	Если НЕ ЭтоСкладРозничный Тогда
		ТаблицаСтоимости=ПолучитьТаблицуСтоимостиТоваров(СтруктураПараметров.СсылкаНаОбъект);
		ТаблицаСтоимости.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
		ВалютаУпрУчета          = МодульВалютногоУчета.ПолучитьВалюту("Упр");
		Параметры               = МодульВалютногоУчета.КурсВалюты(ВалютаУпрУчета, Шапка.ДатаДокумента);
		КурсВалютыУпрУчета      = Параметры.Курс;
		КратностьВалютыУпрУчета = Параметры.Кратность;
	КонецЕсли;
	
	// Вывод заголовка
	Макет = ИнициализацияМакета(СтруктураПараметров, "М11");
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заголовок = "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + Строка(Шапка.НомерДокумента);
	Область.Параметры.Заполнить(Шапка);
	
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

	Область.Параметры.ПредставлениеОрганизации = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации);
	Область.Параметры.КодОКПО = СведенияОбОрганизации.КодПоОКПО;
	Область.Параметры.Склад=?(Шапка.Склад.Подразделение.Пустая(), Шапка.Склад, Шапка.Склад.Подразделение);
	Область.Параметры.ПредставлениеПодразделения = ?(Шапка.Подразделение.Подразделение.Пустая(), Шапка.Подразделение, Шапка.Подразделение.Подразделение);
	
	стрСчетов="";
	тзТовары=СформироватьЗапросПоТабличнойЧасти(СсылкаНаОбъект, "Товары");
	Если тзТовары.Количество()>0 Тогда
		Если НЕ тзТовары[0].ТОП.Пустая() Тогда
			Для Каждого СтрокаТз Из тзТовары Цикл
				Если Найти(стрСчетов,Строка(СтрокаТз.ТОП.ПроводкиБУ[0].СчетКредит))>0 Тогда Продолжить; КонецЕсли;
				стрСчетов=стрСчетов+Строка(СтрокаТз.ТОП.ПроводкиБУ[0].СчетКредит)+" ";
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;
	
	тзВозвратнаяТара=СформироватьЗапросПоТабличнойЧасти(СсылкаНаОбъект, "ВозвратнаяТара");
	Если тзВозвратнаяТара.Количество()>0 Тогда
		Если НЕ тзВозвратнаяТара[0].ТОП.Пустая() Тогда
			Для Каждого СтрокаТз Из тзВозвратнаяТара Цикл
				Если Найти(стрСчетов,Строка(СтрокаТз.ТОП.ПроводкиБУ[0].СчетКредит))>0 Тогда Продолжить; КонецЕсли;
				стрСчетов=стрСчетов+Строка(СтрокаТз.ТОП.ПроводкиБУ[0].СчетКредит)+" ";
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;

	Область.Параметры.КоррСчет=стрСчетов;
	ТабДокумент.Вывести(Область);
	
	ВыборкаПоСтрокам = ЗапросПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Вывод строк
	Пока ВыборкаПоСтрокам.Следующий() Цикл

		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(ВыборкаПоСтрокам);
		Область.Параметры.МатериалНаименование = СокрЛП(ВыборкаПоСтрокам.МатериалНаименование) + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаПоСтрокам);
		
		Если ЭтоСкладРозничный Тогда
			Сумма = ВыборкаПоСтрокам.Количество * ВыборкаПоСтрокам.Цена;
		Иначе
			Если ВыборкаПоСтрокам.Количество = 0 Тогда
				Сумма = 0;
				Цена  = 0;
			Иначе
				Количество = 0;
				Сумма = ПолучитьСтоимостьТовара(ТаблицаСтоимости,
				                                ВыборкаПоСтрокам.Номенклатура,
				                                ВыборкаПоСтрокам.Характеристика,
				                                ВыборкаПоСтрокам.Серия,
				                                ВыборкаПоСтрокам.ПартионныйУчетПоСериям,
				                                Количество,ВыборкаПоСтрокам.НомерСтроки);
				Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(Сумма, ВалютаУпрУчета, ВалютаПечати, КурсВалютыУпрУчета, 1, КратностьВалютыУпрУчета, 1);
				
				СтруктураПоискаПоТоварам.Номенклатура = ВыборкаПоСтрокам.Номенклатура;
				СтруктураПоискаПоТоварам.ХарактеристикаНоменклатуры = ВыборкаПоСтрокам.Характеристика;
				СтруктураПоискаПоТоварам.СерияНоменклатуры = ВыборкаПоСтрокам.Серия;
				СтрокиТаблицыТовары = ТаблицаТовары.НайтиСтроки(СтруктураПоискаПоТоварам);
				Цена = Окр(?(Количество > 0, Сумма / Количество, 0), 2);
			КонецЕсли;

			Область.Параметры.Цена = Цена;
		КонецЕсли;

		Область.Параметры.Сумма = Сумма;
		Попытка
			Область.Параметры.Счет=ВыборкаПоСтрокам.ТОП.ПроводкиБУ[0].СчетДебет;
		Исключение
		КонецПопытки;
		ТабДокумент.Вывести(Область);
	КонецЦикла;
	
	//Вывод подвала
	Область = Макет.ПолучитьОбласть("Подвал");
	
	МассивСкладов=Новый Массив;
	МассивСкладов.Добавить(Шапка.Отпустил);
	МассивСкладов.Добавить(Шапка.Получил);	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НаДату",Шапка.ДатаДокумента);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",МассивСкладов);
	Запрос.УстановитьПараметр("Организация",Шапка.Организация);
	Запрос.Текст="
	
	|ВЫБРАТЬ
	|	ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница,
	|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо,
	|	КадровыеСведенияСрезПоследних.Должность
	|ИЗ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&НаДату,СтруктурнаяЕдиница В (&СтруктурнаяЕдиница)) КАК ОтветственныеЛицаСрезПоследних
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.КадровыеСведения.СрезПоследних(&НаДату,Организация=&Организация) КАК КадровыеСведенияСрезПоследних	
	|ПО
	|	КадровыеСведенияСрезПоследних.Сотрудник=ОтветственныеЛицаСрезПоследних.ФизическоеЛицо
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Индекс=1;
	Пока Выборка.Следующий() Цикл
		ФИО=УправлениеКонфигурациейСервер.ФИО(Выборка.ФизическоеЛицо,, Истина, Шапка.ДатаДокумента);
		Должность=Выборка.Должность;
		Если Выборка.СтруктурнаяЕдиница=Шапка.Получил Тогда
			Индекс=2;
		КонецЕсли;	
		Область.Параметры["Должность"+Индекс]=Должность;
		Область.Параметры["Расшифровка"+Индекс]=ФИО;
	КонецЦикла;
	ТабДокумент.Вывести(Область);
	
	Возврат ТабДокумент;
КонецФункции

Функция МХ1_ПараметрыПечати(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;

	ПараметрыПечати=Новый Структура;
	ПараметрыПечати.Вставить("СсылкаНаОбъект", СсылкаНаОбъект);

	стрКодАртикул=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Номер КАК НомерДокумента,
	|	Дата КАК ДатаДокумента,
	|	Дата КАК ДатаСоставления,
	|	Организация,
	|	СкладОтправитель КАК Склад,
	|	СкладПолучатель КАК Подразделение,
	|	СкладОтправитель КАК Отпустил,
	|	СкладПолучатель КАК Получил
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ТекущийДокумент
	|";
	тзДанные=Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
	КонецЦикла;
	
	ПараметрыПечати.Вставить("Сдал", РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(ПараметрыПечати.ДатаДокумента, Новый Структура("СтруктурнаяЕдиница", ПараметрыПечати.Отпустил)).ФизическоеЛицо);
	ПараметрыПечати.Вставить("Принял", РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(ПараметрыПечати.ДатаДокумента, Новый Структура("СтруктурнаяЕдиница", ПараметрыПечати.Получил)).ФизическоеЛицо);

	ПараметрыПечати.Вставить("СдалДолжность", "");
	ПараметрыПечати.Вставить("ПринялДолжность", "");
	
	СведенияОбОрганизации=КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Организация, ПараметрыПечати.ДатаДокумента);
	ПараметрыПечати.Вставить("СведенияОбОрганизации", СведенияОбОрганизации);
	ПараметрыПечати.Вставить("ПредставлениеОрганизации", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации));
	ПараметрыПечати.Вставить("КодОКПО", СведенияОбОрганизации.КодПоОКПО);

	ТаблицаСтоимости=ПолучитьТаблицуСтоимостиТоваров(СтруктураПараметров.СсылкаНаОбъект);
	ТаблицаСтоимости.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                             КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК МатериалНаименование,
	|	ВложенныйЗапрос.Номенклатура."+?(стрКодАртикул="","Код", стрКодАртикул)+" КАК НоменклатурныйНомер,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
	|	ВложенныйЗапрос.Серия                КАК Серия,
	|	ВложенныйЗапрос.ТОП                  КАК ТОП,
	|	ВложенныйЗапрос.Номенклатура.ВестиПартионныйУчетПоСериям     КАК ПартионныйУчетПоСериям,
	|	ВложенныйЗапрос.Количество           КАК Количество,
	|	ВложенныйЗапрос.Цена           		 КАК Цена,
	|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки
	|ИЗ 
	|	(
	|	ВЫБРАТЬ
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		ХарактеристикаНоменклатуры	КАК Характеристика,
	|		СерияНоменклатуры           КАК Серия,
	|		ТОП       				    КАК ТОП,
	|		СУММА(Количество)           КАК Количество,
	|		СРЕДНЕЕ(Цена)				КАК Цена,
	|		НомерСтроки 	        	КАК НомерСтроки
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваров
	|	ГДЕ
	|		ПеремещениеТоваров.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		ХарактеристикаНоменклатуры,
	|		ТОП,
	|		СерияНоменклатуры,
	|		НомерСтроки
	|
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР
	|";
	тзДанные=Запрос.Выполнить().Выгрузить();
	тзДанные.Колонки.Добавить("Сумма", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(17, 2));
	Для каждого СтрокаКоллекции Из тзДанные Цикл
		СтрокаКоллекции.МатериалНаименование=СокрЛП(СтрокаКоллекции.МатериалНаименование) + ПечатныеФормыСервер.ПредставлениеСерий(СтрокаКоллекции);
		Если СтрокаКоллекции.Количество=0 Тогда Продолжить; КонецЕсли;
		Если СтрокаКоллекции.Цена=0 Тогда
			Количество=0;
			СтрокаКоллекции.Сумма=ПолучитьСтоимостьТовара(ТаблицаСтоимости, СтрокаКоллекции.Номенклатура, СтрокаКоллекции.Характеристика, СтрокаКоллекции.Серия, СтрокаКоллекции.ПартионныйУчетПоСериям, Количество, СтрокаКоллекции.НомерСтроки);
			СтрокаКоллекции.Цена=Окр(?(Количество > 0, СтрокаКоллекции.Сумма / Количество, 0), 2);
		Иначе
			СтрокаКоллекции.Сумма=СтрокаКоллекции.Количество*СтрокаКоллекции.Цена;
		КонецЕсли;		
	КонецЦикла;
	ПараметрыПечати.Вставить("Позиции", тзДанные);	
	
	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;	
	
	Возврат ПараметрыПечати;
КонецФункции

Функция Печать_МХ1(СтруктураПараметров)
	ПараметрыПечати=МХ1_ПараметрыПечати(СтруктураПараметров);

	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати="ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_МХ1";

	// Заголовок
	Макет=ИнициализацияМакета(СтруктураПараметров, "МХ1");

	Область=Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);

	//Строки
	НомПП=0;
	Для каждого СтрокаКоллекции Из ПараметрыПечати.Позиции Цикл
		НомПП=НомПП+1;
		Область=Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(СтрокаКоллекции);
		Область.Параметры.НомПП=НомПП;
		ТабДокумент.Вывести(Область);
	КонецЦикла;

	//Подвал
	Область=Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ПараметрыПечати);
	Область.Параметры.Количество=ПараметрыПечати.Позиции.Итог("Количество");
	Область.Параметры.Сумма=ПараметрыПечати.Позиции.Итог("Сумма");
	ТабДокумент.Вывести(Область);

	Возврат ТабДокумент;	
КонецФункции

Функция Печать_МХ3(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	
	ЗапросШапка=Новый запрос;
	ЗапросШапка.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	ЗапросШапка.Текст="
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ПеремещениеТоваров.СкладОтправитель КАК Склад,
	|	ПеремещениеТоваров.СкладПолучатель,
	|	ПеремещениеТоваров.Номер,
	|	ПеремещениеТоваров.Дата,
	|	ПеремещениеТоваров.Ответственный КАК ОтпускПроизвел
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &Ссылка
	|";
	Шапка=ЗапросШапка.Выполнить().Выбрать();
	
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	NULL КАК Серия,
	|	ПеремещениеТоваровТовары.Номенклатура КАК ТоварНаименование,
	|	ПеремещениеТоваровТовары.Номенклатура.Код КАК ТоварКод,
	|	ПеремещениеТоваровТовары.Цена КАК Цена,
	|	ПеремещениеТоваровТовары.Количество КАК Количество,
	|	ПеремещениеТоваровТовары.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ПеремещениеТоваровТовары.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ПеремещениеТоваровТовары.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ПеремещениеТоваровТовары.Номенклатура
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка = &Ссылка
	|";
	ТоварыИтог = Запрос.Выполнить().Выбрать();
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента", СсылкаНаОбъект.Дата);
	Запрос.УстановитьПараметр("Номенклатура", СсылкаНаОбъект.Товары.Выгрузить(,"Номенклатура"));
	Запрос.УстановитьПараметр("Склад", СсылкаНаОбъект.СкладОтправитель);
	Запрос.Текст=" 
	|ВЫБРАТЬ
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.СтоимостьОстаток Как Стоимость,
	|	КоличествоОстаток Как Количество
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&ДатаДокумента, Склад В (&Склад) И Номенклатура В (&Номенклатура)) КАК ИсточникДанных	
	|";
	тзОстаткиТМЦ = Запрос.Выполнить().Выгрузить();

	Макет=ПолучитьМакет("МХ_3");
	ОбластьШапки     = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ОбластьСтроки    = Макет.ПолучитьОбласть("Строка");
	ОбластьИтог      = Макет.ПолучитьОбласть("Итого");
	ОбластьПодвал    = Макет.ПолучитьОбласть("Подвал");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Выводим шапку накладной
	Шапка.Следующий();
	ОбластьШапки.Параметры.Заполнить(Шапка);
	
	СведенияОбОрганизации=КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация,    Шапка.Дата);
	ОбластьШапки.Параметры.Поклажедатель=ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ФактическийАдрес,Телефоны");
	ОбластьШапки.Параметры.ОКПОХранитель = Шапка.Организация.КодПоОКПО;

	ИтогоСумма=0;	
	ТабДокумент.Вывести(ОбластьШапки);
	ТабДокумент.Вывести(ОбластьЗаголовок);

	Если ТоварыИтог.Количество() <> 0 Тогда 
		НомерСтроки = 1;
		Пока ТоварыИтог.Следующий() Цикл
			ОбластьСтроки.Параметры.Заполнить(ТоварыИтог);
			ОбластьСтроки.Параметры.ТоварНаименование = СОКРЛП(ТоварыИтог.ТоварНаименование) + ПечатныеФормыСервер.ПредставлениеСерий(ТоварыИтог);
			ОбластьСтроки.Параметры.НомерСтроки = НомерСтроки; 

			СтрокаНайдена = тзОстаткиТМЦ.Найти(ТоварыИтог.Номенклатура, "Номенклатура");
			Если НЕ СтрокаНайдена=Неопределено Тогда
				ОбластьСтроки.Параметры.Цена = СтрокаНайдена.Стоимость/СтрокаНайдена.Количество;
				ОбластьСтроки.Параметры.Сумма = ОбластьСтроки.Параметры.Цена*ТоварыИтог.Количество;
				ИтогоСумма = ИтогоСумма + ОбластьСтроки.Параметры.Сумма;
			КонецЕсли;

			ТабДокумент.Вывести(ОбластьСтроки);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		ОбластьИтог.Параметры.Количество = СсылкаНаОбъект.Товары.Итог("Количество");
		ОбластьИтог.Параметры.Сумма = ИтогоСумма;
	КонецЕсли;

		                    
	ТабДокумент.Вывести(ОбластьИтог);
	ОбластьДок = Макет.ПолучитьОбласть("ДоговорХранения");
	ТабДокумент.Вывести(ОбластьДок);
	ОбластьДок = Макет.ПолучитьОбласть("ЗаголовокУслуг");
	ТабДокумент.Вывести(ОбластьДок);
	ОбластьДок = Макет.ПолучитьОбласть("СтрокаУслуг");
	ОбластьИтог = Макет.ПолучитьОбласть("ИтогоУслуг");
	ТоварыИтог.Сбросить();
	Если ТоварыИтог.Количество() <> 0 Тогда 
		НомерСтроки = 1;
		ТабДокумент.Вывести(ОбластьДок);
	КонецЕсли;
	ТабДокумент.Вывести(ОбластьИтог);
	ОтветственныеЛица = ПечатныеФормыСервер.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.Дата);
	ОбластьПодвал.Параметры.ГенДир = ОтветственныеЛица.Руководитель;
	ОбластьПодвал.Параметры.НачСклад = Шапка.ОтпускПроизвел;

	ТабДокумент.Вывести(ОбластьПодвал);
	
	Возврат ТабДокумент;
КонецФункции

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	Если СтруктураПараметров.ИмяМакета="Ведомость" Тогда
		ТабДокумент=Печать_ПеремещениеТоваров(СтруктураПараметров);

	ИначеЕсли СтруктураПараметров.ИмяМакета="ТОРГ13" тогда
		ТабДокумент=Печать_ТОРГ13(СтруктураПараметров);

	ИначеЕсли СтруктураПараметров.ИмяМакета="1Т"  Или СтруктураПараметров.ИмяМакета="_1Т" Тогда
		ТабДокумент=""; СтруктураПараметров.ИмяМакета="Обработка.ПечатьТТН.Форма.Форма";

	ИначеЕсли СтруктураПараметров.ИмяМакета="М4" тогда
		ТабДокумент=_Печать_М4(СтруктураПараметров,ТабДокумент);

	ИначеЕсли СтруктураПараметров.ИмяМакета="М11" Тогда
		ТабДокумент=_Печать_М11(СтруктураПараметров,ТабДокумент);

	ИначеЕсли СтруктураПараметров.ИмяМакета="БланкОтправитель" Или СтруктураПараметров.ИмяМакета = "БланкПолучатель" Тогда
		ТабДокумент="БланкТоварногоНаполнения";

	ИначеЕсли СтруктураПараметров.ИмяМакета="ПриходНаРозничныеСкладыВЦенахАТТ" Тогда
		ТабДокумент=ПечатныеФормыСервер.ПриходРасходСРозничныхСкладовВЦенахАТТ(СтруктураПараметров.СсылкаНаОбъект, МодульВалютногоУчета.ПолучитьВалюту("Бух"), Истина);

	ИначеЕсли СтруктураПараметров.ИмяМакета="РасходСРозничныхСкладовВЦенахАТТ" Тогда
		ТабДокумент=ПечатныеФормыСервер.ПриходРасходСРозничныхСкладовВЦенахАТТ(СтруктураПараметров.СсылкаНаОбъект, МодульВалютногоУчета.ПолучитьВалюту("Бух"), Ложь);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="МХ1" Тогда
		ТабДокумент=Печать_МХ1(СтруктураПараметров);

	ИначеЕсли СтруктураПараметров.ИмяМакета="МХ3" Тогда
		ТабДокумент=Печать_МХ3(СтруктураПараметров);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="БухгалтерскаяСправка" Тогда			
		ТабДокумент=ПечатныеФормыСервер.БухгалтерскаяСправка(СтруктураПараметров, "Хозрасчетный");
	КонецЕсли;

	Возврат ТабДокумент;
КонецФункции

/////////////////////////// Новый модуль

Функция _ПолучитьОбщиеДанныеДляПечати(СсылкаНаОбъект)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	Дата  КАК ДатаДокумента,
	|	Организация,
	|	СкладПолучатель,
	|	СкладОтправитель,
	|	Подразделение
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ТекущийДокумент
	|";
	тзДанные=Запрос.Выполнить().Выгрузить();
	СтруктураДанных=_ИнициализацияСтруктурыДанных();
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		Если СтруктураДанных.Свойство(СтрокаКоллекции.Имя) Тогда
			СтруктураДанных[СтрокаКоллекции.Имя]=тзДанные[0][СтрокаКоллекции.Имя];
		Иначе	
			СтруктураДанных.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
		Конецесли;
	КонецЦикла;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИсточникДанных.Номенклатура,
	|	ВЫРАЗИТЬ(ИсточникДанных.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК НоменклатураНаименование,
	|	ИсточникДанных.Номенклатура.Код                КАК НоменклатураКод,
	|	ИсточникДанных.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	ИсточникДанных.ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмеренияНаименование,
	|	ИсточникДанных.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
	|	ИсточникДанных.Количество,
	|	ИсточникДанных.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ИсточникДанных.ХарактеристикаНоменклатуры КАК Серия,
	|	ИсточникДанных.НомерСтроки КАК НомерСтроки,
	|	ИсточникДанных.Номенклатура.ВестиПартионныйУчетПоСериям     КАК ПартионныйУчетПоСериям,
	|	ИсточникДанных.ТОП     КАК ТОП,
	|	ИсточникДанных.Цена     КАК Цена,
	|	""Товары""       КАК ТабличнаяЧасть
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура,
	|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК Строка(1000)),
	|	Номенклатура.Код,
	|	Номенклатура.ЕдиницаХраненияОстатков  КАК ЕдиницаИзмерения,
	|	Номенклатура.ЕдиницаХраненияОстатков.Представление  КАК ЕдиницаИзмеренияНаименование,
	|	Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
	|	Количество,
	|	NULL,
	|	NULL,
	|	НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ     КАК ПартионныйУчетПоСериям,
	|	ИсточникДанных.ТОП     КАК ТОП,
	|	0     КАК Цена,
	|	""ВозвратнаяТара""           КАК ТабличнаяЧасть
	|ИЗ
	|	Документ.ПеремещениеТоваров.ВозвратнаяТара КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО ТабличнаяЧасть ВОЗР, НомерСтроки ВОЗР
	|
	|";
	тзТовары=Запрос.Выполнить().Выгрузить();

	НомерСтроки=0;
	тзДанные = _ИнициализацияТабличнойЧасти();
	ТаблицаСтоимости=ПолучитьТаблицуСтоимостиТоваров(СсылкаНаОбъект);
	Для Каждого СтрокаТз ИЗ тзТовары Цикл
		НоваяСтрока=тзДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТз);
		НомерСтроки=НомерСтроки+1;
		НоваяСтрока.НомерСтроки=НомерСтроки;
		Если ЗначениеЗаполнено(СтрокаТз.Цена) Тогда
			НоваяСтрока.СтоимостьБезНДС=СтрокаТз.Цена*СтрокаТз.Количество;
		Иначе	
			НоваяСтрока.СтоимостьБезНДС=ПолучитьСтоимостьТовара(ТаблицаСтоимости,
				                                СтрокаТз.Номенклатура,
				                                СтрокаТз.Характеристика,
				                                СтрокаТз.Серия,
				                                СтрокаТз.ПартионныйУчетПоСериям,
				                                НоваяСтрока.Количество,СтрокаТз.НомерСтроки);
			НоваяСтрока.Цена=?(НоваяСтрока.Количество=0, 0, Окр(НоваяСтрока.СтоимостьБезНДС / НоваяСтрока.Количество, 2));
		КонецЕсли;
	КонецЦикла;
	
	СтруктураДанных.Вставить("Позиции", тзДанные);

 	Возврат СтруктураДанных;
КонецФункции	

Функция _ИнициализацияСтруктурыДанных()
	СтруктураДанных=Новый Структура;
	СтруктураДанных.Вставить("СкладПолучатель");
	СтруктураДанных.Вставить("СкладОтправитель");
	СтруктураДанных.Вставить("Номер");
	СтруктураДанных.Вставить("Дата");
	СтруктураДанных.Вставить("ДатаСоставления");
	СтруктураДанных.Вставить("Подразделение");
	СтруктураДанных.Вставить("Организация");
	
	Возврат СтруктураДанных
КонецФункции

Функция _ИнициализацияТабличнойЧасти()
	
	Товары=Новый ТаблицаЗначений();
	Товары.Колонки.Добавить("Номенклатура");
	Товары.Колонки.Добавить("НоменклатураНаименование");
	Товары.Колонки.Добавить("НоменклатураКод");
	Товары.Колонки.Добавить("ЕдиницаИзмерения");
	Товары.Колонки.Добавить("ЕдиницаИзмеренияНаименование");
	Товары.Колонки.Добавить("ЕдиницаИзмеренияКод");
	Товары.Колонки.Добавить("Характеристика");
	Товары.Колонки.Добавить("Серия");
	Товары.Колонки.Добавить("Цена",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("СуммаНДС",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("СтоимостьСНДС",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("СтоимостьБезНДС",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("НомерСтроки",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("ТабличнаяЧасть");
	Товары.Колонки.Добавить("ТОП");
	
	Возврат Товары;
КонецФункции

Функция _М4_ПараметрыПечати(ПараметрыПечати, СсылкаНаОбъект)
	СведенияОПокупателе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Организация, ПараметрыПечати.ДатаДокумента);
	ПараметрыПечати.Вставить("ПредставлениеОрганизации", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПокупателе));
	ПараметрыПечати.Вставить("ОрганизацияПоОКПО", СведенияОПокупателе.КодПоОКПО);
	ПараметрыПечати.Вставить("ПредставлениеПодразделения", ПараметрыПечати.Подразделение);
	ПараметрыПечати.Вставить("НомерДокумента", ОбщегоНазначенияСервер.НомерНаПечать(СсылкаНаОбъект));
	ПараметрыПечати.Вставить("ДатаСоставления", ПараметрыПечати.ДатаДокумента);
	ПараметрыПечати.Вставить("ПоставщикНаименование", ПараметрыПечати.СкладОтправитель);
	Если СсылкаНаОбъект.Товары.Количество()<>0 Тогда
		СтрокаДок=СсылкаНаОбъект.Товары[0];
		Если ЗначениеЗаполнено(СтрокаДок.ТОП) Тогда
			ПараметрыПечати.Вставить("СубСчет",СтрокаДок.ТОП.ПроводкиБУ[0].СчетКредит.Код);
			ПараметрыПечати.Вставить("КодАналитическогоУчета",Лев(СтрокаДок.ТОП.ПроводкиБУ[0].СчетКредит.Код,2));
		КонецЕсли;
	КонецЕсли;	
	ПараметрыПечати.Вставить("НомерСопроводительногоДокумента",СокрЛП(ПараметрыПечати.Номер));
	ПараметрыПечати.Вставить("СкладНаименование",СокрЛП(ПараметрыПечати.СкладПолучатель.Наименование));
	ПараметрыПечати.Вставить("ДатаСоставления", Формат(ПараметрыПечати.ДатаДокумента,"ДФ=dd.MM.yyyy"));
	ПараметрыПечати.Вставить("ПоставщикКод", ПараметрыПечати.СкладОтправитель.Код);

	ПараметрыПечати.Позиции.Колонки.НоменклатураНаименование.Имя="ТоварНаименование";
	ПараметрыПечати.Позиции.Колонки.СтоимостьБезНДС.Имя="СуммаБезНДС";
	ПараметрыПечати.Позиции.Колонки.СтоимостьСНДС.Имя="ВсегоСНДС";
	ПараметрыПечати.Позиции.Колонки.Количество.Имя="КоличествоПринято";
	ПараметрыПечати.Позиции.Колонки.НоменклатураКод.Имя="ТоварКод";

	Для Каждого СтрокаТз ИЗ ПараметрыПечати.Позиции Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТз.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		СтрокаТз.ТоварНаименование = СокрЛП(СтрокаТз.ТоварНаименование)
		                                          + ПечатныеФормыСервер.ПредставлениеСерий(СтрокаТз)
		                                          + ?(СтрокаТз.ТабличнаяЧасть = "ВозвратнаяТара", " (возвратная тара)", "");
	КонецЦикла;
	ПараметрыПечати.Вставить("ИтогоКоличествоПринято", ПараметрыПечати.Позиции.Итог("КоличествоПринято"));
	ПараметрыПечати.Вставить("ИтогоСуммаБезНДС", ПараметрыПечати.Позиции.Итог("СуммаБезНДС"));
	ПараметрыПечати.Вставить("ИтогоСуммаНДС", ПараметрыПечати.Позиции.Итог("СуммаНДС"));
	ПараметрыПечати.Вставить("ИтогоВсегоСНДС", ПараметрыПечати.Позиции.Итог("ВсегоСНДС"));

	Возврат ПараметрыПечати;

КонецФункции

Функция _Печать_М4(СтруктураПараметров,ТабДокумент)
	
	ОбщиеПараметрыПечати=_ПолучитьОбщиеДанныеДляПечати(СтруктураПараметров.СсылкаНаОбъект);
	ПараметрыПечати=_М4_ПараметрыПечати(ОбщиеПараметрыПечати, СтруктураПараметров.СсылкаНаОбъект);
	
	Если СтруктураПараметров.Свойство("ПараметрыПечати") Тогда
		Возврат ПараметрыПечати;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ВыполняемыйМодуль") Тогда
		Если Не ПустаяСтрока(СтруктураПараметров.ВыполняемыйМодуль) Тогда
			Выполнить(СтруктураПараметров.ВыполняемыйМодуль);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТабДокумент=Неопределено Тогда
		ТабДокумент=Новый ТабличныйДокумент;	
	КонецЕсли;
	
	Макет = ИнициализацияМакета(СтруктураПараметров, "М4");
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_М4";


	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим заголовок докмента
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	НомерСтраницы   = 1;
	КоличествоСтрок = ПараметрыПечати.Позиции.Количество();

	Ном=0;
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;	

	// Выводим многострочную часть докмента
	ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтрок");
	ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");	
	Для Каждого СтрокаТз ИЗ ПараметрыПечати.Позиции Цикл
		Ном = Ном + 1;
		ОбластьМакета.Параметры.Заполнить(СтрокаТз);
		МассивВыводимыхОбластей.Очистить();
		МассивВыводимыхОбластей.Добавить(ОбластьМакета);
		МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
		Если Ном = КоличествоСтрок Тогда
			МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		КонецЕсли;

		Если НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
			НомерСтраницы = НомерСтраницы + 1;
			ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
			ТабДокумент.Вывести(ПодвалСтрок);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;												  
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
КонецФункции	

Функция _М11_ПараметрыПечати(ПараметрыПечати, СсылкаНаОбъект)
	ПараметрыПечати.Вставить("Заголовок", "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + Строка(ПараметрыПечати.Номер));
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Организация, ПараметрыПечати.ДатаДокумента);
	ПараметрыПечати.Вставить("ПредставлениеОрганизации", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации));
	ПараметрыПечати.Вставить("КодОКПО", СведенияОбОрганизации.КодПоОКПО);
	ПараметрыПечати.Вставить("Склад",?(ПараметрыПечати.СкладОтправитель.Подразделение.Пустая(), ПараметрыПечати.СкладОтправитель, ПараметрыПечати.СкладОтправитель.Подразделение));
	ПараметрыПечати.Вставить("ПредставлениеПодразделения", ?(ПараметрыПечати.СкладПолучатель.Подразделение.Пустая(), ПараметрыПечати.СкладПолучатель, ПараметрыПечати.СкладПолучатель.Подразделение));
	ПараметрыПечати.Вставить("ДатаСоставления", Формат(ПараметрыПечати.ДатаДокумента,"ДФ=dd.MM.yyyy"));
	ПараметрыПечати.Вставить("Отпустил",ПараметрыПечати.СкладОтправитель);
	ПараметрыПечати.Вставить("Получил",ПараметрыПечати.СкладПолучатель);

	стрСчетов="";
	Если ПараметрыПечати.Позиции.Количество()>0 Тогда
		Если НЕ ПараметрыПечати.Позиции[0].ТОП.Пустая() Тогда
			Для Каждого СтрокаТз Из ПараметрыПечати.Позиции Цикл
				Если Найти(стрСчетов,Строка(СтрокаТз.ТОП.ПроводкиБУ[0].СчетКредит))>0 Тогда Продолжить; КонецЕсли;
				стрСчетов=стрСчетов+Строка(СтрокаТз.ТОП.ПроводкиБУ[0].СчетКредит)+" ";
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;
	ПараметрыПечати.Вставить("КоррСчет",стрСчетов);
	ПараметрыПечати.Позиции.Колонки.НоменклатураНаименование.Имя="МатериалНаименование";
	ПараметрыПечати.Позиции.Колонки.НоменклатураКод.Имя="НоменклатурныйНомер";
	ПараметрыПечати.Позиции.Колонки.СтоимостьБезНДС.Имя="Сумма";
	ПараметрыПечати.Позиции.Колонки.Добавить("Счет");
	Для Каждого СтрокаТз ИЗ ПараметрыПечати.Позиции Цикл
		СтрокаТз.МатериалНаименование = СокрЛП(СтрокаТз.МатериалНаименование) + ПечатныеФормыСервер.ПредставлениеСерий(СтрокаТз);
		Попытка
			СтрокаТз.Счет=СтрокаТз.ТОП.ПроводкиБУ[0].СчетДебет;
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	МассивСкладов=Новый Массив;
	МассивСкладов.Добавить(ПараметрыПечати.СкладОтправитель);
	МассивСкладов.Добавить(ПараметрыПечати.СкладПолучатель);	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НаДату",ПараметрыПечати.ДатаДокумента);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",МассивСкладов);
	Запрос.УстановитьПараметр("Организация",ПараметрыПечати.Организация);
	Запрос.Текст="
	
	|ВЫБРАТЬ
	|	ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница,
	|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо,
	|	КадровыеСведенияСрезПоследних.Должность
	|ИЗ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&НаДату,СтруктурнаяЕдиница В (&СтруктурнаяЕдиница)) КАК ОтветственныеЛицаСрезПоследних
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.КадровыеСведения.СрезПоследних(&НаДату,Организация=&Организация) КАК КадровыеСведенияСрезПоследних	
	|ПО
	|	КадровыеСведенияСрезПоследних.Сотрудник=ОтветственныеЛицаСрезПоследних.ФизическоеЛицо
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Индекс=1;
	Пока Выборка.Следующий() Цикл
		ФИО=УправлениеКонфигурациейСервер.ФИО(Выборка.ФизическоеЛицо,, Истина, ПараметрыПечати.ДатаДокумента);
		Должность=Выборка.Должность;
		Если Выборка.СтруктурнаяЕдиница=ПараметрыПечати.СкладПолучатель Тогда
			Индекс=2;
		КонецЕсли;	
		ПараметрыПечати.Вставить("Должность"+Индекс,Должность);
		ПараметрыПечати.Вставить("Расшифровка"+Индекс,ФИО);
	КонецЦикла;
	Возврат ПараметрыПечати;
КонецФункции

Функция _Печать_М11(СтруктураПараметров,ТабДокумент)
	ОбщиеПараметрыПечати=_ПолучитьОбщиеДанныеДляПечати(СтруктураПараметров.СсылкаНаОбъект);
	ПараметрыПечати=_М11_ПараметрыПечати(ОбщиеПараметрыПечати, СтруктураПараметров.СсылкаНаОбъект);
	
	Если СтруктураПараметров.Свойство("ПараметрыПечати") Тогда
		Возврат ПараметрыПечати;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ВыполняемыйМодуль") Тогда
		Если Не ПустаяСтрока(СтруктураПараметров.ВыполняемыйМодуль) Тогда
			Выполнить(СтруктураПараметров.ВыполняемыйМодуль);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТабДокумент=Неопределено Тогда
		ТабДокумент=Новый ТабличныйДокумент;	
	КонецЕсли;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_М11";
	
	// Вывод заголовка
	Макет = ИнициализацияМакета(СтруктураПараметров, "М11");
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);
	
	Для Каждого СтрокаТз ИЗ ПараметрыПечати.Позиции Цикл
		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(СтрокаТз);
		ТабДокумент.Вывести(Область);
	КонецЦикла;
	
	//Вывод подвала
	Область = Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);
	
	Возврат ТабДокумент;
КонецФункции

