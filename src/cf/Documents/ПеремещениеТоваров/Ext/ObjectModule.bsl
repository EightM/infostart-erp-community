Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт
	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;
КонецФункции

Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт
	Для Каждого СтрокаКоллекции Из Товары Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаКоллекции.Качество) Тогда
			СтрокаКоллекции.Качество=Справочники.Качество.Новый;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаКоллекции.ЕдиницаИзмеренияМест) И СтрокаКоллекции.КоличествоМест=0 Тогда
			СтрокаКоллекции.ЕдиницаИзмеренияМест=Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ЗаказОтправитель) Тогда
		Если Сделки.Найти(ЗаказОтправитель, "Сделка")=Неопределено Тогда
			НоваяСтрока=Сделки.Добавить();
			НоваяСтрока.Сделка=ЗаказОтправитель;
		КонецЕсли;
	КонецЕсли;

	ИтогоСебестоимостьУУ=Товары.Итог("СебестоимостьУУ");
	ИтогоСебестоимостьНУ=Товары.Итог("СебестоимостьНУ");
	ИтогоЦенаРозница=Товары.Итог("Цена");

	
КонецПроцедуры

Процедура ЗаполнитьРозничнуюЦену() Экспорт
	Для Каждого Строка Из Товары Цикл
		Строка.Цена=ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыРозницы(Строка.Номенклатура, СкладПолучатель.ТипЦенРозничнойТорговли, Строка.ХарактеристикаНоменклатуры, Дата, Строка.ЕдиницаИзмерения);
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнениеСпецификации(Изделие, Колво);
	ДокСпецификация=Документы.Спецификация.ПолучитьСпецификациюНаДату(Изделие.ОсновнаяСпецификация, Неопределено, Дата);
	Если ДокСпецификация=Неопределено Тогда Возврат; КонецЕсли;
	
	тзКомплектующие=ДокСпецификация.Комплектующие.Выгрузить();
	Для каждого СтрокаКоллекции Из тзКомплектующие Цикл
		Если СтрокаКоллекции.Номенклатура.Услуга Тогда Продолжить; КонецЕсли;
		НоваяСтрока=Товары.Добавить();
		НоваяСтрока.Номенклатура=СтрокаКоллекции.Номенклатура;
		НоваяСтрока.Количество=СтрокаКоллекции.Количество*Колво;
		НоваяСтрока.ЕдиницаИзмерения=СтрокаКоллекции.ЕдиницаИзмерения;
		НоваяСтрока.Коэффициент=НоваяСтрока.ЕдиницаИзмерения.Коэффициент;
		НоваяСтрока.Качество=Справочники.Качество.Новый;
		НоваяСтрока.ID=Строка(Новый УникальныйИдентификатор);
	КонецЦикла; 
КонецПроцедуры


Процедура ДополнитьТаблицуАтрибутамиШапки(СтруктураШД, тзСсылка, стрВидТабличнойЧасти)
	СтруктураРеквизитов=Новый Структура;
	СтруктураРеквизитов.Вставить("Организация", Организация);
	СтруктураРеквизитов.Вставить("Подразделение", Подразделение);
	СтруктураРеквизитов.Вставить("Период", Дата);
	СтруктураРеквизитов.Вставить("Активность", Истина);
	СтруктураРеквизитов.Вставить("ВидТабличнойЧасти", стрВидТабличнойЧасти);
	Для каждого СтрокаКоллекции Из СтруктураРеквизитов Цикл
		тзСсылка.Колонки.Добавить(СтрокаКоллекции.Ключ);
		тзСсылка.ЗаполнитьЗначения(СтрокаКоллекции.Значение, СтрокаКоллекции.Ключ);
	КонецЦикла;
КонецПроцедуры
 
Функция СформироватьТаблицу_Товары(СтруктураШД, Отказ, Заголовок)
	ОписаниеТипаЧисло=ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2);
	
	тзДанные=Товары.Выгрузить();
	тзДанные.Колонки.Добавить("Склад"); //***
	тзДанные.Колонки.Добавить("Услуга");
	тзДанные.Колонки.Добавить("Набор");
	тзДанные.Колонки.Добавить("Комплект");
	тзДанные.Колонки.Добавить("ВестиУчетПоХарактеристикам");
	тзДанные.Колонки.Добавить("ВестиПартионныйУчетПоСериям");
	тзДанные.Колонки.Добавить("ДокументПолучения");
	тзДанные.Колонки.Добавить("СтоимостьСписаниеУУ", ОписаниеТипаЧисло);
	тзДанные.Колонки.Добавить("СтоимостьСписаниеНУ", ОписаниеТипаЧисло);
	тзДанные.Колонки.Добавить("СтоимостьПоступление", ОписаниеТипаЧисло);
	тзДанные.Колонки.Добавить("СтоимостьПоступлениеНУ", ОписаниеТипаЧисло);
	тзДанные.Колонки.Добавить("НомерСтрокиТабличнойЧасти");
	
	Для каждого СтрокаКоллекции Из тзДанные Цикл
		СтрокаКоллекции.Количество=СтрокаКоллекции.Количество * СтрокаКоллекции.Коэффициент /СтрокаКоллекции.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент;
		СтрокаКоллекции.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтроки;
		СтрокаКоллекции.Услуга=СтрокаКоллекции.Номенклатура.Услуга;
		СтрокаКоллекции.Набор=СтрокаКоллекции.Номенклатура.Набор;
		СтрокаКоллекции.Комплект=СтрокаКоллекции.Номенклатура.Комплект;
		СтрокаКоллекции.ЕдиницаИзмерения=СтрокаКоллекции.Номенклатура.ЕдиницаХраненияОстатков;
		СтрокаКоллекции.ВестиУчетПоХарактеристикам=СтрокаКоллекции.Номенклатура.ВестиУчетПоХарактеристикам;
		СтрокаКоллекции.ВестиПартионныйУчетПоСериям=СтрокаКоллекции.Номенклатура.ВестиПартионныйУчетПоСериям;
		СтрокаКоллекции.СтоимостьСписаниеУУ=СтрокаКоллекции.СебестоимостьУУ;
		СтрокаКоллекции.СтоимостьСписаниеНУ=СтрокаКоллекции.СебестоимостьНУ;
		СтрокаКоллекции.СтоимостьПоступление=СтрокаКоллекции.СебестоимостьУУ;
		СтрокаКоллекции.СтоимостьПоступлениеНУ=СтрокаКоллекции.СебестоимостьНУ;

		////Если ЗначениеЗаполнено(СтрокаКоллекции.ДокументРезерва) Тогда
		////	СтрокаКоллекции.ДокументПолучения=СтрокаКоллекции.ДокументРезерва;
		////	Если Не СтрокаКоллекции.ДокументРезерва.БезПраваПРодажи Тогда
		////		СтрокаКоллекции.ДокументРезерва=Неопределено;
		////	КонецЕсли;
		////КонецЕсли; //04.2018

		Если НЕ СтрокаКоллекции.ВестиПартионныйУчетПоСериям Тогда
			СтрокаКоллекции.СерияНоменклатуры=Неопределено;
		КонецЕсли;

		стрСообщение="";		
		Если СтрокаКоллекции.Набор Тогда			
			стрСообщение=стрСообщение+"содержится набор-пакет. Наборов-пакетов здесь быть не должно!";
		ИначеЕсли СтрокаКоллекции.Услуга Тогда
			стрСообщение=стрСообщение+"содержится услуга. Услуг здесь быть не должно!";			
		КонецЕсли;
		Если НЕ ПустаяСтрока(стрСообщение) Тогда
			стрСообщение="В строке номер """+СокрЛП(СтрокаКоллекции.НомерСтроки)+""" табличной части ""Товары"": "+Символы.ПС+стрСообщение;
			ОбщегоНазначения.СообщитьОбОшибке(стрСообщение, Отказ, Заголовок);
		КонецЕсли; 
	КонецЦикла;

	тзДанные.ЗаполнитьЗначения(СкладОтправитель, "Склад"); //***
	ДополнитьТаблицуАтрибутамиШапки(СтруктураШД, тзДанные, "Товары");

	Возврат тзДанные;
КонецФункции

Функция СформироватьТаблицу_ТараВТ(СтруктураШД, Отказ, Заголовок)
	ОписаниеТипаЧисло=ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2);

	тзДанные=ВозвратнаяТара.Выгрузить();
	тзДанные.Колонки.Добавить("Услуга");
	тзДанные.Колонки.Добавить("Набор");
	тзДанные.Колонки.Добавить("Комплект");
	тзДанные.Колонки.Добавить("ВестиУчетПоХарактеристикам");
	тзДанные.Колонки.Добавить("СуммаПродажная");
	тзДанные.Колонки.Добавить("СтоимостьСписаниеУУ", ОписаниеТипаЧисло);
	тзДанные.Колонки.Добавить("СтоимостьСписаниеНУ", ОписаниеТипаЧисло);
	тзДанные.Колонки.Добавить("СтоимостьПоступление", ОписаниеТипаЧисло);
	тзДанные.Колонки.Добавить("СтоимостьПоступлениеНУ", ОписаниеТипаЧисло);

	Для каждого СтрокаКоллекции Из тзДанные Цикл
		СтрокаКоллекции.Услуга=СтрокаКоллекции.Номенклатура.Услуга;
		СтрокаКоллекции.Набор=СтрокаКоллекции.Номенклатура.Набор;
		СтрокаКоллекции.Комплект=СтрокаКоллекции.Номенклатура.Комплект;
		СтрокаКоллекции.ВестиУчетПоХарактеристикам=СтрокаКоллекции.Номенклатура.ВестиУчетПоХарактеристикам;
		СтрокаКоллекции.СтоимостьСписаниеУУ=СтрокаКоллекции.СебестоимостьУУ;
		СтрокаКоллекции.СтоимостьСписаниеНУ=СтрокаКоллекции.СебестоимостьНУ;
		СтрокаКоллекции.СтоимостьПоступление=СтрокаКоллекции.СебестоимостьУУ;
		СтрокаКоллекции.СтоимостьПоступлениеНУ=СтрокаКоллекции.СебестоимостьНУ;

		стрСообщение="";
		Если СтрокаКоллекции.Услуга Тогда
			стрСообщение="содержится услуга. Услуг здесь быть не должно!";
		ИначеЕсли СтрокаКоллекции.Набор Тогда
			стрСообщение="содержится набор-пакет. Наборов-пакетов здесь быть не должно!";
		ИначеЕсли СтрокаКоллекции.ВестиУчетПоХарактеристикам Тогда
			стрСообщение="содержится номенклатура, по которой ведется учет по характеристикам. По возвратной таре не ведется учет по характеристикам!";
		КонецЕсли;
		Если НЕ ПустаяСтрока(стрСообщение) Тогда
			стрСообщение="В строке номер """+СокрЛП(СтрокаКоллекции.НомерСтроки)+""" табличной части ""Возвратная тара"": "+Символы.ПС+стрСообщение;
			ОбщегоНазначения.СообщитьОбОшибке(стрСообщение, Отказ, Заголовок);
		КонецЕсли;		
	КонецЦикла;

	ДополнитьТаблицуАтрибутамиШапки(СтруктураШД, тзДанные, "Тара");

	Возврат тзДанные;	
КонецФункции

Функция ЕстьРозница() Экспорт
	Возврат (СкладОтправитель.ВидСклада = Перечисления.ВидыСкладов.Розничный Или СкладПолучатель.ВидСклада = Перечисления.ВидыСкладов.Розничный);
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Движения по регистрам 

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_ТоварыКПередачеСоСкладов(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетЗаказов(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетПотребностей(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетТМЦ(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_СписанныеТовары(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетПартийТМЦ(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетРезервовТМЦ(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ТоварыКПередачеСоСкладов(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ ВидОперации=Перечисления.ВидыОперацийПеремещениеТоваров.ТоварыПродукцияПоОрдерам Тогда
		Возврат;
	КонецЕсли;
	
	тзДанные=Движения.ТоварыКПередачеСоСкладов.ВыгрузитьКолонки();
	
	Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
		НоваяСтрока=тзДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.СтатусПартии=Перечисления.СтатусыПартийТоваров.Купленный;
	КонецЦикла; 
	Для каждого СтрокаКоллекции Из СтруктураТД.ТараВТ Цикл
		НоваяСтрока=тзДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.СтатусПартии=Перечисления.СтатусыПартийТоваров.ВозвратнаяТара;
		НоваяСтрока.Качество=Справочники.Качество.Новый;
	КонецЦикла;
	тзДанные.ЗаполнитьЗначения(СкладОтправитель, "Склад");
	тзДанные.ЗаполнитьЗначения(Ссылка, "ДокументПередачи");
	
	Движения.ТоварыКПередачеСоСкладов.Загрузить(тзДанные);	
КонецПроцедуры

Процедура ДвижениеПоРегистру_СписанныеТовары(СтруктураШД, СтруктураТД, Отказ)

	тзДвижения=Движения.СписанныеТовары.ВыгрузитьКолонки(); НомерСтроки=1;

	//Товары
	Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
		НоваяСтрока=тзДвижения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.КоличествоПоступлениеДоп=СтрокаКоллекции.КоличествоДоп;
		НоваяСтрока.СписыватьТолькоПоЗаказу=Истина;
		НоваяСтрока.ЗаказПартии=ЗаказОтправитель;
		НоваяСтрока.ЗаказСписания=ЗаказПолучатель;
		НоваяСтрока.ДокументПартии=ДокументПартии;
		Если ВидОперации=Перечисления.ВидыОперацийПеремещениеТоваров.ТоварыПродукция Тогда 
			НоваяСтрока.ДопустимыйСтатус1=Перечисления.СтатусыПартийТоваров.Купленный;
			НоваяСтрока.ДопустимыйСтатус2=Перечисления.СтатусыПартийТоваров.НаКомиссию;
		КонецЕсли;
		НоваяСтрока.ВидСклада=СтруктураШД.ВидСкладаОтправителя;
		НоваяСтрока.НомерСтрокиДокумента=НомерСтроки;
		НомерСтроки=НомерСтроки+1;
	КонецЦикла;

	//Возвратная тара
	Для каждого СтрокаКоллекции Из СтруктураТД.ТараВТ Цикл
		НоваяСтрока=тзДвижения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.ДопустимыйСтатус1=Перечисления.СтатусыПартийТоваров.ВозвратнаяТара;
		НоваяСтрока.ЗаказПартии=ЗаказОтправитель;
		НоваяСтрока.ЗаказСписания=ЗаказПолучатель;
		НоваяСтрока.НомерСтрокиДокумента=НомерСтроки;
		НоваяСтрока.Качество=Справочники.Качество.Новый;
		НомерСтроки=НомерСтроки+1;
	КонецЦикла;

	//Заполнение общих реквизитов
	тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(СкладОтправитель, "Склад");
	тзДвижения.ЗаполнитьЗначения(СкладПолучатель, "СкладПолучатель");
	тзДвижения.ЗаполнитьЗначения(Подразделение, "Подразделение");
	тзДвижения.ЗаполнитьЗначения(Перечисления.КодыОперацийПартииТоваров.ПеремещениеМеждуСкладами, "КодОперацииПартииТоваров");
	Если ВидОперации=Перечисления.ВидыОперацийПеремещениеТоваров.ТоварыПродукцияПоОрдерам Тогда
		тзДвижения.ЗаполнитьЗначения(Истина, "НеСписывать");
	КонецЕсли;

	Движения.СписанныеТовары.Загрузить(тзДвижения);
	Движения.СписанныеТовары.Записать(Истина);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетТМЦ(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ТоварыНаСкладах") Тогда Возврат; КонецЕсли;
	Если ВидОперации=Перечисления.ВидыОперацийПеремещениеТоваров.ТоварыПродукцияПоОрдерам Тогда Возврат; КонецЕсли; 

	//Двидения по регистру "Учет по ячейкам"
	тзДвижения=Движения["ТоварыНаСкладах"].ВыгрузитьКолонки();
	
	ВыполнитьДвижениеРасход=Истина; ВыполнитьДвижениеПриход=Истина;
	
	//Данные склада отправителя
	ВыполнитьДвижениеРасход=СтруктураШД.СкладОтправительЯчеистый;			
	
	//Данные склада получателя
	ВыполнитьДвижениеПриход=СтруктураШД.СкладПолучательЯчеистый;

	Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
		Если ВыполнитьДвижениеРасход Тогда
			НоваяСтрока=тзДвижения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.Склад=СкладОтправитель;
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Расход;
		КонецЕсли;
		Если ВыполнитьДвижениеПриход Тогда
			НоваяСтрока=тзДвижения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.Склад=СкладПолучатель;
			Если СтруктураШД.ВидСкладаПолучателя=Перечисления.ВидыСкладов.Оптовый Тогда
				НоваяСтрока.Ячейка=СтрокаКоллекции.ЯчейкаНовая;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаКоллекции.КачествоНовое) Тогда
				НоваяСтрока.Качество=СтрокаКоллекции.КачествоНовое;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаКоллекции.СерияНоменклатурыНовая)Тогда
				НоваяСтрока.СерияНоменклатуры=СтрокаКоллекции.СерияНоменклатурыНовая;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаКоллекции.ХарактеристикаНоменклатурыНовая)Тогда
				НоваяСтрока.ХарактеристикаНоменклатуры=СтрокаКоллекции.ХарактеристикаНоменклатурыНовая;
			КонецЕсли;
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрокаКоллекции Из СтруктураТД.ТараВТ Цикл
		Если ВыполнитьДвижениеРасход Тогда
			НоваяСтрока=тзДвижения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.Склад=СкладОтправитель;
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Расход;
		КонецЕсли;
		Если ВыполнитьДвижениеПриход Тогда
			НоваяСтрока=тзДвижения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.Склад=СкладПолучатель;
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
		КонецЕсли;			
	КонецЦикла;
	
	//Регистр "Учет ТМЦ" (по ячейкам)
	Если тзДвижения.Количество()>0 Тогда
		тзДвижения.ЗаполнитьЗначения(Дата, "Период");
		тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
		тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
		Движения.ТоварыНаСкладах.Загрузить(тзДвижения);
	КонецЕсли;	
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетПартийТМЦ(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ПартииТоваровНаСкладах") Тогда Возврат; КонецЕсли;

	СтруктураШД.Вставить("Отказ", Отказ);
	СтруктураШД.Вставить("ТаблицаСписания", Движения.СписанныеТовары.Выгрузить());
	УправлениеЗапасамиПартионныйУчет.ДвижениеПартийТоваров(Ссылка, СтруктураШД);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетРезервовТМЦ(СтруктураШД, СтруктураТД, Отказ)
	СтруктураПараметров=Новый Структура("МоментВремени,Дата,Ссылка,Организация");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, СтруктураШД);
	СтруктураПараметров.Вставить("тзУчетРезервовТМЦ", Движения.УчетРезервовТМЦ.ВыгрузитьКолонки());
	УправлениеРезервамиСервер.СформироватьДвиженияРасход(СтруктураПараметров, СтруктураТД, Отказ);
	Если НЕ СтруктураПараметров.тзУчетРезервовТМЦ.Количество()=0 Тогда
		//Движения.УчетРезервовТМЦ.Загрузить(СтруктураПараметров.тзУчетРезервовТМЦ);
		Для каждого СтрокаКоллекции Из СтруктураПараметров.тзУчетРезервовТМЦ Цикл
			ЗаполнитьЗначенияСвойств(Движения.УчетРезервовТМЦ.Добавить(), СтрокаКоллекции);
		КонецЦикла;
	КонецЕсли;

	//Резерв который убрали - ставим на новый склад\заказ
	Если ЗначениеЗаполнено(ЗаказПолучатель) Тогда
		Для каждого СтрокаКоллекции Из Движения.УчетРезервовТМЦ Цикл
			Если СтрокаКоллекции.ВидДвижения=ВидДвиженияНакопления.Приход Тогда Прервать; КонецЕсли;
			НоваяСтрока=Движения.УчетРезервовТМЦ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
			НоваяСтрока.Заказ=ЗаказПолучатель;
			НоваяСтрока.Склад=СкладПолучатель;
		КонецЦикла;
	КонецЕсли; 

	//Восстановить учет потребностей после списания резерва
	Если ЗначениеЗаполнено(ЗаказОтправитель) Тогда
		Для каждого СтрокаКоллекции Из Движения.УчетРезервовТМЦ Цикл
			Если СтрокаКоллекции.ВидДвижения=ВидДвиженияНакопления.Приход Тогда Продолжить;; КонецЕсли;
			НоваяСтрока=Движения.УчетПотребностей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
			НоваяСтрока.ДокументРезерва=ЗаказОтправитель;
			НоваяСтрока.Склад=СкладОтправитель;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
// Проведение по регистрам (по нескольким регистрам одного типа)

Процедура ДвижениеПоРегистру_УчетЗаказов(СтруктураШД, СтруктураТД, Отказ)
	Если Сделки.Количество()=0 Тогда Возврат; КонецЕсли;

	СтруктураПараметров=Новый Структура("МоментВремени,Дата,Ссылка,Организация");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, СтруктураШД);
	СтруктураПараметров.Вставить("ТаблицаДвижений1", Движения.ЗаказыПокупателей.ВыгрузитьКолонки());
	СтруктураПараметров.Вставить("ТаблицаДвижений2", Движения.ВнутренниеЗаказы.ВыгрузитьКолонки());
	СтруктураПараметров.Вставить("ТаблицаДвижений3", Движения.ЗаказыНаПроизводство.ВыгрузитьКолонки());

	УправлениеЗаказамиСервер.СформироватьДвиженияРегистров(СтруктураПараметров, СтруктураТД, Отказ);

	Если ТипЗнч(ЗаказПолучатель)=Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
			НоваяСтрока=СтруктураПараметров.ТаблицаДвижений1.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.ЗаказПокупателя=ЗаказПолучатель;
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
			НоваяСтрока.Регистратор=Ссылка;
		КонецЦикла;

	ИначеЕсли ТипЗнч(ЗаказПолучатель)=Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
		Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
			НоваяСтрока=СтруктураПараметров.ТаблицаДвижений2.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.ВнутреннийЗаказ=ЗаказПолучатель;
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
			НоваяСтрока.Склад=СкладПолучатель;
			НоваяСтрока.Регистратор=Ссылка;
		КонецЦикла;

	ИначеЕсли ТипЗнч(ЗаказПолучатель)=Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
		Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
			НоваяСтрока=СтруктураПараметров.ТаблицаДвижений3.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.ЗаказНаряд=ЗаказПолучатель;
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
			НоваяСтрока.Регистратор=Ссылка;
		КонецЦикла;
	КонецЕсли;
	
	Движения.ЗаказыПокупателей	 .Загрузить(СтруктураПараметров.ТаблицаДвижений1);
	Движения.ВнутренниеЗаказы	 .Загрузить(СтруктураПараметров.ТаблицаДвижений2);
	Движения.ЗаказыНаПроизводство.Загрузить(СтруктураПараметров.ТаблицаДвижений3);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетПотребностей(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "УчетПотребностей") Тогда Возврат; КонецЕсли;

	тзСделки=Новый ТаблицаЗначений;
	тзСделки.Колонки.Добавить("Сделка");
	НоваяСтрока=тзСделки.Добавить();
	НоваяСтрока.Сделка=ЗаказПолучатель;

	тзТМЦ=Новый ТаблицаЗначений;
	тзТМЦ.Колонки.Добавить("Склад");
	тзТМЦ.Колонки.Добавить("Номенклатура");
	тзТМЦ.Колонки.Добавить("ХарактеристикаНоменклатуры");
	тзТМЦ.Колонки.Добавить("Количество");
	тзТМЦ.Колонки.Добавить("НомерСтрокиТабличнойЧасти");
	тзТМЦ.Колонки.Добавить("ВидТабличнойЧасти");

	МассивСерийНоменклатуры=Новый Массив;	
	МассивХарактеристикНоменклатуры=Новый Массив;	
	МассивСкладов=Новый Массив;
	МассивСкладов.Добавить(СкладПолучатель);
    МассивТоваров=Новый Массив;

	Для каждого СтрокаКоллекции1 Из СтруктураТД Цикл
		Если НЕ СтрокаКоллекции1.Ключ="Товары" И НЕ СтрокаКоллекции1.Ключ="ТараВТ" Тогда Продолжить; КонецЕсли;

		Для каждого СтрокаКоллекции2 Из СтрокаКоллекции1.Значение Цикл
			НоваяСтрока=тзТМЦ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции2);
			НоваяСтрока.Склад=СкладПолучатель;
			Если СтрокаКоллекции1.Ключ="Товары" И ЗначениеЗаполнено(СтрокаКоллекции2.ХарактеристикаНоменклатуры) Тогда
				МассивХарактеристикНоменклатуры.Добавить(СтрокаКоллекции2.ХарактеристикаНоменклатуры);
			КонецЕсли;
			МассивТоваров.Добавить(СтрокаКоллекции2.Номенклатура);
		КонецЦикла;
	КонецЦикла;
	
	МассивСделок=Новый Массив;
	Для каждого СтрокаКоллекции Из тзСделки Цикл
		Если НЕ ТипЗнч(СтрокаКоллекции.Сделка)=Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			МассивСделок.Добавить(СтрокаКоллекции.Сделка);
		КонецЕсли; 
	КонецЦикла; 

	стрУсловие="Организация = Организация И Склад В (&Склад) И Номенклатура В (&Номенклатура)";
	Если МассивХарактеристикНоменклатуры.Количество()>0 Тогда
		МассивХарактеристикНоменклатуры.Добавить(Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		стрУсловие=стрУсловие+" И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)";
	КонецЕсли;
	Если НЕ МассивСделок.Количество()=0 Тогда
		стрУсловие=стрУсловие+" И ДокументРезерва В (&Сделка)";
	КонецЕсли;
	ОрганизацияСсылка=Организация;
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НаДату", МоментВремени());
	Запрос.УстановитьПараметр("Организация", ОрганизацияСсылка);
	Запрос.УстановитьПараметр("Склад", МассивСкладов);
	Запрос.УстановитьПараметр("Номенклатура", МассивТоваров);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", МассивХарактеристикНоменклатуры);
	Запрос.УстановитьПараметр("Сделка", МассивСделок);	
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных1.Склад,
	|	ИсточникДанных1.Номенклатура,
	|	ИсточникДанных1.ХарактеристикаНоменклатуры,
	|	ИсточникДанных1.ДокументРезерва,
	|	СУММА(ИсточникДанных1.КоличествоОстаток) КАК Количество
	|ИЗ
	|	РегистрНакопления.УчетПотребностей.Остатки(&НаДату, "+стрУсловие+") КАК ИсточникДанных1
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных1.Склад,
	|	ИсточникДанных1.Номенклатура,
	|	ИсточникДанных1.ХарактеристикаНоменклатуры,
	|	ИсточникДанных1.ДокументРезерва
	|";
	тзОстаткиПоСделкам=Запрос.Выполнить().Выгрузить();
	Если тзОстаткиПоСделкам.Количество()=0 Тогда Возврат; КонецЕсли;

	//Отсортируем сделки по порядку списания
	Если тзСделки.Количество()>0 Тогда
		тзОстаткиПоСделкам.Колонки.Добавить("ПорядковыйНомер");
		Для каждого СтрокаКоллекции Из тзСделки Цикл
			РезультатПоиска=тзОстаткиПоСделкам.Найти(СтрокаКоллекции.Сделка, "ДокументРезерва");
			Если РезультатПоиска=Неопределено Тогда Продолжить; КонецЕсли;
			РезультатПоиска.ПорядковыйНомер=тзСделки.Индекс(СтрокаКоллекции);
		КонецЦикла;
		тзОстаткиПоСделкам.Сортировать("ПорядковыйНомер Возвр");
	КонецЕсли;

	тзДвижения=Движения.УчетПотребностей.ВыгрузитьКолонки();

	СтруктураОтбора=Новый Структура("Склад,Номенклатура,ХарактеристикаНоменклатуры");
	Для каждого СтрокаКоллекции1 Из тзТМЦ Цикл
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаКоллекции1);
		МассивСтрок=тзОстаткиПоСделкам.НайтиСтроки(СтруктураОтбора);
		Для каждого СтрокаКоллекции2 Из МассивСтрок Цикл
			текКоличество=Мин(СтрокаКоллекции2.Количество, СтрокаКоллекции1.Количество);
			Если текКоличество<=0 Или СтрокаКоллекции1.Количество<=0 Тогда Продолжить; КонецЕсли;
			СтрокаКоллекции1.Количество=СтрокаКоллекции1.Количество-текКоличество;
            СтрокаКоллекции2.Количество=СтрокаКоллекции2.Количество-текКоличество;

			НоваяСтрока=тзДвижения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции1);
			НоваяСтрока.ДокументРезерва=СтрокаКоллекции2.ДокументРезерва;
			НоваяСтрока.Количество=текКоличество;			
		КонецЦикла;
	КонецЦикла; 

    тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(ОрганизацияСсылка, "Организация");
	тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");

	Движения.УчетПотребностей.Загрузить(тзДвижения);
	
	////Учет резервов ТМЦ
	//Если Константы.УчетРезервов.Получить() Тогда
	//	тзДвижения.Колонки.ДокументРезерва.Имя="Заказ";
	//	тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");
	//	Для каждого СтрокаКоллекции Из тзДвижения Цикл
	//		ЗаполнитьЗначенияСвойств(Движения.УчетРезервовТМЦ.Добавить(), СтрокаКоллекции);
	//	КонецЦикла; 
	//	//Движения.УчетРезервовТМЦ.Загрузить(тзДвижения);
	//КонецЕсли;
	
	//Учет резервов ТМЦ
	Если Константы.УчетРезервов.Получить() Тогда
		тзДвижения.Колонки.ДокументРезерва.Имя="Заказ";
		тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");
		СтруктураПоискаСтроки=Новый Структура("НомерСтрокиТабличнойЧасти", 0);
		Для каждого СтрокаКоллекции Из тзДвижения Цикл
			НоваяСтрока=Движения.УчетРезервовТМЦ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			СтруктураПоискаСтроки.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтрокиТабличнойЧасти;
			МассивСтрок=СтруктураТД.Товары.НайтиСтроки(СтруктураПоискаСтроки);
			Если НЕ МассивСтрок.Количество()=0 Тогда
				НоваяСтрока.СерияНоменклатуры=МассивСтрок[0].СерияНоменклатуры;
			КонецЕсли;	
		КонецЦикла; 
		//Движения.УчетРезервовТМЦ.Загрузить(тзДвижения);
	КонецЕсли;	

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ОбработкаЗаполнения(Основание)
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание) Тогда Возврат; КонецЕсли;

	Если ТипЗнч(Основание)=Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		СкладОтправитель=Основание.Склад;
		СкладПолучатель=Основание.Склад;
		Для каждого СтрокаТабличнойЧасти из Основание.Товары Цикл
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура.ОсновнаяСпецификация) Тогда
				ЗаполнениеСпецификации(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.Количество);
			Иначе
				НоваяСтрока=Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти,,"ТОП");
				Если НЕ ЗначениеЗаполнено(НоваяСтрока.Качество) Тогда
					НоваяСтрока.Качество=Справочники.Качество.Новый;
				КонецЕсли;
				НоваяСтрока.ID=Новый УникальныйИдентификатор;
				НоваяСтрока.СерияНоменклатурыНовая=НоваяСтрока.СерияНоменклатуры;
				НоваяСтрока.ХарактеристикаНоменклатурыНовая=НоваяСтрока.ХарактеристикаНоменклатуры;
				НоваяСтрока.КачествоНовое=НоваяСтрока.Качество;
				НоваяСтрока.ЯчейкаНовая=НоваяСтрока.Ячейка;
			КонецЕсли;
		КонецЦикла;
		Для каждого СтрокаТабличнойЧасти из Основание.Услуги Цикл
			ЗаполнениеСпецификации(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.Количество);
		КонецЦикла;

	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
		ЗаказОтправитель=Основание;
		ЗаказПолучатель=Основание;
		СкладПолучатель=Основание.Склад;
		СкладОтправитель=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
		Для каждого СтрокаТабличнойЧасти из Основание.Товары Цикл
			НоваяСтрока=Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			НоваяСтрока.ID=Новый УникальныйИдентификатор;
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Качество) Тогда
				НоваяСтрока.Качество=Справочники.Качество.Новый;
			КонецЕсли;
			Если НЕ СкладПолучатель.ТипЦенРозничнойТорговли.Пустая() Тогда
				НоваяСтрока.Цена=ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыРозницы(НоваяСтрока.Номенклатура, СкладПолучатель.ТипЦенРозничнойТорговли, НоваяСтрока.ХарактеристикаНоменклатуры, Дата, НоваяСтрока.ЕдиницаИзмерения);
			КонецЕсли;
			НоваяСтрока.СерияНоменклатурыНовая=НоваяСтрока.СерияНоменклатуры;
			НоваяСтрока.ХарактеристикаНоменклатурыНовая=НоваяСтрока.ХарактеристикаНоменклатуры;
			НоваяСтрока.КачествоНовое=НоваяСтрока.Качество;
			НоваяСтрока.ЯчейкаНовая=НоваяСтрока.Ячейка;			
		КонецЦикла;

	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		Для Каждого СтрокаТабличнойЧасти Из Основание.Товары Цикл
			НоваяСтрока=Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			НоваяСтрока.ID=Новый УникальныйИдентификатор;
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Качество) Тогда
				НоваяСтрока.Качество=Справочники.Качество.Новый;
			КонецЕсли;
			НоваяСтрока.СерияНоменклатурыНовая=НоваяСтрока.СерияНоменклатуры;
			НоваяСтрока.ХарактеристикаНоменклатурыНовая=НоваяСтрока.ХарактеристикаНоменклатуры;
			НоваяСтрока.КачествоНовое=НоваяСтрока.Качество;
			НоваяСтрока.ЯчейкаНовая=НоваяСтрока.Ячейка;			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Если СкладПолучатель.Пустая() Тогда
			СкладПолучатель=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
		КонецЕсли; 

		Если Основание.ВидПоступления=Перечисления.ВидыПоступленияТоваров.ПоОрдеру Тогда
			СкладОтправитель=Основание.Склад.Склад;
		Иначе
			СкладОтправитель=Основание.Склад;
		КонецЕсли;

		Для Каждого СтрокаТабличнойЧасти Из Основание.Товары Цикл
			НоваяСтрока=Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти,,"ТОП");
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Качество) Тогда
				НоваяСтрока.Качество=Справочники.Качество.Новый;
			КонецЕсли;
			НоваяСтрока.ID=Новый УникальныйИдентификатор;
			НоваяСтрока.СерияНоменклатурыНовая=НоваяСтрока.СерияНоменклатуры;
			НоваяСтрока.ХарактеристикаНоменклатурыНовая=НоваяСтрока.ХарактеристикаНоменклатуры;
			НоваяСтрока.КачествоНовое=НоваяСтрока.Качество;
			НоваяСтрока.ЯчейкаНовая=НоваяСтрока.Ячейка;			
		КонецЦикла;

		Для Каждого СтрокаТабличнойЧасти Из Основание.ВозвратнаяТара Цикл
			НоваяСтрока=ВозвратнаяТара.Добавить();
			НоваяСтрока.Номенклатура=СтрокаТабличнойЧасти.Номенклатура;
			НоваяСтрока.Количество=СтрокаТабличнойЧасти.Количество;
		КонецЦикла;

	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.ВыпускПродукции") Тогда
		СкладОтправитель=Основание.Склад;
		Для Каждого СтрокаТабличнойЧасти Из Основание.Товары Цикл
			НоваяСтрока=Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти,,"ТОП");
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Качество) Тогда
				НоваяСтрока.Качество=Справочники.Качество.Новый;
			КонецЕсли;
			НоваяСтрока.ID=Новый УникальныйИдентификатор;
			НоваяСтрока.СерияНоменклатурыНовая=НоваяСтрока.СерияНоменклатуры;
			НоваяСтрока.ХарактеристикаНоменклатурыНовая=НоваяСтрока.ХарактеристикаНоменклатуры;
			НоваяСтрока.КачествоНовое=НоваяСтрока.Качество;
			НоваяСтрока.ЯчейкаНовая=НоваяСтрока.Ячейка;
		КонецЦикла;

	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		СкладОтправитель=Основание.Склад;
		Для Каждого СтрокаТабличнойЧасти Из Основание.Товары Цикл
			НоваяСтрока=Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти,,"ТОП");
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Качество) Тогда
				НоваяСтрока.Качество=Справочники.Качество.Новый;
			КонецЕсли;
			НоваяСтрока.ID=Новый УникальныйИдентификатор;
			НоваяСтрока.СерияНоменклатурыНовая=НоваяСтрока.СерияНоменклатуры;
			НоваяСтрока.ХарактеристикаНоменклатурыНовая=НоваяСтрока.ХарактеристикаНоменклатуры;
			НоваяСтрока.КачествоНовое=НоваяСтрока.Качество;
			НоваяСтрока.ЯчейкаНовая=НоваяСтрока.Ячейка;			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
		СкладОтправитель=Основание.Склад;
		СкладПолучатель=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
		Для каждого СтрокаТабличнойЧасти из Основание.Материалы Цикл
			НоваяСтрока=Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			НоваяСтрока.ID=Новый УникальныйИдентификатор;
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Качество) Тогда
				НоваяСтрока.Качество=Справочники.Качество.Новый;
			КонецЕсли;
			Если НЕ СкладПолучатель.ТипЦенРозничнойТорговли.Пустая() Тогда
				НоваяСтрока.Цена=ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыРозницы(НоваяСтрока.Номенклатура, СкладПолучатель.ТипЦенРозничнойТорговли, НоваяСтрока.ХарактеристикаНоменклатуры, Дата, НоваяСтрока.ЕдиницаИзмерения);
			КонецЕсли;
			НоваяСтрока.СерияНоменклатурыНовая=НоваяСтрока.СерияНоменклатуры;
			НоваяСтрока.ХарактеристикаНоменклатурыНовая=НоваяСтрока.ХарактеристикаНоменклатуры;
			НоваяСтрока.КачествоНовое=НоваяСтрока.Качество;
			НоваяСтрока.ЯчейкаНовая=НоваяСтрока.Ячейка;			
		КонецЦикла;

	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		СкладОтправитель=Основание.Склад;
		СкладПолучатель=Основание.Склад;
		Для каждого СтрокаТабличнойЧасти из Основание.Товары Цикл
			НоваяСтрока=Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти,,"ТОП");
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Качество) Тогда
				НоваяСтрока.Качество=Справочники.Качество.Новый;
			КонецЕсли;
			НоваяСтрока.ID=Новый УникальныйИдентификатор;
			НоваяСтрока.СерияНоменклатурыНовая=НоваяСтрока.СерияНоменклатуры;
			НоваяСтрока.ХарактеристикаНоменклатурыНовая=НоваяСтрока.ХарактеристикаНоменклатуры;
			НоваяСтрока.КачествоНовое=НоваяСтрока.Качество;
			НоваяСтрока.ЯчейкаНовая=НоваяСтрока.Ячейка;
		КонецЦикла;
	КонецЕсли;
	
	ОбработкаТабличныхЧастей.ЗаполнитьТиповыеОперации(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения) Экспорт
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);
	
	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	//Формирование значений реквизитов шапки документа
	СтруктураШД=УправлениеДокументамиСервер.СформироватьСтруктуруШД(ЭтотОбъект);
	СтруктураШД.Вставить("Склад", СкладОтправитель);
	СтруктураШД.Вставить("ВидСкладаОтправителя", СкладОтправитель.ВидСклада);
	СтруктураШД.Вставить("ВидСкладаПолучателя", СкладПолучатель.ВидСклада);
	СтруктураШД.Вставить("СкладОтправительЯчеистый", СкладОтправитель.Ячеистый);
	СтруктураШД.Вставить("СкладПолучательЯчеистый", СкладПолучатель.Ячеистый);
	
	//Проверяем заполнение реквизитов шапки документа
	УчетнаяПолитика=СтруктураШД.УчетнаяПолитика;
	Если УчетнаяПолитика.СложныйУчетНДС	И Не УчетнаяПолитика.ОрганизацияНеЯвляетсяПлательщикомНДС Тогда
		ПроверяемыеРеквизиты.Добавить("НДСвСтоимостиТоваров");
	КонецЕсли;

	//Проверяем заполнение реквизитов табличный частей документа
	Если ЕстьРозница() И (Не УправлениеПользователямиСервер.РазрешитьНулевыеЦеныВРознице()) Тогда
		ПроверяемыеРеквизиты.Добавить("Товары.Цена");
	КонецЕсли;
	
	//Формируем структуру таблиц документа "СтруктураТД"
	СтруктураТД=Новый Структура;
	СтруктураТД.Вставить("Товары", СформироватьТаблицу_Товары(СтруктураШД, Отказ, Заголовок));
	СтруктураТД.Вставить("ТараВТ", СформироватьТаблицу_ТараВТ(СтруктураШД, Отказ, Заголовок));
	СтруктураТД.Вставить("Сделки", Сделки.Выгрузить());

	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);