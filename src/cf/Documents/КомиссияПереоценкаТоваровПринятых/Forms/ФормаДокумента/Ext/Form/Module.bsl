&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	УправлениеДиалогамиКлиент.ВыполнитьДействие(Команда.Имя, ЭтаФорма, Объект);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Вложения"

&НаКлиенте
Процедура тпВложение_ВыполнитьДействие(Команда)
	Если Команда.Имя="ВложенияПредпросмотр" Тогда
		Элементы.ВложенияПредпросмотр.Пометка=НЕ Элементы.ВложенияПредпросмотр.Пометка;
		Элементы.ВложенияГруппаПросмотр.Видимость=Элементы.ВложенияПредпросмотр.Пометка;
		Если Элементы.ВложенияПредпросмотр.Пометка Тогда
			тпВложения_ОбработчикОжидания();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры	 

&НаКлиенте
Процедура тпВложения_ПриАктивизацииСтроки(Элемент)
	Если Элементы.тпВложения.ТекущиеДанные=Неопределено Тогда Возврат; КонецЕсли;
	Если НЕ Элементы.ВложенияПредпросмотр.Пометка Тогда Возврат; КонецЕсли;
	
	тпВложения_ОбработчикОжидания();
КонецПроцедуры

&НаКлиенте
Процедура тпВложения_ПредпросмотПоказать(СтруктураДанных)
	Модуль=ОбщегоНазначенияКлиент.ОбщийМодуль("ВложенияКлиент");
	Модуль.ПредпросмотрПоказать(ЭтаФорма, СтруктураДанных);
КонецПроцедуры

&НаСервере
Процедура тпВложения_ПредпросмотСоздать(СтруктураДанных)
	Модуль=ОбщегоНазначенияСервер.ОбщийМодуль("ВложенияСервер");
	Модуль.ПредпросмотрСоздать(ЭтаФорма, СтруктураДанных);
КонецПроцедуры

&НаКлиенте
Процедура тпВложения_ОбработчикОжидания()
	Если Элементы.тпВложения.ТекущиеДанные=Неопределено Тогда Возврат; КонецЕсли;

	СтруктураДанных=Новый Структура("ИмяФайла,Каталог,ТипID,ID,ВариантХранения,ИндексПиктограммы");
	ЗаполнитьЗначенияСвойств(СтруктураДанных, Элементы.тпВложения.ТекущиеДанные);
	СтруктураДанных.Вставить("Ссылка", Объект.Ссылка);
	СтруктураДанных.Вставить("ИмяРеквизита", ОбщегоНазначенияКлиент.ОбщийМодуль("ВложенияОбщий").ИмяРеквизитаПоИндексуПиктограммы(СтруктураДанных.ИндексПиктограммы));

	Если Элементы.Найти("ВложениеПросмотр"+СтруктураДанных.ИмяРеквизита)=Неопределено Тогда	
		тпВложения_ПредпросмотСоздать(СтруктураДанных);
	КонецЕсли;

	тпВложения_ПредпросмотПоказать(СтруктураДанных);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Обработчики оповещения

&НаКлиенте
Процедура ОбработчикОповещения_ОбработкаПодбора(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	тпТабличноеПоле_Изменить(Параметр1);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ВводШтрихкода(Штрихкод, ПараметрыДоп) Экспорт
	Если Не ПустаяСтрока(Штрихкод) Тогда 
		СтруктураВозврата=ПодключаемоеОборудованиеСервер.ОбработатьВведенныйШтрихкод(Штрихкод);
		Если ЗначениеЗаполнено(СтруктураВозврата.Номенклатура) Тогда
			тпТовары_Добавить(СтруктураВозврата.Номенклатура, СтруктураВозврата.ХарактеристикаНоменклатуры, СтруктураВозврата.СерияНоменклатуры, СтруктураВозврата.Качество, СтруктураВозврата.ЕдиницаИзмерения, СтруктураВозврата.Количество);
		Иначе
			ПоказатьПредупреждение(,"штрих код не найден!", 10);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_Товары_Заполнить(Параметр1, Параметр2) Экспорт
	Если Параметр1=КодВозвратаДиалога.Отмена Тогда Возврат; КонецЕсли; 
	
	Если Параметр1=КодВозвратаДиалога.Да Тогда
		Объект.Товары.Очистить();
	КонецЕсли;

	Если Параметр2.Команда="ЗаполнитьОстаткамиПоДокументуПередачи" Тогда
		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_Товары_ВыборДокументаПередачи", ЭтотОбъект, Новый Структура("Команда", "ЗаполнитьОстаткамиПоДоговору"));
		ПараметрыФормы=Новый Структура("Отбор,РежимВыбора", Новый Структура("ДоговорКонтрагента", Объект.ДоговорКонтрагента), Истина);
		ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.ФормаВыбора", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		тпТовары_Заполнить(Параметр2.Команда);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_Товары_ВыборДокументаПередачи(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	тпТовары_Заполнить(Параметр2.Команда, Параметр1);
КонецПроцедуры
 
///////////////////////////////////////////////////////////////////////////////
// Стандартные (универсальные) процедуры\функции

&НаСервере
Процедура ВыполнитьСортировкуТабличнойЧасти(ИмяТабличнойЧасти, стрСортировка) Экспорт
	СортировкаТабличнойЧастиСервер.Сортировать(ИмяТабличнойЧасти, стрСортировка, Объект);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТиповыеОперации(стрТабличнаяЧасть)
	ДокументОбъект=РеквизитФормыВЗначение("Объект");
	Для каждого СтрокаТабличнойЧасти Из ДокументОбъект[стрТабличнаяЧасть] Цикл
		УправлениеТиповымиОперациямиСервер.УстановитьТиповуюОперацию(СтрокаТабличнойЧасти, ДокументОбъект, ЭтаФорма, стрТабличнаяЧасть);
	КонецЦикла;
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ЦенаВалюта(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, Параметр1);

	Если Параметр1.ПерезаполнитьЦеныПоТипу Тогда
		НаДату=ТекущаяДата();
		Для каждого СтрокаКоллекции Из Объект.Товары Цикл
			СтрокаКоллекции.Цена=ЦенообразованиеСервер.ПолучитьЦенуНоменклатуры(СтрокаКоллекции.Номенклатура, СтрокаКоллекции.ХарактеристикаНоменклатуры, Объект.ТипЦен, НаДату, СтрокаКоллекции.ЕдиницаИзмерения);
			СтрокаКоллекции.Сумма=СтрокаКоллекции.Цена*СтрокаКоллекции.Количество;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="Контрагент" Тогда
		СтруктураПраметров=Новый Структура;
		СтруктураПраметров.Вставить("Контрагент", Объект.Контрагент);
		СтруктураПраметров.Вставить("Организация", Объект.Организация);
		СтруктураПраметров.Вставить("ВидДоговора", Неопределено);

		Объект.ДоговорКонтрагента=УправлениеДиалогамиСервер.ДоступныеДоговорыКонтрагента(СтруктураПраметров, Истина);

		Атрибут_ПриИзменении(Элементы.ДоговорКонтрагента);
		УправлениеДиалогамиКлиент.ОбновитьНадписиДолга(ЭтаФорма);

	ИначеЕсли Элемент.Имя="ДоговорКонтрагента" Тогда
		УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ДоговорКонтрагента", Объект.ДоговорКонтрагента));
		УправлениеДиалогамиКлиент.ОбновитьНадписиДолга(ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_Нажатие(Элемент, СтандартнаяОбработка)
	СобытияЭлементовФормыКлиент.Нажатие(ЭтаФорма, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СобытияЭлементовФормыКлиент.НачалоВыбора(ЭтаФорма, Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля УНИВЕРСАЛЬНЫЕ

&НаКлиенте
Процедура кпТабличноеПоле_ВыполнитьДействие(Команда)
	стрКоманда=Команда.Имя;
	Если стрКоманда="Сортировать" Тогда
		стрТабличнаяЧасть=стрЗаменить(ЭтаФорма.Элементы.ТабличныеЧасти.ТекущаяСтраница.Имя, "Страница", "");
		СортировкаТабличнойЧастиКлиент.Открыть(стрТабличнаяЧасть, ЭтаФорма, Объект);

	ИначеЕсли стрКоманда="НайтиПоШтрихКоду" Тогда
		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВводШтрихкода", ЭтотОбъект);
		ПоказатьВводСтроки(ОписаниеОповещения, , "Введите штрихкод товара");

	ИначеЕсли стрКоманда="Подбор" Тогда
		ПараметрыФормы=УправлениеДиалогамиСервер.СтруктураПодбора();
		ПараметрыФормы.Вставить("Организация", Объект.Организация);
		ПараметрыФормы.Вставить("ТипЦен", Объект.ТипЦен);
		ПараметрыФормы.Свойство("ПоказыватьЦены", НЕ Объект.ТипЦен.Пустая());

		УправлениеДокументамиКлиент.ПодборТоваров(ЭтаФорма, ПараметрыФормы);

	ИначеЕсли стрКоманда="ЗаполнитьТОП" Тогда
		стрТабличнаяЧасть=стрЗаменить(ЭтаФорма.Элементы.ТабличныеЧасти.ТекущаяСтраница.Имя, "Страница", "");
		ЗаполнитьТиповыеОперации(стрТабличнаяЧасть);		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпТабличноеПоле_Изменить(СтруктураПараметров) Экспорт
	Если СтруктураПараметров.Свойство("Ошибка") Тогда ПоказатьПредупреждение(, СтруктураПараметров.Ошибка, 10, "Ошибка"); Возврат; КонецЕсли; 

	УправлениеКоллекциямиЗначенийСервер.СвойствоСтруктуры(СтруктураПараметров, "ХарактеристикаНоменклатуры", ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"));
	УправлениеКоллекциямиЗначенийСервер.СвойствоСтруктуры(СтруктураПараметров, "СерииНоменклатуры", ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"));
	УправлениеКоллекциямиЗначенийСервер.СвойствоСтруктуры(СтруктураПараметров, "Качество", ПредопределенноеЗначение("Справочник.Качество.Новый"));

	стрТабличнаяЧасть=СтрЗаменить(Элементы.ТабличныеЧасти.ТекущаяСтраница.Имя, "Страница", "");
	
	СтруктураПоиска=Новый Структура("Номенклатура");
	Если стрТабличнаяЧасть="Товары" Тогда
		СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры", ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"));
		СтруктураПоиска.Вставить("СерияНоменклатуры", ПредопределенноеЗначение("Справочник.СерииНоменклатуры.ПустаяСсылка"));
	КонецЕсли; 

	ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтруктураПараметров);

	РезультатПоиска=Объект[стрТабличнаяЧасть].НайтиСтроки(СтруктураПоиска);
	Если РезультатПоиска.Количество()=0 Тогда
		УправлениеКоллекциямиЗначенийСервер.СвойствоСтруктуры(СтруктураПараметров, "ЕдиницаИзмерения", ПредопределенноеЗначение("Справочник.ЕдиницыИзмерения.ПустаяСсылка"));
		Если ЗначениеЗаполнено(СтруктураПараметров.ЕдиницаИзмерения) Тогда
			СтруктураПараметров.ЕдиницаИзмерения=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СтруктураПараметров.Номенклатура, "ЕдиницаХраненияОстатков");
		КонецЕсли;
		ТекущиеДанные=Объект[стрТабличнаяЧасть].Добавить();
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, СтруктураПараметров);
	Иначе
		ТекущиеДанные=РезультатПоиска[0];
		ТекущиеДанные.Количество=ТекущиеДанные.Количество+СтруктураПараметров.Количество;
	КонецЕсли;
	
	//Установим добавленную\найденную строку текущей
	Элементы[стрТабличнаяЧасть].ТекущаяСтрока=ТекущиеДанные.ПолучитьИдентификатор();

	//Выполним модуль при изменении номенклатуры(если новая строка) или количества(если строка найдена)
	Если стрТабличнаяЧасть="Товары" Тогда
		тпТовары_Колонка_ПриИзменении(?(РезультатПоиска.Количество()=0, Элементы.ТоварыНоменклатура, Элементы.ТоварыКоличество));
	КонецЕсли;

	Элементы[стрТабличнаяЧасть].Обновить();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Товары"

&НаКлиенте
Процедура кпТовары_ВыполнитьДействие(Команда)
	стрТабличнаяЧасть="Товары"; стрКоманда=стрЗаменить(Команда.Имя, "кп"+стрТабличнаяЧасть+"_", "");
	
	Если НЕ Объект.Товары.Количество()=0 Тогда
		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_Товары_Заполнить", ЭтотОбъект, Новый Структура("Команда", стрКоманда));
		ПоказатьВопрос(ОписаниеОповещения, "Очистить табличную часть перед заполнением?", РежимДиалогаВопрос.ДаНетОтмена, 20, КодВозвратаДиалога.Отмена, "Внимание", КодВозвратаДиалога.Отмена);
	Иначе
		Если стрКоманда="ЗаполнитьОстаткамиПоДокументуПередачи" Тогда
			ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_Товары_ВыборДокументаПередачи", ЭтотОбъект, Новый Структура("Команда", "ЗаполнитьОстаткамиПоДоговору"));
			ПараметрыФормы=Новый Структура("Отбор,РежимВыбора", Новый Структура("ДоговорКонтрагента", Объект.ДоговорКонтрагента), Истина);
			ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.ФормаВыбора", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			тпТовары_Заполнить(стрКоманда);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпТовары_Добавить(Номенклатура, Характеристика=Неопределено, Серия=Неопределено, Качество=Неопределено, Единица=Неопределено, Количество=1)
	Если Характеристика=Неопределено Тогда
		Характеристика=ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");
	КонецЕсли; 
	Если Серия=Неопределено Тогда
		Серия=ПредопределенноеЗначение("Справочник.СерииНоменклатуры.ПустаяСсылка");
	КонецЕсли;	
	Если Качество=Неопределено Тогда
		Качество=ПредопределенноеЗначение("Справочник.Качество.Новый");
	КонецЕсли;
	Если Единица=Неопределено Тогда
		Единица=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Номенклатура, "ЕдиницаХраненияОстатков");
	КонецЕсли; 

	СтруктураПоиска=Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", Номенклатура);
	СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры", Характеристика);
	СтруктураПоиска.Вставить("СерияНоменклатуры", Серия);
	
	РезультатПоиска=Объект.Товары.НайтиСтроки(СтруктураПоиска);
	Если РезультатПоиска.Количество()=0 Тогда
		ТекущиеДанные=Объект.Товары.Добавить();
		ТекущиеДанные.Номенклатура=Номенклатура;
		ТекущиеДанные.ЕдиницаИзмерения=Единица;
		ТекущиеДанные.Коэффициент=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Единица, "Коэффициент");
	Иначе
		ТекущиеДанные=РезультатПоиска[0];
	КонецЕсли;
	ТекущиеДанные.Количество=ТекущиеДанные.Количество+Количество;
	ТекущиеДанные.Цена=ЦенообразованиеСервер.ПолучитьЦенуНоменклатуры(Номенклатура, Характеристика, Объект.ТипЦен, ТекущаяДата(), Единица);;
	ТекущиеДанные.Сумма=ТекущиеДанные.Количество*ТекущиеДанные.Цена;
	
	Если ТекущиеДанные.ЦенаСтарая=0 Тогда ТекущиеДанные.ЦенаСтарая=ТекущиеДанные.Цена; КонецЕсли; 
	ТекущиеДанные.СуммаСтарая=ТекущиеДанные.ЦенаСтарая*ТекущиеДанные.Количество;

	Элементы.Товары.Обновить();
	Элементы.Товары.ТекущаяСтрока=ТекущиеДанные.ПолучитьИдентификатор();

	//Выполним действия "при изменении"
	СтруктураПараметров=Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,Количество");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, ТекущиеДанные);
	тпТабличноеПоле_Изменить(СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура тпТовары_ПриАктивизацииСтроки(Элемент)
	ТекущиеДанные=Элементы.Товары.ТекущиеДанные;
КонецПроцедуры

&НаКлиенте
Процедура тпТовары_ПередНачаломИзменения(Элемент, Отказ)
КонецПроцедуры

&НаКлиенте
Процедура тпТовары_ПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ID=Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпТовары_ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
КонецПроцедуры

&НаКлиенте
Процедура тпТовары_ПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
КонецПроцедуры

&НаКлиенте
Процедура тпТовары_Колонка_ПриИзменении(Элемент)
	стрКолонка=стрЗаменить(Элемент.Имя, "Товары", "");
	ТекущиеДанные=Элементы.Товары.ТекущиеДанные;

	Если стрКолонка="Номенклатура" Тогда
		ТекущиеДанные.ЕдиницаИзмерения=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Номенклатура, "ЕдиницаХраненияОстатков");
		ТекущиеДанные.Коэффициент=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.ЕдиницаИзмерения, "Коэффициент");
		Если ТекущиеДанные.Количество=0 Тогда ТекущиеДанные.Количество=1; КонецЕсли;
		ТекущиеДанные.Цена=ЦенообразованиеСервер.ПолучитьЦенуНоменклатуры(ТекущиеДанные.Номенклатура, ТекущиеДанные.ХарактеристикаНоменклатуры, Объект.ТипЦен, ТекущаяДата(), ТекущиеДанные.ЕдиницаИзмерения);
		Если ТекущиеДанные.ЦенаСтарая=0 Тогда ТекущиеДанные.ЦенаСтарая=ТекущиеДанные.Цена; КонецЕсли; 
		ТекущиеДанные.СуммаСтарая=ТекущиеДанные.ЦенаСтарая*ТекущиеДанные.Количество;
		ТекущиеДанные.Сумма=ТекущиеДанные.Цена*ТекущиеДанные.Количество;

	ИначеЕсли стрКолонка="ХарактеристикаНоменклатуры" Тогда
		Номенклатура=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.ХарактеристикаНоменклатуры, "Владелец");
		Если НЕ Номенклатура=ТекущиеДанные.Номенклатура Тогда
			ТекущиеДанные.Номенклатура=Номенклатура;
			ТекущиеДанные.ЕдиницаИзмерения=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Номенклатура, "ЕдиницаХраненияОстатков");
			ТекущиеДанные.Коэффициент=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.ЕдиницаИзмерения, "Коэффициент");
			ТекущиеДанные.Цена=ЦенообразованиеСервер.ПолучитьЦенуНоменклатуры(ТекущиеДанные.Номенклатура, ТекущиеДанные.ХарактеристикаНоменклатуры, Объект.ТипЦен, ТекущаяДата(), ТекущиеДанные.ЕдиницаИзмерения);
			Если ТекущиеДанные.ЦенаСтарая=0 Тогда ТекущиеДанные.ЦенаСтарая=ТекущиеДанные.Цена; КонецЕсли; 
			ТекущиеДанные.СуммаСтарая=ТекущиеДанные.ЦенаСтарая*ТекущиеДанные.Количество;
			ТекущиеДанные.Сумма=ТекущиеДанные.Цена*ТекущиеДанные.Количество;
		КонецЕсли;

	ИначеЕсли стрКолонка="СерияНоменклатуры" Тогда
		Номенклатура=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.СерияНоменклатуры, "Владелец");
		Если НЕ Номенклатура=ТекущиеДанные.Номенклатура Тогда
			ТекущиеДанные.Номенклатура=Номенклатура;
			ТекущиеДанные.ЕдиницаИзмерения=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Номенклатура, "ЕдиницаХраненияОстатков");
			ТекущиеДанные.Коэффициент=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.ЕдиницаИзмерения, "Коэффициент");
		КонецЕсли;

	ИначеЕсли стрКолонка="ЕдиницаИзмерения" Тогда
		ТекущиеДанные.Коэффициент=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.ЕдиницаИзмерения, "Коэффициент");

	ИначеЕсли стрКолонка="Количество" Тогда
		ТекущиеДанные.Сумма=ТекущиеДанные.Цена*ТекущиеДанные.Количество;
		ТекущиеДанные.СуммаСтарая=ТекущиеДанные.ЦенаСтарая*ТекущиеДанные.Количество;

	ИначеЕсли стрКолонка="Цена" Тогда
		ТекущиеДанные.Сумма=ТекущиеДанные.Цена*ТекущиеДанные.Количество;
		Если ТекущиеДанные.ЦенаСтарая=0 Тогда
			ТекущиеДанные.ЦенаСтарая=ТекущиеДанные.Цена;
			ТекущиеДанные.СуммаСтарая=ТекущиеДанные.ЦенаСтарая*ТекущиеДанные.Количество;
		КонецЕсли; 

	ИначеЕсли стрКолонка="Сумма" Тогда
		Если НЕ ТекущиеДанные.Количество=0 Тогда
			ТекущиеДанные.Цена=ТекущиеДанные.Сумма/ТекущиеДанные.Количество;
		КонецЕсли;

	ИначеЕсли стрКолонка="ЦенаСтарая" Тогда
		ТекущиеДанные.СуммаСтарая=ТекущиеДанные.ЦенаСтарая*ТекущиеДанные.Количество;

	ИначеЕсли стрКолонка="СуммаСтарая" Тогда
		Если НЕ ТекущиеДанные.Количество=0 Тогда
			ТекущиеДанные.ЦенаСтарая=ТекущиеДанные.СуммаСтарая/ТекущиеДанные.Количество;
		КонецЕсли;

	ИначеЕсли стрКолонка="ЕдиницаМест" Тогда
		
	ИначеЕсли стрКолонка="КоличествоМест" Тогда
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура тпТовары_Заполнить(стрКоманда, ДокументОснование=Неопределено)
	Если стрКоманда="ЗаполнитьОстаткамиПоДоговору" Тогда
		КурсДокумента=1; КратностьДокумента=1;
		Если Объект.ВалютаДокумента=ПараметрыСеанса.ВалютаБухУчета Тогда
			КурсДокумента=Объект.КурсВзаиморасчетов;	
		КонецЕсли;
		Если Объект.ВалютаДокумента=ПараметрыСеанса.ВалютаБухУчета Тогда
			КратностьДокумента=Объект.КратностьВзаиморасчетов;	
		КонецЕсли;

		Запрос=Новый Запрос;  ИмяДокумента="ПоступлениеТоваровУслуг";
		Запрос.УстановитьПараметр("Склад", Объект.Склад);
		Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
		Запрос.УстановитьПараметр("СтатусПартии", Перечисления.СтатусыПартийТоваров.НаКомиссию);
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		Запрос.УстановитьПараметр("Сделка", ?(ЗначениеЗаполнено(Объект.Сделка), Объект.Сделка, Неопределено));
		Запрос.Текст="
		|ВЫБРАТЬ
		|	Остатки.Номенклатура,
		|	Остатки.ХарактеристикаНоменклатуры,
		|	Остатки.СерияНоменклатуры,
		|	Остатки.ДокументОприходования,
		|	МАКСИМУМ(ВЫБОР КОГДА Остатки.СтоимостьОстаток ЕСТЬ NULL ТОГДА
		|		0
		|	ИНАЧЕ
		|		Остатки.СтоимостьОстаток
		|	КОНЕЦ)                                       КАК Стоимость,
		|	МАКСИМУМ(ВЫБОР КОГДА Остатки.КоличествоОстаток ЕСТЬ NULL ТОГДА
		|		0
		|	ИНАЧЕ
		|		Остатки.КоличествоОстаток
		|	КОНЕЦ)                                       КАК Количество,
		|	МАКСИМУМ(ВЫБОР КОГДА Полученные.СуммаВзаиморасчетовОстаток ЕСТЬ NULL ТОГДА
		|		0
		|	ИНАЧЕ
		|		Полученные.СуммаВзаиморасчетовОстаток
		|	КОНЕЦ)                                       КАК СуммаВзаиморасчетов,
		|	МАКСИМУМ(ВЫБОР КОГДА Полученные.КоличествоОстаток ЕСТЬ NULL ТОГДА
		|		0
		|	ИНАЧЕ
		|		Полученные.КоличествоОстаток
		|	КОНЕЦ)                                       КАК КоличествоПолученных,
		|	Остатки.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаХраненияОстатков
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(, 
		|			Склад          = &Склад 
		|			И СтатусПартии = &СтатусПартии
		|" + ?(ЗначениеЗаполнено(ДокументОснование), "
		|			И Номенклатура В (ВЫБРАТЬ РАЗЛИЧНЫЕ Документ." + ИмяДокумента + ".Товары.Номенклатура
		|			                ИЗ Документ." + ИмяДокумента + ".Товары 
		|			                ГДЕ Документ." + ИмяДокумента + ".Товары.Ссылка = &ДокументОснование)
		|			И ДокументОприходования = &ДокументОснование
		|", "       И ДокументОприходования.ДоговорКонтрагента = &ДоговорКонтрагента") + "
		|			                                        ) КАК Остатки
		| "+ ?(НЕ ЗначениеЗаполнено(ДокументОснование), "" ,"	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ." + ИмяДокумента + ".Товары КАК ПоступлениеТоваровУслугТовары
		|	ПО Остатки.Номенклатура = ПоступлениеТоваровУслугТовары.Номенклатура И ПоступлениеТоваровУслугТовары.Ссылка = Остатки.ДокументОприходования" ) + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрНакопления.ТоварыПолученные.Остатки(, 
		|			ДоговорКонтрагента = &ДоговорКонтрагента 
		|			И Сделка           = &Сделка
		|" + ?(ЗначениеЗаполнено(ДокументОснование), "
		|			И Номенклатура В (ВЫБРАТЬ РАЗЛИЧНЫЕ Документ." + ИмяДокумента + ".Товары.Номенклатура
		|			                ИЗ Документ." + ИмяДокумента + ".Товары 
		|			                ГДЕ Документ." + ИмяДокумента + ".Товары.Ссылка = &ДокументОснование)", "") + ") КАК Полученные
		|	ПО Остатки.Номенклатура = Полученные.Номенклатура
		|	   И Остатки.ХарактеристикаНоменклатуры = Полученные.ХарактеристикаНоменклатуры
		|	   И Остатки.СерияНоменклатуры = Полученные.СерияНоменклатуры
		|ГДЕ
		|	Остатки.КоличествоОстаток > 0
		|	//И Полученные.КоличествоОстаток > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Номенклатура,
		|	Остатки.ХарактеристикаНоменклатуры,
		|	Остатки.СерияНоменклатуры,
		|	Остатки.ДокументОприходования
		|";	
		Выборка=Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока=Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);

			Если Выборка.КоличествоПолученных=0 Тогда
				НоваяСтрока.СуммаСтарая=0;
			Иначе
				НоваяСтрока.СуммаСтарая=ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
							Выборка.СуммаВзаиморасчетов * Выборка.Количество / Выборка.КоличествоПолученных,
							Объект.ДоговорКонтрагента.ВалютаВзаиморасчетов,
							Объект.ВалютаДокумента,
							Объект.КурсВзаиморасчетов,
							КурсДокумента,
							Объект.КратностьВзаиморасчетов,
							КратностьДокумента);
			КонецЕсли;
			НоваяСтрока.ЦенаСтарая = НоваяСтрока.СуммаСтарая / НоваяСтрока.Количество;
			НоваяСтрока.Сумма      = НоваяСтрока.СуммаСтарая;
			НоваяСтрока.Цена       = НоваяСтрока.ЦенаСтарая;			
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий дополнительных реквизитов табличных частей

&НаКлиенте
Процедура тзРеквизитыТЧ_ПриИзменении_Клиент(Элемент)
	тзРеквизитыТЧ_ПриИзменении_Сервер(Элемент.Имя);
КонецПроцедуры

&НаСервере
Процедура тзРеквизитыТЧ_ПриИзменении_Сервер(стрИмя)
	МетаконфигураторСервер.ДопРеквизиты_ПриИзменении(стрИмя, ЭтаФорма);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СобытияФормыСервер.ПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СобытияФормыКлиент.ПриОткрытии(Отказ, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СобытияФормыКлиент.ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	СобытияФормыКлиент.ПриЗакрытии(ЗавершениеРаботы, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	СобытияФормыКлиент.ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	СобытияФормыКлиент.ОбработкаОповещения(ИмяСобытия, Параметр, Источник, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	СобытияФормыКлиент.ОбработкаАктивизации(АктивныйОбъект, Источник, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	СобытияФормыКлиент.ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	СобытияФормыСервер.ПриЧтенииНаСервере(ТекущийОбъект, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СобытияФормыКлиент.ПередЗаписью(Отказ, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СобытияФормыСервер.ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);	
КонецПроцедуры
 
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)	
	СобытияФормыСервер.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)	
	СобытияФормыСервер.ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	СобытияФормыКлиент.ПослеЗаписи(ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	СобытияФормыКлиент.ВнешнееСобытие(Источник, Событие, Данные, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначения(СтандартнаяОбработка)
	СобытияФормыКлиент.ВыборЗначения(СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры
