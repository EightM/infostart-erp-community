Процедура ЗаполнитьПоОснованию(Основание) Экспорт
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.УстановкаСкидокНоменклатуры") Тогда
		Если Документы.Найти(Основание) = Неопределено Тогда
			СтрокаДокумента = Документы.Добавить();
			СтрокаДокумента.УстановкаСкидокНоменклатуры = Основание;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьТаблицуДвиженийНоменклатура(СписокДокументов)

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Регистраторы", СписокДокументов);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	СкидкиНаценкиНоменклатуры.ПолучательСкидки,
	|	СкидкиНаценкиНоменклатуры.Номенклатура,
	|	СкидкиНаценкиНоменклатуры.ХарактеристикаНоменклатуры,
	|	СкидкиНаценкиНоменклатуры.Качество,
	|	СкидкиНаценкиНоменклатуры.Условие,
	|	СкидкиНаценкиНоменклатуры.ЗначениеУсловия,
	|	СкидкиНаценкиНоменклатуры.ОграничениеСкидкиНаценки
	|ИЗ
	|	РегистрСведений.СкидкиНаценкиНоменклатуры КАК СкидкиНаценкиНоменклатуры
	|
	|ГДЕ
	|	СкидкиНаценкиНоменклатуры.Регистратор В(&Регистраторы)
	|";

	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПодготовитьТаблицуДвиженийЦеновыеГруппы(СписокДокументов)

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Регистраторы", СписокДокументов);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	СкидкиНаценкиПоЦеновымГруппам.ПолучательСкидки,
	|	СкидкиНаценкиПоЦеновымГруппам.ЦеноваяГруппа,
	|	СкидкиНаценкиПоЦеновымГруппам.Качество,
	|	СкидкиНаценкиПоЦеновымГруппам.Условие,
	|	СкидкиНаценкиПоЦеновымГруппам.ЗначениеУсловия,
	|	СкидкиНаценкиПоЦеновымГруппам.ОграничениеСкидкиНаценки
	|ИЗ
	|	РегистрСведений.СкидкиНаценкиПоЦеновымГруппам КАК СкидкиНаценкиПоЦеновымГруппам
	|
	|ГДЕ
	|	СкидкиНаценкиПоЦеновымГруппам.Регистратор В(&Регистраторы)
	|";

	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПодготовитьТаблицуДвиженийБонусы(СписокДокументов)

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Регистраторы", СписокДокументов);	
	Запрос.Текст="
	|ВЫБРАТЬ
	|	СкидкиНоменклатурыНатуральные.ПолучательСкидки,
	|	СкидкиНоменклатурыНатуральные.Номенклатура,
	|	СкидкиНоменклатурыНатуральные.ХарактеристикаНоменклатуры,
	|	СкидкиНоменклатурыНатуральные.Количество,
	|	СкидкиНоменклатурыНатуральные.Качество
	|ИЗ
	|	РегистрСведений.СкидкиНоменклатурыНатуральные КАК СкидкиНоменклатурыНатуральные
	|
	|ГДЕ
	|	СкидкиНоменклатурыНатуральные.Регистратор В(&Регистраторы)
	|";

	Возврат  Запрос.Выполнить().Выгрузить();
КонецФункции

Процедура ДвиженияПоРегистрам(ТаблицаПоДокументамНоменклатура, ТаблицаПоДокументамЦеновыеГруппы, ТаблицаПоДокументамБонусы, Отказ)
	Если Отказ Тогда Возврат; КонецЕсли; 

	// Заполним таблицу движений по номенклатуре
	НаборДвижений   = Движения.СкидкиНаценкиНоменклатуры;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоДокументамНоменклатура, ТаблицаДвижений);

	НаборДвижений.мПериод          = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	
	Движения.СкидкиНаценкиНоменклатуры.ВыполнитьДвижения();
	
	// Заполним таблицу движений по ценовым группам
	НаборДвижений   = Движения.СкидкиНаценкиПоЦеновымГруппам;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоДокументамЦеновыеГруппы, ТаблицаДвижений);
	
	НаборДвижений.мПериод          = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;

	Движения.СкидкиНаценкиПоЦеновымГруппам.ВыполнитьДвижения();
	
	// Заполним таблицу движений по бонусам
	НаборДвижений   = Движения.СкидкиНоменклатурыНатуральные;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоДокументамБонусы, ТаблицаДвижений);
	
	НаборДвижений.мПериод          = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	
	Движения.СкидкиНоменклатурыНатуральные.ВыполнитьДвижения();	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 
	
	СтруктураПолей=Новый Структура("УстановкаСкидокНоменклатуры", "УстановкаСкидокНоменклатуры");
	РезультатЗапросаПоДокументам = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Документы", СтруктураПолей);
	ТаблицаПоДокументамНоменклатура = ПодготовитьТаблицуДвиженийНоменклатура(РезультатЗапросаПоДокументам.Выгрузить().ВыгрузитьКолонку("УстановкаСкидокНоменклатуры"));
	ТаблицаПоДокументамЦеновыеГруппы = ПодготовитьТаблицуДвиженийЦеновыеГруппы(РезультатЗапросаПоДокументам.Выгрузить().ВыгрузитьКолонку("УстановкаСкидокНоменклатуры"));
	ТаблицаПоДокументамБонусы = ПодготовитьТаблицуДвиженийБонусы(РезультатЗапросаПоДокументам.Выгрузить().ВыгрузитьКолонку("УстановкаСкидокНоменклатуры"));
	Если ТаблицаПоДокументамНоменклатура.Количество()=0 И ТаблицаПоДокументамЦеновыеГруппы.Количество()=0 И ТаблицаПоДокументамБонусы.Количество()=0 Тогда
	   ОбщегоНазначения.СообщитьОбОшибке("Не найдены движения по документам, указанным для отмены", Отказ, ДополнительныеСвойства.Заголовок);
	КонецЕсли;

	ДвиженияПоРегистрам(ТаблицаПоДокументамНоменклатура, ТаблицаПоДокументамЦеновыеГруппы, ТаблицаПоДокументамБонусы, Отказ);
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	ЗаполнитьПоОснованию(Основание);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);