Перем мСтруктураПараметровДляПолученияДоговора Экспорт;

Процедура ЗаполнитьТоварыПоОстаткам() Экспорт
	Если НЕ ЗначениеЗаполнено(Сделка) Тогда Возврат; КонецЕсли;

	Товары.Очистить();

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Договор", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Сделка", Сделка);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Остатки.Номенклатура.Наименование 			 КАК Наименование,
	|	Выразить (Остатки.Номенклатура.НаименованиеПолное Как  Строка(200))	 КАК НаименованиеПолное,
	|	Остатки.Номенклатура                		 КАК Номенклатура,
	|	Остатки.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору КАК ЕдиницаПоКлассификатору,
	|	СУММА(Остатки.КоличествоОстаток)    		 КАК Количество
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ДоговорКонтрагента = &Договор И ЗаказПоставщику = &Сделка) КАК Остатки
	|
	|ГДЕ
	|	Остатки.Номенклатура.Услуга <> Истина И Остатки.КоличествоОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Номенклатура.Наименование,
	|	Выразить (Остатки.Номенклатура.НаименованиеПолное Как  Строка(200)),
	|	Остатки.Номенклатура,
	|	Остатки.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаТабличнойЧасти=Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
		СтрокаТабличнойЧасти.НаименованиеТовара=СокрЛП(?(ПустаяСтрока(Выборка.НаименованиеПолное), Выборка.Наименование, Выборка.НаименованиеПолное));
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьТоварыПоСчету(Основание)
	// Товар
	Запрос=Новый Запрос; Товары.Очистить();
	Запрос.УстановитьПараметр("Основание", Основание);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номенклатура                         КАК Номенклатура,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков КАК Единица,
	|	Док.Количество                           КАК Количество
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК Док
	|ГДЕ
	|	Док.Ссылка = &Основание И Док.Количество > 0
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаименованиеТовара = Выборка.Номенклатура.НаименованиеПолное;
		НаименованиеТовара = ?(НЕ ЗначениеЗаполнено(НаименованиеТовара), СокрЛП(Выборка.Номенклатура), НаименованиеТовара);

		СтрокаТабличнойЧасти=Товары.Добавить();
		СтрокаТабличнойЧасти.НаименованиеТовара=НаименованиеТовара;
		СтрокаТабличнойЧасти.Количество=Выборка.Количество;
		СтрокаТабличнойЧасти.ЕдиницаПоКлассификатору=Выборка.Единица.ЕдиницаПоКлассификатору;
	КонецЦикла;

	// Возвратная тара
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Основание", Основание);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номенклатура                         КАК Номенклатура,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков КАК Единица,
	|	Док.Количество                           КАК Количество
	|ИЗ
	|	Документ.ЗаказПоставщику.ВозвратнаяТара КАК Док
	|ГДЕ
	|	Док.Ссылка = &Основание И Док.Количество > 0
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаименованиеТовара=Выборка.Номенклатура.НаименованиеПолное;
		НаименованиеТовара=?(НЕ ЗначениеЗаполнено(НаименованиеТовара), СокрЛП(Выборка.Номенклатура), НаименованиеТовара);

		СтрокаТабличнойЧасти=Товары.Добавить();
		СтрокаТабличнойЧасти.НаименованиеТовара=НаименованиеТовара + " (возвратная тара)";
		СтрокаТабличнойЧасти.Количество=Выборка.Количество;
		СтрокаТабличнойЧасти.ЕдиницаПоКлассификатору=Выборка.Единица.ЕдиницаПоКлассификатору;
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Сделка             = Основание;
		Организация        = Основание.Организация;
		ДоговорКонтрагента = Основание.ДоговорКонтрагента;
		Контрагент         = Основание.Контрагент;
		Если ЗначениеЗаполнено(Основание.СтруктурнаяЕдиница)
		   И ТипЗнч(Основание.СтруктурнаяЕдиница) = Тип("СправочникСсылка.БанковскиеСчета")
		   И Основание.СтруктурнаяЕдиница.Владелец = Организация Тогда
			БанковскийСчетОрганизации = Основание.СтруктурнаяЕдиница;
		Иначе
			БанковскийСчетОрганизации = Организация.ОсновнойБанковскийСчет;
		КонецЕсли;
		ЗаполнитьТоварыПоОстаткам();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства, "Покупка");