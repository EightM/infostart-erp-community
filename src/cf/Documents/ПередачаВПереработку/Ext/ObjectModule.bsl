Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	КачествоНовый=Справочники.Качество.Новый;
	Для каждого СтрокаТабличнойЧасти Из Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмеренияМест) И СтрокаТабличнойЧасти.КоличествоМест=0 Тогда
			СтрокаТабличнойЧасти.ЕдиницаИзмеренияМест=Неопределено;
		КонецЕсли;
		Если НЕ СтрокаТабличнойЧасти.Качество=КачествоНовый Тогда
			СтрокаТабличнойЧасти.Качество=КачествоНовый;
		КонецЕсли;
		Если СтрокаТабличнойЧасти.Склад.Пустая() Тогда
			СтрокаТабличнойЧасти.Склад=Склад;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт
	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Подготовка таблиц для проведения
 
Процедура ДополнитьТаблицуАтрибутамиШапки(СтруктураШД, тзСсылка, стрВидТабличнойЧасти)
	СтруктураРеквизитов=Новый Структура;
	СтруктураРеквизитов.Вставить("Организация", Организация);
	СтруктураРеквизитов.Вставить("Контрагент", Контрагент);
	СтруктураРеквизитов.Вставить("ДоговорКонтрагента", ДоговорКонтрагента);
	СтруктураРеквизитов.Вставить("Подразделение", Подразделение);
	СтруктураРеквизитов.Вставить("Период", Дата);
	СтруктураРеквизитов.Вставить("Активность", Истина);
	СтруктураРеквизитов.Вставить("ВидТабличнойЧасти", стрВидТабличнойЧасти);
	Для каждого СтрокаКоллекции Из СтруктураРеквизитов Цикл
		тзСсылка.Колонки.Добавить(СтрокаКоллекции.Ключ);
		тзСсылка.ЗаполнитьЗначения(СтрокаКоллекции.Значение, СтрокаКоллекции.Ключ);
	КонецЦикла;
КонецПроцедуры
 
Функция СформироватьТаблицу_Товары(СтруктураШД, Отказ, Заголовок)
	тзДанные=Товары.Выгрузить();
	тзДанные.Колонки.Добавить("НомерСтрокиТабличнойЧасти");

	////тзДанные.Колонки.Добавить("Услуга");
	////тзДанные.Колонки.Добавить("Набор");
	////тзДанные.Колонки.Добавить("Комплект");
	////тзДанные.Колонки.Добавить("ВестиУчетПоХарактеристикам");
	////тзДанные.Колонки.Добавить("ВестиПартионныйУчетПоСериям");
	
	Для каждого СтрокаКоллекции Из тзДанные Цикл
		СтрокаКоллекции.Количество=СтрокаКоллекции.Количество * СтрокаКоллекции.Коэффициент /СтрокаКоллекции.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент;
		СтрокаКоллекции.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтроки;
		////СтрокаКоллекции.Услуга=СтрокаКоллекции.Номенклатура.Услуга;
		////СтрокаКоллекции.Набор=СтрокаКоллекции.Номенклатура.Набор;
		////СтрокаКоллекции.Комплект=СтрокаКоллекции.Номенклатура.Комплект;
		////СтрокаКоллекции.ЕдиницаИзмерения=СтрокаКоллекции.Номенклатура.ЕдиницаХраненияОстатков;
		////СтрокаКоллекции.ВестиУчетПоХарактеристикам=СтрокаКоллекции.Номенклатура.ВестиУчетПоХарактеристикам;
		////СтрокаКоллекции.ВестиПартионныйУчетПоСериям=СтрокаКоллекции.Номенклатура.ВестиПартионныйУчетПоСериям;
		Если НЕ СтрокаКоллекции.Номенклатура.ВестиПартионныйУчетПоСериям Тогда
			СтрокаКоллекции.СерияНоменклатуры=Неопределено;
		КонецЕсли;
	КонецЦикла;

	ДополнитьТаблицуАтрибутамиШапки(СтруктураШД, тзДанные, "Товары");
	
	Возврат тзДанные;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Движения по регистрам 

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_УчетЗаказов(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетТМЦ(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_СписанныеТовары(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетПартийТМЦ(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетРезервовТМЦ(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетТМЦ(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ТоварыНаСкладах") Тогда Возврат; КонецЕсли;

	тзДвижения=Движения.ТоварыНаСкладах.ВыгрузитьКолонки();

	Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
		Если СтрокаКоллекции.Склад.ВидСклада=Перечисления.ВидыСкладов.Оптовый Тогда
			Если НЕ СтрокаКоллекции.Склад.Ячеистый Тогда Продолжить; КонецЕсли;
			ЗаполнитьЗначенияСвойств(тзДвижения.Добавить(), СтрокаКоллекции);
		КонецЕсли;
	КонецЦикла;

	тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	Движения.ТоварыНаСкладах.Загрузить(тзДвижения);
КонецПроцедуры

Процедура ДвижениеПоРегистру_СписанныеТовары(СтруктураШД, СтруктураТД, Отказ) Экспорт
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ПартииТоваровНаСкладах") Тогда Возврат; КонецЕсли;
    тзДанные=Движения.СписанныеТовары.ВыгрузитьКолонки(); НомСтроки=0;

	Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
		НоваяСтрока=тзДанные.Добавить(); НомСтроки=НомСтроки+1;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.НомерСтрокиДокумента=НомСтроки;
		НоваяСтрока.ДопустимыйСтатус1=Перечисления.СтатусыПартийТоваров.Купленный;
		НоваяСтрока.ДопустимыйСтатус3=Перечисления.СтатусыПартийТоваров.НаКомиссию;
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.ВидСклада) Тогда
			НоваяСтрока.ВидСклада=СтруктураШД.ВидСклада;
		КонецЕсли;
		НоваяСтрока.СтоимостьСписаниеУУ=СтрокаКоллекции.СтоимостьУУ;
		НоваяСтрока.СтоимостьСписаниеНУ=СтрокаКоллекции.СтоимостьНУ;
	КонецЦикла;
	тзДанные.ЗаполнитьЗначения(Перечисления.КодыОперацийПартииТоваров.ПередачаНаКомиссию, "КодОперацииПартииТоваров");
	тзДанные.ЗаполнитьЗначения(Ссылка, "ДокументПередачи");
	тзДанные.ЗаполнитьЗначения(Перечисления.СтатусыПолученияПередачиТоваров.НаПереработку, "СтатусПередачи");
	тзДанные.ЗаполнитьЗначения(Проект, "Проект");

	Движения.СписанныеТовары.Загрузить(тзДанные);
	Движения.СписанныеТовары.Записать(Истина);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетЗаказов(СтруктураШД, СтруктураТД, Отказ)
	Если Сделки.Количество()=0 Тогда Возврат; КонецЕсли;

	СтруктураПараметров=Новый Структура("МоментВремени,Дата,Ссылка,Организация");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, СтруктураШД);
	СтруктураПараметров.Вставить("ТаблицаДвижений1", Движения.ЗаказыПокупателей.ВыгрузитьКолонки());
	СтруктураПараметров.Вставить("ТаблицаДвижений2", Движения.ВнутренниеЗаказы.ВыгрузитьКолонки());
	СтруктураПараметров.Вставить("ТаблицаДвижений3", Движения.ЗаказыНаПроизводство.ВыгрузитьКолонки());

	УправлениеЗаказамиСервер.СформироватьДвиженияРегистров(СтруктураПараметров, СтруктураТД, Отказ);

	Движения.ЗаказыПокупателей	 .Загрузить(СтруктураПараметров.ТаблицаДвижений1);
	Движения.ВнутренниеЗаказы	 .Загрузить(СтруктураПараметров.ТаблицаДвижений2);
	Движения.ЗаказыНаПроизводство.Загрузить(СтруктураПараметров.ТаблицаДвижений3);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетРезервовТМЦ(СтруктураШД, СтруктураТД, Отказ)
	СтруктураПараметров=Новый Структура("МоментВремени,Дата,Ссылка,Организация");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, СтруктураШД);
	СтруктураПараметров.Вставить("тзУчетРезервовТМЦ", Движения.УчетРезервовТМЦ.ВыгрузитьКолонки());
	УправлениеРезервамиСервер.СформироватьДвиженияРасход(СтруктураПараметров, СтруктураТД, Отказ);
	Если НЕ СтруктураПараметров.тзУчетРезервовТМЦ.Количество()=0 Тогда
		Движения.УчетРезервовТМЦ.Загрузить(СтруктураПараметров.тзУчетРезервовТМЦ);
	КонецЕсли;
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
// Проведение по регистрам (по нескольким регистрам одного типа)

Процедура ДвижениеПоРегистру_УчетПартийТМЦ(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ПартииТоваровНаСкладах") Тогда Возврат; КонецЕсли;

	СтруктураШД.Вставить("Отказ", Отказ);
	СтруктураШД.Вставить("ТаблицаСписания", Движения.СписанныеТовары.Выгрузить());
	УправлениеЗапасамиПартионныйУчет.ДвижениеПартийТоваров(Ссылка, СтруктураШД);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ОбработкаЗаполнения(Основание)
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание) Тогда Возврат; КонецЕсли; 
	
	Если ТипЗнч(Основание)=Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Контрагент=Справочники.Контрагенты.ПустаяСсылка();
		ДоговорКонтрагента=Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		Для Каждого СтрокаТЧ Из Основание.Товары Цикл
			НоваяСтрока=Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
			НоваяСтрока.ID=Новый УникальныйИдентификатор;
			НоваяСтрока.Качество=Справочники.Качество.Новый;
			НоваяСтрока.ТОП=Справочники.ТиповыеОперации.ПустаяСсылка();
			ОбработкаТабличныхЧастей.УстановитьТиповуюОперацию(НоваяСтрока, ЭтотОбъект, ПолучитьФорму(), "Товары");
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	//Формирование значений реквизитов шапки документа
	СтруктураШД=УправлениеДокументамиСервер.СформироватьСтруктуруШД(ЭтотОбъект);
	СтруктураШД.Вставить("УчитыватьНДС", Ложь);

	//Проверка реквизитов шапки документа
	ВзаиморасчетыСервер.ПроверитьСоответствиеОрганизацииДоговоруВзаиморасчетов(Организация, ДоговорКонтрагента, СтруктураШД.ДоговорОрганизация, Отказ, Заголовок);

	//Формирование значений реквизитов табличных частей
	СтруктураТД=Новый Структура;
	СтруктураТД.Вставить("Товары", СформироватьТаблицу_Товары(СтруктураШД, Отказ, Заголовок));
	СтруктураТД.Вставить("Сделки", Сделки.Выгрузить());

	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства, "Продажа");
ДополнительныеСвойства.Вставить("ИспользоватьСерииНоменклатуры", Константы.ИспользоватьСерииНоменклатуры.Получить());