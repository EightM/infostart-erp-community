////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("Накладная", "Расходная накладная");
	Структура.Вставить("ТОРГ12", "ТОРГ-12 (Товарная накладная с услугами)");
	Структура.Вставить("М15", "М-15 (Накладная)");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция ПолучитьРеквизитыШапки(СсылкаНаОбъект)
	Запрос=Новый Запрос;
	Запрос.Параметры.Вставить("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Дата,
	|	Склад,
	|	ДоговорКонтрагента,
	|	Организация
	|ИЗ
	|	Документ.ПередачаВПереработку КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент
	|";	
	РеквизитыШапки=Запрос.Выполнить().Выбрать();
	РеквизитыШапки.Следующий();
	
	Возврат РеквизитыШапки;
КонецФункции 	

Функция Печать_Документа(СтруктураПараметров, СуммыВРублях = Ложь, ТоварныйЧек=Ложь)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаТМЦ.Номер,
	|	ПередачаТМЦ.Дата,
	|	ПередачаТМЦ.ДоговорКонтрагента,
	|	ПередачаТМЦ.Контрагент КАК Получатель,
	|	ПередачаТМЦ.Организация,
	|	ПередачаТМЦ.Организация КАК Поставщик
	|ИЗ
	|	Документ.ПередачаВПереработку КАК ПередачаТМЦ
	|ГДЕ
	|	ПередачаТМЦ.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	СтрокаВыборкиПоляСодержания = ОбработкаТабличныхЧастей.ПолучитьЧастьЗапросаДляВыбораСодержания("ПередачаТМЦ");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапросПоТоварам.Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапросПоТоварам.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК Товар,
	|	ВложенныйЗапросПоТоварам.Номенклатура.Код КАК Код,
	|	ВложенныйЗапросПоТоварам.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапросПоТоварам.Количество,
	|	ВложенныйЗапросПоТоварам.КоличествоМест,
	|	ВложенныйЗапросПоТоварам.ЕдиницаИзмерения.Представление КАК ЕдиницаЦены,
	|	ВложенныйЗапросПоТоварам.ЕдиницаИзмеренияМест.Представление КАК ЕдиницаМест,
	|	ВложенныйЗапросПоТоварам.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ВложенныйЗапросПоТоварам.СерияНоменклатуры КАК Серия,
	|	ВложенныйЗапросПоТоварам.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапросПоТоварам.Метка КАК Метка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПередачаТМЦ.Номенклатура КАК Номенклатура,
	|		ПередачаТМЦ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ПередачаТМЦ.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
	|		ПередачаТМЦ.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПередачаТМЦ.СерияНоменклатуры КАК СерияНоменклатуры,
	|		СУММА(ПередачаТМЦ.Количество) КАК Количество,
	|		СУММА(ПередачаТМЦ.КоличествоМест) КАК КоличествоМест,
	|		МИНИМУМ(ПередачаТМЦ.НомерСтроки) КАК НомерСтроки,
	|		0 КАК Метка
	|	ИЗ
	|		Документ.ПередачаВПереработку.Товары КАК ПередачаТМЦ
	|	ГДЕ
	|		ПередачаТМЦ.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПередачаТМЦ.Номенклатура,
	|		ПередачаТМЦ.ЕдиницаИзмерения,
	|		ПередачаТМЦ.ЕдиницаИзмеренияМест,
	|		ПередачаТМЦ.СерияНоменклатуры,
	|		ПередачаТМЦ.ХарактеристикаНоменклатуры
	|		) КАК ВложенныйЗапросПоТоварам
	|";
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	флВыводитьМест = истина;
	Если ЗапросТовары.Итог("КоличествоМест")=0 Тогда
		флВыводитьМест = ложь;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаТМЦ_Накладная";
	
	Макет = ИнициализацияМакета(СтруктураПараметров, "Накладная");
	
	// Выводим шапку накладной
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	Если ТоварныйЧек Тогда
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(СтруктураПараметров.СсылкаНаОбъект, "Товарный чек");
	Иначе	
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(СтруктураПараметров.СсылкаНаОбъект, "Расходная накладная");
	КонецЕсли;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	ПредставлениеПоставщика = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ПолноеНаименование,");
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
	ОбластьМакета.Параметры.Поставщик = Шапка.Поставщик;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если НЕ ТоварныйЧек Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ПредставлениеПолучателя = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		ОбластьМакета.Параметры.Получатель = Шапка.Получатель;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	Колонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ВыводитьКоды=Не ПустаяСтрока(Колонка);
	
	ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьТовар  = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
	ОбластьМест   = Макет.ПолучитьОбласть("ШапкаТаблицы|Мест");
	ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|КоличествоЦена");
	ОбластьСкидок = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
	ОбластьСуммы  = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
	
	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьТовар);
	Если флВыводитьМест Тогда
		ТабДокумент.Присоединить(ОбластьМест);
	КонецЕсли;
	
	ТабДокумент.Присоединить(ОбластьДанных);
	ТабДокумент.Присоединить(ОбластьСуммы);
	
	ОбластьКолонкаТовар = Макет.Область("Товар");
	Если Не ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + 
		Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + 
	Макет.Область("СуммаБезСкидки").ШиринаКолонки +
	Макет.Область("СуммаСкидки").ШиринаКолонки;
	
	Если не флВыводитьМест Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + 
		Макет.Область("Мест").ШиринаКолонки;
	КонецЕсли;
	
	ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьТовар  = Макет.ПолучитьОбласть("Строка|Товар");
	ОбластьМест   = Макет.ПолучитьОбласть("Строка|Мест");
	ОбластьДанных = Макет.ПолучитьОбласть("Строка|КоличествоЦена");
	ОбластьСкидок = Макет.ПолучитьОбласть("Строка|Скидка");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Строка|Сумма");
	
	Сумма    = 0;
	СуммаНДС = 0;
	ВсегоСкидок    = 0;
	ВсегоБезСкидок = 0;
	
	Для каждого ВыборкаСтрокТовары из ЗапросТовары Цикл 
		
		Если Не ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		ОбластьНомера.Параметры.НомерСтроки = ЗапросТовары.Индекс(ВыборкаСтрокТовары) + 1;
		ТабДокумент.Вывести(ОбластьНомера);
		
		Если ВыводитьКоды Тогда
			Если Колонка = "Артикул" Тогда
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
			Иначе
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ОбластьТовар.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьТовар.Параметры.Товар = СокрЛП(ВыборкаСтрокТовары.Товар)
		+ ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары, Истина)
		+ ?(ВыборкаСтрокТовары.Метка = 2, " (возвратная тара)", "");		
		ТабДокумент.Присоединить(ОбластьТовар);
		
		Если флВыводитьМест Тогда
			ОбластьМест.Параметры.Заполнить(ВыборкаСтрокТовары);
			ТабДокумент.Присоединить(ОбластьМест);
		КонецЕсли;
		
		СуммаРуб = 0;
		
		ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьДанных.Параметры.Цена=0;
		
		ТабДокумент.Присоединить(ОбластьДанных);
		
		ОбластьСуммы.Параметры.Заполнить(ВыборкаСтрокТовары);
		Если СуммыВРублях Тогда
			ОбластьСуммы.Параметры.Сумма = СуммаРуб;
		КонецЕсли;
		
		ТабДокумент.Присоединить(ОбластьСуммы);
		Если СуммыВРублях Тогда
			Сумма          = 0;
			СуммаНДС       = 0;
		Иначе
			Сумма          = 0;
			СуммаНДС       = 0;
		КонецЕсли;
		ВсегоСкидок    = 0;
		ВсегоБезСкидок = 0;
	КонецЦикла;
	
	// Вывести Итого
	ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьТовар  = Макет.ПолучитьОбласть("Итого|Товар");
	ОбластьМест   = Макет.ПолучитьОбласть("Итого|Мест");
	ОбластьДанных = Макет.ПолучитьОбласть("Итого|КоличествоЦена");
	ОбластьСкидок = Макет.ПолучитьОбласть("Итого|Скидка");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Итого|Сумма");
	
	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьТовар);
	Если флВыводитьМест Тогда
		ТабДокумент.Присоединить(ОбластьМест);
	КонецЕсли;
	
	ТабДокумент.Присоединить(ОбластьДанных);
	ОбластьСуммы.Параметры.Всего = ОбщегоНазначения.ФорматСумм(Сумма);
	ТабДокумент.Присоединить(ОбластьСуммы);
	
	// Вывести Сумму прописью
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	СуммаКПрописи = 0;
	
	Если СуммыВРублях Тогда
		ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + ЗапросТовары.Количество()
		+ ", на сумму " + ОбщегоНазначения.ФорматСумм(СуммаКПрописи, МодульВалютногоУчета.ПолучитьВалюту("Бух"));
		ОбластьМакета.Параметры.СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописи, МодульВалютногоУчета.ПолучитьВалюту("Бух"));
	Иначе
		ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + ЗапросТовары.Количество()
		+ ", на сумму " + ОбщегоНазначения.ФорматСумм(СуммаКПрописи, МодульВалютногоУчета.ПолучитьВалюту("Бух"));
		ОбластьМакета.Параметры.СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописи, МодульВалютногоУчета.ПолучитьВалюту("Бух"));
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Вывести подписи
	ОбластьМакета=Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПолучитьТаблицуСтоимостиТоваров(СсылкаНаОбъект)
	Запрос=Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Параметры.Вставить("ВидДвижения", ВидДвиженияНакопления.Расход);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ПартииТоваровНаСкладах.Номенклатура,
	|	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладах.СерияНоменклатуры,
	|	ПартииТоваровНаСкладах.НомерСтрокиТабличнойЧасти КАК НомерСтроки,
	|	СУММА(ПартииТоваровНаСкладах.Стоимость) КАК Стоимость,
	|	СУММА(ПартииТоваровНаСкладах.Количество) КАК Количество
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	|
	|ГДЕ
	|	ПартииТоваровНаСкладах.Регистратор   = &ТекущийДокумент
	|	И ПартииТоваровНаСкладах.ВидДвижения = &ВидДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладах.Номенклатура,
	|	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладах.СерияНоменклатуры,
	|	ПартииТоваровНаСкладах.НомерСтрокиТабличнойЧасти
	|";
	#Если НаСервере Тогда
	Запрос.Выполнить();
	#КонецЕсли
	Возврат Запрос.Результат.Выгрузить();
КонецФункции

Функция ПолучитьСтоимостьТовара(Таблица, Номенклатура, Характеристика = Неопределено, Серия = Неопределено, ПартионныйУчетПоСериям = Ложь, Количество,НомерСтроки)

	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", Номенклатура);
	СтруктураПоиска.Вставить("НомерСтроки", НомерСтроки);
	Если ЗначениеЗаполнено(Характеристика) Тогда
		СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры", Характеристика);
	КонецЕсли;

	Если ПартионныйУчетПоСериям И ЗначениеЗаполнено(Серия) Тогда
		СтруктураПоиска.Вставить("СерияНоменклатуры", Серия);
	КонецЕсли;

	Строки=Таблица.НайтиСтроки(СтруктураПоиска);
	Если Строки.Количество() > 0 Тогда
		Стоимость  = Строки[0].Стоимость;
		Количество = Строки[0].Количество;
	Иначе
		Стоимость  = 0;
		Количество = 0;
	КонецЕсли;

	Возврат Стоимость;
КонецФункции 

Функция М15_ПараметрыПечати_Позиции(СтруктураПараметров)
	
	ЗапросПоТоварам=Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.СсылкаНаОбъект);
	ЗапросПоТоварам.Текст = "ВЫБРАТЬ
	|	ПередачаВПереработкуТовары.Номенклатура.ВестиПартионныйУчетПоСериям КАК ПартионныйУчетПоСериям,
	|	ПередачаВПереработкуТовары.Номенклатура КАК Номенклатура,
	|	ПередачаВПереработкуТовары.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(ПередачаВПереработкуТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	ПередачаВПереработкуТовары.Номенклатура.Код КАК ТоварКод,
	|	ПередачаВПереработкуТовары.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ПередачаВПереработкуТовары.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	ПередачаВПереработкуТовары.Количество КАК Количество,
	|	ПередачаВПереработкуТовары.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ПередачаВПереработкуТовары.СерияНоменклатуры КАК Серия,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаНДС,
	|	0 КАК Цена,
	|	0 КАК СуммаСНДС,
	|	ПередачаВПереработкуТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ПередачаВПереработку.Товары КАК ПередачаВПереработкуТовары
	|ГДЕ
	|	ПередачаВПереработкуТовары.Ссылка = &ТекущийДокумент";
	тзДанные=ЗапросПоТоварам.Выполнить().Выгрузить();
	
	ТаблицаСтоимости=ПолучитьТаблицуСтоимостиТоваров(СтруктураПараметров.СсылкаНаОбъект);
	ТаблицаСтоимости.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
	УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(СтруктураПараметров.СсылкаНаОбъект.Дата,,СтруктураПараметров.СсылкаНаОбъект.Организация);
	ВключатьНДСВСтоимостьПартий=НЕ УчетнаяПолитика.НеВключатьНДСВСтоимостьПартий;
	Для Каждого СтрокаКоллекции ИЗ тзДанные Цикл
		Количество=0;
		СтрокаКоллекции.СуммаБезНДС = ПолучитьСтоимостьТовара(ТаблицаСтоимости, СтрокаКоллекции.Номенклатура, СтрокаКоллекции.Характеристика, СтрокаКоллекции.Серия,
		СтрокаКоллекции.ПартионныйУчетПоСериям, Количество, СтрокаКоллекции.НомерСтроки);
		Если ВключатьНДСВСтоимостьПартий Тогда
			Если СтрокаКоллекции.СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Тогда
				СуммаБезНДС=СуммаБезНДС / 1.18;
			ИначеЕсли СтрокаКоллекции.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
				СуммаБезНДС=СуммаБезНДС / 1.2;
			ИначеЕсли СтрокаКоллекции.СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
				СуммаБезНДС=СуммаБезНДС / 1.1;
			КонецЕсли;
		КонецЕсли;
		СтрокаКоллекции.Цена        = ?(СтрокаКоллекции.СуммаБезНДС=0, 0, СтрокаКоллекции.СуммаБезНДС/СтрокаКоллекции.Количество);
		СтрокаКоллекции.СуммаСНДС   = СтрокаКоллекции.СуммаБезНДС+СтрокаКоллекции.СуммаНДС;
		СтрокаКоллекции.ТоварНаименование = СокрЛП(СтрокаКоллекции.ТоварНаименование) + ПечатныеФормыСервер.ПредставлениеСерий(СтрокаКоллекции);
	КонецЦикла;
	//УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(СтруктураПараметров.СсылкаНаОбъект.Дата,,СтруктураПараметров.СсылкаНаОбъект.Организация);
	//ЗапросПоТоварам=Новый Запрос();
	//ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.СсылкаНаОбъект);
	//ЗапросПоТоварам.УстановитьПараметр("ВключатьНДСВСтоимостьПартий", НЕ УчетнаяПолитика.НеВключатьНДСВСтоимостьПартий);
	//ЗапросПоТоварам.Текст = "ВЫБРАТЬ
	//	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	//	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	//	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	//	|	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
	//	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	//	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	//	|	ВложенныйЗапрос.КоличествоПринято КАК Количество,
	//	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	//	|	ВложенныйЗапрос.Серия КАК Серия,
	//	|	ВЫБОР
	//	|		КОГДА ВложенныйЗапрос.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	//	|				И &ВключатьНДСВСтоимостьПартий
	//	|			ТОГДА ЕСТЬNULL(ВложенныйЗапрос2.Стоимость, 0) / 1.18
	//	|		КОГДА ВложенныйЗапрос.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	//	|				И &ВключатьНДСВСтоимостьПартий
	//	|			ТОГДА ЕСТЬNULL(ВложенныйЗапрос2.Стоимость, 0) / 1.20
	//	|		КОГДА ВложенныйЗапрос.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	//	|				И &ВключатьНДСВСтоимостьПартий
	//	|			ТОГДА ЕСТЬNULL(ВложенныйЗапрос2.Стоимость, 0) / 1.1
	//	|		ИНАЧЕ ЕСТЬNULL(ВложенныйЗапрос2.Стоимость, 0)
	//	|	КОНЕЦ КАК СуммаБезНДС,
	//	//|	ВЫБОР
	//	//|		КОГДА &ВключатьНДСВСтоимостьПартий
	//	//|			ТОГДА ВЫБОР
	//	//|					КОГДА ВложенныйЗапрос.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	//	//|						ТОГДА ЕСТЬNULL(ВложенныйЗапрос2.Стоимость, 0) - ЕСТЬNULL(ВложенныйЗапрос2.Стоимость, 0) / 1.18
	//	//|					КОГДА ВложенныйЗапрос.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	//	//|						ТОГДА ЕСТЬNULL(ВложенныйЗапрос2.Стоимость, 0) - ЕСТЬNULL(ВложенныйЗапрос2.Стоимость, 0) / 1.1
	//	//|					ИНАЧЕ 0
	//	//|				КОНЕЦ
	//	//|		ИНАЧЕ ВЫБОР
	//	//|				КОГДА ВложенныйЗапрос.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	//	//|					ТОГДА ЕСТЬNULL(ВложенныйЗапрос2.Стоимость, 0) * 0.18
	//	//|				КОГДА ВложенныйЗапрос.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	//	//|					ТОГДА ЕСТЬNULL(ВложенныйЗапрос2.Стоимость, 0) * 0.1
	//	//|				ИНАЧЕ 0
	//	//|			КОНЕЦ
	//	//|	КОНЕЦ КАК СуммаНДС,
	//	|	0 КАК СуммаНДС,
	//	|	0 КАК Цена,
	//	|	0 КАК СуммаСНДС
	//	|ИЗ
	//	|	(ВЫБРАТЬ
	//	|		ПередачаТМЦ.Ссылка КАК Ссылка,
	//	|		ПередачаТМЦ.Номенклатура КАК Номенклатура,
	//	|		ПередачаТМЦ.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	//	|		ПередачаТМЦ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	//	|		СУММА(ПередачаТМЦ.Количество) КАК КоличествоПринято,
	//	|		ПередачаТМЦ.ХарактеристикаНоменклатуры КАК Характеристика,
	//	|		ПередачаТМЦ.СерияНоменклатуры КАК Серия
	//	|	ИЗ
	//	|		Документ.ПередачаВПереработку.Товары КАК ПередачаТМЦ
	//	|	ГДЕ
	//	|		ПередачаТМЦ.Ссылка = &ТекущийДокумент
	//	|	
	//	|	СГРУППИРОВАТЬ ПО
	//	|		ПередачаТМЦ.Ссылка,
	//	|		ПередачаТМЦ.Номенклатура,
	//	|		ПередачаТМЦ.Номенклатура.СтавкаНДС,
	//	|		ПередачаТМЦ.ЕдиницаИзмерения,
	//	|		ПередачаТМЦ.ХарактеристикаНоменклатуры,
	//	|		ПередачаТМЦ.СерияНоменклатуры) КАК ВложенныйЗапрос
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//	|			ПартииТоваровНаСкладах.Регистратор КАК Регистратор,
	//	|			ПартииТоваровНаСкладах.Номенклатура КАК Номенклатура,
	//	|			-СУММА(ПартииТоваровНаСкладах.СтоимостьОборот) КАК Стоимость
	//	|		ИЗ
	//	|			РегистрНакопления.ПартииТоваровНаСкладах.Обороты(, , Запись, ) КАК ПартииТоваровНаСкладах
	//	|		ГДЕ
	//	|			ПартииТоваровНаСкладах.Регистратор = &ТекущийДокумент
	//	|		
	//	|		СГРУППИРОВАТЬ ПО
	//	|			ПартииТоваровНаСкладах.Регистратор,
	//	|			ПартииТоваровНаСкладах.Номенклатура) КАК ВложенныйЗапрос2
	//	|		ПО ВложенныйЗапрос.Ссылка = ВложенныйЗапрос2.Регистратор
	//	|			И ВложенныйЗапрос.Номенклатура = ВложенныйЗапрос2.Номенклатура";
	//	
	//тзДанные=ЗапросПоТоварам.Выполнить().Выгрузить();
	//
	//Для Каждого СтрокаКоллекции ИЗ тзДанные Цикл
	//	СтрокаКоллекции.Цена        = ?(СтрокаКоллекции.СуммаБезНДС=0, 0, СтрокаКоллекции.СуммаБезНДС/СтрокаКоллекции.Количество);
	//	//СтрокаКоллекции.СуммаНДС    = СтрокаКоллекции.СуммаБезНДС*(УчетНалоговСервер.СтавкаНДС(СтрокаКоллекции.СтавкаНДС)/100);
	//	СтрокаКоллекции.СуммаСНДС   = СтрокаКоллекции.СуммаБезНДС+СтрокаКоллекции.СуммаНДС;
	//	СтрокаКоллекции.ТоварНаименование = СокрЛП(СтрокаКоллекции.ТоварНаименование) + ПечатныеФормыСервер.ПредставлениеСерий(СтрокаКоллекции);
	//	
	//КонецЦикла;
	
	тзДанные.Сортировать("ТоварНаименование Возр");
	Возврат тзДанные;
КонецФункции	

Функция М15_ПараметрыПечати(СтруктураПараметров)
	ПараметрыПечати = Новый Структура;
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          СтруктураПараметров.СсылкаНаОбъект.Дата);
	Запрос.УстановитьПараметр("ТекущийДокумент",    СтруктураПараметров.СсылкаНаОбъект);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",    СтруктураПараметров.СсылкаНаОбъект.Склад);

	Запрос.Текст = "ВЫБРАТЬ
	|	ПередачаТМЦ.Номер КАК Номер,
	|	ПередачаТМЦ.Дата КАК ДатаСоставления,
	|	ПередачаТМЦ.Дата КАК ДатаДокумента,
	|	ПередачаТМЦ.Организация,
	|	ПередачаТМЦ.Организация КАК ЮрФизЛицо,
	|	ПередачаТМЦ.Организация КАК Организация,
	|	ПередачаТМЦ.Склад КАК Склад,
	|	ПередачаТМЦ.Склад.Наименование КАК СкладНаименование,
	|	ПередачаТМЦ.Контрагент.Код КАК КонтрагентКод,
	|	ПередачаТМЦ.Контрагент КАК Контрагент,
	|	ОтветственныеЛица.ФизическоеЛицо КАК ОтветственноеЛицо,
	|	ПередачаТМЦ.ДоговорКонтрагента КАК Основание,
	|	0 КАК КоличествоПорядковыхНомеровЗаписейПрописью,
	|	"""" КАК СуммаПрописью,
	|	0 КАК ИтогНДС
	|ИЗ
	|	Документ.ПередачаВПереработку КАК ПередачаТМЦ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛица
	|		ПО ОтветственныеЛица.СтруктурнаяЕдиница = ПередачаТМЦ.Склад
	|ГДЕ
	|	ПередачаТМЦ.Ссылка = &ТекущийДокумент
	|";	
	тзДанные=Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
	КонецЦикла;
	ОтветственныеЛицаОрганизации = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(ПараметрыПечати.Организация, ПараметрыПечати.ДатаДокумента, СтруктураПараметров.СсылкаНаОбъект);
	ПараметрыПечати.Вставить("ФИОГлавБухгалтера",ОтветственныеЛицаОрганизации.ГлавныйБухгалтер);
	ПараметрыПечати.Вставить("ФИОРуководителя",ОтветственныеЛицаОрганизации.Руководитель);
	ПараметрыПечати.Вставить("ДолжностьРуководителя",ОтветственныеЛицаОрганизации.РуководительДолжность);
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.ЮрФизЛицо, ПараметрыПечати.ДатаСоставления);
	ПараметрыПечати.Вставить("ПредставлениеОрганизации",ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации));
	ПараметрыПечати.Вставить("ОрганизацияПоОКПО",СведенияОбОрганизации.КодПоОКПО);
	ПараметрыПечати.Вставить("НомерДокумента",ОбщегоНазначенияСервер.НомерНаПечать(СтруктураПараметров.СсылкаНаОбъект));
	ПредставлениеКонтрагента = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Контрагент, ПараметрыПечати.ДатаСоставления), "ПолноеНаименование,");
	ПараметрыПечати.Вставить("КонтрагентНаименование", ПредставлениеКонтрагента);
	ПараметрыПечати.Вставить("Позиции", М15_ПараметрыПечати_Позиции(СтруктураПараметров));
	ПараметрыПечати.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ПараметрыПечати.Позиции.Количество(), ,",,,,,,,,0"));
	ПараметрыПечати.Вставить("СуммаПрописью",ОбщегоНазначения.СформироватьСуммуПрописью(ПараметрыПечати.Позиции.Итог("СуммаСНДС"), МодульВалютногоУчета.ПолучитьВалюту("Бух")));
	ПараметрыПечати.Вставить("ИтогНДС", Окр(ПараметрыПечати.Позиции.Итог("СуммаСНДС") - ПараметрыПечати.Позиции.Итог("СуммаБезНДС"), 2));

	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;	
	
	Возврат ПараметрыПечати;
КонецФункции	

Функция Печать_М15(СтруктураПараметров)
	ПараметрыПечати=М15_ПараметрыПечати(СтруктураПараметров);
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Макет = ИнициализацияМакета(СтруктураПараметров, "М15");
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаТМЦ_М15";
	
	// Выводим общие реквизиты шапки
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	НомерСтраницы   = 1;
	Ном              = 0;
	КоличествоСтрок=ПараметрыПечати.Позиции.Количество();
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	// Выводим многострочную часть докмента
	ОбластьМакета  = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
	Для Каждого ВыборкаСтрокТовары ИЗ ПараметрыПечати.Позиции Цикл		
		Ном = Ном + 1;
		МассивВыводимыхОбластей.Очистить();
		МассивВыводимыхОбластей.Добавить(ОбластьМакета);
		Если Ном = КоличествоСтрок Тогда
			МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		КонецЕсли;		
		
		Если НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
			НомерСтраницы	= НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
	// Выводим итоги по документу
	
	ОбластьПодвала.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьПодвала);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция Печать_ТОРГ12(СтруктураПараметров, БезУслуг = Ложь)
	Шапка=ПолучитьРеквизитыШапки(СтруктураПараметров.СсылкаНаОбъект);
	ЕдиницаИзмеренияВеса = Константы.ЕдиницаИзмеренияВеса.Получить();
	
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ТоварКод=?(Колонка="","Код",Колонка);
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          Шапка.Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Шапка.Склад);
	Запрос.УстановитьПараметр("ТекущийДокумент",    СтруктураПараметров.СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ПустойКонтрагент",   Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата КАК ДатаДокумента,
	|	Организация,
	|	Организация КАК ЮрФизЛицо,
	|	Организация КАК Поставщик,
	|	Организация КАК Контрагент,
	|	Организация КАК Руководители,
	|	Контрагент КАК  Грузополучатель,
	|	Организация КАК Грузоотправитель,
	|	Организация.ОсновнойБанковскийСчет КАК БанковскийСчет,
	|	Контрагент КАК Покупатель,
	|	Контрагент КАК Плательщик,
	|	ДоговорКонтрагента.Представление КАК Основание,
	|	ОтветственныеЛица.ФизическоеЛицо КАК ОтветственноеЛицо,
	|	Подразделение
	|ИЗ
	|	Документ.ПередачаВПереработку КАК ПередачаТМЦ
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛица
	|ПО
	|	ОтветственныеЛица.СтруктурнаяЕдиница = ПередачаТМЦ.Склад
	|
	|ГДЕ
	|	ПередачаТМЦ.Ссылка = &ТекущийДокумент
	|";	
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                 КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление            КАК ВидУпаковки,
	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоМест > 0 ТОГДА ВложенныйЗапрос.КоличествоМест * ВложенныйЗапрос.ЕдиницаИзмеренияМест.Вес
	|		ИНАЧЕ ВложенныйЗапрос.Количество * ВложенныйЗапрос.ЕдиницаИзмерения.Вес
	|	КОНЕЦ КАК МассаБрутто,
	|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
	|	ВложенныйЗапрос.Серия                КАК Серия,
	|	ВложенныйЗапрос.Цена                 КАК Цена,
	|	ВЫБОР
	|		КОГДА((ВложенныйЗапрос.ПроцентСкидкиНаценки = 0) И 
	|		      (ВложенныйЗапрос.ПроцентАвтоматическихСкидок = 0))
	|	ТОГДА ЛОЖЬ
	|	ИНАЧЕ Истина
	|	КОНЕЦ                                КАК ЕстьСкидкиПоСтроке,
	|	ВложенныйЗапрос.Количество           КАК Количество,
	|	ВложенныйЗапрос.КоличествоМест       КАК КоличествоМест,
	|	ВложенныйЗапрос.Сумма                КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС             КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка                КАК Метка
	|ИЗ
	|
	|	(
	|	ВЫБРАТЬ
	|		ПередачаТМЦ.Номенклатура,
	|		ПередачаТМЦ.Коэффициент,
	|		ПередачаТМЦ.ЕдиницаИзмерения,
	|		ПередачаТМЦ.ЕдиницаИзмеренияМест,
	|		ПередачаТМЦ.ЕдиницаИзмеренияМест.Коэффициент     КАК КоэффициентМест,
	|		ПередачаТМЦ.ХарактеристикаНоменклатуры           КАК Характеристика,
	|		ПередачаТМЦ.СерияНоменклатуры                    КАК Серия,
	|		0 КАК Цена,
	|		0 КАК ПроцентСкидкиНаценки,
	|		0 КАК ПроцентАвтоматическихСкидок,
	|		СУММА(ПередачаТМЦ.Количество)                    КАК Количество,
	|		СУММА(ПередачаТМЦ.КоличествоМест)                КАК КоличествоМест,
	|		0 КАК Сумма,
	|		0 КАК СуммаНДС,
	|		МИНИМУМ(ПередачаТМЦ.НомерСтроки)                 КАК НомерСтроки,
	|		0                                                           КАК Метка
	|	ИЗ
	|		Документ.ПередачаВПереработку.Товары КАК ПередачаТМЦ
	|	ГДЕ
	|		ПередачаТМЦ.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|		ПередачаТМЦ.Номенклатура,
	|		ПередачаТМЦ.Коэффициент,
	|		ПередачаТМЦ.ЕдиницаИзмерения,
	|		ПередачаТМЦ.ЕдиницаИзмеренияМест,
	|		ПередачаТМЦ.ХарактеристикаНоменклатуры,
	|		ПередачаТМЦ.СерияНоменклатуры
	|	) КАК ВложенныйЗапрос
	|";	
	ЗапросТовары=Запрос.Выполнить().Выгрузить();
	
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаТМЦ_ТОРГ12";
	
	//Макет = ПолучитьОбщийМакет("ТОРГ12");
	Макет = ИнициализацияМакета(СтруктураПараметров, "ТОРГ12");
	
	// Выводим общие реквизиты шапки
	СведенияОПоставщике       = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента,, Шапка.БанковскийСчет);
	СведенияОПокупателе       = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	СведенияОГрузоотправитель = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	
	ОбластьМакета=Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.НомерДокумента = ОбщегоНазначенияСервер.НомерНаПечать(СтруктураПараметров.СсылкаНаОбъект);
	ОбластьМакета.Параметры.ДатаДокумента  = Шапка.ДатаДокумента;
	
	Если Шапка.ЮрФизЛицо = Шапка.Грузоотправитель Тогда
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПоставщике);
	Иначе
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	КонецЕсли;
	
	ОбластьМакета.Параметры.ПредставлениеПодразделения = Шапка.Подразделение;
	ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.АдресДоставки = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ФактическийАдрес");
	ОбластьМакета.Параметры.ПредставлениеПоставщика  = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПоставщике);
	ОбластьМакета.Параметры.ПредставлениеПлательщика = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.Основание = Шапка.Основание;
	
	// Выводим всевозможные коды
	ОбластьМакета.Параметры.ОрганизацияПоОКПО     = СведенияОГрузоотправитель.КодПоОКПО;
	ОбластьМакета.Параметры.ВидДеятельностиПоОКДП = "";
	ОбластьМакета.Параметры.ГрузополучательПоОКПО = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакета.Параметры.ПоставщикПоОКПО       = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакета.Параметры.ПлательщикПоОКПО      = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.ОснованиеНомер        = "";
	ОбластьМакета.Параметры.ОснованиеДата         = "";
	ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = "";
	ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = "";
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	НомерСтраницы   = 1;
	
	КоличествоСтрок = ЗапросТовары.Количество();
	
	// инициализация итогов по странице
	ИтогоМассаБруттоНаСтранице = 0;
	ИтогоМестНаСтранице        = 0;
	ИтогоКоличествоНаСтранице  = 0;
	ИтогоСуммаНаСтранице       = 0;
	ИтогоНДСНаСтранице         = 0;
	ИтогоСуммаСНДСНаСтранице   = 0;
	
	// инициализация итогов по документу
	ИтогоМассаБрутто = 0;
	ИтогоМест        = 0;
	ИтогоКоличество  = 0;
	ИтогоСуммаСНДС   = 0;
	ИтогоСумма       = 0;
	ИтогоНДС         = 0;
	Ном              = 0;
	
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	// Выводим многострочную часть докмента
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		Ном = Ном + 1;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.Номер             = ЗапросТовары.Индекс(ВыборкаСтрок) + 1;
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование)
		+ ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрок, Истина)
		+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "");
		
		Если НЕ ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
			МассаБрутто = 0;
		Иначе
			МассаБрутто = ВыборкаСтрок.МассаБрутто;
			МассаБрутто = ?(МассаБрутто <> Неопределено И МассаБрутто <> NULL, МассаБрутто, 0);
		КонецЕсли;
		
		Мест        = ВыборкаСтрок.КоличествоМест;
		Мест        = ?(Мест <> Неопределено И Мест <> NULL, Мест, 0);
		
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = 0;
		СуммаНДС    = 0;
		СуммаБезНДС = СуммаСНДС  - СуммаНДС;
		
		ОбластьМакета.Параметры.МассаБрутто = МассаБрутто;
		ОбластьМакета.Параметры.СуммаСНДС   = СуммаСНДС;
		ОбластьМакета.Параметры.СуммаНДС    = СуммаНДС;
		ОбластьМакета.Параметры.СтавкаНДС   = "";
		ОбластьМакета.Параметры.СуммаБезНДС = СуммаБезНДС;
		
		Если Ном = 1 Тогда // первая срока
			ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
		Иначе
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;		
			
			Если Ном <> 1 И НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;
				
				ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
				
				// очистим итоги по странице
				ИтогоМассаБруттоНаСтранице = 0;
				ИтогоМестНаСтранице        = 0;
				ИтогоКоличествоНаСтранице  = 0;
				ИтогоСуммаНаСтранице       = 0;
				ИтогоНДСНаСтранице         = 0;
				ИтогоСуммаСНДСНаСтранице   = 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
			КонецЕсли;
		КонецЕсли;		
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// увеличим итоги по странице
		ИтогоМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице + МассаБрутто;
		ИтогоМестНаСтранице        = ИтогоМестНаСтранице        + Мест;
		ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице  + Количество;
		ИтогоСуммаНаСтранице       = ИтогоСуммаНаСтранице       + СуммаБезНДС;
		ИтогоНДСНаСтранице         = ИтогоНДСНаСтранице         + СуммаНДС;
		ИтогоСуммаСНДСНаСтранице   = ИтогоСуммаСНДСНаСтранице   + СуммаСНДС;
		
		// увеличим итоги по дукументу
		ИтогоМассаБрутто = ИтогоМассаБрутто + МассаБрутто;
		ИтогоМест        = ИтогоМест        + Мест;
		ИтогоКоличество  = ИтогоКоличество  + Количество;
		ИтогоСумма       = ИтогоСумма       + СуммаБезНДС;
		ИтогоНДС         = ИтогоНДС         + СуммаНДС;
		ИтогоСуммаСНДС   = ИтогоСуммаСНДС   + СуммаСНДС;
	КонецЦикла;
	
	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;
	
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогМассаБрутто = ИтогоМассаБрутто;
	ОбластьМакета.Параметры.ИтогМест        = ИтогоМест;
	ОбластьМакета.Параметры.ИтогКоличество  = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогСуммы       = ИтогоСумма;
	ОбластьМакета.Параметры.ИтогНДС         = ИтогоНДС;
	ОбластьМакета.Параметры.ИтогСуммыСНДС   = ИтогоСуммаСНДС;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	ПолнаяДатаДокумента = Формат(Шапка.ДатаДокумента, "ДФ=""дд ММММ гггг """"года""""""");
	ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
	ПервыйРазделитель = Найти(ПолнаяДатаДокумента," ");
	ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента,ДлинаСтроки-ПервыйРазделитель)," ")+ПервыйРазделитель;
	ОбластьМакета.Параметры.ДатаДокументаДень     = """"+Лев(ПолнаяДатаДокумента,ПервыйРазделитель-1)+"""";
	ОбластьМакета.Параметры.ДатаДокументаМесяц    = Сред(ПолнаяДатаДокумента,ПервыйРазделитель+1,ВторойРазделитель-ПервыйРазделитель-1);
	ОбластьМакета.Параметры.ДатаДокументаГод      = Прав(ПолнаяДатаДокумента,ДлинаСтроки-ВторойРазделитель);	
	
	Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента, СтруктураПараметров.СсылкаНаОбъект);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	
	// Главный бухгалтер
	ОбластьМакета.Параметры.ФИОГлавБухгалтера = Бухгалтер;
	
	// Отпуск товара разрешил
	ФИООтпускРазрешил       = Руководитель;
	ДолжностьОтпускРазрешил = Руководители.РуководительДолжность;
	
	ОбластьМакета.Параметры.ФИОРуководителя       = ФИООтпускРазрешил;
	ОбластьМакета.Параметры.ДолжностьРуководителя = ДолжностьОтпускРазрешил;
	
	Если ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) И ИтогоМассаБрутто > 0 Тогда
		ОбластьМакета.Параметры.МассаГрузаПрописью = ЧислоПрописью(ИтогоМассаБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".";
	КонецЕсли;
	
	Если ИтогоМест > 0 Тогда
		ОбластьМакета.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтогоМест, ,",,,,,,,,0");
	КонецЕсли;
	
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакета.Параметры.СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(ИтогоСуммаСНДС, МодульВалютногоУчета.ПолучитьВалюту("Бух"));
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;	
КонецФункции

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	Если СтруктураПараметров.ИмяМакета = "НакладнаяРуб" Тогда
		ТабДокумент = Печать_Документа(СтруктураПараметров, Истина);		
	ИначеЕсли СтруктураПараметров.ИмяМакета = "ТОРГ12" тогда
		ТабДокумент = Печать_ТОРГ12(СтруктураПараметров);
	ИначеЕсли СтруктураПараметров.ИмяМакета = "М15" тогда
		ТабДокумент = Печать_М15(СтруктураПараметров);		
	КонецЕсли;
	
	Возврат ТабДокумент;
КонецФункции
