&НаКлиенте
Процедура УстановитьВидимость()
	ЕстьНеВозврат = Ложь;
	Для Каждого СтрокаТЧ Из Объект.ДокументыОснования Цикл
		Если Не ТипЗнч(СтрокаТЧ.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			ЕстьНеВозврат = Истина; Прервать;
		КонецЕсли;
	КонецЦикла;
	УказанДокументОснование = Объект.ДокументыОснования.Количество() > 0 И ЗначениеЗаполнено(Объект.ДокументыОснования[0].ДокументОснование);
	Элементы.ПанельОснование.ТекущаяСтраница=?(Объект.ВидСчетаФактуры=ПредопределенноеЗначение("Перечисление.НДСВидСчетаФактуры.Корректировочный"), Элементы.ПанельОснование.ПодчиненныеЭлементы.Корректировка, Элементы.ПанельОснование.ПодчиненныеЭлементы.НаРеализацию);
	Элементы.Авансы.Видимость=Объект.ВидСчетаФактуры=ПредопределенноеЗначение("Перечисление.НДСВидСчетаФактуры.НаАванс") ИЛИ Объект.ВидСчетаФактуры=ПредопределенноеЗначение("Перечисление.НДСВидСчетаФактуры.Лизинг") ИЛИ Объект.ВидСчетаФактуры=ПредопределенноеЗначение("Перечисление.НДСВидСчетаФактуры.НалоговыйАгент");
	Элементы.НомерИсправления.Видимость=Объект.Исправление;
	
	ЕстьОснованиеАО=Ложь;
	Если Не Объект.ВидСчетаФактуры=ПредопределенноеЗначение("Перечисление.НДСВидСчетаФактуры.НаАванс") Тогда
		Для каждого ТекущийДокументОснование Из Объект.ДокументыОснования Цикл
			Если ТипЗнч(ТекущийДокументОснование.ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
				ЕстьОснованиеАО = Истина; Прервать;
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	Элементы.ДатаВходящего.ТолькоПросмотр	= ЕстьОснованиеАО;
	Элементы.Номер.ТолькоПросмотр	= ЕстьОснованиеАО;	
	Элементы.СуммаДокумента.ТолькоПросмотр=НЕ Объект.РучнаяКорректировка;
КонецПроцедуры
	
&НаСервере
Процедура ОпределениеПараметровСчетаФактуры()
	Если Объект.ВидСчетаФактуры=Перечисления.НДСВидСчетаФактуры.НаАванс ИЛИ Объект.ВидСчетаФактуры=Перечисления.НДСВидСчетаФактуры.Лизинг Тогда 
		Объект.СуммаДокумента = Объект.Авансы.Итог("Сумма");
		Объект.СуммаНДС = Объект.Авансы.Итог("СуммаНДС");
	Иначе
		ПараметрыСФ = Неопределено;
		УчетНалоговСервер.ПараметрыСчетаФактуры(Объект, ПараметрыСФ);
		Если не ПараметрыСФ.Организация = Неопределено И не ПараметрыСФ.Организация = Объект.Организация Тогда
			Объект.Организация = ПараметрыСФ.Организация;
		КонецЕсли;
		Если не ПараметрыСФ.Контрагент = Неопределено  И не ПараметрыСФ.Контрагент = Объект.Контрагент Тогда
			Объект.Контрагент = ПараметрыСФ.Контрагент;
		КонецЕсли;
		Если (не Объект.СуммаДокумента = ПараметрыСФ.СуммаДокумента) ИЛИ (не Объект.СуммаНДС = ПараметрыСФ.СуммаНДС) Тогда
			Если Не Объект.РучнаяКорректировка Тогда
				Объект.СуммаДокумента = ПараметрыСФ.СуммаДокумента;
			КонецЕсли;
			Объект.СуммаНДС = ПараметрыСФ.СуммаНДС;
		КонецЕсли;
		Если не ПараметрыСФ.ВалютаДокумента = Неопределено И не Объект.ВалютаДокумента = ПараметрыСФ.ВалютаДокумента Тогда
			Объект.ВалютаДокумента = ПараметрыСФ.ВалютаДокумента;
		КонецЕсли;
		Если Объект.ДокументыОснования.Количество() = 1 и не Объект.ДокументыОснования[0].ДокументОснование = Объект.ДокументОснование Тогда
			Объект.ДокументОснование = Объект.ДокументыОснования[0].ДокументОснование;
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Вложения"

&НаКлиенте
Процедура тпВложение_ВыполнитьДействие(Команда)
	Если Команда.Имя="ВложенияПредпросмотр" Тогда
		Элементы.ВложенияПредпросмотр.Пометка=НЕ Элементы.ВложенияПредпросмотр.Пометка;
		Элементы.ВложенияГруппаПросмотр.Видимость=Элементы.ВложенияПредпросмотр.Пометка;
		Если Элементы.ВложенияПредпросмотр.Пометка Тогда
			тпВложения_ОбработчикОжидания();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры	 

&НаКлиенте
Процедура тпВложения_ПриАктивизацииСтроки(Элемент)
	Если Элементы.тпВложения.ТекущиеДанные=Неопределено Тогда Возврат; КонецЕсли;
	Если НЕ Элементы.ВложенияПредпросмотр.Пометка Тогда Возврат; КонецЕсли;
	
	тпВложения_ОбработчикОжидания();
КонецПроцедуры

&НаКлиенте
Процедура тпВложения_ПредпросмотПоказать(СтруктураДанных)
	Модуль=ОбщегоНазначенияКлиент.ОбщийМодуль("ВложенияКлиент");
	Модуль.ПредпросмотрПоказать(ЭтаФорма, СтруктураДанных);
КонецПроцедуры

&НаСервере
Процедура тпВложения_ПредпросмотСоздать(СтруктураДанных)
	Модуль=ОбщегоНазначенияСервер.ОбщийМодуль("ВложенияСервер");
	Модуль.ПредпросмотрСоздать(ЭтаФорма, СтруктураДанных);
КонецПроцедуры

&НаКлиенте
Процедура тпВложения_ОбработчикОжидания()
	Если Элементы.тпВложения.ТекущиеДанные=Неопределено Тогда Возврат; КонецЕсли;

	СтруктураДанных=Новый Структура("ИмяФайла,Каталог,ТипID,ID,ВариантХранения,ИндексПиктограммы");
	ЗаполнитьЗначенияСвойств(СтруктураДанных, Элементы.тпВложения.ТекущиеДанные);
	СтруктураДанных.Вставить("Ссылка", Объект.Ссылка);
	СтруктураДанных.Вставить("ИмяРеквизита", ОбщегоНазначенияКлиент.ОбщийМодуль("ВложенияОбщий").ИмяРеквизитаПоИндексуПиктограммы(СтруктураДанных.ИндексПиктограммы));

	Если Элементы.Найти("ВложениеПросмотр"+СтруктураДанных.ИмяРеквизита)=Неопределено Тогда	
		тпВложения_ПредпросмотСоздать(СтруктураДанных);
	КонецЕсли;

	тпВложения_ПредпросмотПоказать(СтруктураДанных);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Обработчики оповещения

&НаКлиенте
Процедура ОбработчикОповещения_ПодборПРД(Параметр1, Параметр2) Экспорт
	Если НЕ ТипЗнч(Параметр1)=Тип("Соответствие") Тогда Возврат; КонецЕсли;
	
	Объект.ДатаНомерДокументовОплаты.Очистить();
	Для каждого СтрокаКллекции Из Параметр1 Цикл
		НоваяСтрока=Объект.ДатаНомерДокументовОплаты.Добавить();
		НоваяСтрока.НомерПлатежноРасчетногоДокумента=СтрокаКллекции.Ключ;
		НоваяСтрока.ДатаПлатежноРасчетногоДокумента=СтрокаКллекции.Значение;
	КонецЦикла;
КонецПроцедуры
 
///////////////////////////////////////////////////////////////////////////////
// Стандартные (универсальные) процедуры\функции

&НаСервере
Процедура ВыполнитьСортировкуТабличнойЧасти(ИмяТабличнойЧасти, стрСортировка) Экспорт
	СортировкаТабличнойЧастиСервер.Сортировать(ИмяТабличнойЧасти, стрСортировка, Объект);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	стрИмя=Элемент.Имя;
	Если стрИмя="Дата" Тогда	
		Элементы.КодВидаОперации.СписокВыбора.Очистить();
		УчетНалоговКлиент.СписокКодовВидовОпераций("ПолученныеСчетаФактуры", Элементы.КодВидаОперации.СписокВыбора, Объект.Дата);
		
	ИначеЕсли стрИмя="ВидСчетаФактуры" Тогда	
		Если Объект.ВидСчетаФактуры=ПредопределенноеЗначение("Перечисление.НДСВидСчетаФактуры.НаАванс") И Объект.Авансы.Количество() = 0 Тогда
			Объект.Авансы.Добавить();
		ИначеЕсли Не Объект.ВидСчетаФактуры=ПредопределенноеЗначение("Перечисление.НДСВидСчетаФактуры.НаАванс") Тогда
			Объект.Авансы.Очистить();
			Объект.СуммаДокумента=0;		
		КонецЕсли;
		Если Объект.ВидСчетаФактуры=ПредопределенноеЗначение("Перечисление.НДСВидСчетаФактуры.Исправительный") Тогда
			Объект.ВидСчетаФактуры=ПредопределенноеЗначение("Перечисление.НДСВидСчетаФактуры.Корректировочный");
			Объект.Исправление=Истина;
			Объект.НомерИсправления=1;
			ПоказатьПредупреждение(, "Вид счета-фактуры <Исправительный> более не используется.");
		Конецесли;	
		Объект.ДокументыОснования.Очистить();
		Объект.ДокументыОснования.Добавить();
		УстановитьВидимость();
		
	ИначеЕсли стрИмя="Контрагент" Тогда
		СтруктураПраметров=Новый Структура;
		СтруктураПраметров.Вставить("Контрагент", Объект.Контрагент);
		СтруктураПраметров.Вставить("Организация", Объект.Организация);
		СтруктураПраметров.Вставить("ВидДоговора", УправлениеДиалогамиКлиент.СписокВидовДоговоров("СПокупателем,СКомиссионером"));
		Объект.ДоговорКонтрагента=УправлениеДиалогамиСервер.ДоступныеДоговорыКонтрагента(СтруктураПраметров, Истина);

	ИначеЕсли стрИмя="РучнаяКорректировка" Тогда
		УстановитьВидимость();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СобытияЭлементовФормыКлиент.НачалоВыбора(ЭтаФорма, Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля УНИВЕРСАЛЬНЫЕ

&НаКлиенте
Процедура кпТабличноеПоле_ВыполнитьДействие(Команда)
	стрКоманда=Команда.Имя;
	Если стрКоманда="Сортировать" Тогда
		стрТабличнаяЧасть=стрЗаменить(ЭтаФорма.Элементы.ТабличныеЧасти.ТекущаяСтраница.Имя, "Страница", "");
		СортировкаТабличнойЧастиКлиент.Открыть(стрТабличнаяЧасть, ЭтаФорма, Объект);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "ДокументыОснования"

&НаКлиенте
Процедура тпДокументыОснования_ПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Копирование Тогда
		Элемент.ТекущаяСтрока.ДокументОснование = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпДокументыОснования_Колонка_ПриИзменении(Элемент)
	ТекЗначение = Элемент.Значение;
	Если Не ЗначениеЗаполнено(ТекЗначение) Тогда Возврат; КонецЕсли; 
	УжеВыбран = Ложь;
	Для Каждого СтрДокОснования Из Объект.ДокументыОснования Цикл
		Если (СтрДокОснования.ДокументОснование = ТекЗначение) И (СтрДокОснования.НомерСтроки <> Элементы.ДокументыОснования.ТекущаяСтрока.НомерСтроки) Тогда
			УжеВыбран = Истина;
		КонецЕсли;
	КонецЦикла;
	Если УжеВыбран Тогда
		Сообщить("Данный документ уже выбран в качестве документа-основания! Повторный выбор не допускается.");
		Элемент.Значение = Неопределено;
	КонецЕсли;
	Объект.ДокументОснование=ТекЗначение;
	ОпределениеПараметровСчетаФактуры();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий дополнительных реквизитов табличных частей

&НаКлиенте
Процедура тзРеквизитыТЧ_ПриИзменении_Клиент(Элемент)
	тзРеквизитыТЧ_ПриИзменении_Сервер(Элемент.Имя);
КонецПроцедуры

&НаСервере
Процедура тзРеквизитыТЧ_ПриИзменении_Сервер(стрИмя)
	МетаконфигураторСервер.ДопРеквизиты_ПриИзменении(стрИмя, ЭтаФорма);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СобытияФормыСервер.ПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);	
	
	Если Параметры.Свойство("ДокументОснование") Тогда
		ДокументОбъект=РеквизитФормыВЗначение("Объект");
		ДокументОбъект.ОбработкаЗаполнения(Параметры.ДокументОснование);
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");

		//Если ТипЗнч(Параметры.ДокументОснование)=Тип("ДокументСсылка.КомиссияОтчетПродажиКомитенту") Тогда
		//	Объект.ВидСчетаФактуры=Перечисления.НДСВидСчетаФактуры.НаРеализацию;
		//	Если Параметры.ДокументОснование.ДоговорКонтрагента.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
		//		Объект.Контрагент=Параметры.ДокументОснование.Контрагент;
		//		Объект.ДоговорКонтрагента=Параметры.ДокументОснование.ДоговорКонтрагента;
		//		Объект.Сумма=Параметры.ДокументОснование.СуммаВознаграждения;
		//		Объект.СуммаДокумента=Параметры.ДокументОснование.СуммаВознаграждения;
		//		Объект.СуммаНДС=Параметры.ДокументОснование.Товары.Итог("СуммаНДСВознаграждения");
		//	КонецЕсли;
		//КонецЕсли;	

		//Если ТипЗнч(Параметры.ДокументОснование)=Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		//	Объект.ВидСчетаФактуры=Перечисления.НДСВидСчетаФактуры.НаПокупку;
		//	Если ЗначениеЗаполнено(Параметры.ДокументОснование.Подвид) Тогда
		//		Если УправлениеДокументамиСервер.ИмяПредопределенногоПодвида(Параметры.ДокументОснование.Подвид)="Корректировка" Тогда
		//			Объект.ВидСчетаФактуры=Перечисления.НДСВидСчетаФактуры.Корректировочный;
		//			Объект.НомерИсправления=1;
		//			Объект.ДокументОснованиеКорректировка=УчетНалоговСервер.НайтиПодчиненныйДокумент(Параметры.ДокументОснование.Сделка, "СчетФактураПолученный");
		//		КонецЕсли;
		//	КонецЕсли;
		//КонецЕсли;	
	КонецЕсли; 	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(Объект.ВидСчетаФактуры) Тогда
		Объект.ВидСчетаФактуры = ПредопределенноеЗначение("Перечисление.НДСВидСчетаФактуры.НаПокупку");
	ИначеЕсли Объект.ВидСчетаФактуры=ПредопределенноеЗначение("Перечисление.НДСВидСчетаФактуры.НаАванс") И Объект.Авансы.Количество()>0 Тогда
		Элементы.Авансы.ТекущаяСтрока=Объект.Авансы[0];
	КонецЕсли; 
	
	//По документам сформированным вводом начальных остатков по НДС не допускаются изменения
	Если Объект.СформированПриВводеНачальныхОстатковНДС Тогда ЭтаФорма.ТолькоПросмотр = Истина; КонецЕсли; 
	Если НЕ Объект.Ссылка.Пустая() И Не Объект.ВидСчетаФактуры=ПредопределенноеЗначение("Перечисление.НДСВидСчетаФактуры.НаАванс") И Не ЭтаФорма.ТолькоПросмотр Тогда
		ОпределениеПараметровСчетаФактуры();
	КонецЕсли;
	УчетНалоговКлиент.СписокКодовВидовОпераций("ВыставленныеСчетаФактуры", Элементы.КодВидаОперации.СписокВыбора, Объект.Дата);
	УстановитьВидимость();
	
	СобытияФормыКлиент.ПриОткрытии(Отказ, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СобытияФормыКлиент.ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	СобытияФормыКлиент.ПриЗакрытии(ЗавершениеРаботы, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	СобытияФормыКлиент.ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	СобытияФормыКлиент.ОбработкаОповещения(ИмяСобытия, Параметр, Источник, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	СобытияФормыКлиент.ОбработкаАктивизации(АктивныйОбъект, Источник, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	СобытияФормыКлиент.ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	СобытияФормыСервер.ПриЧтенииНаСервере(ТекущийОбъект, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СобытияФормыКлиент.ПередЗаписью(Отказ, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СобытияФормыСервер.ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);	
КонецПроцедуры
 
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)	
	СобытияФормыСервер.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)	
	СобытияФормыСервер.ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	СобытияФормыКлиент.ПослеЗаписи(ПараметрыЗаписи, ЭтаФорма, Объект);
	ПараметрыЗаписи.Вставить("Основание", Объект.ДокументОснование);
	Оповестить("Запись_СчетФактураПолученный", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	СобытияФормыКлиент.ВнешнееСобытие(Источник, Событие, Данные, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначения(СтандартнаяОбработка)
	СобытияФормыКлиент.ВыборЗначения(СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры
