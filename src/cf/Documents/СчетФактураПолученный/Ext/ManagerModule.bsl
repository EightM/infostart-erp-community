////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("СчетФактура", "Счет-фактура");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция ИнициализацияТаблицыСтрок()
	Товары=Новый ТаблицаЗначений();
	Товары.Колонки.Добавить("Товар");
	Товары.Колонки.Добавить("НоменклатураНаименование");
	Товары.Колонки.Добавить("СтранаПроисхождения");
	Товары.Колонки.Добавить("ПредставлениеСтраны");
	Товары.Колонки.Добавить("НомерГТД");
	Товары.Колонки.Добавить("ПредставлениеГТД");
	Товары.Колонки.Добавить("Количество");
	Товары.Колонки.Добавить("ЕдиницаИзмерения");
	Товары.Колонки.Добавить("СуммаВключаетНДС");
	Товары.Колонки.Добавить("Цена");
	Товары.Колонки.Добавить("СтавкаНДС");
	Товары.Колонки.Добавить("СуммаНДС");
	Товары.Колонки.Добавить("СтавкаНП");
	Товары.Колонки.Добавить("Сумма");
	Товары.Колонки.Добавить("КодТНВЭД");

	Возврат Товары;
КонецФункции

// Функция собирает данные по документу основанию КомиссияОтчетПродажиКомиссионера и 
// возвращает типизированную структуру с данными
// 
Функция СобратьДанныеПоОтчетОПродажахКомиссионера(ДокОснование,СсылкаНаОбъект)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Документ",  ДокОснование);
	Запрос.УстановитьПараметр("Курс",      ДокОснование.КурсВзаиморасчетов);
	Запрос.УстановитьПараметр("Кратность", ДокОснование.КратностьВзаиморасчетов);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Организация,
	|	Организация   КАК Покупатель,
	|	Подразделение КАК Подразделение,
	|	Контрагент    КАК Поставщик,
	|	СуммаДокумента          КАК Сумма,
	|	СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ВалютаДокумента         КАК Валюта,
	|	СуммаВключаетНДС,
	|	УчитыватьНДС,
	|	Товары.(
	|		СУММА(СуммаВознаграждения) КАК Сумма
	|	)
	|ИЗ
	|	Документ.КомиссияОтчетПродажиКомиссионера КАК КомиссияОтчетПродажиКомиссионера
	|
	|ГДЕ
	|	КомиссияОтчетПродажиКомиссионера.Ссылка = &Документ
	|";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            СсылкаНаОбъект.Номер);
	ДанныеДляПечати.Вставить("Дата",             СсылкаНаОбъект.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", );
	ДанныеДляПечати.Вставить("Подразделение",    Шапка.Подразделение);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  );
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Истина);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );
	ДанныеДляПечати.Вставить("ИдентификаторГосКонтракта", "");


	Товары = ИнициализацияТаблицыСтрок();

	Пока ВыборкаСтрокТовары.Следующий() Цикл
		Строчка = Товары.Добавить();
		Строчка.Товар               = "Комиссионное вознаграждение";
		Строчка.НоменклатураНаименование   = "Комиссионное вознаграждение";
		Строчка.СтранаПроисхождения = "";
		Строчка.ПредставлениеСтраны = "";
		Строчка.НомерГТД            = "";
		Строчка.ПредставлениеГТД    = "";
		Строчка.Количество          = 1;
		Строчка.ЕдиницаИзмерения    = "";
		Строчка.СтавкаНДС           = Шапка.СтавкаНДС;
		Строчка.СуммаВключаетНДС	= Истина;
		СуммаНДС                    = УчетНалоговСервер.РассчитатьСуммуНДС(ВыборкаСтрокТовары.Сумма, Шапка.УчитыватьНДС, Шапка.СуммаВключаетНДС, УчетНалоговСервер.СтавкаНДС(Шапка.СтавкаНДС));
		Строчка.СуммаНДС            = СуммаНДС;
		Строчка.Сумма               = ВыборкаСтрокТовары.Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
		Строчка.Цена                = ВыборкаСтрокТовары.Сумма - СуммаНДС;
	КонецЦикла;

	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;
КонецФункции

// Функция собирает данные по документу основанию Поступление и структуру с данными
// 
Функция СобратьДанныеПоПоступлениюТоваров(ДокОснование,СсылкаНаОбъект)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ПоступлениеТоваровУслуг.Организация КАК Покупатель,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровУслуг.Грузополучатель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА ПоступлениеТоваровУслуг.Организация
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ПоступлениеТоваровУслуг.Подразделение КАК Подразделение,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровУслуг.Грузоотправитель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА ""он же""
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ПоступлениеТоваровУслуг.СуммаДокумента КАК Сумма,
	|	ПоступлениеТоваровУслуг.ВалютаДокумента КАК Валюта,
	|	ПоступлениеТоваровУслуг.УчитыватьНДС КАК УчитыватьНДС,
	|	ПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.ДоговорКонтрагента.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ДокументОснование";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос=Новый Запрос();
	Запрос.УстановитьПараметр("Курс", ДокОснование.КурсВзаиморасчетов);
	Запрос.УстановитьПараметр("Кратность", ДокОснование.КратностьВзаиморасчетов);
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокОснование.Ссылка);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.Товар,
	|	ВложенныйЗапрос.КодТНВЭД,
	|	ВложенныйЗапрос.Товар.НаименованиеПолное КАК НоменклатураНаименование,
	|	NULL КАК ОбъектСтроительства,
	|	NULL КАК ОбъектСтроительстваНаименование, 
	|	ВложенныйЗапрос.СтранаПроисхождения,
	|	ВложенныйЗапрос.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.НомерГТД.Представление КАК ПредставлениеГТД,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Сумма,
	|	ВложенныйЗапрос.СуммаНДС,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|   1 КАК ID
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаПоТоварам.НомерСтроки КАК НомерСтроки,
	|		ТаблицаПоТоварам.Номенклатура КАК Товар,
	|		ТаблицаПоТоварам.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|		ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД КАК НомерГТД,
	|		ТаблицаПоТоварам.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		СУММА(ТаблицаПоТоварам.Количество) КАК Количество,
	|		ТаблицаПоТоварам.Цена КАК Цена,
	|		ТаблицаПоТоварам.Сумма КАК Сумма,
	|		ТаблицаПоТоварам.СуммаНДС КАК СуммаНДС,
	|		ТаблицаПоТоварам.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаПоТоварам.ХарактеристикаНоменклатуры КАК Характеристика,
	|		ТаблицаПоТоварам.СерияНоменклатуры КАК Серия
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаПоТоварам
	|	
	|	ГДЕ
	|		ТаблицаПоТоварам.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаПоТоварам.НомерСтроки,
	|		ТаблицаПоТоварам.Номенклатура,
	|		ТаблицаПоТоварам.ЕдиницаИзмерения,
	|		ТаблицаПоТоварам.СтавкаНДС,
	|		ТаблицаПоТоварам.Цена,
	|		ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения,
	|		ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД,
	|		ТаблицаПоТоварам.ХарактеристикаНоменклатуры,
	|		ТаблицаПоТоварам.СерияНоменклатуры,
	|		ТаблицаПоТоварам.Сумма,
	|		ТаблицаПоТоварам.СуммаНДС) КАК ВложенныйЗапрос
	
	|ОБЪЕДИНИТЬ ВСЕ
	
	|ВЫБРАТЬ
	|	ТаблицаПоУслугам.НомерСтроки,
	|	ТаблицаПоУслугам.Номенклатура,
	|	NULL,
	|	ТаблицаПоУслугам.Содержание,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ПустаяСсылка),
	|	""--"",
	|	""--"",
	|	""--"",
	|	ТаблицаПоУслугам.Номенклатура.ЕдиницаХраненияОстатков.Представление,
	|	ТаблицаПоУслугам.Количество,
	|	ТаблицаПоУслугам.Цена,
	|	ТаблицаПоУслугам.Сумма,
	|	ТаблицаПоУслугам.СуммаНДС,
	|	ТаблицаПоУслугам.СтавкаНДС,
	|	NULL,
	|	NULL,
	|	2
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ТаблицаПоУслугам	
	|ГДЕ
	|	ТаблицаПоУслугам.Ссылка = &ТекущийДокумент
	|";	
	ВыборкаСтрокТовары = Запрос.Выполнить().Выбрать();

	ДанныеДляПечати=Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            СсылкаНаОбъект.Номер);
	ДанныеДляПечати.Вставить("Дата",             СсылкаНаОбъект.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Подразделение",    Шапка.Подразделение);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ИдентификаторГосКонтракта",     Шапка.ИдентификаторГосКонтракта);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );
	ДанныеДляПечати.Вставить("ОснованиеПодписантаРуководителя", "(ф.и.о.)");
	ДанныеДляПечати.Вставить("ОснованиеПодписантаГлавБуха", "(ф.и.о.)");


	Товары = ИнициализацияТаблицыСтрок();

	ЕстьТовары = Ложь;
	
	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл
		Если ВыборкаСтрокТовары.ID=1 ИЛИ ВыборкаСтрокТовары.ID=3 ИЛИ ВыборкаСтрокТовары.ID=4 Тогда
			ЕстьТовары = Истина;                            
		КонецЕсли;
		
		Строчка = Товары.Добавить();
		Если ЗначениеЗаполнено(ВыборкаСтрокТовары.Товар) Тогда
			Строчка.Товар               = ВыборкаСтрокТовары.Товар;
			Строчка.НоменклатураНаименование   = ВыборкаСтрокТовары.НоменклатураНаименование  + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
		ИначеЕсли ЗначениеЗаполнено(ВыборкаСтрокТовары.ОбъектСтроительства) Тогда
			Строчка.Товар               = ВыборкаСтрокТовары.ОбъектСтроительства;
			Строчка.НоменклатураНаименование   = ВыборкаСтрокТовары.ОбъектСтроительстваНаименование;
		КонецЕсли;
		Строчка.СтранаПроисхождения = ВыборкаСтрокТовары.СтранаПроисхождения;
		Строчка.ПредставлениеСтраны = ?(Не ЗначениеЗаполнено(ВыборкаСтрокТовары.ПредставлениеСтраны), ВыборкаСтрокТовары.СтранаПроисхождения, ВыборкаСтрокТовары.ПредставлениеСтраны);
		Строчка.НомерГТД            = ВыборкаСтрокТовары.НомерГТД;
		Строчка.ПредставлениеГТД    = ВыборкаСтрокТовары.ПредставлениеГТД;
		Строчка.Количество          = ВыборкаСтрокТовары.Количество;
		Строчка.ЕдиницаИзмерения    = ВыборкаСтрокТовары.ЕдиницаИзмерения;
		Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
		Строчка.Цена      = ВыборкаСтрокТовары.Цена;
		Строчка.СтавкаНДС = ВыборкаСтрокТовары.СтавкаНДС;
		Строчка.СуммаНДС  = ВыборкаСтрокТовары.СуммаНДС;
		Строчка.Сумма     = ВыборкаСтрокТовары.Сумма;
		Строчка.КодТНВЭД  = ВыборкаСтрокТовары.КодТНВЭД;
	КонецЦикла;
	
	Если Не ЕстьТовары Тогда
		ДанныеДляПечати.Грузоотправитель = "";
		ДанныеДляПечати.Грузополучатель = "";		
	КонецЕсли;

	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;
КонецФункции

// Функция собирает данные по документу основанию ВозвратТоваровПоставщику и 
// структуру с данными
// 
Функция СобратьДанныеПоВозвратуТоваров(ДокОснование,СсылкаНаОбъект)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организация,
	|	Организация КАК Покупатель,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Грузополучатель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА Организация 
	|		ИНАЧЕ Грузополучатель 
	|	КОНЕЦ КАК Грузополучатель,
	|	Подразделение,
	|	Контрагент       КАК Поставщик,
	|	""он же""        КАК Грузоотправитель,
	|	СуммаДокумента   КАК Сумма,
	|	ВалютаДокумента  КАК Валюта,
	|	УчитыватьНДС     КАК УчитыватьНДС,
	|	СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ДоговорКонтрагента.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка = &ДокументОснование";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"Грузоотправитель","НеИспользуется, 
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Грузоотправитель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА ""он же"" 
	|		ИНАЧЕ Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель");
	
	ЗапросПоТоварам=Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("Курс", ДокОснование.КурсВзаиморасчетов);
	ЗапросПоТоварам.УстановитьПараметр("Кратность", ДокОснование.КратностьВзаиморасчетов);
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ДокОснование.Ссылка);
	ЗапросПоТоварам.Текст="
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.Товар,
	|	ВложенныйЗапрос.Товар.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВложенныйЗапрос.СтранаПроисхождения,
	|	ВложенныйЗапрос.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.НомерГТД.Представление КАК ПредставлениеГТД,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Сумма,
	|	ВложенныйЗапрос.СуммаНДС,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.ДокументПоступления
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаПоТоварам.НомерСтроки КАК НомерСтроки,
	|		ТаблицаПоТоварам.Номенклатура КАК Товар,
	|		ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД КАК НомерГТД,
	|		ТаблицаПоТоварам.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		СУММА(ТаблицаПоТоварам.Количество) КАК Количество,
	|		-ТаблицаПоТоварам.Цена КАК Цена,
	|		-ТаблицаПоТоварам.Сумма КАК Сумма,
	|		-ТаблицаПоТоварам.СуммаНДС КАК СуммаНДС,
	|		ТаблицаПоТоварам.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаПоТоварам.ХарактеристикаНоменклатуры КАК Характеристика,
	|		ТаблицаПоТоварам.СерияНоменклатуры КАК Серия,
	|		ТаблицаПоТоварам.ДокументПоступления КАК ДокументПоступления
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаПоТоварам
	|	ГДЕ
	|		ТаблицаПоТоварам.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаПоТоварам.НомерСтроки,
	|		ТаблицаПоТоварам.Номенклатура,
	|		ТаблицаПоТоварам.ЕдиницаИзмерения,
	|		ТаблицаПоТоварам.СтавкаНДС,
	|		ТаблицаПоТоварам.Цена,
	|		ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения,
	|		ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД,
	|		ТаблицаПоТоварам.ХарактеристикаНоменклатуры,
	|		ТаблицаПоТоварам.СерияНоменклатуры,
	|		ТаблицаПоТоварам.Сумма,
	|		ТаблицаПоТоварам.СуммаНДС,
	|		ТаблицаПоТоварам.ДокументПоступления) КАК ВложенныйЗапрос
	|";	
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ВыборкаСтрокТовары=ЗапросПоТоварам.Выполнить().Выбрать();

	ДанныеДляПечати=Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            СсылкаНаОбъект.Номер);
	ДанныеДляПечати.Вставить("Дата",             СсылкаНаОбъект.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Подразделение",    Шапка.Подразделение);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );
	ДанныеДляПечати.Вставить("ИдентификаторГосКонтракта", "");

	Товары = ИнициализацияТаблицыСтрок();

	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл
		Если Не ЗначениеЗаполнено(ВыборкаСтрокТовары.ДокументПоступления) Тогда
			Строчка=Товары.Добавить();
			Строчка.Товар               = ВыборкаСтрокТовары.Товар;
			Строчка.НоменклатураНаименование   = ВыборкаСтрокТовары.НоменклатураНаименование  + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
			Строчка.СтранаПроисхождения = ВыборкаСтрокТовары.СтранаПроисхождения;
			Строчка.ПредставлениеСтраны = ?(Не ЗначениеЗаполнено(ВыборкаСтрокТовары.ПредставлениеСтраны), ВыборкаСтрокТовары.СтранаПроисхождения, ВыборкаСтрокТовары.ПредставлениеСтраны);
			Строчка.НомерГТД            = ВыборкаСтрокТовары.НомерГТД;
			Строчка.ПредставлениеГТД    = ВыборкаСтрокТовары.ПредставлениеГТД;
			Строчка.Количество          = ВыборкаСтрокТовары.Количество;
			Строчка.ЕдиницаИзмерения    = ВыборкаСтрокТовары.ЕдиницаИзмерения;
			Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
			Строчка.Цена      = ВыборкаСтрокТовары.Цена;
			Строчка.СтавкаНДС = ВыборкаСтрокТовары.СтавкаНДС;
			Строчка.СуммаНДС  = ВыборкаСтрокТовары.СуммаНДС;
			Строчка.Сумма     = ВыборкаСтрокТовары.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;
КонецФункции

// Функция собирает данные по документу основанию ВозвратТоваровОтПокупателя и структуру с данными
// 
Функция СобратьДанныеПоВозвратуТоваровОтПокупателя(ДокОснование,СсылкаНаОбъект)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организация,
	|	Организация           КАК Покупатель,
	|	Организация КАК Грузополучатель,
	|	Подразделение,
	|	Контрагент            КАК Поставщик,
	|	""он же"" КАК Грузоотправитель,
	|	СуммаДокумента        КАК Сумма,
	|	ВалютаДокумента       КАК Валюта,
	|	УчитыватьНДС          КАК УчитыватьНДС,
	|	СуммаВключаетНДС      КАК СуммаВключаетНДС,
	|	ДоговорКонтрагента.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Ссылка = &ДокументОснование
	|";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос= Новый Запрос();
	Запрос.УстановитьПараметр("Курс", ДокОснование.КурсВзаиморасчетов);
	Запрос.УстановитьПараметр("Кратность", ДокОснование.КратностьВзаиморасчетов);
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокОснование.Ссылка);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателяТовары.НомерСтроки КАК НомерСтроки,
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Товар,
	|	ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК НоменклатураНаименование,
	|	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.СтранаПроисхождения.НаименованиеПолное КАК СТРОКА(1000)) КАК ПредставлениеСтраны,
	|	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.НомерГТД КАК НомерГТД,
	|	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.НомерГТД.Представление КАК ПредставлениеГТД,
	|	ВозвратТоваровОтПокупателяТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество,
	|	ВозвратТоваровОтПокупателяТовары.Цена КАК Цена,
	|	ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
	|	ВозвратТоваровОтПокупателяТовары.СуммаНДС КАК СуммаНДС,
	|	ВозвратТоваровОтПокупателяТовары.СтавкаНДС КАК СтавкаНДС,
	|	ВозвратТоваровОтПокупателяТовары.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры КАК Серия
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|ГДЕ
	|	ВозвратТоваровОтПокупателяТовары.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровОтПокупателяТовары.НомерСтроки,
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	|	ВозвратТоваровОтПокупателяТовары.ЕдиницаИзмерения,
	|	ВозвратТоваровОтПокупателяТовары.СтавкаНДС,
	|	ВозвратТоваровОтПокупателяТовары.Цена,
	|	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.СтранаПроисхождения,
	|	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.НомерГТД,
	|	ВозвратТоваровОтПокупателяТовары.ХарактеристикаНоменклатуры,
	|	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры,
	|	ВозвратТоваровОтПокупателяТовары.Сумма,
	|	ВозвратТоваровОтПокупателяТовары.СуммаНДС,
	|	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.НомерГТД.Представление,
	|	ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)),
	|	ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.СтранаПроисхождения.НаименованиеПолное КАК СТРОКА(1000))
	|";
	ВыборкаСтрокТовары = Запрос.Выполнить().Выбрать();
	
	ДанныеДляПечати=Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            СсылкаНаОбъект.Номер);
	ДанныеДляПечати.Вставить("Дата",             СсылкаНаОбъект.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Подразделение",    Шапка.Подразделение);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );
	ДанныеДляПечати.Вставить("ИдентификаторГосКонтракта", "");

	Товары = ИнициализацияТаблицыСтрок();

	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл
		Строчка = Товары.Добавить();
		Строчка.Товар               = ВыборкаСтрокТовары.Товар;
		Строчка.НоменклатураНаименование   = СокрЛП(ВыборкаСтрокТовары.Товар.НаименованиеПолное) + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
		Строчка.СтранаПроисхождения = ВыборкаСтрокТовары.СтранаПроисхождения;
		Строчка.ПредставлениеСтраны = ?(НЕ ЗначениеЗаполнено(СокрЛП(ВыборкаСтрокТовары.ПредставлениеСтраны)), ВыборкаСтрокТовары.СтранаПроисхождения, СокрЛП(ВыборкаСтрокТовары.ПредставлениеСтраны));
		Строчка.НомерГТД            = ВыборкаСтрокТовары.НомерГТД;
		Строчка.ПредставлениеГТД    = СокрЛП(ВыборкаСтрокТовары.ПредставлениеГТД);
		Строчка.Количество          = ВыборкаСтрокТовары.Количество;
		Строчка.ЕдиницаИзмерения    = ВыборкаСтрокТовары.ЕдиницаИзмерения;
		Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
		Строчка.Цена      = ВыборкаСтрокТовары.Цена;
		Строчка.СтавкаНДС = ВыборкаСтрокТовары.СтавкаНДС;
		Строчка.СуммаНДС  = ВыборкаСтрокТовары.СуммаНДС;
		Строчка.Сумма     = ВыборкаСтрокТовары.Сумма;
	КонецЦикла;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;
КонецФункции

// Функция собирает данные по документу основанию Поступление Доп. расходов и структуру с данными
// 
Функция СобратьДанныеДопРасходам(ДокОснование,СсылкаНаОбъект)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.Текст ="
	|	ВЫБРАТЬ
	|	ИсточникДанных.Ссылка.Организация,
	|	ИсточникДанных.Ссылка.Организация 	   КАК Покупатель,
	|	ИсточникДанных.Ссылка.Подразделение,
	|	ИсточникДанных.Ссылка.Контрагент  	   КАК Поставщик,
	|	ИсточникДанных.Содержание         	   КАК СтатьяЗатрат,
	|	ИсточникДанных.Ссылка.ВалютаДокумента  КАК Валюта,
	|	ИсточникДанных.Ссылка.СуммаДокумента   КАК СуммаДокумента,
	|	ИсточникДанных.СуммаНДС КАК СуммаНДС,
	|	ИсточникДанных.СтавкаНДС,
	|	ИсточникДанных.Ссылка.УчитыватьНДС     КАК УчитыватьНДС,
	|	ИсточникДанных.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.РаспределяемыеУслуги КАК ИсточникДанных
	|
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ДокументОснование
	|";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ДанныеДляПечати=Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            СсылкаНаОбъект.Номер);
	ДанныеДляПечати.Вставить("Дата",             СсылкаНаОбъект.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", );
	ДанныеДляПечати.Вставить("Подразделение",    Шапка.Подразделение);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  );
	ДанныеДляПечати.Вставить("Сумма",            0);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );
	ДанныеДляПечати.Вставить("ИдентификаторГосКонтракта", "");

	Товары=ИнициализацияТаблицыСтрок();

	Строчка=Товары.Добавить();
	Строчка.Товар               = Шапка.СтатьяЗатрат;
	Строчка.НоменклатураНаименование   = Шапка.СтатьяЗатрат;
	Строчка.СтранаПроисхождения = "";
	Строчка.ПредставлениеСтраны = "";
	Строчка.НомерГТД            = "";
	Строчка.ПредставлениеГТД    = "";
	Строчка.Количество          = 1;
	Строчка.ЕдиницаИзмерения    = "";
	Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
	Строчка.СтавкаНДС = Шапка.СтавкаНДС;
	Строчка.СуммаНДС  = Шапка.СуммаНДС;
	Строчка.Сумма     = Шапка.СуммаДокумента - ?(Шапка.СуммаВключаетНДС, 0, Шапка.СуммаНДС);
	Строчка.Цена      = Строчка.Сумма;

	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;
КонецФункции

// Функция собирает данные по документу основанию ОтражениеПоступленияТоваровУслугНДС и структуру с данными
// 
Функция СобратьДанныеПоОтражениеПоступленияТоваровУслугНДС(ДокОснование,СсылкаНаОбъект)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организация,
	|	Организация           КАК Покупатель,
	|	Организация           КАК Грузополучатель,
	|	Контрагент            КАК Поставщик,
	|	Контрагент            КАК Грузоотправитель,
	|	СуммаДокумента        КАК Сумма,
	|	ВалютаДокумента       КАК Валюта,
	|	ИСТИНА		          КАК УчитыватьНДС,
	|	ЛОЖЬ			      КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.ОтражениеПоступленияТоваровУслугНДС КАК ОтражениеПоступленияТоваровУслугНДС
	|
	|ГДЕ
	|	ОтражениеПоступленияТоваровУслугНДС.Ссылка = &ДокументОснование
	|";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос=Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект.ДокументОснование.Ссылка);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	НомерСтроки						КАК НомерСтроки,
	|	Номенклатура					КАК Товар,
	|	Номенклатура.НаименованиеПолное	КАК НоменклатураНаименование,
	|	Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	0           					КАК Количество,
	|	Сумма       					КАК Цена,
	|	Сумма       					КАК Сумма,
	|	СуммаНДС    					КАК СуммаНДС,
	|	СтавкаНДС   					КАК СтавкаНДС,
	|	СтранаПроисхождения,
	|	НомерГТД
	|ИЗ
	|	Документ.ОтражениеПоступленияТоваровУслугНДС.Товары КАК ТаблицаПоТоварамИУслугам
	|
	|ГДЕ
	|	ТаблицаПоТоварамИУслугам.Ссылка = &ТекущийДокумент
	|";	
	ВыборкаСтрокТовары=Запрос.Выполнить().Выбрать();
	
	ДанныеДляПечати=Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            СсылкаНаОбъект.Номер);
	ДанныеДляПечати.Вставить("Дата",             СсылкаНаОбъект.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );
	ДанныеДляПечати.Вставить("ИдентификаторГосКонтракта", "");

	Товары = ИнициализацияТаблицыСтрок();

	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл
		Строчка = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(Строчка, ВыборкаСтрокТовары);
		Строчка.СуммаВключаетНДС=Шапка.СуммаВключаетНДС;
	КонецЦикла;

	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;
КонецФункции

// Функция собирает данные по документу основанию АвансовыйОтчет и структуру с данными
// 
Функция СобратьДанныеПоАвансовыйОтчет(ДокОснование,СсылкаНаОбъект)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АвансовыйОтчет.Организация,
	|	АвансовыйОтчет.Организация КАК Покупатель,
	|	АвансовыйОтчет.Организация КАК Грузополучатель,
	|	ВложенныйЗапрос.Контрагент КАК Поставщик,
	|	ВложенныйЗапрос.Контрагент КАК Грузоотправитель,
	|	АвансовыйОтчет.ВалютаДокумента КАК Валюта,
	|	АвансовыйОтчет.УчитыватьНДС КАК УчитыватьНДС,
	|	АвансовыйОтчет.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет,
	|	(ВЫБРАТЬ
	|		Товары.Контрагент КАК Контрагент
	|	ИЗ
	|		Документ.АвансовыйОтчет.Товары КАК Товары
	|	ГДЕ
	|		Товары.СчетФактура = &Ссылка
	|		И Товары.Ссылка = &ДокументОснование
	|		И Товары.ПредъявленСФ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Товары.Контрагент
	|	ИЗ
	|		Документ.АвансовыйОтчет.Прочее КАК Товары
	|	ГДЕ
	|		Товары.СчетФактура = &Ссылка
	|		И Товары.Ссылка = &ДокументОснование) КАК ВложенныйЗапрос
	|ГДЕ
	|	АвансовыйОтчет.Ссылка = &ДокументОснование
	|";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос=Новый Запрос();
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ТаблицаПоТоварам.НомерСтроки,
	|	ТаблицаПоТоварам.Номенклатура КАК Товар,
	|	ТаблицаПоТоварам.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|	ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД КАК НомерГТД,
	|	ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД.Представление КАК ПредставлениеГТД,
	|	ТаблицаПоТоварам.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ТаблицаПоТоварам.Количество,
	|	ТаблицаПоТоварам.Цена,
	|	ТаблицаПоТоварам.Сумма,
	|	ТаблицаПоТоварам.СуммаНДС,
	|	ТаблицаПоТоварам.СтавкаНДС,
	|	1 КАК ID
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК ТаблицаПоТоварам
	|ГДЕ
	|	ТаблицаПоТоварам.Ссылка = &ДокументОснование
	|	И ТаблицаПоТоварам.СчетФактура = &Ссылка
	|	И ТаблицаПоТоварам.ПредъявленСФ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаПоПрочее.НомерСтроки,
	|	ТаблицаПоПрочее.Номенклатура,
	|	ТаблицаПоПрочее.Содержание,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ПустаяСсылка),
	|	""--"",
	|	""--"",
	|	""--"",
	|	""--"",
	|	0,
	|	0,
	|	ТаблицаПоПрочее.Сумма,
	|	ТаблицаПоПрочее.СуммаНДС,
	|	ТаблицаПоПрочее.СтавкаНДС,
	|	2
	|ИЗ
	|	Документ.АвансовыйОтчет.Прочее КАК ТаблицаПоПрочее
	|ГДЕ
	|	ТаблицаПоПрочее.Ссылка = &ДокументОснование
	|	И ТаблицаПоПрочее.СчетФактура = &Ссылка
	|	И ТаблицаПоПрочее.ПредъявленСФ
	|";
	ВыборкаСтрокТовары=Запрос.Выполнить().Выбрать();

	ДанныеДляПечати=Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            СсылкаНаОбъект.Номер);
	ДанныеДляПечати.Вставить("Дата",             СсылкаНаОбъект.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );
	ДанныеДляПечати.Вставить("ИдентификаторГосКонтракта", "");
	
	Товары=ИнициализацияТаблицыСтрок();
	
	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл
		Строчка=Товары.Добавить();
		ЗаполнитьЗначенияСвойств(Строчка, ВыборкаСтрокТовары);
		Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
		Строчка.ПредставлениеСтраны = ?(Не ЗначениеЗаполнено(ВыборкаСтрокТовары.ПредставлениеСтраны), ВыборкаСтрокТовары.СтранаПроисхождения, ВыборкаСтрокТовары.ПредставлениеСтраны);
	КонецЦикла;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;	
КонецФункции

// Проверяет правильность заполнения шапки документа.
// проставляет прочерки в незаполненных полях печатной формы счета-фактуры
//
Процедура ПроставитьПрочеркиВПустыеПоля(ОбластьМакета)

	Для т = 0 По ОбластьМакета.Параметры.Количество() - 1 Цикл
		
		ТекПараметр = ОбластьМакета.Параметры.Получить(т);
		
		Если (Найти(ТекПараметр, "Продавец:") <> 0) И (СокрЛП(ТекПараметр) = "Продавец:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Продавец: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Адрес:") <> 0) И (СокрЛП(ТекПараметр) = "Адрес:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Адрес: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Идентификационный номер продавца (ИНН):") <> 0)
			    и (СокрЛП(ТекПараметр) = "Идентификационный номер продавца (ИНН):") Тогда
			ОбластьМакета.Параметры.Установить(т, "Идентификационный номер продавца (ИНН): ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Грузоотправитель и его адрес:") <> 0)
			    и (СокрЛП(ТекПараметр) = "Грузоотправитель и его адрес:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Грузоотправитель и его адрес: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Грузополучатель и его адрес:") <> 0)
		   		и (СокрЛП(ТекПараметр) = "Грузополучатель и его адрес:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Грузополучатель и его адрес: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "К платежно-расчетному документу №") <> 0)
		   		и (СокрЛП(ТекПараметр) = "К платежно-расчетному документу №  от") Тогда
			ОбластьМакета.Параметры.Установить(т, "К платежно-расчетному документу № -- от --");
			
		ИначеЕсли (Найти(ТекПараметр, "Покупатель:") <> 0)
		   		и (СокрЛП(ТекПараметр) = "Покупатель:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Покупатель: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Идентификационный номер покупателя (ИНН):") <> 0)
			    и (СокрЛП(ТекПараметр) = "Идентификационный номер покупателя (ИНН):") Тогда
			ОбластьМакета.Параметры.Установить(т, "Идентификационный номер покупателя (ИНН): ----");
			
		ИначеЕсли Не ЗначениеЗаполнено(ТекПараметр) Тогда
			ОбластьМакета.Параметры.Установить(т, "--");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция Печать_СчетаФактуры(СтруктураПараметров, ДанныеДляПечати)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	ТабДокумент=Новый ТабличныйДокумент;
	//*** ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактураПолученный_СчетФактура283";
	Макет = ИнициализацияМакета(СтруктураПараметров, "СчетФактура2017");

	Если ДанныеДляПечати.Покупатель = Null Тогда
		Сообщить("В документе основании не указано юр./физ. лицо у организации.");
		Возврат Неопределено;
	КонецЕсли;
	Если ДанныеДляПечати.Поставщик = Неопределено Тогда
		Сообщить("В документе основании не указано юр./физ. лицо контрагента.");
		Возврат Неопределено;
	КонецЕсли;

	СведенияОбПокупателе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, СсылкаНаОбъект.Дата);
	СведенияОПоставщике  = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ДанныеДляПечати.Поставщик, СсылкаНаОбъект.Дата);
	СведенияОГрузоотправителе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(?(ДанныеДляПечати.Грузоотправитель = "он же", Неопределено, ДанныеДляПечати.Грузоотправитель), СсылкаНаОбъект.Дата);
	СведенияОГрузополучателе  = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ДанныеДляПечати.Грузополучатель, СсылкаНаОбъект.Дата);

	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	ОбластьМакета.Параметры.Номер = ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Счет-фактура");
	ДатаНачалаУказанияСокращенногоНаименованияПродавцаВСчетеФактуре = Константы.ДатаНачалаУказанияСокращенногоНаименованияПродавцаВСчетеФактуре.Получить();

	Если ДатаНачалаУказанияСокращенногоНаименованияПродавцаВСчетеФактуре <> '00010101'
		И ДатаНачалаУказанияСокращенногоНаименованияПродавцаВСчетеФактуре <= СсылкаНаОбъект.Дата Тогда
		ОбластьМакета.Параметры.ПредставлениеПоставщика = "Продавец: " + ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,") + 
		" (" + ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПоставщике, "Представление,") + ")";
	Иначе
		ОбластьМакета.Параметры.ПредставлениеПоставщика = "Продавец: " + ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
	КонецЕсли;
	ОбластьМакета.Параметры.АдресПоставщика               = "Адрес: "                                  + ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПоставщике,  "ЮридическийАдрес,");
	КПП = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
	Если ЗначениеЗаполнено(КПП) Тогда
		КПП = "/" + КПП;
	КонецЕсли;
	ОбластьМакета.Параметры.ИННпоставщика                 = "ИНН/КПП продавца: "                       + ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПоставщике,  "ИНН,", Ложь) + КПП;
	ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = "Грузоотправитель и его адрес: "           + ?(Не ЗначениеЗаполнено(ДанныеДляПечати.Грузоотправитель), "", ?(ДанныеДляПечати.Грузоотправитель = "он же", ДанныеДляПечати.Грузоотправитель, ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузоотправителе,  "ПолноеНаименование,ФактическийАдрес,")));
	ОбластьМакета.Параметры.ПредставлениеГрузополучателя  = "Грузополучатель и его адрес: "            + ?(Не ЗначениеЗаполнено(ДанныеДляПечати.Грузополучатель), "", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ФактическийАдрес,"));
	ОбластьМакета.Параметры.ПоДокументу                   = "К платежно-расчетному документу №  от: ";
	ОбластьМакета.Параметры.ПредставлениеПокупателя       = "Покупатель: "                             + ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбПокупателе, "ПолноеНаименование,");
	ОбластьМакета.Параметры.АдресПокупателя               = "Адрес: "                                  + ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбПокупателе, "ЮридическийАдрес,");
	КПП = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбПокупателе, "КПП,", Ложь);
	Если ЗначениеЗаполнено(КПП) Тогда
		КПП = "/" + КПП;
	КонецЕсли;
	ОбластьМакета.Параметры.ИННПокупателя                 = "ИНН/КПП покупателя: "                     + ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбПокупателе, "ИНН,", Ложь) + КПП;
	
	ПроставитьПрочеркиВПустыеПоля(ОбластьМакета);
	
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Строка");

	ИтогоСуммаНДС = 0;
	ИтогоВсего    = 0;

	ВыборкаСтрокТовары = ДанныеДляПечати.ТабличнаяЧасть;
	ВыборкаСтрокТовары.Колонки.Добавить("СуммаБезНДС");
	ВыборкаСтрокТовары.Колонки.Добавить("СуммаСНДС");
	Для Каждого Строчка Из ВыборкаСтрокТовары Цикл
		Строчка.СуммаСНДС = Строчка.Сумма + ?(Строчка.СуммаВключаетНДС, 0, Строчка.СуммаНДС);
		Если (Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120)
		 Или (Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118)
		 Или (Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110) Тогда
			Строчка.СуммаБезНДС = Строчка.СуммаСНДС;
		Иначе
			Строчка.СуммаБезНДС = Строчка.СуммаСНДС - Строчка.СуммаНДС;
		КонецЕсли;
	КонецЦикла;
	
	ВыборкаСтрокТовары.Свернуть("Товар, НоменклатураНаименование, СтранаПроисхождения, ПредставлениеСтраны, НомерГТД, ПредставлениеГТД, ЕдиницаИзмерения, Цена, СтавкаНДС, СтавкаНП", "Количество, Сумма, СуммаНДС, СуммаСНДС, СуммаБезНДС");

	Для Каждого Строчка Из ВыборкаСтрокТовары Цикл
		ОбластьМакета.Параметры.Заполнить(Строчка);

		Если Строчка.СтранаПроисхождения = Справочники.КлассификаторСтранМира.Россия Тогда
			ОбластьМакета.Параметры.ПредставлениеСтраны  = "--";
			ОбластьМакета.Параметры.ПредставлениеГТД = "--";
		КонецЕсли;

		Количество  = Строчка.Количество;
		СуммаНДС    = Строчка.СуммаНДС;
		СуммаСНДС 	= Строчка.СуммаСНДС;
		СуммаБезНДС = Строчка.СуммаБезНДС;

		ОбластьМакета.Параметры.Количество = Количество;
		ОбластьМакета.Параметры.Цена       = ?(Количество = 0, 0, СуммаБезНДС / Количество);
		ОбластьМакета.Параметры.СтоимостьБезНДС  = СуммаБезНДС;
		ОбластьМакета.Параметры.СуммаНДС   = СуммаНДС;
		ОбластьМакета.Параметры.СтоимостьСНДС      = СуммаСНДС;
		ОбластьМакета.Параметры.СтавкаНДС  = Строчка.СтавкаНДС;

		ИтогоСуммаНДС = ИтогоСуммаНДС + СуммаНДС;
		ИтогоВсего    = ИтогоВсего    + СуммаСНДС;
		
		Если ОбластьМакета.Параметры.ЕдиницаИзмерения = "--" 
			Или НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЕдиницаИзмерения) Тогда
			ОбластьМакета.Параметры.Количество = 0;
		КонецЕсли;
		
		ПроставитьПрочеркиВПустыеПоля(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.СуммаНДС = ИтогоСуммаНДС;
	ОбластьМакета.Параметры.СтоимостьСНДС    = ИтогоВСего;
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;
КонецФункции

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	Если Найти(СтруктураПараметров.ИмяМакета, "СчетФактура") <> 0 Тогда
		ДанныеДляПечати = Неопределено;
		
		Для Каждого СтрДокОснования Из СсылкаНаОбъект.ДокументыОснования Цикл
			// Получить экземпляр документа на печать
			Если Не ЗначениеЗаполнено(СтрДокОснования.ДокументОснование) Тогда
				Продолжить;
			ИначеЕсли Не СтрДокОснования.ДокументОснование.Проведен Тогда
				Продолжить;
			КонецЕсли;
			
			ТипОснования = ТипЗнч(СтрДокОснования.ДокументОснование);

			Если ТипОснования      = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
				ЭкземплярДанныхДляПечати = СобратьДанныеПоПоступлениюТоваров(СтрДокОснования.ДокументОснование,СсылкаНаОбъект);
			ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
				ЭкземплярДанныхДляПечати = СобратьДанныеПоВозвратуТоваров(СтрДокОснования.ДокументОснование,СсылкаНаОбъект);
			ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
				ЭкземплярДанныхДляПечати = СобратьДанныеПоВозвратуТоваровОтПокупателя(СтрДокОснования.ДокументОснование,СсылкаНаОбъект);
			ИначеЕсли ТипОснования = Тип("ДокументСсылка.КомиссияОтчетПродажиКомиссионера") Тогда
				ЭкземплярДанныхДляПечати = СобратьДанныеПоОтчетОПродажахКомиссионера(СтрДокОснования.ДокументОснование, СсылкаНаОбъект);
			ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПоступлениеДопРасходов") Тогда
				ЭкземплярДанныхДляПечати = СобратьДанныеДопРасходам(СтрДокОснования.ДокументОснование,СсылкаНаОбъект);
			ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОтражениеПоступленияТоваровУслугНДС") Тогда
				ЭкземплярДанныхДляПечати = СобратьДанныеПоОтражениеПоступленияТоваровУслугНДС(СтрДокОснования.ДокументОснование,СсылкаНаОбъект)
			ИначеЕсли ТипОснования = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
				ЭкземплярДанныхДляПечати = СобратьДанныеПоАвансовыйОтчет(СтрДокОснования.ДокументОснование,СсылкаНаОбъект)
			КонецЕсли;

			Если ЭкземплярДанныхДляПечати <> Неопределено Тогда
				Если ДанныеДляПечати = Неопределено Тогда
					ДанныеДляПечати = ЭкземплярДанныхДляПечати;
				Иначе
					Для Каждого СтрДанных Из ЭкземплярДанныхДляПечати Цикл
						Если СтрДанных.Ключ = "ТабличнаяЧасть" Тогда
							СтараяТабЧасть = ДанныеДляПечати.ТабличнаяЧасть;
							НоваяТабЧасть = СтрДанных.Значение;
							Для Каждого НоваяСтрокаТабЧасти Из НоваяТабЧасть Цикл
								СтрокаТабЧасти = СтараяТабЧасть.Добавить();
								Для Каждого ТекКол Из НоваяТабЧасть.Колонки Цикл
									Если СтараяТабЧасть.Колонки.Найти(ТекКол.Имя) <> Неопределено Тогда
										СтрокаТабЧасти[ТекКол.Имя] = НоваяСтрокаТабЧасти[ТекКол.Имя];
									КонецЕсли;
								КонецЦикла;
							КонецЦикла;
						Иначе
							Если Не ДанныеДляПечати.Свойство(СтрДанных.Ключ) Тогда
								// Если данный параметр для печати шапки документа еще не  определен - то определяем его
								ДанныеДляПечати.Вставить(СтрДанных.Ключ, СтрДанных.Значение);
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
			
		Если ТипЗнч(ДанныеДляПечати) = Тип("Соответствие") Тогда
			Возврат Неопределено;
		ИначеЕсли ДанныеДляПечати = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;

		ТабДокумент=Печать_СчетаФактуры(СтруктураПараметров, ДанныеДляПечати);
			
	КонецЕсли;

	Возврат ТабДокумент;
КонецФункции