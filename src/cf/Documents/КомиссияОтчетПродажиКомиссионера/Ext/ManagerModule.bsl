////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("Накладная", "Отчет комиссионера");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция Печать_ОтчетКомиссионера(СтруктураПараметров)

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	ДоговорКонтрагента,
	|	Контрагент,
	|	Организация,
	|	СуммаДокумента,
	|	ВалютаДокумента,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС,
	|	Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		КоличествоМест,
	|		Количество,
	|		ЕдиницаИзмеренияМест.Представление  КАК ЕдиницаИзмеренияМест,
	|		ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмерения,
	|		Цена,
	|		Сумма,
	|		СуммаВознаграждения КАК Вознаграждение,
	|		СуммаНДС,
	|		ХарактеристикаНоменклатуры КАК Характеристика,
	|		СерияНоменклатуры КАК Серия
	|	)
	|ИЗ
	|	Документ.КомиссияОтчетПродажиКомиссионера КАК КомиссияОтчетПродажиКомиссионера
	|
	|ГДЕ
	|	КомиссияОтчетПродажиКомиссионера.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки
	|";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КомиссияОтчетПродажиКомиссионера_Накладная";

	Макет = ИнициализацияМакета(СтруктураПараметров, "Накладная");

	// Выводим шапку накладной

	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(СтруктураПараметров.СсылкаНаОбъект, "Отчет комиссионера");
	ТабДокумент.Вывести(ОбластьМакета);

	ПредставлениеОрганизации = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ПолноеНаименование,");
	ПредставлениеКонтрагента = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата), "ПолноеНаименование,");

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеОрганизации;
	ОбластьМакета.Параметры.Поставщик = Шапка.Организация;
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеКонтрагента;
	ОбластьМакета.Параметры.Получатель = Шапка.Контрагент;
	ТабДокумент.Вывести(ОбластьМакета);

	тзТовары=Шапка.Товары.Выгрузить();
	ФлагПечатиМест = (тзТовары.Итог("КоличествоМест") > 0);
	ОбластьМакета  = Макет.ПолучитьОбласть("ШапкаТаблицы" + ?(ФлагПечатиМест, "Мест", ""));
	ОбластьСтроки  = Макет.ПолучитьОбласть("Строка"       + ?(ФлагПечатиМест, "Мест", ""));

	ТабДокумент.Вывести(ОбластьМакета);

	Сумма    = 0;
	СуммаНДС = 0;

	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьСтроки.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьСтроки.Параметры.Товар = ВыборкаСтрокТовары.Товар + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
		ТабДокумент.Вывести(ОбластьСтроки);

		Сумма    = Сумма    + ВыборкаСтрокТовары.Сумма;
		СуммаНДС = СуммаНДС + ВыборкаСтрокТовары.СуммаНДС;
	КонецЦикла;

	// Вывести Итого
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Всего = ОбщегоНазначения.ФорматСумм(Шапка.СуммаДокумента);
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести ИтогоНДС
	Если Шапка.УчитыватьНДС тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначения.ФорматСумм(тзТовары.Итог("СуммаНДС"));
		ОбластьМакета.Параметры.НДС = ?(Шапка.СуммаВключаетНДС, "В том числе НДС:", "Сумма НДС:");
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;

	// Вывести Сумму прописью
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	СуммаКПрописи = Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
	ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + ВыборкаСтрокТовары.Количество()
	+ ", на сумму " + ОбщегоНазначения.ФорматСумм(СуммаКПрописи, Шапка.ВалютаДокумента);
	ОбластьМакета.Параметры.СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента);
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести подписи
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции 

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	Если СтруктураПараметров.ИмяМакета="Накладная" Тогда
		ТабДокумент=Печать_ОтчетКомиссионера(СтруктураПараметров);
	КонецЕсли;
	Возврат ТабДокумент;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Подготовка таблиц для проведения

Функция КоэффициентПересчета(СтруктураШД)
	Если Не СтруктураШД.ВалютаДокумента=МодульВалютногоУчета.ПолучитьВалюту("Бух") Тогда
		Если Число(СтруктураШД.КурсДокумента)=0 Или Число(СтруктураШД.КратностьДокумента)=0 Тогда
			Возврат 1;
		КонецЕсли;
		Возврат СтруктураШД.КурсДокумента/СтруктураШД.КратностьДокумента;
	КонецЕсли;
	Возврат 1; 
КонецФункции

Функция СформироватьСтруктуруШД(ДокументСсылка) Экспорт
	мдОбъект=ДокументСсылка.Метаданные();

	СтруктураШД=Новый Структура;
	СтруктураШД.Вставить("Ссылка", ДокументСсылка);
	СтруктураШД.Вставить("ВидДокумента", мдОбъект.Имя);
	СтруктураШД.Вставить("ВалютаУправленческогоУчета", МодульВалютногоУчета.ПолучитьВалюту("Упр"));
	СтруктураШД.Вставить("ВалютаРегламентированногоУчета", МодульВалютногоУчета.ПолучитьВалюту("Бух"));

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ВалютаБухУчета", СтруктураШД.ВалютаРегламентированногоУчета);
	Запрос.Текст="
	|ВЫБРАТЬ *,
	|	ИсточникДанных.ДоговорКонтрагента.ДопУсловияДоговора Как ДопУсловияДоговора,
	|	ИсточникДанных.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ИсточникДанных.ДоговорКонтрагента.Организация КАК ДоговорОрганизация,
	|	ИсточникДанных.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	ИсточникДанных.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ИсточникДанных.ДоговорКонтрагента.ВидАгентскогоДоговора КАК ВидАгентскогоДоговора,
	|	ИсточникДанных.ДоговорКонтрагента.НалоговыйАгентПоОплате КАК НалоговыйАгентПоОплате,
	|
	|	ВЫБОР КОГДА ИсточникДанных.ВалютаДокумента = &ВалютаБухУчета
	|	Тогда 1
	|	Иначе ИсточникДанных.КурсВзаиморасчетов
	|	Конец КАК КурсВалютыУправленческогоУчета,
 	|
	|	ВЫБОР КОГДА ИсточникДанных.ВалютаДокумента = &ВалютаБухУчета
	|	Тогда 1
	|	Иначе ИсточникДанных.КратностьВзаиморасчетов
	|	Конец КАК КратностьВалютыУправленческогоУчета,
	| 
	|	ВЫБОР КОГДА ИсточникДанных.ВалютаДокумента = &ВалютаБухУчета
	|	Тогда 1
	|	Иначе ИсточникДанных.КурсВзаиморасчетов
	|	Конец КАК КурсДокумента,
	|
	|	ВЫБОР КОГДА ИсточникДанных.ВалютаДокумента = &ВалютаБухУчета
	|	Тогда 1
	|	Иначе ИсточникДанных.КратностьВзаиморасчетов
	|	Конец КАК КратностьДокумента
	|
	|ИЗ
	|	Документ."+мдОбъект.Имя+" КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ДокументСсылка
	|";
	тзДанныеДокумента=Запрос.Выполнить().Выгрузить();
	Для каждого Колонка Из тзДанныеДокумента.Колонки Цикл
		СтруктураШД.Вставить(Колонка.Имя, тзДанныеДокумента[0][Колонка.Имя]);	
	КонецЦикла;
	СтруктураШД.Вставить("УчетнаяПолитика", ОбщегоНазначенияСервер.ПараметрыУчетнойПолитики(СтруктураШД.Организация, СтруктураШД.Дата));
	СтруктураШД.Вставить("КоэффициентПересчета", КоэффициентПересчета(СтруктураШД));
	СтруктураШД.Вставить("Склад", Справочники.Склады.ПустаяССылка()); 
	СтруктураШД.Вставить("СуммаНДСВознаграждения", УчетНалоговСервер.РассчитатьСуммуНДС(СтруктураШД.СуммаВознаграждения, СтруктураШД.УчитыватьНДС, СтруктураШД.СуммаВключаетНДС, УчетНалоговСервер.СтавкаНДС(СтруктураШД.СтавкаНДСВознаграждения)));

	Возврат СтруктураШД;
КонецФункции

Функция СформироватьТаблицу_Товары(СтруктураШД)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШД.Ссылка);
	Запрос.УстановитьПараметр("ВидТабличнойЧасти", "Товары");
	Запрос.Текст="
	|ВЫБРАТЬ
	|	*,
	|	ИсточникДанных.Ссылка.Организация Как Организация,
	|	ИсточникДанных.Ссылка.Контрагент Как Контрагент,
	|	ИсточникДанных.Ссылка.ДоговорКонтрагента Как ДоговорКонтрагента,
	|	ИсточникДанных.Ссылка.Подразделение Как Подразделение,
	|	Истина Как Активность,
	|	&ВидТабличнойЧасти,
	|
	//*** |	Неопределено Как СчетУчетаНДС,
	|	Неопределено Как ВидЦенности,
	|	0 Как СуммаБезНДС,
	|	0 Как СуммаСНДС,
	|	0 Как Стоимость,
	|	0 Как СтоимостьНУ,
	|	0 Как НДС,
	|	Себестоимость Как СтоимостьСписаниеУУ,
	
	|	0 СуммаСНДСПередачи,
	|	0 СуммаВзаиморасчетовПередачи,
	|	0 СуммаВзаиморасчетов,
	|	0 Как ВознаграждениеСНДС,
	|	ИсточникДанных.Сумма Как ПроводкаСумма,
	|	ИсточникДанных.СуммаНДС Как ПроводкаСуммаНДС,
	
	|	ИсточникДанных.НомерСтроки Как НомерСтрокиТабличнойЧасти,
	|
	|	ИсточникДанных.Номенклатура Как Ценность,
	|	ИсточникДанных.Номенклатура.Услуга Как Услуга,
	|	ИсточникДанных.Номенклатура.Набор Как Набор,
	|	ИсточникДанных.Номенклатура.Комплект Как Комплект,	
	|	ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков Как ЕдиницаИзмерения,
	|	ИсточникДанных.Номенклатура.ВестиУчетПоХарактеристикам Как ВестиУчетПоХарактеристикам,
	|	ИсточникДанных.Номенклатура.ВестиПартионныйУчетПоСериям Как ВестиПартионныйУчетПоСериям,
	|	ИсточникДанных.Номенклатура.ВестиУчетПоСериям Как УчетПоСериям,
	|	ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент Как ЕдиницаХраненияОстатковКоэффициент,
	|
	|	ИсточникДанных.Количество Как КоличествоДок,
	|	ИсточникДанных.Количество Как КоличествоВЕдиницахДокумента,

	|	ИсточникДанных.Количество * ИсточникДанных.Коэффициент/ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент Как Количество
	|
	|ИЗ
	|	Документ."+СтруктураШД.ВидДокумента+".Товары КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ДокументСсылка
	|";
	Возврат тзДанные_Обработать(Запрос, СтруктураШД, "Товары");
КонецФункции

Функция СформироватьТаблицу_Услуги(СтруктураШД)
 	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СтруктураШД.Ссылка);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	СУММА(ИсточникДанных.СуммаВознаграждения) КАК Сумма,
	|	СУММА(ИсточникДанных.СуммаНДСВознаграждения) КАК НДС,
	|	ИсточникДанных.Ссылка.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ИсточникДанных.Ссылка.СтатьяЗатрат,
	|	ИсточникДанных.Ссылка.НоменклатурнаяГруппаЗатрат Как НоменклатурнаяГруппа,
	|	ИсточникДанных.Ссылка.Подразделение,
	|	ИсточникДанных.ТОП
	|ИЗ
	|	Документ."+СтруктураШД.ВидДокумента+".Товары КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.Ссылка.СтавкаНДСВознаграждения,
	|	ИсточникДанных.Ссылка.СтатьяЗатрат,
	|	ИсточникДанных.Ссылка.НоменклатурнаяГруппаЗатрат,
	|	ИсточникДанных.Ссылка.Подразделение,
	|	ИсточникДанных.ТОП
	|";
	тзДанные=Запрос.Выполнить().Выгрузить();
	ВзаиморасчетыСервер.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(тзДанные, СтруктураШД, СтруктураШД.НДСВключенВСтоимость);
	УчетНДС.ДобавитьСчетУчетаНДС(тзДанные);
	Возврат тзДанные;
КонецФункции 

Функция СформироватьТаблицу_Деньги(СтруктураШД)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШД.Ссылка);
	Запрос.УстановитьПараметр("ВидТабличнойЧасти", "Товары");
	Запрос.Текст="
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	Документ."+СтруктураШД.ВидДокумента+".ДенежныеСредства КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ДокументСсылка
	|";
	Возврат Запрос.Выполнить().Выгрузить(); 	
КонецФункции

Функция ПодготовитьТаблицыДокумента(СтруктураШД, Отказ) Экспорт
	СтруктураТД=Новый Структура;
	СтруктураТД.Вставить("Товары", СформироватьТаблицу_Товары(СтруктураШД));
	СтруктураТД.Вставить("Услуги", СформироватьТаблицу_Услуги(СтруктураШД));
	СтруктураТД.Вставить("Деньги", СформироватьТаблицу_Деньги(СтруктураШД));

	Возврат СтруктураТД;
КонецФункции

Функция тзДанные_Обработать(Запрос, СтруктураШД, стрВидТабличнойЧасти="Товары")
	тзСсылка=Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаКоллекции Из тзСсылка Цикл
		СтрокаКоллекции.Сумма=Окр(СтрокаКоллекции.Сумма*СтруктураШД.КоэффициентПересчета, 2);
		СтрокаКоллекции.СуммаНДС=Окр(СтрокаКоллекции.СуммаНДС*СтруктураШД.КоэффициентПересчета, 2);
		СтрокаКоллекции.СуммаБезНДС=СтрокаКоллекции.Сумма-?(СтруктураШД.УчитыватьНДС  И СтруктураШД.СуммаВключаетНДС, СтрокаКоллекции.СуммаНДС, 0);
		СтрокаКоллекции.СуммаСНДС=СтрокаКоллекции.Сумма+?(СтруктураШД.УчитыватьНДС И НЕ СтруктураШД.СуммаВключаетНДС, СтрокаКоллекции.СуммаНДС, 0);
		СтрокаКоллекции.Стоимость=СтрокаКоллекции.Сумма;
		СтрокаКоллекции.НДС=СтрокаКоллекции.СуммаНДС; //***

		Если СтруктураШД.УчетАгентскогоНДС Тогда // Это агентский НДС - для него применяется специальный вид ценности.
			СтрокаКоллекции.ВидЦенности=?(СтруктураШД.ВидАгентскогоДоговора=Перечисления.ВидыАгентскихДоговоров.Аренда, Перечисления.ВидыЦенностей.НалоговыйАгентАренда, Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
		Иначе
			СтрокаКоллекции.ВидЦенности=?(СтрокаКоллекции.Услуга, Перечисления.ВидыЦенностей.ПрочиеРаботыИУслуги, Перечисления.ВидыЦенностей.Товары);
		КонецЕсли;
	КонецЦикла;
	Если стрВидТабличнойЧасти="Товары" Тогда
		СтрокаКоллекции.ВознаграждениеСНДС = СтрокаКоллекции.СуммаВознаграждения + ?(СтруктураШД.УчитыватьНДС И (Не СтруктураШД.СуммаВключаетНДС), СтрокаКоллекции.СуммаНДСВознаграждения, 0);
		СтрокаКоллекции.СуммаСНДСПередачи = СтрокаКоллекции.СуммаПередачи + ?(СтруктураШД.УчитыватьНДС И (Не СтруктураШД.СуммаВключаетНДС), СтрокаКоллекции.СуммаНДСПередачи, 0);
		СтрокаКоллекции.СуммаВзаиморасчетов=Окр(СтрокаКоллекции.СуммаСНДС*СтруктураШД.КоэффициентПересчета, 2);
		
		Если Не Константы.ИспользоватьСерииНоменклатуры.Получить() Тогда
			тзСсылка.ЗаполнитьЗначения(Неопределено, "СерияНоменклатуры");
		КонецЕсли;
		
		УчетНДС.ДобавитьСчетУчетаНДС(тзСсылка);
	КонецЕсли;
	Возврат тзСсылка;
КонецФункции
