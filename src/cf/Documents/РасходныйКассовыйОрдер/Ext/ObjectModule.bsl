Процедура ЗаполнитьПоВзаиморасчетамСПодотчетнымЛицом(СтрокаПлатеж) Экспорт
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Организация", Организация.ГоловнаяОрганизация);
	Запрос.Текст="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СуммаОстаток КАК СуммаПлатежа
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Остатки(,ФизЛицо = &Контрагент И Организация = &Организация)
	|ГДЕ
	|	СуммаОстаток < 0
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СтрокаПлатеж.СуммаПлатежа=-Выборка.СуммаПлатежа;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьПоПКО()
	Если ДокументОснование.ВидОперации=Перечисления.ВидыОперацийПКО.ОплатаПокупателя Тогда
		ВидОперации=Перечисления.ВидыОперацийРКО.ВозвратДенежныхСредствПокупателю;

		Для Каждого СтрокаОснование ИЗ ДокументОснование.РасшифровкаПлатежа Цикл
			СтрокаПлатеж=РасшифровкаПлатежа.Добавить();
			СтрокаПлатеж.ДоговорКонтрагента=СтрокаОснование.ДоговорКонтрагента;
			СтрокаПлатеж.СуммаПлатежа=СтрокаОснование.СуммаПлатежа;
			СтрокаПлатеж.СтавкаНДС=СтрокаОснование.СтавкаНДС;
			СтрокаПлатеж.ID=Новый УникальныйИдентификатор;
		КонецЦикла;
		СуммаДокумента=РасшифровкаПлатежа.Итог("СуммаПлатежа");
		ДенежныеСредстваСервер.ЗаполнитьРеквизитыРасчетногоДокумента(ЭтотОбъект, ДополнительныеСвойства.ВалютаБухУчета, РасшифровкаПлатежа);
	Иначе
		ВидОперации=Перечисления.ВидыОперацийРКО.РасходДенежныхСредствПрочее;
	КонецЕсли;	
КонецПроцедуры

Процедура ЗаполнитьПоляВыдатьПоДокументу(СсылкаРаботник) Экспорт
	стрДокументВид=Справочники.ДокументыУдостоверяющиеЛичность.ПАСПОРТ_РОССИИ;
	Если ЗначениеЗаполнено(СсылкаРаботник.ОсновнойПаспорт) Тогда
		стрДокументВид=СсылкаРаботник.ОсновнойПаспорт;
	КонецЕсли;	

    Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаРаботник);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ДокументВид", стрДокументВид);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ФИО.Фамилия ЕСТЬ NULL
	|			ТОГДА ФизическиеЛица.Наименование
	|		ИНАЧЕ ФИО.Фамилия+"" ""+ФИО.Имя+"" ""+ФИО.Отчество
	|	КОНЕЦ КАК ФИО,
	|	ПаспортныеДанные.ДокументВид КАК ДокументВид,
	|	ПаспортныеДанные.ДокументСерия КАК ДокументСерия,
	|	ПаспортныеДанные.ДокументНомер КАК ДокументНомер,
	|	ПаспортныеДанные.ДокументДатаВыдачи КАК ДокументДатаВыдачи,
	|	ПаспортныеДанные.ДокументКемВыдан КАК ДокументКемВыдан
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &Ссылка) КАК ФИО
	|		ПО ФизическиеЛица.Ссылка = ФИО.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&Дата, ФизЛицо = &Ссылка И ДокументВид = &ДокументВид) КАК ПаспортныеДанные
	|		ПО ФизическиеЛица.Ссылка = ПаспортныеДанные.ФизЛицо
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Ссылка
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Выдать=Выборка.ФИО;
		Если НЕ Выборка.ДокументВид=NULL Тогда
			ПоДокументу=""+Выборка.ДокументВид+", серия "+Выборка.ДокументСерия+", номер "+Выборка.ДокументНомер+", выдан "+Формат(Выборка.ДокументДатаВыдачи,"ДФ='дд ММММ гггг';ДП='Не указано'")+" года "+Выборка.ДокументКемВыдан;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//

Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт
	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;
КонецФункции

Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	СуммаДокумента=РасшифровкаПлатежа.Итог("СуммаПлатежа");
	СуммаДокументаУСН=РасшифровкаПлатежа.Итог("СуммаУСН");

	Для каждого СтрокаКоллекции Из РасшифровкаПлатежа Цикл
		Если СтрокаКоллекции.Подразделение.Пустая() Тогда
			СтрокаКоллекции.Подразделение=Подразделение;
		КонецЕсли;
	КонецЦикла;

	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
// Проведение по регистрам

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ)
	// Движения по регистру "Денежные средства"
	ДвижениеПоРегистру_ДенежныеСредства(СтруктураШД, СтруктураТД, Отказ);
	
	// Движения по регистру "Движения денежных средств"
	ДвижениеПоРегистру_ДвиженияДенежныхСредств(СтруктураШД, СтруктураТД, Отказ);

	// Движения по регистру "Розничная выручка"
	ДвижениеПоРегистру_РозничнаяВыручка(СтруктураШД, СтруктураТД, Отказ);

	// Движения по регистру "Взаиморасчеты с подотчетными лицами"
	ДвижениеПоРегистру_ВзаиморасчетыСПодотчетнымиЛицами(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистру "Взаиморасчеты с контрагентами"
	ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистрам "КУДиР"
	ДвижениеПоРегистру_КнигаУчетаДоходовИРасходов(СтруктураШД, СтруктураТД, Отказ);
	
	ДвижениеПоРегистру_РасходыПриУСН(СтруктураШД, СтруктураТД, Отказ);
	
	//Движения по регистрам "Учет НДС"
	ДвижениеПоРегистру_УчетНДС(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ДвиженияДенежныхСредств(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ДвиженияДенежныхСредств") Тогда Возврат; КонецЕсли;
	тзДвижения=Движения.ДвиженияДенежныхСредств.ВыгрузитьКолонки();
	
	ПоОбъявлениюНаВзнос=Ложь;
	Если (НЕ ОбъявлениеНаВзносНаличными.Пустая()) И ВидОперации=Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк Тогда
		ПоОбъявлениюНаВзнос=Истина;
	КонецЕсли;
	ЭтоВзносНаличнымиВБанк=ВидОперации=Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк И НЕ ПоОбъявлениюНаВзнос;

	Для каждого СтрокаКоллекции Из СтруктураТД.Взаиморасчеты Цикл
		НоваяСтрока=тзДвижения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		Если Не ЗначениеЗаполнено(НоваяСтрока.Контрагент) Тогда
			НоваяСтрока.Контрагент=?(ЗначениеЗаполнено(СтрокаКоллекции.Сотрудник), СтрокаКоллекции.Сотрудник, Контрагент);	
		КонецЕсли;
		НоваяСтрока.ПриходРасход=Перечисления.ВидыДвиженийПриходРасход.Расход;
		НоваяСтрока.ВидДенежныхСредств=Перечисления.ВидыДенежныхСредств.Наличные;
		НоваяСтрока.БанковскийСчетКасса=Касса;
		НоваяСтрока.Сумма=СтрокаКоллекции.СуммаБух;
		НоваяСтрока.СуммаУпр=СтрокаКоллекции.СуммаВал;
		Если ЭтоВзносНаличнымиВБанк Тогда
			НоваяСтрока=тзДвижения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			Если Не ЗначениеЗаполнено(НоваяСтрока.Контрагент) Тогда
				НоваяСтрока.Контрагент=?(ЗначениеЗаполнено(СтрокаКоллекции.Сотрудник), СтрокаКоллекции.Сотрудник, Контрагент);	
			КонецЕсли;
			НоваяСтрока.ПриходРасход=Перечисления.ВидыДвиженийПриходРасход.Приход;
			НоваяСтрока.ВидДенежныхСредств=Перечисления.ВидыДенежныхСредств.Безналичные;
			НоваяСтрока.БанковскийСчетКасса=СчетОрганизации;
			НоваяСтрока.Сумма=СтрокаКоллекции.СуммаБух;
			НоваяСтрока.СуммаУпр=СтрокаКоллекции.СуммаВал;
		КонецЕсли;		
	КонецЦикла;

	тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(Организация, "Организация");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "ДокументДвижения");

	Движения.ДвиженияДенежныхСредств.Загрузить(тзДвижения);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ДенежныеСредства(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ДенежныеСредства") Тогда Возврат; КонецЕсли;
	
	ПоОбъявлениюНаВзнос=Ложь; Заголовок=ДополнительныеСвойства.Заголовок;
	Если (НЕ ОбъявлениеНаВзносНаличными.Пустая()) И ВидОперации=Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк Тогда
		ПоОбъявлениюНаВзнос = Истина;
	КонецЕсли;	

	тзДвижения=Движения.ДенежныеСредства.ВыгрузитьКолонки();

	НоваяСтрока=тзДвижения.Добавить();
	НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Расход;
	НоваяСтрока.ВидДенежныхСредств=Перечисления.ВидыДенежныхСредств.Наличные;
	НоваяСтрока.БанковскийСчетКасса=Касса;

	Если ВидОперации=Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк И НЕ ПоОбъявлениюНаВзнос Тогда
		НоваяСтрока=тзДвижения.Добавить();
		НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
		НоваяСтрока.ВидДенежныхСредств=Перечисления.ВидыДенежныхСредств.Безналичные;
		НоваяСтрока.БанковскийСчетКасса=СчетОрганизации;
	КонецЕсли;

	тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(Организация, "Организация");
	тзДвижения.ЗаполнитьЗначения(СтруктураТД.РасшифровкаПлатежа.Итог("СуммаПлатежа"), "Сумма");
	тзДвижения.ЗаполнитьЗначения(СтруктураТД.РасшифровкаПлатежа.Итог("СуммаВал"), "СуммаУпр");

	Движения.ДенежныеСредства.Загрузить(тзДвижения);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ВзаиморасчетыСПодотчетнымиЛицами(СтруктураШД, СтруктураТД, Отказ)
	Если ВидОперации<>Перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствПодотчетнику Тогда Возврат; КонецЕсли;

	тзДвижения=Движения.ВзаиморасчетыСПодотчетнымиЛицами.ВыгрузитьКолонки();

	Для каждого СтрокаПлатеж Из СтруктураТД.РасшифровкаПлатежа Цикл
		СтрокаДвижений=тзДвижения.Добавить();
		СтрокаДвижений.Сумма=СтрокаПлатеж.СуммаБух;
		СтрокаДвижений.ФизЛицо=?(Контрагент.Пустая(), СтрокаПлатеж.Сотрудник, Контрагент);
	КонецЦикла;
	тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(Организация, "Организация");
	тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");

	Движения.ВзаиморасчетыСПодотчетнымиЛицами.Загрузить(тзДвижения);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ВзаиморасчетыСКонтрагентами") Тогда Возврат; КонецЕсли;
	Если ДенежныеСредстваСервер.ЕстьВзаиморасчеты(ВидОперации) Тогда
		Движения.ВзаиморасчетыСКонтрагентами.Загрузить(СтруктураТД.Взаиморасчеты);
	КонецЕсли;
КонецПроцедуры

Процедура ДвижениеПоРегистру_РозничнаяВыручка(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ ВидОперации=Перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствКассеККМ Тогда Возврат; КонецЕсли;

	тзДвижения=Движения.РозничнаяВыручка.ВыгрузитьКолонки();
	
	НоваяСтрока=тзДвижения.Добавить();
	НоваяСтрока.Период         = Дата;
	НоваяСтрока.Активность     = Истина;
	НоваяСтрока.Регистратор    = Ссылка;
	НоваяСтрока.РозничнаяТочка = ?(КассаККМ.Пустая(), Контрагент, КассаККМ);
	НоваяСтрока.Подразделение  = Подразделение;
	НоваяСтрока.Сумма          = СуммаДокумента;
	НоваяСтрока.ВидТабличнойЧасти="РасшифровкаПлатежа";

	Движения.РозничнаяВыручка.Загрузить(тзДвижения); //Приход
КонецПроцедуры

Процедура ДвижениеПоРегистру_КнигаУчетаДоходовИРасходов(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "КнигаУчетаДоходовИРасходов") Тогда Возврат; КонецЕсли;
	Если ВидОперации<>Перечисления.ВидыОперацийРКО.ВозвратДенежныхСредствПокупателю Тогда 
		тзУСН=СтруктураТД.РасшифровкаПлатежа.Скопировать();
		Для Каждого СтрокаКоллекции ИЗ тзУСН Цикл
			СтрокаКоллекции.СуммаПлатежа=СтрокаКоллекции.СуммаПлатежа;
			СтрокаКоллекции.СуммаУСН=0;
			СтрокаКоллекции.СуммаБух=СтрокаКоллекции.СуммаБух;
		КонецЦикла;	
		НалоговыйУчет.ДвиженияДенежныхСредствКУДиР(Ссылка, ДополнительныеСвойства, СтруктураШД, тзУСН, "Расходы");	
	Иначе
		тзУСН=СтруктураТД.РасшифровкаПлатежа.Скопировать();
		Для Каждого СтрокаКоллекции ИЗ тзУСН Цикл
			СтрокаКоллекции.СуммаПлатежа=-СтрокаКоллекции.СуммаПлатежа;
			СтрокаКоллекции.СуммаУСН=-СтрокаКоллекции.СуммаУСН;
			СтрокаКоллекции.СуммаБух=-СтрокаКоллекции.СуммаБух;
		КонецЦикла;	
		НалоговыйУчет.ДвиженияДенежныхСредствКУДиР(Ссылка, ДополнительныеСвойства, СтруктураШД, тзУСН, "Доходы");	
	КонецЕсли;
КонецПроцедуры

Процедура ДвижениеПоРегистру_РасходыПриУСН(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "РасходыПриУСН") Тогда Возврат; КонецЕсли;
	УчетнаяПолитика=СтруктураШД.УчетнаяПолитика;
	Если УчетнаяПолитика.ОбъектНалогообложенияУСН=Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда	Возврат; КонецЕсли;	
	Если ВидОперации=Перечисления.ВидыОперацийРКО.ВозвратДенежныхСредствПокупателю Тогда Возврат; КонецЕсли;
	Если ВидОперации=Перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствПодотчетнику Тогда Возврат; КонецЕсли;
	Если ВидОперации=Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк Тогда Возврат; КонецЕсли;
	ВключитьДвиженияУСН=Ложь;
	Если ДополнительныеСвойства.Свойство("ВключитьДвиженияУСН") Тогда
		ВключитьДвиженияУСН=ДополнительныеСвойства.ВключитьДвиженияУСН;
	КонецЕсли;

	СистемаНалогообложения=УчетнаяПолитика.СистемаНалогообложения;
	Если СистемаНалогообложения=Перечисления.СистемыНалогообложения.Упрощенная Или СистемаНалогообложения=Перечисления.СистемыНалогообложения.Упрощенная_ЕНВД ИЛИ ВключитьДвиженияУСН Тогда
		тзДвижения=Движения.РасходыПриУСН.ВыгрузитьКолонки();
		тзДанные=СтруктураТД.РасшифровкаПлатежа.Скопировать();
		тзДанные.Свернуть("ДоговорКонтрагента,ТОП,НомерСтрокиТабличнойЧасти,ВидТабличнойЧасти","СуммаПлатежа,СуммаУСН");
		Для Каждого СтрокаКоллекции ИЗ тзДанные Цикл
			НоваяСтрока=тзДвижения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаКоллекции);
			НоваяСтрока.ТОП=СтрокаКоллекции.ТОП;
			Если СтрокаКоллекции.СуммаПлатежа=СтрокаКоллекции.СуммаУСН Тогда
				НоваяСтрока.Сумма=СтрокаКоллекции.СуммаПлатежа;
				НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.КупленоОплаченоПоставщику;
			ИначеЕсли СтрокаКоллекции.СуммаУСН=0 Тогда
				НоваяСтрока.Сумма=СтрокаКоллекции.СуммаПлатежа;
				НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.ПредоплатаПоставщику;
			ИначеЕсли СтрокаКоллекции.СуммаУСН<СтрокаКоллекции.СуммаПлатежа Тогда
				НоваяСтрока.Сумма=СтрокаКоллекции.СуммаПлатежа-СтрокаКоллекции.СуммаУСН;
				НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.ПредоплатаПоставщику;
				
				НоваяСтрока=тзДвижения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаКоллекции);
				НоваяСтрока.ТОП=СтрокаКоллекции.ТОП;
				НоваяСтрока.Сумма=СтрокаКоллекции.СуммаУСН;
				НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.КупленоОплаченоПоставщику;
			КонецЕсли;
		КонецЦикла;
		тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
		тзДвижения.ЗаполнитьЗначения(Дата, "Период");
		тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");
		тзДвижения.ЗаполнитьЗначения(Организация, "Организация");
   		тзДвижения.ЗаполнитьЗначения(Ссылка, "РасчетныйДокумент");
		
		Движения.РасходыПриУСН.Загрузить(тзДвижения);
	КонецЕсли;
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
// Проведение по регистрам (по нескольким регистрам одного типа)

Процедура ДвижениеПоРегистру_УчетДенежныхСредств(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_ДенежныеСредства(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_ДвиженияДенежныхСредств(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетВзаиморасчетов(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_ВзаиморасчетыСПодотчетнымиЛицами(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетНДС(СтруктураШД, СтруктураТД, Отказ)
	Если ДенежныеСредстваСервер.ЕстьВзаиморасчеты(ВидОперации) Тогда
		УчетНДС.ДвижениеДенежныхСредств(ЭтотОбъект);
	КонецЕсли;	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обарботчики событий

Процедура ОбработкаЗаполнения(Основание)
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание) Тогда Возврат; КонецЕсли;

	Если ТипЗнч(Основание)=Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		ВидОперации=Перечисления.ВидыОперацийРКО.ОплатаПоставщику;
		СтрокаПлатеж=РасшифровкаПлатежа.Добавить();
		СтрокаПлатеж.ДоговорКонтрагента=Основание.ДоговорКонтрагента;

	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
		или (ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеДопРасходов")) 
		или (ТипЗнч(Основание) = Тип("ДокументСсылка.КомиссияОтчетПродажиКомитенту")) 
		или (ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")) Тогда

		Если ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
			ВидОперации = Перечисления.ВидыОперацийРКО.ВозвратДенежныхСредствПокупателю;
		Иначе
			ВидОперации = Перечисления.ВидыОперацийРКО.ОплатаПоставщику;
		КонецЕсли;

		СтрокаПлатеж=РасшифровкаПлатежа.Добавить();		
		СтрокаПлатеж.ДоговорКонтрагента=Основание.ДоговорКонтрагента;		
		СтрокаПлатеж.ID=Новый УникальныйИдентификатор;
		СтрокаПлатеж.СтавкаНДС=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");

	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		ВидОперации=Перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствПодотчетнику;
		Контрагент=Основание.ФизЛицо;
		РасчетныйДокумент=Основание;
		СтрокаПлатеж=РасшифровкаПлатежа.Добавить();

	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
		ЗаполнитьПоПКО();

	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.ОбъявлениеНаВзносНаличными") Тогда
		ВидОперации=Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк;
		СчетОрганизации=Основание.СчетОрганизации;
		Касса=Основание.Касса;
		ОбъявлениеНаВзносНаличными=Основание.Ссылка;

		СуммаДокумента=Основание.СуммаДокумента;

		СтрокаПлатеж=РасшифровкаПлатежа.Добавить();
		СтрокаПлатеж.СуммаПлатежа=СуммаДокумента;
		СтрокаПлатеж.СтатьяДвиженияДенежныхСредств=Основание.СтатьяДвиженияДенежныхСредств;
	КонецЕсли;

	Если СтрокаПлатеж=Неопределено Тогда
		СтрокаПлатеж=РасшифровкаПлатежа.Добавить();
	КонецЕсли;

	// Если основание - отчет комитенту, то надо вычесть вознаграждение
	ОснованиеСуммаДокумента = Основание.СуммаДокумента;
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.КомиссияОтчетПродажиКомитенту") Тогда
		ОснованиеСуммаДокумента = Основание.СуммаДокумента - Основание.СуммаВознаграждения;
	КонецЕсли;	
	СуммаДокумента=ОснованиеСуммаДокумента;

	СтрокаПлатеж.СуммаПлатежа = СуммаДокумента;
	ДенежныеСредстваСервер.ПересчитатьСуммуНДС(СтрокаПлатеж);

	Если Выдать="" И ЗначениеЗаполнено(Контрагент) Тогда		
		Если ДенежныеСредстваСервер.ЕстьВзаиморасчеты(ВидОперации) Тогда			
			Выдать =?(Контрагент.НаименованиеПолное="",Контрагент.Наименование, Контрагент.НаименованиеПолное);

		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствПодотчетнику Тогда
			Запрос=Новый Запрос;
			Запрос.УстановитьПараметр("Дата",Дата);
			Запрос.УстановитьПараметр("ФизЛицо",Контрагент);
			Запрос.Текст="
			|ВЫБРАТЬ
			|	ИсточникДанных1.Фамилия КАК Фамилия,
			|	ИсточникДанных1.Имя КАК Имя,
			|	ИсточникДанных1.Отчество КАК Отчество
			|ИЗ
			|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо=&ФизЛицо) КАК ИсточникДанных1
			|";
			Результат=Запрос.Выполнить().Выбрать();
			Если Результат.Следующий() Тогда
				Выдать=?(НЕ ПустаяСтрока(Результат.Фамилия), 
				Результат.Фамилия + ?(НЕ ПустаяСтрока(Результат.Имя)," " + Результат.Имя + " " + ?(НЕ ПустаяСтрока(Результат.Отчество),Результат.Отчество, ""), ""),"");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(РасчетныйДокумент) Тогда
				ЭтотОбъект.Основание=Лев(Строка(РасчетныйДокумент),Найти(Строка(РасчетныйДокумент),Строка(РасчетныйДокумент.Дата))-1)+Формат(РасчетныйДокумент.Дата,"ДФ=dd.MM.yyyy");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
			
	Если ПоДокументу="" И ЗначениеЗаполнено(Контрагент) И ВидОперации=Перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствПодотчетнику Тогда	
		ДокФизЛица = ПечатныеФормыСервер.ПаспортныеДанные(Контрагент, Дата);
		Если ЗначениеЗаполнено(ДокФизЛица) Тогда
			ПоДокументу=Строка(ДокФизЛица.Вид)+" серия "+ДокФизЛица.Серия+", номер "+ДокФизЛица.Номер+", выданый "+Формат(ДокФизЛица.ДатаВыдачи, "ДФ=dd.MM.yyyy")+" "+ДокФизЛица.Выдан;
		КонецЕсли;
	КонецЕсли;

	ОбработкаТабличныхЧастей.ЗаполнитьТиповыеОперации(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;
	СтруктураТД.Вставить("Взаиморасчеты", ВзаиморасчетыСервер.СформироватьТаблицуОплаты(СтруктураШД, СтруктураТД, ВидДвиженияНакопления.Приход, Движения.ВзаиморасчетыСКонтрагентами.ВыгрузитьКолонки(), Отказ, ДополнительныеСвойства.Заголовок));

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	//Формируем структуру шапки документа "СтруктураШД"
	СтруктураШД=УправлениеДокументамиСервер.СформироватьСтруктуруШД(ЭтотОбъект);
	СтруктураШД.Вставить("РасчетыВозврат", ДенежныеСредстваСервер.НаправленияДвижения(ВидОперации));

	Если ВидОперации=Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк Тогда
		ПроверяемыеРеквизиты.Добавить("СчетОрганизации");
	КонецЕсли;

	Если ДенежныеСредстваСервер.ЕстьВзаиморасчеты(ВидОперации) Тогда
		ПроверяемыеРеквизиты.Добавить("Контрагент");
		ПроверяемыеРеквизиты.Добавить("РасшифровкаПлатежа.ДоговорКонтрагента");

	ИначеЕсли ВидОперации=Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк И НЕ СчетОрганизации.ВалютаДенежныхСредств=Касса.ВалютаДенежныхСредств Тогда
		Сообщить("Не совпадают валюты банковского счета и кассы"); Отказ=Истина;

	ИначеЕсли ВидОперации=Перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствКассеККМ И НЕ ДополнительныеСвойства.ВалютаБухУчета=Касса.ВалютаДенежныхСредств Тогда
		Сообщить("Выдача денежных средств в кассу ККМ производится только в валюте регл. учета.");  Отказ=Истина;
	КонецЕсли;

	Если ТипЗнч(Контрагент)=Тип("СправочникСсылка.Контрагенты") И Контрагент.НеЯвляетсяРезидентом Тогда
		Сообщить("Проводить наличные расчеты с нерезидентами по данной организации запрещено."); Отказ=Истина;
	КонецЕсли;

	//Формируем структуру таблиц документа "СтруктураТД"
	СтруктураТД=Новый Структура();
	СтруктураТД.Вставить("РасшифровкаПлатежа", ДенежныеСредстваСервер.СформироватьТаблицуПлатежей(ЭтотОбъект, Отказ, Заголовок));
	СтруктураТД.Вставить("ОплачиваемыеДокументы", ОплачиваемыеДокументы.Выгрузить());

	ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);