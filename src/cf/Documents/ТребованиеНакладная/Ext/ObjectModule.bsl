Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	Для Каждого СтрокаТабличнойЧасти Из Материалы Цикл
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Склад) Тогда
			СтрокаТабличнойЧасти.Склад=Склад;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Качество) Тогда
			СтрокаТабличнойЧасти.Качество=Справочники.Качество.Новый;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт

	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;
КонецФункции

Процедура ЗаполнениеСпецификации(Изделие, Колво)
	ДокСпецификация=Документы.Спецификация.ПолучитьСпецификациюНаДату(Изделие.ОсновнаяСпецификация, Неопределено, Дата);
	Если ДокСпецификация=Неопределено Тогда Возврат; КонецЕсли;

	тзКомплектующие=ДокСпецификация.Комплектующие.Выгрузить();
	Для каждого СтрокаКоллекции Из тзКомплектующие Цикл
		Если СтрокаКоллекции.Номенклатура.Услуга Тогда Продолжить; КонецЕсли;
		НоваяСтрока=Материалы.Добавить();
		НоваяСтрока.Номенклатура=СтрокаКоллекции.Номенклатура;
		НоваяСтрока.СтатьяЗатрат=НоваяСтрока.Номенклатура.СтатьяЗатрат;
		НоваяСтрока.Количество=СтрокаКоллекции.Количество*Колво;
		НоваяСтрока.ЕдиницаИзмерения=СтрокаКоллекции.ЕдиницаИзмерения;
		НоваяСтрока.Коэффициент=НоваяСтрока.ЕдиницаИзмерения.Коэффициент;
		НоваяСтрока.Качество=Справочники.Качество.Новый;
		НоваяСтрока.СтатьяЗатрат=НоваяСтрока.Номенклатура.СтатьяЗатрат;
		НоваяСтрока.ID=Строка(Новый УникальныйИдентификатор);
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьПоВнутреннемуЗаказу(СсылкаНаЗаказ, КонДата) Экспорт
    Материалы.Очистить();

	стрУсловие="ВнутреннийЗаказ=&Заказ";
	Если ЗначениеЗаполнено(Склад) Тогда
		стрУсловие=стрУсловие+" И Склад=&Склад";
	КонецЕсли;

	Запрос=Новый Запрос;	
	Запрос.УстановитьПараметр("КонДата", КонДата);
	Запрос.УстановитьПараметр("Заказ",   СсылкаНаЗаказ);
	Запрос.УстановитьПараметр("Склад",   Склад);
	Запрос.Текст="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсточникДанных.Номенклатура                         КАК Номенклатура,
	|	ИсточникДанных.ХарактеристикаНоменклатуры           КАК ХарактеристикаНоменклатуры,
	|	ИсточникДанных.КоличествоОстаток          			КАК Количество,
	|	ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|	ИсточникДанных.ВнутреннийЗаказ                      КАК ВнутреннийЗаказ,
	|	ИсточникДанных.Склад								КАК Склад
	|ИЗ
	|	РегистрНакопления.ВнутренниеЗаказы.Остатки(&КонДата, "+стрУсловие+") КАК ИсточникДанных
	|";
	тзДанныеЗапроса=Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаКоллекции Из тзДанныеЗапроса Цикл
		ЗаполнитьЗначенияСвойств(Материалы.Добавить(), СтрокаКоллекции);
	КонецЦикла;	

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка таблиц для проведения

Процедура ДополнитьТаблицуАтрибутамиШапки(СтруктураШД, тзСсылка, стрВидТабличнойЧасти="")
	СтруктураРеквизитов=Новый Структура;
	СтруктураРеквизитов.Вставить("Организация", Организация);
	СтруктураРеквизитов.Вставить("Период", Дата);
	СтруктураРеквизитов.Вставить("Активность", Истина);
	СтруктураРеквизитов.Вставить("Регистратор", Ссылка);
	СтруктураРеквизитов.Вставить("ВидТабличнойЧасти", стрВидТабличнойЧасти);
	Для каждого СтрокаКоллекции Из СтруктураРеквизитов Цикл
		тзСсылка.Колонки.Добавить(СтрокаКоллекции.Ключ);
		тзСсылка.ЗаполнитьЗначения(СтрокаКоллекции.Значение, СтрокаКоллекции.Ключ);
	КонецЦикла;	
КонецПроцедуры
 
Функция СформироватьТаблицу_Материалы(СтруктураШД, Отказ, Заголовок)
	тзДанные=Материалы.Выгрузить();
	тзДанные.Колонки.Добавить("КоличествоДок");
	тзДанные.Колонки.Добавить("ЗаказСписания"); //?
	тзДанные.Колонки.Добавить("ЗаказПартии"); //?
	тзДанные.Колонки.Добавить("НоменклатураНовая");
	тзДанные.Колонки.Добавить("ХарактеристикаНоменклатурыНовая");
	тзДанные.Колонки.Добавить("НомерСтрокиТабличнойЧасти");
	Для каждого СтрокаКоллекции Из тзДанные Цикл
		СтрокаКоллекции.КоличествоДок=СтрокаКоллекции.Количество;
		СтрокаКоллекции.Количество=СтрокаКоллекции.Количество * СтрокаКоллекции.Коэффициент /СтрокаКоллекции.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент;
		СтрокаКоллекции.НоменклатураНовая=СтрокаКоллекции.Изделие;
		СтрокаКоллекции.ХарактеристикаНоменклатурыНовая=СтрокаКоллекции.ХарактеристикаИзделия;
		СтрокаКоллекции.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтроки;
	КонецЦикла;
	ДополнитьТаблицуАтрибутамиШапки(СтруктураШД, тзДанные, "Материалы");
	Возврат тзДанные;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Движения по регистрам 

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_СписанныеТовары(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетТМЦ(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетПартийТМЦ(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетЗаказов(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетРезервовТМЦ(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетТМЦ(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ТоварыНаСкладах") Тогда Возврат; КонецЕсли;

	тзДвижения=Движения.ТоварыНаСкладах.ВыгрузитьКолонки();

	Для каждого СтрокаКоллекции Из СтруктураТД.Материалы Цикл
		Если СтрокаКоллекции.Склад.ВидСклада=Перечисления.ВидыСкладов.Оптовый Тогда
			Если Не СтрокаКоллекции.Склад.Ячеистый Тогда Продолжить; КонецЕсли;
			ЗаполнитьЗначенияСвойств(тзДвижения.Добавить(), СтрокаКоллекции);
		КонецЕсли;		
	КонецЦикла; 

	тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");

	Движения.ТоварыНаСкладах.Загрузить(тзДвижения);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетЗаказов(СтруктураШД, СтруктураТД, Отказ)
	Если Сделки.Количество()=0 Тогда Возврат; КонецЕсли;
	
	СтруктураПараметров=Новый Структура("МоментВремени,Дата,Ссылка,Организация");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, СтруктураШД);
	
	СтруктураПараметров.Вставить("ТаблицаДвижений1", Движения.ЗаказыПокупателей.ВыгрузитьКолонки());
	СтруктураПараметров.Вставить("ТаблицаДвижений2", Движения.ВнутренниеЗаказы.ВыгрузитьКолонки());
	СтруктураПараметров.Вставить("ТаблицаДвижений3", Движения.ЗаказыНаПроизводство.ВыгрузитьКолонки());

	УправлениеЗаказамиСервер.СформироватьДвиженияРегистров(СтруктураПараметров, СтруктураТД, Отказ);

	Движения.ЗаказыПокупателей	 .Загрузить(СтруктураПараметров.ТаблицаДвижений1);
	Движения.ВнутренниеЗаказы	 .Загрузить(СтруктураПараметров.ТаблицаДвижений2);
	Движения.ЗаказыНаПроизводство.Загрузить(СтруктураПараметров.ТаблицаДвижений3);
КонецПроцедуры

Процедура ДвижениеПоРегистру_СписанныеТовары(СтруктураШД, СтруктураТД, Отказ)
	тзДанные=Движения.СписанныеТовары.ВыгрузитьКолонки(); НомСтроки=0;

	Для каждого СтрокаКоллекции Из СтруктураТД.Материалы Цикл
		НоваяСтрока=тзДанные.Добавить(); НомСтроки=НомСтроки+1;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.НомерСтрокиДокумента=НомСтроки;
		текКоличество=?(СтрокаКоллекции.Количество=0, 1, СтрокаКоллекции.Количество);
		Если НоваяСтрока.СтоимостьСписаниеУУ=0 Тогда
			НоваяСтрока.СтоимостьСписаниеУУ=СтрокаКоллекции.СтоимостьУУ;
			НоваяСтрока.СтоимостьПоступление=СтрокаКоллекции.СтоимостьУУ;
		КонецЕсли;
		Если НоваяСтрока.СтоимостьСписаниеНУ=0 Тогда
			НоваяСтрока.СтоимостьСписаниеНУ=СтрокаКоллекции.СтоимостьНУ;
			НоваяСтрока.СтоимостьПоступлениеНУ=СтрокаКоллекции.СтоимостьНУ;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Подразделение) Тогда
			НоваяСтрока.Подразделение=Подразделение;
		КонецЕсли;
	КонецЦикла;

	тзДанные.ЗаполнитьЗначения(Перечисления.КодыОперацийПартииТоваров.СписаниеНаЗатраты, "КодОперацииПартииТоваров");
	тзДанные.ЗаполнитьЗначения(Перечисления.СтатусыПартийТоваров.Купленный, "ДопустимыйСтатус1");

	Движения.СписанныеТовары.Загрузить(тзДанные);
	Движения.СписанныеТовары.Записать(Истина);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетПартийТМЦ(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ПартииТоваровНаСкладах") Тогда Возврат; КонецЕсли;

	СтруктураШД.Вставить("Отказ", Отказ);
	СтруктураШД.Вставить("ТаблицаСписания", Движения.СписанныеТовары.Выгрузить());
	УправлениеЗапасамиПартионныйУчет.ДвижениеПартийТоваров(Ссылка, СтруктураШД);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетРезервовТМЦ(СтруктураШД, СтруктураТД, Отказ)
	СтруктураПараметров=Новый Структура("МоментВремени,Дата,Ссылка,Организация");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, СтруктураШД);
	СтруктураПараметров.Вставить("тзУчетРезервовТМЦ", Движения.УчетРезервовТМЦ.ВыгрузитьКолонки());
	УправлениеРезервамиСервер.СформироватьДвиженияРасход(СтруктураПараметров, СтруктураТД, Отказ);
	Если НЕ СтруктураПараметров.тзУчетРезервовТМЦ.Количество()=0 Тогда
		Движения.УчетРезервовТМЦ.Загрузить(СтруктураПараметров.тзУчетРезервовТМЦ);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ОбработкаЗаполнения(Основание) Экспорт
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание) Тогда Возврат; КонецЕсли;

	Если ТипЗнч(Основание)=Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Для Каждого СтрокаКоллекции Из Основание.Товары Цикл
			НоваяСтрока=Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.СтатьяЗатрат=СтрокаКоллекции.Номенклатура.СтатьяЗатрат;
			НоваяСтрока.Качество=Справочники.Качество.Новый;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НоваяСтрока, ЭтотОбъект);
		КонецЦикла;

	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		Для Каждого СтрокаКоллекции Из Основание.Товары Цикл
			НоваяСтрока=Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции,,"ТОП");
			НоваяСтрока.СтатьяЗатрат=СтрокаКоллекции.Номенклатура.СтатьяЗатрат;
			НоваяСтрока.Качество=Справочники.Качество.Новый;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НоваяСтрока, ЭтотОбъект);
		КонецЦикла;
	
	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
		ЗаполнитьПоВнутреннемуЗаказу(Основание, Дата);

	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.ИнвентаризацияТМЦ") Тогда
		Для Каждого СтрокаКоллекции Из Основание.Товары Цикл
			Недостача=СтрокаКоллекции.КоличествоУчет-СтрокаКоллекции.Количество;
			Если Недостача <= 0 Тогда Продолжить; КонецЕсли;

			НоваяСтрока=Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.НоменклатурнаяГруппа=НоваяСтрока.Номенклатура.НоменклатурнаяГруппа;
			НоваяСтрока.СтатьяЗатрат=НоваяСтрока.Номенклатура.СтатьяЗатрат;
			НоваяСтрока.Количество=Недостача;
			НоваяСтрока.ХарактеристикаНоменклатуры=СтрокаКоллекции.ХарактеристикаНоменклатуры;

			ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(НоваяСтрока, ЭтотОбъект);
		КонецЦикла;

	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Склад=Основание.СкладПолучатель;
		Для Каждого СтрокаКоллекции Из Основание.Товары Цикл
			НоваяСтрока=Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.Склад=Склад;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НоваяСтрока, ЭтотОбъект);
		КонецЦикла;

	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Для каждого СтрокаКоллекции Из Основание.Товары Цикл
			ЗаполнениеСпецификации(СтрокаКоллекции.Номенклатура, СтрокаКоллекции.Количество);			
		КонецЦикла;
		Для каждого СтрокаКоллекции Из Основание.Услуги Цикл
			ЗаполнениеСпецификации(СтрокаКоллекции.Номенклатура, СтрокаКоллекции.Количество);
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
		Для каждого СтрокаКоллекции Из Основание.Комплектующие Цикл
			ЗаполнитьЗначенияСвойств(Материалы.Добавить(), СтрокаКоллекции,,"ID");
		КонецЦикла;
	КонецЕсли;

	ОбработкаТабличныхЧастей.ЗаполнитьТиповыеОперации(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	Если НЕ УправлениеДокументамиСервер.ИмяПредопределенногоПодвида(Подвид)="Корректировка" Тогда
		ПроверяемыеРеквизиты.Добавить("Количество");
	КонецЕсли;

	//Формирование значений реквизитов шапки документа
	СтруктураШД=УправлениеДокументамиСервер.СформироватьСтруктуруШД(ЭтотОбъект);

	//Формирование значений реквизитов табличных частей
	СтруктураТД=Новый Структура;
	СтруктураТД.Вставить("Материалы", СформироватьТаблицу_Материалы(СтруктураШД, Отказ, Заголовок));
	СтруктураТД.Вставить("Сделки", Сделки.Выгрузить());

	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства, "Продажа");