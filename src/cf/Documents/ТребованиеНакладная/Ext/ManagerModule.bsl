
Функция ПолучитьТаблицуСтоимостиТоваров(СсылкаНаОбъект)
	Запрос=Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Параметры.Вставить("ВидДвижения", ВидДвиженияНакопления.Расход);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ПартииТоваровНаСкладах.Номенклатура,
	|	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладах.СерияНоменклатуры,
	|	ПартииТоваровНаСкладах.НомерСтрокиТабличнойЧасти КАК НомерСтроки,
	|	СУММА(ПартииТоваровНаСкладах.Стоимость) КАК Стоимость,
	|	СУММА(ПартииТоваровНаСкладах.Количество) КАК Количество
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	|
	|ГДЕ
	|	ПартииТоваровНаСкладах.Регистратор   = &ТекущийДокумент
	|	И ПартииТоваровНаСкладах.ВидДвижения = &ВидДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладах.Номенклатура,
	|	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладах.СерияНоменклатуры,
	|	ПартииТоваровНаСкладах.НомерСтрокиТабличнойЧасти
	|";
	#Если НаСервере Тогда
	Запрос.Выполнить();
	#КонецЕсли
	Возврат Запрос.Результат.Выгрузить();
КонецФункции

Функция ПолучитьСтоимостьТовара(Таблица, Номенклатура, Характеристика = Неопределено, Серия = Неопределено, ПартионныйУчетПоСериям = Ложь, Количество,НомерСтроки)

	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", Номенклатура);
	СтруктураПоиска.Вставить("НомерСтроки", НомерСтроки);
	Если ЗначениеЗаполнено(Характеристика) Тогда
		СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры", Характеристика);
	КонецЕсли;

	Если ПартионныйУчетПоСериям И ЗначениеЗаполнено(Серия) Тогда
		СтруктураПоиска.Вставить("СерияНоменклатуры", Серия);
	КонецЕсли;

	Строки=Таблица.НайтиСтроки(СтруктураПоиска);
	Если Строки.Количество() > 0 Тогда
		Стоимость  = Строки[0].Стоимость;
		Количество = Строки[0].Количество;
	Иначе
		Стоимость  = 0;
		Количество = 0;
	КонецЕсли;

	Возврат Стоимость;
КонецФункции 

////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("Накладная", "Требование-накладная");
	Структура.Вставить("М11", "М-11 (Требование накладная)");
	Структура.Вставить("МБ8", "МБ-8 (Акт на списание)");
	Структура.Вставить("РасходСРозничныхСкладовВЦенахАТТ", "Расход с розничных складов в ценах АТТ");
	Структура.Вставить("АктНаСписание", "Акт на списание");
	Структура.Вставить("ДефектнаяВедомость", "Дефектная ведомость по ремонту автомобиля");
    Структура.Вставить("ЛимитнаяКарта", "Лимитная карта на получение зап. частей");
    Структура.Вставить("АктНаРемонтныеРаботы", "Акт на установку зап. частей");
    Структура.Вставить("АктВыполненыхРабот", "Акт выполненых работ");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция ПолучитьПараметрыПечати(СсылкаНаОбъект)
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	стрТоварКод=?(Колонка="", "Код", Колонка);

	Запрос=Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст ="
	|ВЫБРАТЬ
	|	Ссылка,
	|	Проведен,
	|	ВЫРАЗИТЬ(Комментарий КАК Строка(1000)) КАК Комментарий,
	|	Номер,
	|	Дата,
	|	Номер 	КАК НомерДокумента,
	|	Дата	КАК ДатаДокумента,
	|	Дата	КАК ДатаСоставления,
	|	Организация,
	|	Склад,
	|	Подразделение,
	|	Склад КАК Отпустил,
	|	Подразделение КАК Получил,
	|	ИсточникДанных.Материалы.(
	|		НомерСтроки КАК НомерСтроки,
	|		НомерСтроки КАК НомПП,
	|		Номенклатура.Код КАК Код,
	|		Номенклатура.Артикул КАК Артикул,
	|		Номенклатура,
	|		Номенклатура."+стрТоварКод+" КАК НоменклатурныйНомер,
	|		ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК стрНоменклатура,
	|		ХарактеристикаНоменклатуры       	 КАК Характеристика,
	|		СерияНоменклатуры                	 КАК Серия,
	|		Номенклатура.ЕдиницаХраненияОстатков КАК ЕдИзмМест,
	|		Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмеренияНаименование,
	|		Номенклатура.БазоваяЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,		
	|		ЕдиницаИзмерения КАК ЕдИзм,
	|		Количество КАК Количество,
	|		КоличествоМест КАК КоличествоМест,
	|		Подразделение,
	|		СтатьяЗатрат,
	|		ПричинаСписания,
	|		Склад,
	|		ТОП,
	|		Номенклатура.ВестиПартионныйУчетПоСериям КАК ПартионныйУчетПоСериям,
	|		Автомобиль,
	|		Автомобиль.Марка Как АвтомобильМарка,
	|		Автомобиль.Наименование Как АвтомобильНаименование,
	|		Автомобиль.Водитель.Наименование Как АвтомобильВодитель
	|	) Как Материалы
	|ИЗ
	|	Документ.ТребованиеНакладная КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки	
	|";
	#Если НаСервере Тогда
	Запрос.Выполнить();
	#КонецЕсли
	Если Запрос.Результат.Пустой() Тогда Возврат Неопределено; КонецЕсли;
	Возврат Запрос.Результат.Выгрузить();
КонецФункции

Функция Печать_ЛимитнаяКарта_ПараметрыПечати(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	тзДанные=ПолучитьПараметрыПечати(СсылкаНаОбъект);
	ПараметрыПечати=Новый Структура;
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
	КонецЦикла;

	ПараметрыПечати.Вставить("Заголовок",ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Лимитная карта"));
	ПараметрыПечати.Вставить("Заголовок1","на получение материалов и запасных частей для технического обслуживания и ремонта "); 
    ПараметрыПечати.Вставить("Работа",""); 

	стрАвтомобиль="На автомашине "; стрВодитель=""; стрКолонки="Автомобиль,АвтомобильМарка,АвтомобильНаименование,АвтомобильВодитель";
	тзАвтомобили=ПараметрыПечати.Материалы.Скопировать(,стрКолонки);
	тзАвтомобили.Свернуть(стрКолонки);
	Для Каждого СтрокаКоллекции Из тзАвтомобили Цикл
		Если ПустаяСтрока(стрВодитель) Тогда стрВодитель=СтрокаКоллекции.АвтомобильВодитель; КонецЕсли;
		стрАвтомобиль=стрАвтомобиль+СтрокаКоллекции.АвтомобильМарка+" гос. номер "+СтрокаКоллекции.АвтомобильНаименование;
	КонецЦикла;
	ПараметрыПечати.Вставить("Автомобиль",стрАвтомобиль);
	ПараметрыПечати.Вставить("ОтпускРазрешил","");
	ПараметрыПечати.Вставить("ВыдалКладовщик","");
    ПараметрыПечати.Вставить("ПолучилВодитель","");

	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;	

	Возврат ПараметрыПечати;
КонецФункции	

Функция Печать_ЛимитнаяКарта(СтруктураПараметров)
	ПараметрыПечати=Печать_ЛимитнаяКарта_ПараметрыПечати(СтруктураПараметров);
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
		
	Макет=ИнициализацияМакета(СтруктураПараметров, "ЛимитнаяКарта");
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати="ПАРАМЕТРЫ_ПЕЧАТИ_ЛимитнаяКарта_ТН";
	
	Область=Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);
	
	Область=Макет.ПолучитьОбласть("Строка");
	Для каждого СтрокаКоллекции Из ПараметрыПечати.Материалы Цикл
		Область.Параметры.Заполнить(СтрокаКоллекции);
		ТабДокумент.Вывести(Область);
	КонецЦикла;
	Область=Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);
	
	Возврат ТабДокумент;
КонецФункции 

Функция Печать_АктВыполненыхРабот_ПараметрыПечати(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	тзДанные=ПолучитьПараметрыПечати(СсылкаНаОбъект);
	ПараметрыПечати=Новый Структура;
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
	КонецЦикла;

	ОтветственныеЛицаОрганизации=ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(ПараметрыПечати.Организация, ПараметрыПечати.Дата, СсылкаНаОбъект);
	ПараметрыПечати.Вставить("Заголовок",ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Акт выполненых работ"));
	ПараметрыПечати.Вставить("ДатаПодписи",Формат(ПараметрыПечати.Дата, "ДЛФ=DD")); 
	ПараметрыПечати.Вставить("ФИОРуководителя",ОтветственныеЛицаОрганизации.Руководитель);
	
	стрАвтомобиль="На автомашине "; стрВодитель=""; стрКолонки="Автомобиль,АвтомобильМарка,АвтомобильНаименование,АвтомобильВодитель";
	тзАвтомобили=ПараметрыПечати.Материалы.Скопировать(,стрКолонки);
	тзАвтомобили.Свернуть(стрКолонки);
	Для Каждого СтрокаКоллекции Из тзАвтомобили Цикл
		Если ПустаяСтрока(стрВодитель) Тогда стрВодитель=СтрокаКоллекции.АвтомобильВодитель; КонецЕсли;
		стрАвтомобиль=стрАвтомобиль+СтрокаКоллекции.АвтомобильМарка+" гос. номер "+СтрокаКоллекции.АвтомобильНаименование;
	КонецЦикла;
	ПараметрыПечати.Вставить("Заголовок1",стрАвтомобиль);
	ПараметрыПечати.Вставить("Водитель",стрВодитель);
	ПараметрыПечати.Вставить("ДатаПодписи",Формат(ПараметрыПечати.Дата, "ДЛФ=DD"));
	
	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;	

	Возврат ПараметрыПечати;
КонецФункции

Функция Печать_АктВыполненыхРабот(СтруктураПараметров)
	ПараметрыПечати=Печать_АктВыполненыхРабот_ПараметрыПечати(СтруктураПараметров);
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;

	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати="ПАРАМЕТРЫ_ПЕЧАТИ_АктВыполненыхРабот_ТН";

	Макет=ИнициализацияМакета(СтруктураПараметров, "АктВыполненыхРабот");
	
	Область=Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);

	Область=Макет.ПолучитьОбласть("Строка");
	Для каждого СтрокаКоллекции Из ПараметрыПечати.Материалы Цикл
		Область.Параметры.Заполнить(СтрокаКоллекции);
 		ТабДокумент.Вывести(Область);
	КонецЦикла;
	
	Область=Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);
	
	Возврат ТабДокумент;
КонецФункции 

Функция Печать_ДефектнаяВедомость_ПараметрыПечати(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	тзДанные=ПолучитьПараметрыПечати(СсылкаНаОбъект);
	ПараметрыПечати=Новый Структура;
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
	КонецЦикла;
	
	ПараметрыПечати.Вставить("Заголовок", ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Дефектная ведомость"));
	стрАвтомобиль="На текущий ремонт автомобиля "; стрКолонки="Автомобиль,АвтомобильМарка,АвтомобильНаименование,АвтомобильВодитель";
	тзАвтомобили=ПараметрыПечати.Материалы.Скопировать(,стрКолонки);
	тзАвтомобили.Свернуть(стрКолонки);
	Для Каждого СтрокаКоллекции Из тзАвтомобили Цикл
		стрАвтомобиль=стрАвтомобиль+СтрокаКоллекции.АвтомобильМарка+" гос. номер "+СтрокаКоллекции.АвтомобильНаименование;
	КонецЦикла;
	ПараметрыПечати.Вставить("Заголовок1",стрАвтомобиль);

//	ПараметрыПечати.Материалы.Колонки.Добавить("НомерСтроки");
	ПараметрыПечати.Материалы.Колонки.Добавить("НачалоРабот");
	ПараметрыПечати.Материалы.Колонки.Добавить("КонецРабот");
	НомерСтроки=0;
	Для каждого СтрокаКоллекции Из ПараметрыПечати.Материалы Цикл
	//	НомерСтроки=НомерСтроки+1;
	//	СтрокаКоллекции.НомерСтроки=НомерСтроки;	
		СтрокаКоллекции.НачалоРабот="";
		СтрокаКоллекции.КонецРабот="";
	КонецЦикла;
	ПараметрыПечати.Вставить("Механик","");
	
	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;	

	Возврат ПараметрыПечати;
КонецФункции

Функция Печать_ДефектнаяВедомость(СтруктураПараметров)
	ПараметрыПечати=Печать_ДефектнаяВедомость_ПараметрыПечати(СтруктураПараметров);
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Макет=ИнициализацияМакета(СтруктураПараметров, "ДефектнаяВедомость");
	Таблица=Новый ТабличныйДокумент;
	Таблица.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДефектнаяВедомость_ТН";

	Область=Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ПараметрыПечати);
	Таблица.Вывести(Область);
	
	Область=Макет.ПолучитьОбласть("Строка");
	Для каждого СтрокаКоллекции Из ПараметрыПечати.Материалы Цикл
		Область.Параметры.Заполнить(СтрокаКоллекции);
		Таблица.Вывести(Область);
	КонецЦикла;
	Область=Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ПараметрыПечати);
	Таблица.Вывести(Область);
	
	Возврат Таблица;
КонецФункции 

Функция Печать_АктНаСписание_ПараметрыПечати(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	
	тзДанные=ПолучитьПараметрыПечати(СсылкаНаОбъект);
	ПараметрыПечати=Новый Структура;
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
	КонецЦикла;
	ПараметрыПечати.Вставить("ТаблицаСуммСписания",БухгалтерскийУчетСервер.ПолучитьСуммуСписанияАктивов(СсылкаНаОбъект, Истина, Истина));

	ПараметрыПечати.Материалы.Свернуть("НомерСтроки, Номенклатура, НоменклатурныйНомер, стрНоменклатура, Склад, ЕдИзм, Подразделение, СтатьяЗатрат, ТОП", "Количество");
	ПараметрыПечати.Материалы.Колонки.Добавить("Имя");
	ПараметрыПечати.Материалы.Колонки.Добавить("НомПП");
	ПараметрыПечати.Материалы.Колонки.Добавить("Счет");
	ПараметрыПечати.Материалы.Колонки.Добавить("Сумма");
	ИтогоСумма=0; НомерТекущий=0;
	Для каждого СтрокаКоллекции Из ПараметрыПечати.Материалы Цикл
		Если СтрокаКоллекции.Подразделение.Пустая() Тогда
			СтрокаКоллекции.Подразделение=ПараметрыПечати.Подразделение;
		КонецЕсли;	
		СтрокаКоллекции.Имя = СокрЛП(СтрокаКоллекции.стрНоменклатура);
		СтрокаКоллекции.НомПП=НомерТекущий+1;
		МассивСтрок=ПараметрыПечати.ТаблицаСуммСписания.НайтиСтроки(Новый Структура("НомерСтрокиТабличнойЧасти", СтрокаКоллекции.НомерСтроки)); 
		Если МассивСтрок.Количество()=0 Тогда
			СтрокаКоллекции.Сумма = 0;
		Иначе
			СтрокаСуммСписания=МассивСтрок[0];
			СтрокаКоллекции.Сумма=СтрокаСуммСписания.Сумма;
			ИтогоСумма=ИтогоСумма+СтрокаСуммСписания.Сумма;
			тчПроводкиБУ=СтрокаКоллекции.ТОП.ПроводкиБУ;
			Если тчПроводкиБУ.Количество()>0 Тогда
				СтрокаКоллекции.Счет=тчПроводкиБУ[0].СчетДебет;
			КонецЕсли;
		КонецЕсли; 
		НомерТекущий=НомерТекущий+1;
	КонецЦикла;
	ПараметрыПечати.Вставить("Заголовок",ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Акт на списание"));
	ОтветственныеЛицаОрганизации = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(ПараметрыПечати.Организация, ПараметрыПечати.Дата, СсылкаНаОбъект);
	ПараметрыПечати.Вставить("Должность",ОтветственныеЛицаОрганизации.РуководительДолжность);
	ПараметрыПечати.Вставить("Руководитель",ОтветственныеЛицаОрганизации.Руководитель);
	ПараметрыПечати.Вставить("Основание",ПараметрыПечати.Комментарий);

	ПараметрыПечати.Вставить("НомерТекущий",НомерТекущий);
	ПараметрыПечати.Вставить("ФИОПредседательКомиссии",ОтветственныеЛицаОрганизации.ПредседательКомиссии);
	ПараметрыПечати.Вставить("ЧленКомиссии1",ОтветственныеЛицаОрганизации.ЧленКомиссии1);
	ПараметрыПечати.Вставить("ЧленКомиссии2",ОтветственныеЛицаОрганизации.ЧленКомиссии2);
	ПараметрыПечати.Вставить("ЧленКомиссии3",ОтветственныеЛицаОрганизации.ЧленКомиссии3);
	ПараметрыПечати.Вставить("ДолжностьПредседательКомиссии",ОтветственныеЛицаОрганизации.ПредседательКомиссииДолжность);
	ПараметрыПечати.Вставить("ДолжностьЧленКомиссии1",ОтветственныеЛицаОрганизации.ЧленКомиссииДолжность1);
	ПараметрыПечати.Вставить("ДолжностьЧленКомиссии2",ОтветственныеЛицаОрганизации.ЧленКомиссииДолжность2);
	ПараметрыПечати.Вставить("ДолжностьЧленКомиссии3",ОтветственныеЛицаОрганизации.ЧленКомиссииДолжность3);
	ПараметрыПечати.Вставить("Сумма",ИтогоСумма);

	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;	

	Возврат ПараметрыПечати;
КонецФункции	

Функция Печать_АктНаСписание(СтруктураПараметров)
	ПараметрыПечати=Печать_АктНаСписание_ПараметрыПечати(СтруктураПараметров);
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Макет=ИнициализацияМакета(СтруктураПараметров, "АктНаСписаниеТМЦ");

	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТребованиеНакладная_ТН";
	// Вывод заголовка
	Область=Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);

	Область=Макет.ПолучитьОбласть("Строка");
	Для каждого СтрокаКоллекции Из ПараметрыПечати.Материалы Цикл
		Область.Параметры.Заполнить(СтрокаКоллекции);
		ТабДокумент.Вывести(Область);
	КонецЦикла;

	// Вывод подвала
	Область=Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);
	Возврат ТабДокумент;
КонецФункции

Функция Печать_ТребованиеНакладная_ПараметрыПечати(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	тзДанные=ПолучитьПараметрыПечати(СсылкаНаОбъект);
	ПараметрыПечати=Новый Структура;
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
	КонецЦикла;
	ПараметрыПечати.Вставить("ТекстЗаголовка",ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Требование-накладная"));
	ФлагПечатиМест=(ПараметрыПечати.Материалы.Итог("КоличествоМест") > 0);
	ПараметрыПечати.Вставить("ФлагПечатиМест",ФлагПечатиМест);
    ПараметрыПечати.Материалы.Колонки.Добавить("Имя");
	Для каждого СтрокаКоллекции Из ПараметрыПечати.Материалы Цикл
		СтрокаКоллекции.Имя = СокрЛП(СтрокаКоллекции.стрНоменклатура)+ПечатныеФормыСервер.ПредставлениеСерий(СтрокаКоллекции);
	КонецЦикла;

	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;	

	Возврат ПараметрыПечати;
КонецФункции

Функция Печать_ТребованиеНакладная(СтруктураПараметров)
	
	ПараметрыПечати=Печать_ТребованиеНакладная_ПараметрыПечати(СтруктураПараметров);
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;

	Макет=ИнициализацияМакета(СтруктураПараметров, "ТребованиеНакладная");
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТребованиеНакладная_ТН";

	Область=Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);

	Область=Макет.ПолучитьОбласть("ШапкаТаблицы" + ?(ПараметрыПечати.ФлагПечатиМест, "Мест", ""));
	ТабДокумент.Вывести(Область);
	
	Область=Макет.ПолучитьОбласть("Строка" + ?(ПараметрыПечати.ФлагПечатиМест, "Мест", ""));	
	Для каждого СтрокаКоллекции Из ПараметрыПечати.Материалы Цикл
		Область.Параметры.Заполнить(СтрокаКоллекции);
		ТабДокумент.Вывести(Область);
	КонецЦикла;

	// Вывод подвала
	Область=Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(Область);

	Возврат ТабДокумент;
КонецФункции

Функция Печать_Акт_ПараметрыПечати(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	тзДанные=ПолучитьПараметрыПечати(СсылкаНаОбъект);
	ПараметрыПечати=Новый Структура;
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
	КонецЦикла;
    ТаблицаСтоимости=ПолучитьТаблицуСтоимостиТоваров(СсылкаНаОбъект);
	ТаблицаСтоимости.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");

	ВалютаУпрУчета=МодульВалютногоУчета.ПолучитьВалюту("Упр");
	Параметры=МодульВалютногоУчета.КурсВалюты(ВалютаУпрУчета, ПараметрыПечати.Дата);
	КурсВалютыУпрУчета=Параметры.Курс;
	КратностьВалютыУпрУчета=Параметры.Кратность;
	ПараметрыПечати.Вставить("Заголовок",ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Акт"));
	
	ОтветственныеЛицаОрганизации = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(ПараметрыПечати.Организация, ПараметрыПечати.Дата, СсылкаНаОбъект);

	стрАвтомобиль="на установку новых запасных частей и списание неисправных запасных часией на автомобиль ";
	стрКолонки="Автомобиль,АвтомобильМарка,АвтомобильНаименование,АвтомобильВодитель";
	тзАвтомобили=ПараметрыПечати.Материалы.Скопировать(,стрКолонки);
	тзАвтомобили.Свернуть(стрКолонки);
	Для Каждого СтрокаКоллекции Из тзАвтомобили Цикл
		стрАвтомобиль=стрАвтомобиль+СтрокаКоллекции.АвтомобильМарка+" гос. номер "+СтрокаКоллекции.АвтомобильНаименование;
	КонецЦикла;
	ПараметрыПечати.Вставить("Заголовок1",стрАвтомобиль);	
	ПараметрыПечати.Вставить("ЧленКомиссии1",ОтветственныеЛицаОрганизации.ЧленКомиссии1);
	ПараметрыПечати.Вставить("ЧленКомиссии2",ОтветственныеЛицаОрганизации.ЧленКомиссии2);
	ПараметрыПечати.Вставить("ЧленКомиссии3",ОтветственныеЛицаОрганизации.ЧленКомиссии3);

	ВалютаБухУчета=МодульВалютногоУчета.ПолучитьВалюту("Бух");
	
	ПараметрыПечати.Материалы.Колонки.Добавить("Цена");
	ПараметрыПечати.Материалы.Колонки.Добавить("Сумма");
	ИтогоСумма=0;	
	Для каждого СтрокаКоллекции Из ПараметрыПечати.Материалы Цикл
		Если СтрокаКоллекции.Количество = 0 Тогда
			Сумма = 0;
			Цена  = 0;
		Иначе
			Количество = 0;
			Сумма = ПолучитьСтоимостьТовара(ТаблицаСтоимости,
			                                СтрокаКоллекции.Номенклатура,
			                                СтрокаКоллекции.Характеристика,
			                                СтрокаКоллекции.Серия,
			                                СтрокаКоллекции.ПартионныйУчетПоСериям,
			                                Количество, СтрокаКоллекции.НомерСтроки);
			Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(Сумма, ВалютаУпрУчета, ВалютаБухУчета, КурсВалютыУпрУчета, 1, КратностьВалютыУпрУчета, 1);
			Цена = Окр(?(Количество > 0, Сумма / Количество, 0), 2);
		КонецЕсли;
		СтрокаКоллекции.Цена = Цена;
		СтрокаКоллекции.Сумма = Сумма;
		ИтогоСумма=ИтогоСумма+Сумма;
	КонецЦикла;
	ПараметрыПечати.Вставить("Сумма",ИтогоСумма);
	
	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;	

	Возврат ПараметрыПечати;

КонецФункции	

Функция Печать_Акт(СтруктураПараметров)
	ПараметрыПечати=Печать_Акт_ПараметрыПечати(СтруктураПараметров);
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Акт_ТН";
	
	Макет=ИнициализацияМакета(СтруктураПараметров, "АктНаРемонтныеРаботы");

	Область=Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);
	
	ВалютаБухУчета=МодульВалютногоУчета.ПолучитьВалюту("Бух");
	
	Область=Макет.ПолучитьОбласть("Строка"); ИтогоСумма=0;	
	Для каждого СтрокаКоллекции Из ПараметрыПечати.Материалы Цикл
		Область.Параметры.Заполнить(СтрокаКоллекции);
        ТабДокумент.Вывести(Область);
	КонецЦикла;
	Область=Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ПараметрыПечати);
    ТабДокумент.Вывести(Область);
	
	Возврат ТабДокумент;
КонецФункции 

Функция Печать_МБ8_ПараметрыПечати(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	тзДанные=ПолучитьПараметрыПечати(СсылкаНаОбъект);
	ПараметрыПечати=Новый Структура;
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
	КонецЦикла;
	Руководители=ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(ПараметрыПечати.Организация,ПараметрыПечати.Дата, СтруктураПараметров.СсылкаНаОбъект);
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Организация, ПараметрыПечати.Дата);
	ПараметрыПечати.Вставить("ПредставлениеОрганизации",ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации));
	ПараметрыПечати.Вставить("ОрганизацияПоОКПО",СведенияОбОрганизации.КодПоОКПО);
	ПараметрыПечати.Вставить("НомерДокумента",ОбщегоНазначенияСервер.НомерНаПечать(СсылкаНаОбъект));
	ПараметрыПечати.Вставить("ПредставлениеПодразделения",ПараметрыПечати.Подразделение);

	
	ПараметрыПечати.Материалы.Сортировать("НомерСтроки Возр");
	ПараметрыПечати.Материалы.Колонки.Добавить("ТоварНаименование");
	ПараметрыПечати.Материалы.Колонки.Добавить("Цена");
	ПараметрыПечати.Материалы.Колонки.Добавить("СуммаПогашеннойСтоимости");
	ПараметрыПечати.Материалы.Колонки.Добавить("ДатаПоступления");
	Для Каждого СтрокаТовар Из ПараметрыПечати.Материалы Цикл
		СтрокаТовар.ТоварНаименование        = СокрЛП(СтрокаТовар.стрНоменклатура);
		СтрокаТовар.Цена                     = 0;
        СтрокаТовар.СуммаПогашеннойСтоимости = 0;
		СтрокаТовар.ДатаПоступления		  = 0;
	КонецЦикла;
	ПараметрыПечати.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью",ЧислоПрописью(ПараметрыПечати.Материалы.Итог("Количество"), ,",,,,,,,,0"));

	ПараметрыПечати.Вставить("ФИОПредседательКомиссии",Руководители.ПредседательКомиссии);
   	ПараметрыПечати.Вставить("ФИОЧленаКомиссии1",Руководители.ЧленКомиссии1);
   	ПараметрыПечати.Вставить("ФИОЧленаКомиссии2",Руководители.ЧленКомиссии2);
   	ПараметрыПечати.Вставить("ФИОЧленаКомиссии3",Руководители.ЧленКомиссии3);
   	ПараметрыПечати.Вставить("ДолжностьПредседательКомиссии",Руководители.ПредседательКомиссииДолжность);
   	ПараметрыПечати.Вставить("ДолжностьЧленаКомиссии1",Руководители.ЧленКомиссииДолжность1);
   	ПараметрыПечати.Вставить("ДолжностьЧленаКомиссии2",Руководители.ЧленКомиссииДолжность2);
   	ПараметрыПечати.Вставить("ДолжностьЧленаКомиссии3",Руководители.ЧленКомиссииДолжность3);

	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;	

	Возврат ПараметрыПечати;
КонецФункции

Функция Печать_МБ8(СтруктураПараметров)
	ПараметрыПечати=Печать_МБ8_ПараметрыПечати(СтруктураПараметров);
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Макет=ИнициализацияМакета(СтруктураПараметров, "МБ8");
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_МБ8_ТН";

	ШапкаТаблицы     = Макет.ПолучитьОбласть("Шапка");
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");	
	Итого            = Макет.ПолучитьОбласть("Итого");
	Подвал           = Макет.ПолучитьОбласть("Подвал");
	
	ШапкаТаблицы.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ШапкаТаблицы);

	// Выводим заголовок таблицы
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	// Инициализация номера страницы
	НомерСтраницы = 1;
	НомерСтроки = 0;

	// Выводим многострочную часть докмента
	Строка   = Макет.ПолучитьОбласть("Строка");
	ПоследняяСтрока	= Макет.ПолучитьОбласть("ПоследняяСтрока");
	
	Для Каждого СтрокаТовар Из ПараметрыПечати.Материалы Цикл
		НомерСтроки = НомерСтроки + 1;
		СтрокаТаблицы = Новый Массив;
		СтрокаТаблицы.Добавить(Строка);
		Если НЕ (НомерСтроки = ПараметрыПечати.Материалы.Количество()) Тогда
			СтрокаТаблицы.Добавить(ПоследняяСтрока);
		Иначе 
			СтрокаТаблицы.Добавить(Итого);
		КонецЕсли;
		Если НЕ ПечатныеФормыСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаТаблицы) Тогда
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.Вывести(ПоследняяСтрока);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;
		Строка.Параметры.Заполнить(СтрокаТовар);
		ТабДокумент.Вывести(Строка);
	КонецЦикла;

	Итого.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Итого);
	
	// Проверим, помещается ли подвал
	Если НЕ ПечатныеФормыСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подвал) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	// Выводим подвал
	Подвал.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Подвал);
	
	Возврат ТабДокумент;
КонецФункции

Функция Печать_М11_ПараметрыПечати(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	тзДанные=ПолучитьПараметрыПечати(СсылкаНаОбъект);
	ПараметрыПечати=Новый Структура;
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
	КонецЦикла;

	ЭтоСкладРозницы = ПараметрыПечати.Склад.ВидСклада = Перечисления.ВидыСкладов.Розничный;
	
	Если НЕ ЭтоСкладРозницы Тогда
		ТаблицаСтоимости=ПолучитьТаблицуСтоимостиТоваров(СсылкаНаОбъект);
		ТаблицаСтоимости.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
		
		ВалютаУпрУчета          = МодульВалютногоУчета.ПолучитьВалюту("Упр");
		Параметры               = МодульВалютногоУчета.КурсВалюты(ВалютаУпрУчета, ПараметрыПечати.Дата);
		КурсВалютыУпрУчета      = Параметры.Курс;
		КратностьВалютыУпрУчета = Параметры.Кратность;
	КонецЕсли;
	
	ПараметрыПечати.Вставить("Заголовок", "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + Строка(ПараметрыПечати.НомерДокумента));
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Организация, ПараметрыПечати.ДатаДокумента);

	ПараметрыПечати.Вставить("ПредставлениеОрганизации", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации));
	ПараметрыПечати.Вставить("КодОКПО", СведенияОбОрганизации.КодПоОКПО);
	ПараметрыПечати.Вставить("ПредставлениеПодразделения", ПараметрыПечати.Подразделение);
	ПараметрыПечати.Склад=?(ПараметрыПечати.Склад.Подразделение.Пустая(), ПараметрыПечати.Склад, ПараметрыПечати.Склад.Подразделение);
	стрСчетов="";
	Если ПараметрыПечати.Материалы.Количество()>0 И НЕ ПараметрыПечати.Материалы[0].ТОП.Пустая() Тогда
		Для Каждого СтрокаТз ИЗ ПараметрыПечати.Материалы Цикл
			Если Найти(стрСчетов,Строка(СтрокаТз.ТОП.ПроводкиБУ[0].СчетКредит))>0 Тогда Продолжить; КонецЕсли;
			стрСчетов=стрСчетов+Строка(СтрокаТз.ТОП.ПроводкиБУ[0].СчетКредит)+" ";
		КонецЦикла;	
	КонецЕсли;
	ПараметрыПечати.Вставить("КоррСчет",стрСчетов);

	ВалютаБухУчета=МодульВалютногоУчета.ПолучитьВалюту("Бух");

	ПараметрыПечати.Материалы.Колонки.Добавить("МатериалНаименование");
	ПараметрыПечати.Материалы.Колонки.Добавить("Цена");
	ПараметрыПечати.Материалы.Колонки.Добавить("Сумма");
	ПараметрыПечати.Материалы.Колонки.Добавить("Счет");
	Для Каждого ВыборкаПоСтрокам ИЗ ПараметрыПечати.Материалы Цикл
		ВыборкаПоСтрокам.МатериалНаименование=СокрЛП(ВыборкаПоСтрокам.стрНоменклатура)+ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаПоСтрокам);

		Если ЭтоСкладРозницы Тогда
			Цена=ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыРозницы(ВыборкаПоСтрокам.Номенклатура, ПараметрыПечати.Склад.ТипЦенРозничнойТорговли, ВыборкаПоСтрокам.Характеристика, ПараметрыПечати.Дата);
			Сумма=ВыборкаПоСтрокам.Количество * Цена;
		Иначе
			Если ВыборкаПоСтрокам.Количество=0 Тогда
				Сумма = 0;
				Цена  = 0;
			Иначе
				Количество = 0;
				Сумма = ПолучитьСтоимостьТовара(ТаблицаСтоимости,
				                                ВыборкаПоСтрокам.Номенклатура,
				                                ВыборкаПоСтрокам.Характеристика,
				                                ВыборкаПоСтрокам.Серия,
				                                ВыборкаПоСтрокам.ПартионныйУчетПоСериям,
				                                Количество,ВыборкаПоСтрокам.НомерСтроки);
				Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(Сумма, ВалютаУпрУчета, ВалютаБухУчета, КурсВалютыУпрУчета, 1, КратностьВалютыУпрУчета, 1);
				Цена = Окр(?(Количество > 0, Сумма / Количество, 0), 2);
			КонецЕсли;			
		КонецЕсли;
		ВыборкаПоСтрокам.Цена = Цена;
		ВыборкаПоСтрокам.Сумма = Сумма;
		Попытка ВыборкаПоСтрокам.Счет=ВыборкаПоСтрокам.ТОП.ПроводкиБУ[0].СчетДебет;
		Исключение
		КонецПопытки;
	КонецЦикла;

	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;	

	Возврат ПараметрыПечати;
КонецФункции	

Функция Печать_М11(СтруктураПараметров)
	
	ПараметрыПечати=Печать_М11_ПараметрыПечати(СтруктураПараметров);
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТребованиеНакладная_М11";
	Макет=ИнициализацияМакета(СтруктураПараметров, "М11");
	
	Область=Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);
	
	Для Каждого ВыборкаПоСтрокам ИЗ ПараметрыПечати.Материалы Цикл
		Область=Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(ВыборкаПоСтрокам);
		ТабДокумент.Вывести(Область);
	КонецЦикла;

	Область=Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(Область);
	
	Возврат ТабДокумент;
КонецФункции

Процедура Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	Если СтруктураПараметров.ИмяМакета="Накладная" Тогда
		ТабДокумент=Печать_ТребованиеНакладная(СтруктураПараметров);

	ИначеЕсли СтруктураПараметров.ИмяМакета="М11" Тогда
		ТабДокумент=Печать_М11(СтруктураПараметров);

	ИначеЕсли СтруктураПараметров.ИмяМакета="МБ8" Тогда
		ТабДокумент=Печать_МБ8(СтруктураПараметров);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="РасходСРозничныхСкладовВЦенахАТТ" Тогда
		ТабДокумент=ПечатныеФормыСервер.ПриходРасходСРозничныхСкладовВЦенахАТТ(СтруктураПараметров.СсылкаНаОбъект, МодульВалютногоУчета.ПолучитьВалюту("Бух"), Ложь);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="АктНаСписание" Тогда
		ТабДокумент=Печать_АктНаСписание(СтруктураПараметров);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="ДефектнаяВедомость" Тогда
		ТабДокумент=Печать_ДефектнаяВедомость(СтруктураПараметров);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="ЛимитнаяКарта" Тогда
		ТабДокумент=Печать_ЛимитнаяКарта(СтруктураПараметров);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="АктНаРемонтныеРаботы" Тогда
		ТабДокумент=Печать_Акт(СтруктураПараметров);

	ИначеЕсли СтруктураПараметров.ИмяМакета="АктВыполненыхРабот" Тогда
		ТабДокумент=Печать_АктВыполненыхРабот(СтруктураПараметров);
	КонецЕсли;
КонецПроцедуры
