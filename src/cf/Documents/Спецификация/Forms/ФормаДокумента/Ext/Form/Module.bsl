&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="ПоказатьДеревоСпецификации" Тогда
		ОткрытьФорму("Документ.Спецификация.Форма.ФормаДеревоСпецификации", Новый Структура("Спецификация", Объект.Ссылка), ЭтаФорма, УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		УправлениеДиалогамиКлиент.ВыполнитьДействие(Команда.Имя, ЭтаФорма, Объект);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементовФормы()
КонецПроцедуры

&НаКлиенте
Процедура Страницы_ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элементы.Страницы.ТекущаяСтраница=Элементы.ВерсииСпецификации Тогда
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(дсВерсииСпецификации, "Номенклатура", Объект.Номенклатура);
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(дсВерсииСпецификации, "ХарактеристикаНоменклатуры", Объект.ХарактеристикаНоменклатуры);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ТипЦены()
	Возврат ?(Объект.ТипЦен.Пустая(), Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить(), Объект.ТипЦен);	
КонецФункции	 

&НаСервереБезКонтекста
Функция СформироватьСтруктураТабличнойЧасти(ИмяТабличнойЧасти)
	Структура=Новый Структура;
	Для каждого мдРеквизит Из Метаданные.Документы.Спецификация.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты Цикл
		Структура.Вставить(мдРеквизит.Имя);
	КонецЦикла; 
	Возврат Структура;
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуРедактированияСтроки(Редактирование = Ложь, Копирование=Ложь);
	стрТабличнаяЧасть=стрЗаменить(Элементы.ТабличныеЧасти.ТекущаяСтраница.Имя, "Страница", "");
	
	СтрокаТабличнойЧасти=?(Редактирование, Элементы[стрТабличнаяЧасть].ТекущиеДанные, Неопределено);
	СтрокаТабличнойЧастиИсточник=Неопределено;
	Если Копирование Тогда
		СтрокаТабличнойЧасти=Элементы[стрТабличнаяЧасть].ТекущаяСтрока;
	КонецЕсли;

	ОписаниеОповещения=Новый ОписаниеОповещения("ОбработкаОповещения_Редактирование", ЭтотОбъект);
	
	ПараметрыФормы=Новый Структура;
	Если СтрокаТабличнойЧасти=Неопределено Тогда
		ПараметрыФормы.Вставить("ДанныеСтроки", Неопределено);
	Иначе
		ПараметрыФормы.Вставить("ДанныеСтроки", СформироватьСтруктураТабличнойЧасти(стрТабличнаяЧасть));
		ЗаполнитьЗначенияСвойств(ПараметрыФормы.ДанныеСтроки, СтрокаТабличнойЧасти);
	КонецЕсли;
	ПараметрыФормы.Вставить("Изделие", Объект.Номенклатура);
	ПараметрыФормы.Вставить("ИмяТЧ", стрТабличнаяЧасть);
	
	ОткрытьФорму("Документ.Спецификация.Форма.Форма"+стрТабличнаяЧасть, ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Вложения"

&НаКлиенте
Процедура тпВложение_ВыполнитьДействие(Команда)
	Если Команда.Имя="ВложенияПредпросмотр" Тогда
		Элементы.ВложенияПредпросмотр.Пометка=НЕ Элементы.ВложенияПредпросмотр.Пометка;
		Элементы.ВложенияГруппаПросмотр.Видимость=Элементы.ВложенияПредпросмотр.Пометка;
		Если Элементы.ВложенияПредпросмотр.Пометка Тогда
			тпВложения_ОбработчикОжидания();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры	 

&НаКлиенте
Процедура тпВложения_ПриАктивизацииСтроки(Элемент)
	Если Элементы.тпВложения.ТекущиеДанные=Неопределено Тогда Возврат; КонецЕсли;
	Если НЕ Элементы.ВложенияПредпросмотр.Пометка Тогда Возврат; КонецЕсли;
	
	тпВложения_ОбработчикОжидания();
КонецПроцедуры

&НаКлиенте
Процедура тпВложения_ПредпросмотПоказать(СтруктураДанных)
	Модуль=ОбщегоНазначенияКлиент.ОбщийМодуль("ВложенияКлиент");
	Модуль.ПредпросмотрПоказать(ЭтаФорма, СтруктураДанных);
КонецПроцедуры

&НаСервере
Процедура тпВложения_ПредпросмотСоздать(СтруктураДанных)
	Модуль=ОбщегоНазначенияСервер.ОбщийМодуль("ВложенияСервер");
	Модуль.ПредпросмотрСоздать(ЭтаФорма, СтруктураДанных);
КонецПроцедуры

&НаКлиенте
Процедура тпВложения_ОбработчикОжидания()
	Если Элементы.тпВложения.ТекущиеДанные=Неопределено Тогда Возврат; КонецЕсли;

	СтруктураДанных=Новый Структура("ИмяФайла,Каталог,ТипID,ID,ВариантХранения,ИндексПиктограммы");
	ЗаполнитьЗначенияСвойств(СтруктураДанных, Элементы.тпВложения.ТекущиеДанные);
	СтруктураДанных.Вставить("Ссылка", Объект.Ссылка);
	СтруктураДанных.Вставить("ИмяРеквизита", ОбщегоНазначенияКлиент.ОбщийМодуль("ВложенияОбщий").ИмяРеквизитаПоИндексуПиктограммы(СтруктураДанных.ИндексПиктограммы));

	Если Элементы.Найти("ВложениеПросмотр"+СтруктураДанных.ИмяРеквизита)=Неопределено Тогда	
		тпВложения_ПредпросмотСоздать(СтруктураДанных);
	КонецЕсли;

	тпВложения_ПредпросмотПоказать(СтруктураДанных);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Обработчики оповещения

&НаКлиенте
Процедура ОбработчикОповещения_ОбработкаПодбора(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	тпТабличноеПоле_Изменить(Параметр1);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ВводШтрихкода(Штрихкод, ПараметрыДоп) Экспорт
	Если Не ПустаяСтрока(Штрихкод) Тогда 
		СтруктураВозврата=ПодключаемоеОборудованиеСервер.ОбработатьВведенныйШтрихкод(Штрихкод);
		Если ЗначениеЗаполнено(СтруктураВозврата.Номенклатура) Тогда
			тпТовары_Добавить(СтруктураВозврата.Номенклатура, СтруктураВозврата.ХарактеристикаНоменклатуры, СтруктураВозврата.СерияНоменклатуры, СтруктураВозврата.Качество, СтруктураВозврата.ЕдиницаИзмерения, СтруктураВозврата.Количество);
		Иначе
			ПоказатьПредупреждение(,"штрих код не найден!", 10);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_Товары_Заполнить(Параметр1, Параметр2) Экспорт
	Если Параметр1=КодВозвратаДиалога.Отмена Тогда Возврат; КонецЕсли; 
	
	Если Параметр1=КодВозвратаДиалога.Да Тогда
		Объект.Товары.Очистить();
	КонецЕсли;

	//*** тпТовары_Заполнить(Параметр2.Команда);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения_Редактирование(Параметр1, Параметр2) Экспорт
	Если ТипЗнч(Параметр1)=Тип("Структура") Тогда
		Если Параметр1.Редактирование=Ложь Тогда
			СтрокаТабличнойЧасти=Объект[Параметр1.ИмяТЧ].Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,Параметр1);
			СтрокаТабличнойЧасти.ID=Новый УникальныйИдентификатор();
		Иначе	
			СтрокаТабличнойЧасти=Элементы[Параметр1.ИмяТЧ].ТекущиеДанные;
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,Параметр1);
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Стандартные (универсальные) процедуры\функции

&НаСервере
Процедура ВыполнитьСортировкуТабличнойЧасти(ИмяТабличнойЧасти, стрСортировка) Экспорт
	СортировкаТабличнойЧастиСервер.Сортировать(ИмяТабличнойЧасти, стрСортировка, Объект);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТиповыеОперации(стрТабличнаяЧасть)
	ДокументОбъект=РеквизитФормыВЗначение("Объект");
	Для каждого СтрокаТабличнойЧасти Из ДокументОбъект[стрТабличнаяЧасть] Цикл
		УправлениеТиповымиОперациямиСервер.УстановитьТиповуюОперацию(СтрокаТабличнойЧасти, ДокументОбъект, ЭтаФорма, стрТабличнаяЧасть);
	КонецЦикла;
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="" Тогда
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СобытияЭлементовФормыКлиент.НачалоВыбора(ЭтаФорма, Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_Нажатие(Элемент, СтандартнаяОбработка)
	СобытияЭлементовФормыКлиент.Нажатие(ЭтаФорма, Элемент, СтандартнаяОбработка);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля УНИВЕРСАЛЬНЫЕ

&НаКлиенте
Процедура кпТабличноеПоле_ВыполнитьДействие(Команда)
	стрКоманда=Команда.Имя;
	Если Лев(стрКоманда, 11)="Сортировать" Тогда
		ИмяТабличнойЧасти=стрЗаменить(стрКоманда, "Сортировать_", "");
		СортировкаТабличнойЧастиКлиент.Открыть(ИмяТабличнойЧасти, ЭтаФорма, Объект);

	ИначеЕсли Лев(стрКоманда, 16)="НайтиПоШтрихКоду"Тогда
		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВводШтрихкода", ЭтотОбъект);
		ПоказатьВводСтроки(ОписаниеОповещения, , "Введите штрихкод товара");

	ИначеЕсли Лев(стрКоманда, 6)="Подбор"Тогда
		ИмяТабличнойЧасти=стрЗаменить(стрКоманда, "Подбор_", "");

		ПараметрыФормы=УправлениеДиалогамиСервер.СтруктураПодбора();
		//ПараметрыФормы.Вставить("Организация", Объект.Организация);
		//ПараметрыФормы.Вставить("Склад", Объект.Склад);
		//ПараметрыФормы.Вставить("ТипЦен", Объект.ТипЦен);
		//ПараметрыФормы.Свойство("ПоказыватьЦены", НЕ Объект.ТипЦен.Пустая());

		УправлениеДокументамиКлиент.ПодборТоваров(ЭтаФорма, ПараметрыФормы);

	ИначеЕсли Лев(стрКоманда, 12)="ЗаполнитьТОП" Тогда
		ИмяТабличнойЧасти=стрЗаменить(стрКоманда, "ЗаполнитьТОП_", "");
		ЗаполнитьТиповыеОперации(ИмяТабличнойЧасти);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпТабличноеПоле_Изменить(СтруктураПараметров) Экспорт
	Если СтруктураПараметров.Свойство("Ошибка") Тогда ПоказатьПредупреждение(, СтруктураПараметров.Ошибка, 10, "Ошибка"); Возврат; КонецЕсли; 

	УправлениеКоллекциямиЗначенийСервер.СвойствоСтруктуры(СтруктураПараметров, "ХарактеристикаНоменклатуры", ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"));

	стрТабличнаяЧасть=ИмяТабличнойЧасти;
	
	СтруктураПоиска=Новый Структура;
	Если стрТабличнаяЧасть="Комплектующие" Тогда
		СтруктураПоиска.Вставить("Номенклатура");
		СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры", ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"));
	КонецЕсли; 

	ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтруктураПараметров);

	Если стрТабличнаяЧасть="ПобочныеПродукты" Тогда
		СтруктураПоиска=Новый Структура;
		СтруктураПоиска.Вставить("ПобочныйПродукт");
		СтруктураПоиска.Вставить("ХарактеристикаПобочногоПродукта", ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"));
		Если СтруктураПараметров.Свойство("Номенклатура") Тогда
			СтруктураПоиска.ПобочныйПродукт=СтруктураПараметров.Номенклатура;
		КонецЕсли;
		Если СтруктураПараметров.Свойство("ХарактеристикаНоменклатуры") Тогда
			СтруктураПоиска.ХарактеристикаПобочногоПродукта=СтруктураПараметров.ХарактеристикаНоменклатуры;
		КонецЕсли;
	КонецЕсли;

	РезультатПоиска=Объект[стрТабличнаяЧасть].НайтиСтроки(СтруктураПоиска);
	Если РезультатПоиска.Количество()=0 Тогда
		УправлениеКоллекциямиЗначенийСервер.СвойствоСтруктуры(СтруктураПараметров, "ЕдиницаИзмерения", ПредопределенноеЗначение("Справочник.ЕдиницыИзмерения.ПустаяСсылка"));
		Если НЕ ЗначениеЗаполнено(СтруктураПараметров.ЕдиницаИзмерения) Тогда
			СтруктураПараметров.ЕдиницаИзмерения=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СтруктураПараметров.Номенклатура, "ЕдиницаХраненияОстатков");
		КонецЕсли;
		ТекущиеДанные=Объект[стрТабличнаяЧасть].Добавить();
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, СтруктураПараметров);
		
		Если стрТабличнаяЧасть="ПобочныеПродукты" Тогда
			ТекущиеДанные.ПобочныйПродукт=СтруктураПараметров.Номенклатура;
			Если СтруктураПараметров.Свойство("ХарактеристикаНоменклатуры") Тогда
				ТекущиеДанные.ХарактеристикаПобочногоПродукта=СтруктураПараметров.ХарактеристикаНоменклатуры;
			КонецЕсли;
		КонецЕсли;

		Если ПустаяСтрока(ТекущиеДанные.ID) Тогда
			ТекущиеДанные.ID=Новый УникальныйИдентификатор;
		КонецЕсли;
	Иначе
		ТекущиеДанные=РезультатПоиска[0];
		ТекущиеДанные.Количество=ТекущиеДанные.Количество+СтруктураПараметров.Количество;
	КонецЕсли;
	
	//Установим добавленную\найденную строку текущей
	Элементы[стрТабличнаяЧасть].ТекущаяСтрока=ТекущиеДанные.ПолучитьИдентификатор();

	//Выполним модуль при изменении номенклатуры(если новая строка) или количества(если строка найдена)
	Если стрТабличнаяЧасть="Комплектующие" Тогда
		тпКомплектующие_Колонка_ПриИзменении(?(РезультатПоиска.Количество()=0, Элементы.КомплектующиеНоменклатура, Элементы.КомплектующиеКоличество));
	ИначеЕсли стрТабличнаяЧасть="ПобочныеПродукты" Тогда
		тпПобочныеПродукты_Колонка_ПриИзменении(?(РезультатПоиска.Количество()=0, Элементы.ПобочныеПродуктыПобочныйПродукт, Элементы.ПобочныеПродуктыКоличество));
	КонецЕсли;

	Элементы[стрТабличнаяЧасть].Обновить();
КонецПроцедуры

&НаСервере
Процедура тпТабличноеПоле_ОбновитьПредставление(стрТабличнаяЧасть)
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Товары"

&НаКлиенте
Процедура тпТовары_Добавить(Номенклатура, Характеристика=Неопределено, Серия=Неопределено, Качество=Неопределено, Единица=Неопределено, Количество=1)
	Если Характеристика=Неопределено Тогда
		Характеристика=ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");
	КонецЕсли; 
	Если Единица=Неопределено Тогда
		Единица=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Номенклатура, "ЕдиницаХраненияОстатков");
	КонецЕсли; 

	СтруктураПоиска=Новый Структура;
	Если ИмяТабличнойЧасти="ПобочныеПродукты" Тогда
		СтруктураПоиска.Вставить("ПобочныйПродукт", Номенклатура);
		СтруктураПоиска.Вставить("ХарактеристикаПобочногоПродукта", Характеристика);
	Иначе
		СтруктураПоиска.Вставить("Номенклатура", Номенклатура);
		СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры", Характеристика);		
	КонецЕсли;	

	РезультатПоиска=Объект[ИмяТабличнойЧасти].НайтиСтроки(СтруктураПоиска);
	Если РезультатПоиска.Количество()=0 Тогда
		ТекущиеДанные=Объект[ИмяТабличнойЧасти].Добавить();
		ТекущиеДанные.Номенклатура=Номенклатура;
		ТекущиеДанные.ЕдиницаИзмерения=Единица;
	Иначе
		ТекущиеДанные=РезультатПоиска[0];
	КонецЕсли;
	ТекущиеДанные.Количество=ТекущиеДанные.Количество+Количество;

	Элементы[ИмяТабличнойЧасти].Обновить();
	Элементы[ИмяТабличнойЧасти].ТекущаяСтрока=ТекущиеДанные.ПолучитьИдентификатор();

	//Выполним действия "при изменении"
	СтруктураПараметров=Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,Количество");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, ТекущиеДанные);
	тпТабличноеПоле_Изменить(СтруктураПараметров);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличной части "Комплектующие"

&НаКлиенте
Процедура кпКомплектующие_ВыполнитьДействие(Команда)
	стрКоманда=стрЗаменить(Команда.Имя, "кпКомплектующие_", "");
	Если стрКоманда="РедактироватьВДиалоге" Тогда
		Элементы.кпКомплектующие_РедактироватьВДиалоге.Пометка=Не Элементы.кпКомплектующие_РедактироватьВДиалоге.Пометка;
		Объект.РедактироватьВДиалоге1=Элементы.кпКомплектующие_РедактироватьВДиалоге.Пометка;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпКомплектующие_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Объект.РедактироватьВДиалоге1 Тогда
		СтандартнаяОбработка=Ложь;
		ОткрытьФормуРедактированияСтроки(Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпКомплектующие_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Объект.РедактироватьВДиалоге1 Тогда
		Отказ=Истина; ОткрытьФормуРедактированияСтроки(, Копирование);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпКомплектующие_ПередНачаломИзменения(Элемент, Отказ)
	Если Объект.РедактироватьВДиалоге1 Тогда
		Отказ=Истина; ОткрытьФормуРедактированияСтроки(Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпКомплектующие_ПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ID=Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпКомплектующие_ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
КонецПроцедуры

&НаКлиенте
Процедура тпКомплектующие_Колонка_ПриИзменении(Элемент)
	стрКолонка=стрЗаменить(Элемент.Имя, "Комплектующие", "");
	ТекущиеДанные=Элементы.Комплектующие.ТекущиеДанные;

	Если стрКолонка="Номенклатура" Тогда
		ТекущиеДанные.ЕдиницаИзмерения=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Номенклатура, "ЕдиницаХраненияОстатков");
		Если ТекущиеДанные.Количество=0 Тогда ТекущиеДанные.Количество=1; КонецЕсли;

	ИначеЕсли стрКолонка="ХарактеристикаНоменклатуры" Тогда
		Номенклатура=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.ХарактеристикаНоменклатуры, "Владелец");
		Если НЕ Номенклатура=ТекущиеДанные.Номенклатура Тогда
			ТекущиеДанные.Номенклатура=Номенклатура;
			ТекущиеДанные.ЕдиницаИзмерения=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Номенклатура, "ЕдиницаХраненияОстатков");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличной части "Статьи затрат"

&НаКлиенте
Процедура кпОперации_ВыполнитьДействие(Команда)
	стрКоманда=стрЗаменить(Команда.Имя, "кпОперации_", "");
	Если стрКоманда="РедактироватьВДиалоге" Тогда
		Элементы.кпОперации_РедактироватьВДиалоге.Пометка=Не Элементы.кпОперации_РедактироватьВДиалоге.Пометка;
		Объект.РедактироватьВДиалоге2=Элементы.кпОперации_РедактироватьВДиалоге.Пометка;
		
	ИначеЕсли стрКоманда="ЗаполнитьНаОсновнаииСпецификации" Тогда
		ОткрытьФорму("Документ.Спецификация.ФормаВыбора", Новый Структура("РежимВыбора", Истина), ЭтаФорма, УникальныйИдентификатор,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпОперации_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Объект.РедактироватьВДиалоге2 Тогда
		СтандартнаяОбработка=Ложь;
		ОткрытьФормуРедактированияСтроки(Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпОперации_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Объект.РедактироватьВДиалоге2 Тогда
		Отказ=Истина; ОткрытьФормуРедактированияСтроки(, Копирование);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпОперации_ПередНачаломИзменения(Элемент, Отказ)
	Если Объект.РедактироватьВДиалоге2 Тогда
		Отказ=Истина; ОткрытьФормуРедактированияСтроки(Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпОперации_ПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ID=Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпОперации_Колонка_ПриИзменении(Элемент)
	стрКолонка=стрЗаменить(Элемент.Имя, "Операции", "");
	ТекущиеДанные=Элементы.Операции.ТекущиеДанные;

	Если стрКолонка="Операция" Тогда
		ПодразделениеОперации=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Операция, "Подразделение");
		ТекущиеДанные.Подразделение=ПодразделениеОперации;
	ИначеЕсли стрКолонка="СтатьяЗатрат" Тогда
		Если ТекущиеДанные.Количество=0 Тогда ТекущиеДанные.Количество=1; КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура тпОперации_ЗаполнитьНаОснованииСпецификации(СпецификацияСсылка)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СпецификацияСсылка);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ИсточникДанных.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ИсточникДанных.Количество КАК Количество,
	|	ИсточникДанных.Цена КАК Цена,
	|	ИсточникДанных.Номенклатура КАК Номенклатура,
	|	ИсточникДанных.Операция КАК Операция,
	|	ИсточникДанных.ВариантИспользованияВПроизводственномЦикл КАК ВариантИспользованияВПроизводственномЦикл
	|ИЗ
	|	Документ.Спецификация.Операции КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &Ссылка
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока=Объект.Операции.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.ID=Новый УникальныйИдентификатор;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличной части "Побочные продукты"

&НаКлиенте
Процедура кпПобочныеПродукты_ВыполнитьДействие(Команда)
	стрКоманда=стрЗаменить(Команда.Имя, "кпПобочныеПродукты_", "");
	Если стрКоманда="РедактироватьВДиалоге" Тогда
		Элементы.кпПобочныеПродукты_РедактироватьВДиалоге.Пометка=Не Элементы.кпПобочныеПродукты_РедактироватьВДиалоге.Пометка;
		Объект.РедактироватьВДиалоге3=Элементы.кпПобочныеПродукты_РедактироватьВДиалоге.Пометка;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпПобочныеПродукты_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Объект.РедактироватьВДиалоге3 Тогда
		СтандартнаяОбработка=Ложь;
		ОткрытьФормуРедактированияСтроки(Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпПобочныеПродукты_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Объект.РедактироватьВДиалоге3 Тогда
		Отказ=Истина; ОткрытьФормуРедактированияСтроки(, Копирование);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпПобочныеПродукты_ПередНачаломИзменения(Элемент, Отказ)
	Если Объект.РедактироватьВДиалоге3 Тогда
		Отказ=Истина; ОткрытьФормуРедактированияСтроки(Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпПобочныеПродукты_ПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ID=Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпПобочныеПродукты_ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
КонецПроцедуры

&НаКлиенте
Процедура тпПобочныеПродукты_Колонка_ПриИзменении(Элемент)
	стрКолонка=стрЗаменить(Элемент.Имя, "ПобочныеПродукты", "");
	ТекущиеДанные=Элементы.ПобочныеПродукты.ТекущиеДанные;

	Если стрКолонка="Номенклатура" Тогда
		ТекущиеДанные.ЕдиницаИзмерения=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Номенклатура, "ЕдиницаХраненияОстатков");
		Если ТекущиеДанные.Количество=0 Тогда ТекущиеДанные.Количество=1; КонецЕсли;

	ИначеЕсли стрКолонка="ХарактеристикаНоменклатуры" Тогда
		Номенклатура=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.ХарактеристикаНоменклатуры, "Владелец");
		Если НЕ Номенклатура=ТекущиеДанные.Номенклатура Тогда
			ТекущиеДанные.Номенклатура=Номенклатура;
			ТекущиеДанные.ЕдиницаИзмерения=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Номенклатура, "ЕдиницаХраненияОстатков");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличной части "Сделки"

&НаКлиенте
Процедура кпСделки_ВыполнитьДействие(Команда)
	тпСделки_Подбор("Заполнить", ЭтаФорма);
КонецПроцедуры
 
&НаКлиенте
Процедура тпСделки_Колонка_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь; тпСделки_Подбор("Изменить", Элемент);
КонецПроцедуры

&НаКлиенте
Процедура тпСделки_Подбор(стрКоманда, Владелец)
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Объект", Объект);
	СтруктураПараметров.Вставить("Организация", Объект.Организация);
	СтруктураПараметров.Вставить("Склад", Объект.Склад);
	СтруктураПараметров.Вставить("МножественныйВыбор", стрКоманда="Заполнить");

	УправлениеЗаказамиКлиент.ВыполнитьДействие(СтруктураПараметров, Владелец, стрКоманда);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий дополнительных реквизитов табличных частей

&НаКлиенте
Процедура тзРеквизитыТЧ_ПриИзменении_Клиент(Элемент)
	тзРеквизитыТЧ_ПриИзменении_Сервер(Элемент.Имя);
КонецПроцедуры

&НаСервере
Процедура тзРеквизитыТЧ_ПриИзменении_Сервер(стрИмя)
	МетаконфигураторСервер.ДопРеквизиты_ПриИзменении(стрИмя, ЭтаФорма);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СобытияФормыСервер.ПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Объект.РедактироватьВДиалоге1=Истина;
	
	Элементы.кпКомплектующие_РедактироватьВДиалоге.Пометка=Объект.РедактироватьВДиалоге1;
	Элементы.кпОперации_РедактироватьВДиалоге.Пометка=Объект.РедактироватьВДиалоге2;
	Элементы.кпПобочныеПродукты_РедактироватьВДиалоге.Пометка=Объект.РедактироватьВДиалоге3;
	СобытияФормыКлиент.ПриОткрытии(Отказ, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СобытияФормыКлиент.ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	СобытияФормыКлиент.ПриЗакрытии(ЗавершениеРаботы, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ИсточникВыбора)=Тип("УправляемаяФорма") Тогда
		//Если ТипЗнч(ВыбранноеЗначение)=Тип("ДокументСсылка.Спецификация") Тогда
		//	тпОперации_ЗаполнитьНаОснованииСпецификации(ВыбранноеЗначение);
		//КонецЕсли;
		Если ИсточникВыбора.ИмяФормы="Обработка.ПодборТовара.Форма.Форма" Тогда
			Если ТипЗнч(ВыбранноеЗначение)=Тип("ДокументСсылка.Спецификация") Тогда
				тпТабличноеПоле_Изменить(ВыбранноеЗначение);
			КонецЕсли;

		ИначеЕсли ИсточникВыбора.ИмяФормы="Документ.Спецификация.Форма.ФормаСписка" Тогда
			тпОперации_ЗаполнитьНаОснованииСпецификации(ВыбранноеЗначение);
		КонецЕсли;
	КонецЕсли;
	СобытияФормыКлиент.ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	СобытияФормыКлиент.ОбработкаОповещения(ИмяСобытия, Параметр, Источник, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	СобытияФормыКлиент.ОбработкаАктивизации(АктивныйОбъект, Источник, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	СобытияФормыКлиент.ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	СобытияФормыСервер.ПриЧтенииНаСервере(ТекущийОбъект, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СобытияФормыКлиент.ПередЗаписью(Отказ, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СобытияФормыСервер.ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);	
КонецПроцедуры
 
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)	
	СобытияФормыСервер.ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)	
	СобытияФормыСервер.ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	СобытияФормыКлиент.ПослеЗаписи(ПараметрыЗаписи, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	СобытияФормыКлиент.ВнешнееСобытие(Источник, Событие, Данные, ЭтаФорма, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначения(СтандартнаяОбработка)
	СобытияФормыКлиент.ВыборЗначения(СтандартнаяОбработка, ЭтаФорма, Объект);
КонецПроцедуры
