Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт
	Возврат ДополнительныеСвойства.УчетнаяПолитика;
КонецФункции

Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Програмный модуль

Процедура ВыполнитьМодуль(стрМодуль, СтруктураПараметров) Экспорт
	Выполнить(стрМодуль);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Движения по регистрам 

Процедура ДвиженияПоРегистрам(Отказ)
	//Для каждого СтрокаКоллекции Из Движения Цикл
	// 	СтрокаКоллекции.Записывать=Истина;
	//КонецЦикла;
	
	ДвижениеПоРегистру_УчетПотребностей(Отказ);
	ДвижениеПоРегистру_УчетРезервовТМЦ(Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетПотребностей(Отказ)
	тзДанные=Движения.УчетПотребностей.ВыгрузитьКолонки();

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НаДата", МоментВремени());
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.Номенклатура КАК Номенклатура,
	|	ИсточникДанных.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ИсточникДанных.Склад КАК Склад,
	|	ИсточникДанных.Заказ Как ДокументРезерва,
	|	ИсточникДанных.Количество КАК Количество,
	|	ДанныеЗаказа.Количество Как КоличествоЗаказа
	|ИЗ
	|	Документ.КорректировкаРезервовПотребностей.Потребности КАК ИсточникДанных
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		ИсточникДанных.Номенклатура КАК Номенклатура,
	|		ИсточникДанных.Склад КАК Склад,
	|		ИсточникДанных.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ИсточникДанных.ДокументРезерва КАК Заказ,
	|		ИсточникДанных.КоличествоОстаток КАК Количество
	|	ИЗ
	|		РегистрНакопления.УчетПотребностей.Остатки(&НаДата) КАК ИсточникДанных) Как ДанныеЗаказа
	|	ПО ДанныеЗаказа.Заказ = ИсточникДанных.Заказ
	|	И ДанныеЗаказа.Номенклатура = ИсточникДанных.Номенклатура
	|	И ДанныеЗаказа.ХарактеристикаНоменклатуры = ИсточникДанных.ХарактеристикаНоменклатуры
	|	И ДанныеЗаказа.Склад = ИсточникДанных.Склад
	|ГДЕ
	|	ИсточникДанных.Ссылка = &Ссылка	
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока=тзДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если ЗначениеЗаполнено(Выборка.КоличествоЗаказа) Тогда
			НоваяСтрока=тзДанные.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.Количество=-Выборка.КоличествоЗаказа;
		КонецЕсли;
	КонецЦикла;

	тзДанные.ЗаполнитьЗначения(Организация, "Организация");
	тзДанные.ЗаполнитьЗначения(Истина, "Активность");	
	тзДанные.ЗаполнитьЗначения(Дата, "Период");
	тзДанные.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");

	Движения.УчетПотребностей.Загрузить(тзДанные);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетРезервовТМЦ(Отказ)
	тзДанные=Движения.УчетРезервовТМЦ.ВыгрузитьКолонки();

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НаДата", МоментВремени());
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.Номенклатура КАК Номенклатура,
	|	ИсточникДанных.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ИсточникДанных.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ИсточникДанных.Склад КАК Склад,
	|	ИсточникДанных.Заказ Как Заказ,
	|	ИсточникДанных.Количество КАК Количество,
	|	ДанныеЗаказа.Количество Как КоличествоЗаказа
	|ИЗ
	|	Документ.КорректировкаРезервовПотребностей.Резервы КАК ИсточникДанных
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		ИсточникДанных.Номенклатура КАК Номенклатура,
	|		ИсточникДанных.Склад КАК Склад,
	|		ИсточникДанных.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ИсточникДанных.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ИсточникДанных.Заказ КАК Заказ,
	|		ИсточникДанных.КоличествоОстаток КАК Количество
	|	ИЗ
	|		РегистрНакопления.УчетРезервовТМЦ.Остатки(&НаДата) КАК ИсточникДанных) Как ДанныеЗаказа
	|	ПО ДанныеЗаказа.Заказ = ИсточникДанных.Заказ
	|	И ДанныеЗаказа.Номенклатура = ИсточникДанных.Номенклатура
	|	И ДанныеЗаказа.ХарактеристикаНоменклатуры = ИсточникДанных.ХарактеристикаНоменклатуры
	|	И ДанныеЗаказа.СерияНоменклатуры = ИсточникДанных.СерияНоменклатуры
	|	И ДанныеЗаказа.Склад = ИсточникДанных.Склад
	|ГДЕ
	|	ИсточникДанных.Ссылка = &Ссылка	
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока=тзДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если ЗначениеЗаполнено(Выборка.КоличествоЗаказа) Тогда
			НоваяСтрока=тзДанные.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.Количество=-Выборка.КоличествоЗаказа;
		КонецЕсли;
	КонецЦикла;

	тзДанные.ЗаполнитьЗначения(Организация, "Организация");
	тзДанные.ЗаполнитьЗначения(Истина, "Активность");	
	тзДанные.ЗаполнитьЗначения(Дата, "Период");
	тзДанные.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");

	Движения.УчетРезервовТМЦ.Загрузить(тзДанные);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ОбработкаЗаполнения(Основание)
	Если Основание=Неопределено Или ТипЗнч(Основание)=Тип("Структура") Тогда Возврат; КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда Возврат; КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли;
	//*** УправлениеДокументамиСервер.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	
	//Для каждого СтрокаКоллекции Из Движения Цикл
	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	АвтоЗаполнениеРеквизитовДокумента();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);