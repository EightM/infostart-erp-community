Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	КачествоНовый=Справочники.Качество.Новый;
	Для каждого СтрокаТабличнойЧасти Из Товары Цикл
		Если СтрокаТабличнойЧасти.Качество.Пустая() Тогда
			СтрокаТабличнойЧасти.Качество=КачествоНовый;
		КонецЕсли;
		Если СтрокаТабличнойЧасти.Склад.Пустая() Тогда
			СтрокаТабличнойЧасти.Склад=Склад;
		КонецЕсли;
	КонецЦикла;
	Для каждого СтрокаТабличнойЧасти Из Комплектующие Цикл
		Если СтрокаТабличнойЧасти.Качество.Пустая() Тогда
			СтрокаТабличнойЧасти.Качество=КачествоНовый;
		КонецЕсли;
		Если СтрокаТабличнойЧасти.Склад.Пустая() Тогда
			СтрокаТабличнойЧасти.Склад=Склад;
		КонецЕсли; 
	КонецЦикла;
	Для каждого СтрокаТабличнойЧасти Из ВозвратКомплектующих Цикл
		Если СтрокаТабличнойЧасти.Качество.Пустая() Тогда
			СтрокаТабличнойЧасти.Качество=КачествоНовый;
		КонецЕсли;
		Если СтрокаТабличнойЧасти.Склад.Пустая() Тогда
			СтрокаТабличнойЧасти.Склад=Склад;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт

	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;
КонецФункции

Процедура ЗаполнениеСпецификации(Изделие, ID, Колво)
	// Заполняет комплектующие, Статьи затрат, побочные продукты по номенклатуре и ID
	ДокСпецификация=Документы.Спецификация.ПолучитьСпецификациюНаДату(Изделие.ОсновнаяСпецификация, Неопределено, Дата);
	Если ДокСпецификация=Неопределено Тогда Возврат; КонецЕсли;

	//Коплектующие
	тзКомплектующие=ДокСпецификация.Комплектующие.Выгрузить();
	Для каждого СтрокаКоллекции Из тзКомплектующие Цикл
		НоваяСтрока=Комплектующие.Добавить();
		НоваяСтрока.Номенклатура=СтрокаКоллекции.Номенклатура;
		НоваяСтрока.Количество=СтрокаКоллекции.Количество*Колво;
		НоваяСтрока.ИсходноеКоличество=СтрокаКоллекции.Количество;
		НоваяСтрока.ЕдиницаИзмерения=СтрокаКоллекции.ЕдиницаИзмерения;
		НоваяСтрока.Коэффициент=НоваяСтрока.ЕдиницаИзмерения.Коэффициент;
		НоваяСтрока.ID_Товары=ID;		
	КонецЦикла;

	//Операции
	тзОперации=ДокСпецификация.Операции.Выгрузить();
	Для каждого СтрокаКоллекции Из тзОперации Цикл
		НоваяСтрока=СтатьиЗатрат.Добавить();
		НоваяСтрока.СтатьяЗатрат=СтрокаКоллекции.СтатьяЗатрат;
		НоваяСтрока.Количество=СтрокаКоллекции.Количество*Колво;
		НоваяСтрока.ИсходноеКоличество=СтрокаКоллекции.Количество;
		НоваяСтрока.ЕдиницаИзмерения=СтрокаКоллекции.ЕдиницаИзмерения;
		НоваяСтрока.Сумма=НоваяСтрока.Количество*СтрокаКоллекции.Цена;
		НоваяСтрока.ID_Товары=ID;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Движения по регистрам 

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетПотребностей(СтруктураШД, СтруктураТД, Отказ);
	ДвиженияПоРегистру_УчетТМЦ(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_СписанныеТоварам(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетПартийТМЦ(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетПотребностей(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "УчетПотребностей") Тогда Возврат; КонецЕсли;

	тзТМЦ=Новый ТаблицаЗначений;
	тзТМЦ.Колонки.Добавить("Склад");
	тзТМЦ.Колонки.Добавить("Номенклатура");
	тзТМЦ.Колонки.Добавить("ХарактеристикаНоменклатуры");
	тзТМЦ.Колонки.Добавить("Количество");
	тзТМЦ.Колонки.Добавить("НомерСтрокиТабличнойЧасти");
	тзТМЦ.Колонки.Добавить("ВидТабличнойЧасти");

	МассивСерийНоменклатуры=Новый Массив;	
	МассивХарактеристикНоменклатуры=Новый Массив;	
	МассивСкладов=Новый Массив;
    МассивТоваров=Новый Массив;

	Для каждого СтрокаКоллекции1 Из СтруктураТД Цикл
		Если НЕ СтрокаКоллекции1.Ключ="Изделия" И НЕ СтрокаКоллекции1.Ключ="ПобочныеПродукты" Тогда Продолжить; КонецЕсли;

		Для каждого СтрокаКоллекции2 Из СтрокаКоллекции1.Значение Цикл
			ЗаполнитьЗначенияСвойств(тзТМЦ.Добавить(), СтрокаКоллекции2);
			Если ЗначениеЗаполнено(СтрокаКоллекции2.ХарактеристикаНоменклатуры) Тогда
				МассивХарактеристикНоменклатуры.Добавить(СтрокаКоллекции2.ХарактеристикаНоменклатуры);
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаКоллекции2.Склад) Тогда
				МассивСкладов.Добавить(СтрокаКоллекции2.Склад);
			КонецЕсли;
			МассивТоваров.Добавить(СтрокаКоллекции2.Номенклатура);
		КонецЦикла;
	КонецЦикла;
	
	стрУсловие="Организация = Организация И Склад В (&Склад) И Номенклатура В (&Номенклатура)";
	Если МассивХарактеристикНоменклатуры.Количество()>0 Тогда
		МассивХарактеристикНоменклатуры.Добавить(Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		стрУсловие=стрУсловие+" И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)";
	КонецЕсли;
	Если НЕ Сделки.Количество()=0 Тогда
		стрУсловие=стрУсловие+" И ДокументРезерва В (&Сделка)";
	КонецЕсли;
	ОрганизацияСсылка=Организация;

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НаДату", МоментВремени());
	Запрос.УстановитьПараметр("Организация", ОрганизацияСсылка);
	Запрос.УстановитьПараметр("Склад", МассивСкладов);
	Запрос.УстановитьПараметр("Номенклатура", МассивТоваров);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", МассивХарактеристикНоменклатуры);
	Запрос.УстановитьПараметр("Сделка", Сделки.ВыгрузитьКолонку("Сделка"));	
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных1.Склад,
	|	ИсточникДанных1.Номенклатура,
	|	ИсточникДанных1.ХарактеристикаНоменклатуры,
	|	ИсточникДанных1.ДокументРезерва,
	|	СУММА(ИсточникДанных1.КоличествоОстаток) КАК Количество
	|ИЗ
	|	РегистрНакопления.УчетПотребностей.Остатки(&НаДату, "+стрУсловие+") КАК ИсточникДанных1
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных1.Склад,
	|	ИсточникДанных1.Номенклатура,
	|	ИсточникДанных1.ХарактеристикаНоменклатуры,
	|	ИсточникДанных1.ДокументРезерва
	|";
	тзОстаткиПоСделкам=Запрос.Выполнить().Выгрузить();
	Если тзОстаткиПоСделкам.Количество()=0 Тогда Возврат; КонецЕсли;

	//Отсортируем сделки по порядку списания
	Если Сделки.Количество()>0 Тогда
		тзОстаткиПоСделкам.Колонки.Добавить("ПорядковыйНомер");
		Для каждого СтрокаКоллекции Из Сделки Цикл
			РезультатПоиска=тзОстаткиПоСделкам.Найти(СтрокаКоллекции.Сделка, "ДокументРезерва");
			Если РезультатПоиска=Неопределено Тогда Продолжить; КонецЕсли;
			РезультатПоиска.ПорядковыйНомер=Сделки.Индекс(СтрокаКоллекции);
		КонецЦикла;
		тзОстаткиПоСделкам.Сортировать("ПорядковыйНомер Возвр");
	КонецЕсли;

	тзДвижения=Движения.УчетПотребностей.ВыгрузитьКолонки();

	СтруктураОтбора=Новый Структура("Склад,Номенклатура,ХарактеристикаНоменклатуры");
	Для каждого СтрокаКоллекции1 Из тзТМЦ Цикл
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаКоллекции1);
		МассивСтрок=тзОстаткиПоСделкам.НайтиСтроки(СтруктураОтбора);
		Для каждого СтрокаКоллекции2 Из МассивСтрок Цикл
			текКоличество=Мин(СтрокаКоллекции2.Количество, СтрокаКоллекции1.Количество);
			Если текКоличество<=0 Или СтрокаКоллекции1.Количество<=0 Тогда Продолжить; КонецЕсли;
			СтрокаКоллекции1.Количество=СтрокаКоллекции1.Количество-текКоличество;
            СтрокаКоллекции2.Количество=СтрокаКоллекции2.Количество-текКоличество;

			НоваяСтрока=тзДвижения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции1);
			НоваяСтрока.ДокументРезерва=СтрокаКоллекции2.ДокументРезерва;
			НоваяСтрока.Количество=текКоличество;			
		КонецЦикла;
	КонецЦикла; 

    тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(ОрганизацияСсылка, "Организация");
	тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");

	Движения.УчетПотребностей.Загрузить(тзДвижения);
	
	//Учет резервов ТМЦ
	Если Константы.УчетРезервов.Получить() Тогда
		тзДвижения.Колонки.ДокументРезерва.Имя="Заказ";
		тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");
		Движения.УчетРезервовТМЦ.Загрузить(тзДвижения);
	КонецЕсли;	
КонецПроцедуры

Процедура ДвиженияПоРегистру_УчетТМЦ(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ТоварыНаСкладах") Тогда Возврат; КонецЕсли;

	тзДвижения=Движения.ТоварыНаСкладах.ВыгрузитьКолонки();

	Для каждого СтрокаКоллекции Из СтруктураТД.Изделия Цикл
		Если НЕ ТипЗнч(СтрокаКоллекции.Номенклатура)=Тип("СправочникСсылка.Номенклатура") Тогда
			Продолжить;
		КонецЕсли;
		Если СтрокаКоллекции.ВидСклада=Перечисления.ВидыСкладов.Оптовый Тогда
			Если НЕ СтрокаКоллекции.ЯчеистыйСклад Тогда Продолжить; КонецЕсли;
			ЗаполнитьЗначенияСвойств(тзДвижения.Добавить(), СтрокаКоллекции);
		КонецЕсли;
	КонецЦикла;
	
	тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");
	Движения.ТоварыНаСкладах.Загрузить(тзДвижения);
КонецПроцедуры

Процедура ДвижениеПоРегистру_СписанныеТоварам(СтруктураШД, СтруктураТД, Отказ)
	Если Отказ Тогда Возврат; КонецЕсли; 
	
	тзДвижения=Движения.СписанныеТовары.ВыгрузитьКолонки();

	СтруктураТаблицИзделий=Новый Структура;
	СтруктураТаблицИзделий.Вставить("Изделия", СтруктураТД.Изделия);
	СтруктураТаблицИзделий.Вставить("ПобочныеПродукты", СтруктураТД.ПобочныеПродукты);
	Для каждого СтрокаКоллекцииТаблиц Из СтруктураТаблицИзделий Цикл
		ТекущаяТЗ=СтрокаКоллекцииТаблиц.Значение;
		Для Каждого СтрокаИзделия Из ТекущаяТЗ Цикл
			//Статьи затрат
			ОбщаяСуммаИздержекИзделия=0;
			МассивСтрок=СтруктураТД.СтатьиЗатрат.НайтиСтроки(Новый Структура("ID_Товары", СтрокаИзделия.ID));
			Для Каждого СтрокаКоллекции Из МассивСтрок Цикл
				ОбщаяСуммаИздержекИзделия=ОбщаяСуммаИздержекИзделия+СтрокаКоллекции.Сумма;
			КонецЦикла;

			//Комплектующие
			МассивСтрок=СтруктураТД.Комплектующие.НайтиСтроки(Новый Структура("ID_Товары", СтрокаИзделия.ID));
			Для Каждого СтрокаКоллекции Из МассивСтрок Цикл			
				НоваяСтрока=тзДвижения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
				НоваяСтрока.ВидТабличнойЧастиНовая			= "Товары"; //***
				НоваяСтрока.НоменклатураНовая               = СтрокаИзделия.Номенклатура;
				НоваяСтрока.ХарактеристикаНоменклатурыНовая = СтрокаИзделия.ХарактеристикаНоменклатуры;
				НоваяСтрока.СерияНоменклатурыНовая          = СтрокаИзделия.СерияНоменклатуры;
				НоваяСтрока.КачествоНовое				   	= СтрокаИзделия.Качество;
				НоваяСтрока.ДокументОприходованияНовый	   	= Ссылка;
				НоваяСтрока.НомерСтрокиТабличнойЧастиНовая  = ТекущаяТЗ.Индекс(СтрокаИзделия)+1;
				НоваяСтрока.СкладПолучатель				   	= СтрокаИзделия.Склад;
				НоваяСтрока.КоличествоПоступление   	 	= СтрокаИзделия.Количество;
				НоваяСтрока.СтоимостьПоступление    		= СтрокаИзделия.СтоимостьУУ;
				НоваяСтрока.СтоимостьПоступлениеНУ  		= СтрокаИзделия.СтоимостьНУ;
				НоваяСтрока.СтоимостьДополнительная 		= ОбщаяСуммаИздержекИзделия;
			КонецЦикла;
			
			//Возврат комплектующих
			МассивСтрок=СтруктураТД.ВозвратКомплектующих.НайтиСтроки(Новый Структура("ID", СтрокаИзделия.ID));
			Для Каждого СтрокаКоллекции Из МассивСтрок Цикл			
				НоваяСтрока=тзДвижения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
				НоваяСтрока.ВидТабличнойЧасти				= "ВозвратКомплектующих";
				НоваяСтрока.ВидТабличнойЧастиНовая			= "Товары"; //***
				НоваяСтрока.НоменклатураНовая               = СтрокаИзделия.Номенклатура;
				НоваяСтрока.ХарактеристикаНоменклатурыНовая = СтрокаИзделия.ХарактеристикаНоменклатуры;
				НоваяСтрока.СерияНоменклатурыНовая          = СтрокаИзделия.СерияНоменклатуры;
				НоваяСтрока.КачествоНовое				   	= СтрокаИзделия.Качество;
				НоваяСтрока.ДокументОприходованияНовый	   	= Ссылка;
				НоваяСтрока.НомерСтрокиТабличнойЧастиНовая  = ТекущаяТЗ.Индекс(СтрокаИзделия)+1;
				НоваяСтрока.СкладПолучатель				   	= СтрокаИзделия.Склад;
				НоваяСтрока.КоличествоПоступление   	 	= СтрокаИзделия.Количество;
				НоваяСтрока.СтоимостьПоступление    		= СтрокаИзделия.СтоимостьУУ;
				НоваяСтрока.СтоимостьПоступлениеНУ  		= СтрокаИзделия.СтоимостьНУ;
				НоваяСтрока.СтоимостьДополнительная 		= ОбщаяСуммаИздержекИзделия;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла; 

	Инд = 0;
	Для каждого Строка Из тзДвижения Цикл
		Инд = Инд + 1; Строка.НомерСтрокиДокумента = Инд;
	КонецЦикла;

	тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Перечисления.СтатусыПартийТоваров.Купленный,  "ДопустимыйСтатус1");
	тзДвижения.ЗаполнитьЗначения(Перечисления.СтатусыПартийТоваров.НаКомиссию, "ДопустимыйСтатус2");
	тзДвижения.ЗаполнитьЗначения(Перечисления.СтатусыПартийТоваров.ПоОрдеру,   "ДопустимыйСтатус3");	
	тзДвижения.ЗаполнитьЗначения(Перечисления.КодыОперацийПартииТоваров.ВозвратОтКомиссионера, "КодОперацииПартииТоваров");
	//тзДвижения.ЗаполнитьЗначения(Перечисления.КодыОперацийПартииТоваров.Комплектация, "КодОперацииПартииТоваров");
	//тзДвижения.ЗаполнитьЗначения(Перечисления.КодыОперацийПартииТоваров.ПередачаНаКомиссию, "КодОперацииПартииТоваров");
	//тзДвижения.ЗаполнитьЗначения(Перечисления.КодыОперацийПартииТоваров.Комплектация, "КодОперацииПартииТоваров");
	тзДвижения.ЗаполнитьЗначения(Организация, "Организация");	
	тзДвижения.ЗаполнитьЗначения(Перечисления.СтатусыПолученияПередачиТоваров.НаПереработку, "СтатусПередачи"); //****	

	Движения.СписанныеТовары.Загрузить(тзДвижения);
	Движения.СписанныеТовары.Записать(Истина);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетПартийТМЦ(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ПартииТоваровНаСкладах") Тогда Возврат; КонецЕсли;

	тзСписанияТоваров=Движения.СписанныеТовары.Выгрузить();
	Если тзСписанияТоваров.Количество()=0 Тогда
		тзСписанияТоваров=ОбщегоНазначения.Отладка_РС(Ссылка, "СписанныеТовары").Выгрузить();
	КонецЕсли; //При выборочном проведении по регистрам

	СтруктураШД.Вставить("Ссылка", Ссылка);
	СтруктураШД.Вставить("Отказ", Отказ);
	СтруктураШД.Вставить("Организация", Организация);
	СтруктураШД.Вставить("МоментВремени", МоментВремени());
	СтруктураШД.Вставить("УчетнаяПолитика", ПараметрыУчетнойПолитики());
	СтруктураШД.Вставить("ТаблицаСписания", тзСписанияТоваров);
	УправлениеЗапасамиПартионныйУчет.ДвижениеПартийТоваров(Ссылка, СтруктураШД);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание) Тогда Возврат; КонецЕсли; 

	Если (ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияТоваровУслуг")) Тогда
		Если Основание.Товары.Количество()<>0 тогда 
			Для каждого стрТЧ из Основание.Товары Цикл
				НоваяСтрока = ЭтотОбъект.Товары.Добавить();
				НоваяСтрока.Номенклатура = стрТЧ.Номенклатура;
				НоваяСтрока.Количество = стрТЧ.Количество;
				НоваяСтрока.ЕдиницаИзмерения = стрТЧ.ЕдиницаИзмерения;
				НоваяСтрока.ID = Строка(Новый УникальныйИдентификатор);
				ЗаполнениеСпецификации(НоваяСтрока.Номенклатура, НоваяСтрока.ID, НоваяСтрока.Количество);
			КонецЦикла;
		КонецЕсли;
		Если Основание.Услуги.Количество()<>0 тогда
			Для каждого стрТЧ из Основание.Услуги Цикл
				НоваяСтрока = ЭтотОбъект.Товары.Добавить();
				НоваяСтрока.Номенклатура = стрТЧ.Номенклатура;
				НоваяСтрока.Количество = стрТЧ.Количество;
				НоваяСтрока.ID = Строка(Новый УникальныйИдентификатор);
				ЗаполнениеСпецификации(НоваяСтрока.Номенклатура, НоваяСтрока.ID, НоваяСтрока.Количество);
			КонецЦикла;
		КонецЕсли;

	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда		
		Если Основание.Товары.Количество()<>0 тогда 
			СтруктураОтбора = Новый Структура;							
			Для каждого стрТЧ из Основание.Товары Цикл
				СтруктураОтбора.Вставить("ID", стрТЧ.ID);								
				НоваяСтрока = ЭтотОбъект.Товары.Добавить();
				НоваяСтрока.Номенклатура = стрТЧ.Номенклатура;
				НоваяСтрока.Количество = стрТЧ.Количество;
				НоваяСтрока.ХарактеристикаНоменклатуры = стрТЧ.ХарактеристикаНоменклатуры;
				НоваяСтрока.ЕдиницаИзмерения = стрТЧ.ЕдиницаИзмерения;
				НоваяСтрока.Коэффициент = стрТЧ.Коэффициент;
				НоваяСтрока.НоменклатурнаяГруппа = стрТЧ.НоменклатурнаяГруппа;
				НоваяСтрока.СпецификацияНоменклатуры = стрТЧ.Спецификация;
				НоваяСтрока.Склад = стрТЧ.Склад;				
				НоваяСтрока.ID = Строка(Новый УникальныйИдентификатор);
				НужныеЭлементы = Основание.Комплектующие.НайтиСтроки(СтруктураОтбора);
				Для Каждого стрМассива из НужныеЭлементы Цикл
					НоваяСтрокаКомплектующих = ЭтотОбъект.Комплектующие.Добавить();
					НоваяСтрокаКомплектующих.ID_Товары = НоваяСтрока.ID;
					НоваяСтрокаКомплектующих.Номенклатура = стрМассива.Номенклатура;
					НоваяСтрокаКомплектующих.ХарактеристикаНоменклатуры = стрМассива.ХарактеристикаНоменклатуры;
					НоваяСтрокаКомплектующих.ЕдиницаИзмерения = стрМассива.ЕдиницаИзмерения;
					НоваяСтрокаКомплектующих.Коэффициент = стрМассива.Коэффициент;
					НоваяСтрокаКомплектующих.Количество = стрМассива.Количество;
					НоваяСтрокаКомплектующих.Склад = стрМассива.Склад;
					НоваяСтрокаКомплектующих.ИсходноеКоличество = стрМассива.ИсходноеКоличество;
				КонецЦикла;

				НужныеЭлементы = Основание.СтатьиЗатрат.НайтиСтроки(СтруктураОтбора);
				Для Каждого стрМассива из НужныеЭлементы Цикл
					НоваяСтрокаСтатьиЗатрат = ЭтотОбъект.СтатьиЗатрат.Добавить();
					НоваяСтрокаСтатьиЗатрат.ID_Товары = НоваяСтрока.ID;
					НоваяСтрокаСтатьиЗатрат.СтатьяЗатрат = стрМассива.СтатьяЗатрат;
					НоваяСтрокаСтатьиЗатрат.Сумма = стрМассива.Сумма;
					НоваяСтрокаСтатьиЗатрат.ЕдиницаИзмерения = стрМассива.ЕдиницаИзмерения;
					НоваяСтрокаСтатьиЗатрат.ИсходноеКоличество = стрМассива.ИсходноеКоличество;
					НоваяСтрокаСтатьиЗатрат.Количество = стрМассива.Количество;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ОбработкаТабличныхЧастей.ЗаполнитьТиповыеОперации(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	//Формирование значений реквизитов шапки документа
	СтруктураШД=УправлениеДокументамиСервер.ПолучитьСтруктуруРеквизитовШапки(ЭтотОбъект);
	СтруктураШД.Вставить("УчитыватьНДС", Истина);

	//Формируем таблицы значений из табличных частей
	СтруктураТД=Новый Структура;
	СтруктураТД.Вставить("Изделия", УправлениеДокументамиСервер.ПолучитьСтруктуруТЧ(ЭтотОбъект, "Товары"));
	СтруктураТД.Вставить("Комплектующие", УправлениеДокументамиСервер.ПолучитьСтруктуруТЧ(ЭтотОбъект, "Комплектующие"));
	СтруктураТД.Вставить("СтатьиЗатрат", УправлениеДокументамиСервер.ПолучитьСтруктуруТЧ(ЭтотОбъект, "СтатьиЗатрат"));
	СтруктураТД.Вставить("ПобочныеПродукты", УправлениеДокументамиСервер.ПолучитьСтруктуруТЧ(ЭтотОбъект, "ПобочныеПродукты"));
	СтруктураТД.Вставить("ВозвратКомплектующих", УправлениеДокументамиСервер.ПолучитьСтруктуруТЧ(ЭтотОбъект, "ВозвратКомплектующих"));

	//Распределение статей затрат на изделия
	Для каждого СтрокаКоллекции Из СтруктураТД.Изделия Цикл
		МассивСтрок=СтатьиЗатрат.НайтиСтроки(Новый Структура("ID_Товары", СтрокаКоллекции.ID));
		Для каждого СтрокаМассива Из МассивСтрок Цикл
			СтрокаКоллекции.СтоимостьУУ=СтрокаКоллекции.СтоимостьУУ+СтрокаМассива.Сумма;
			СтрокаКоллекции.СтоимостьНУ=СтрокаКоллекции.СтоимостьНУ+СтрокаМассива.Сумма;
		КонецЦикла;
	КонецЦикла;

	//Возврат материалов (комплектующих)
	Для каждого СтрокаКоллекции Из СтруктураТД.ВозвратКомплектующих Цикл
		ЗаполнитьЗначенияСвойств(СтруктураТД.Изделия.Добавить(), СтрокаКоллекции);
	КонецЦикла;
	
	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);