////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("АктНаСписание", "Акт на списание ТМЦ");
	Структура.Вставить("МХ18", "МХ-18 (Накладная на передачу готовой продукции)");
	Структура.Вставить("М11", "М-11 (Требование накладная)");
	Структура.Вставить("ЛимитноЗаборнаяКарта", "Лимитно-заборная карта");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция ПолучитьТаблицуСтоимостиТоваров(СсылкаНаОбъект)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВидДвижения",     ВидДвиженияНакопления.Расход);

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПартииТоваровНаСкладах.Номенклатура,
	|	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладах.СерияНоменклатуры,
	|	ПартииТоваровНаСкладах.НомерСтрокиТабличнойЧасти КАК НомерСтроки,
	|	СУММА(ПартииТоваровНаСкладах.Стоимость) КАК Стоимость,
	|	СУММА(ПартииТоваровНаСкладах.Количество) КАК Количество
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	|
	|ГДЕ
	|	ПартииТоваровНаСкладах.Регистратор   = &ТекущийДокумент
	|	И ПартииТоваровНаСкладах.ВидДвижения = &ВидДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладах.Номенклатура,
	|	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладах.СерияНоменклатуры,
	|	ПартииТоваровНаСкладах.НомерСтрокиТабличнойЧасти
	|";

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ПолучитьСтоимостьТовара(Таблица, Номенклатура, Характеристика = Неопределено, Серия = Неопределено, ПартионныйУчетПоСериям = Ложь, Количество,НомерСтроки)

	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура",                   Номенклатура);
	СтруктураПоиска.Вставить("НомерСтроки",                    НомерСтроки);
	Если ЗначениеЗаполнено(Характеристика) Тогда
		СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры", Характеристика);
	КонецЕсли;

	Если ПартионныйУчетПоСериям И ЗначениеЗаполнено(Серия) Тогда
		СтруктураПоиска.Вставить("СерияНоменклатуры", Серия);
	КонецЕсли;

	Строки = Таблица.НайтиСтроки(СтруктураПоиска);

	Если Строки.Количество() > 0 Тогда
		Стоимость  = Строки[0].Стоимость;
		Количество = Строки[0].Количество;
	Иначе
		Стоимость  = 0;
		Количество = 0;
	КонецЕсли;

	Возврат Стоимость;

КонецФункции 

Функция УбратьЛишниеПробелы(Объект)
	стрИмяКолонки=СтрЗаменить(Объект," ","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,"""","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,"-","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,",","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,".","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,"+","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,")","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,"(","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,"*","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,"/","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,"\","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,"=","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,"%","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,";","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,":","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,"№","");
	стрИмяКолонки=СтрЗаменить(стрИмяКолонки,"#","");

   Возврат "Изделие_"+стрИмяКолонки;
КонецФункции	

Функция Печать_АктНаСписание(СтруктураПараметров)
	
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ТоварКод = ?(Колонка="","Код",Колонка); 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст ="
	|ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	Организация,
	|	Склад,
	|	Комментарий,
	|	Комплектующие,
	|	Подразделение КАК Подразделение
	|ИЗ
	|	Документ.ПоступлениеИзПереработки КАК ПоступлениеИзПереработки
	|
	|ГДЕ
	|	ПоступлениеИзПереработки.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НомерСтроки КАК НомПП,
	|	Номенклатура." + ТоварКод + "  КАК НоменклатурныйНомер,
	|	Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК Имя,
	|	ХарактеристикаНоменклатуры       	 КАК Характеристика,
	|	СерияНоменклатуры                	 КАК Серия,
	|	Подразделение                	 КАК Подразделение,
	|	СтатьяЗатрат                	 КАК СтатьяЗатрат,
	|	Номенклатура.ВестиПартионныйУчетПоСериям КАК ПартионныйУчетПоСериям,
	|	Номенклатура.ЕдиницаХраненияОстатков КАК ЕдИзмМест,
	|	ТОП КАК ТОП,
	|	ЕдиницаИзмерения КАК ЕдИзм,
	|	Количество КАК Количество,
	|	0 КАК КоличествоМест
	|
	|ИЗ
	|	Документ.ПоступлениеИзПереработки.Комплектующие КАК ПоступлениеИзПереработки
	|
	|ГДЕ
	|	ПоступлениеИзПереработки.Ссылка = &ТекущийДокумент
	|	УПОРЯДОЧИТЬ ПО НомПП
	|";

	ЗапросПоНоменклатуре = Запрос.Выполнить();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеИзПереработки_АктНаСписание";
	
	ТаблицаТовары = Шапка.Комплектующие.Выгрузить();
	ТаблицаТовары.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки", "Количество");
	ТаблицаТовары.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
	//СтруктураПоискаПоТоварам = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
	
	//ТаблицаСтоимости        = ПолучитьТаблицуСтоимостиТоваров(СтруктураПараметров.СсылкаНаОбъект);
	//ТаблицаСтоимости.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
	ВалютаУпрУчета          = МодульВалютногоУчета.ПолучитьВалюту("Упр");
	Параметры               = МодульВалютногоУчета.КурсВалюты(ВалютаУпрУчета, Шапка.Дата);
	КурсВалютыУпрУчета      = Параметры.Курс;
	КратностьВалютыУпрУчета = Параметры.Кратность;

	// Вывод заголовка
	Макет = ИнициализацияМакета(СтруктураПараметров, "АктНаСписаниеТМЦ");
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заголовок = ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Акт на списание");
	Область.Параметры.Организация=Шапка.Организация.Наименование;
	Область.Параметры.Заполнить(Шапка);
	ОтветственныеЛицаОрганизации = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.Дата, СсылкаНаОбъект);
	Область.Параметры.Должность=ОтветственныеЛицаОрганизации.РуководительДолжность;
	Область.Параметры.Руководитель=ОтветственныеЛицаОрганизации.Руководитель;
	Область.Параметры.Основание=Шапка.Комментарий;
	ТабДокумент.Вывести(Область);
	Область          = Макет.ПолучитьОбласть("Строка");
	ВыборкаПоСтрокам = ЗапросПоНоменклатуре.Выбрать();
	НомерТекущий=0;
	СуммаИтого=0;
	НаборЗаписей=РегистрыНакопления.ПартииТоваровПереданные.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(СсылкаНаОбъект);
	НаборЗаписей.Прочитать();
	тзКомплектующие=НаборЗаписей.Выгрузить();
	Пока ВыборкаПоСтрокам.Следующий() Цикл
		Область.Параметры.Заполнить(ВыборкаПоСтрокам);
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокам.Подразделение) Тогда
			Область.Параметры.Подразделение=Шапка.Подразделение;
		КонецЕсли; 
		Область.Параметры.Имя = СокрЛП(ВыборкаПоСтрокам.Имя) + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаПоСтрокам);
		
		Сумма = 0;
		Если НЕ ВыборкаПоСтрокам.Количество = 0 Тогда
			МассивСтрок=тзКомплектующие.НайтиСтроки(Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,НомерСтрокиТабличнойЧасти",ВыборкаПоСтрокам.Номенклатура,ВыборкаПоСтрокам.Характеристика,ВыборкаПоСтрокам.НомПП));
			Если МассивСтрок.Количество() > 0 Тогда
				Сумма = ?(ВыборкаПоСтрокам.Количество=МассивСтрок[0].Количество, МассивСтрок[0].Стоимость, 0);
			КонецЕсли; 
			
			//Количество = 0;
			//Сумма = ПолучитьСтоимостьТовара(ТаблицаСтоимости,
			//								ВыборкаПоСтрокам.Номенклатура,
			//								ВыборкаПоСтрокам.Характеристика,
			//								ВыборкаПоСтрокам.Серия,
			//								ВыборкаПоСтрокам.ПартионныйУчетПоСериям,
			//								Количество,ВыборкаПоСтрокам.НомПП);
			//Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(Сумма, ВалютаУпрУчета, МодульВалютногоУчета.ПолучитьВалюту("Бух"), КурсВалютыУпрУчета, 1, КратностьВалютыУпрУчета, 1);
			//	
			//СтруктураПоискаПоТоварам.Номенклатура = ВыборкаПоСтрокам.Номенклатура;
			//СтруктураПоискаПоТоварам.ХарактеристикаНоменклатуры = ВыборкаПоСтрокам.Характеристика;
			//СтруктураПоискаПоТоварам.СерияНоменклатуры = ВыборкаПоСтрокам.Серия;
			//СтрокиТаблицыТовары = ТаблицаТовары.НайтиСтроки(СтруктураПоискаПоТоварам);
		КонецЕсли;

		Область.Параметры.Сумма = Сумма;
		Если НЕ ВыборкаПоСтрокам.ТОП.Пустая() Тогда
			Область.Параметры.Счет=ВыборкаПоСтрокам.ТОП.ПроводкиБУ[0].СчетДебет;
        КонецЕсли;
		СуммаИтого=СуммаИтого+Сумма; 
		ТабДокумент.Вывести(Область);
		НомерТекущий=НомерТекущий+1;
	КонецЦикла;

	// Вывод подвала
	Область=Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.НомерТекущий=НомерТекущий;
	Область.Параметры.ФИОПредседательКомиссии=ОтветственныеЛицаОрганизации.ПредседательКомиссии;
	Область.Параметры.ЧленКомиссии1=ОтветственныеЛицаОрганизации.ЧленКомиссии1;
	Область.Параметры.ЧленКомиссии2=ОтветственныеЛицаОрганизации.ЧленКомиссии2;
	Область.Параметры.ЧленКомиссии3=ОтветственныеЛицаОрганизации.ЧленКомиссии3;
	Область.Параметры.ДолжностьПредседательКомиссии=ОтветственныеЛицаОрганизации.ПредседательКомиссииДолжность;
	Область.Параметры.ДолжностьЧленКомиссии1=ОтветственныеЛицаОрганизации.ЧленКомиссииДолжность1;
	Область.Параметры.ДолжностьЧленКомиссии2=ОтветственныеЛицаОрганизации.ЧленКомиссииДолжность2;
	Область.Параметры.ДолжностьЧленКомиссии3=ОтветственныеЛицаОрганизации.ЧленКомиссииДолжность3;
	Область.Параметры.Сумма=СуммаИтого;
	
	ТабДокумент.Вывести(Область);
	Возврат ТабДокумент;
КонецФункции

Функция Печать_МХ18(СтруктураПараметров)
	
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата КАК ДатаДокумента,
	|	Организация,
	|	Подразделение,
	|	Склад,
	|	Товары
	|ИЗ
	|	Документ.ПоступлениеИзПереработки КАК ПоступлениеИзПереработки
	|
	|ГДЕ
	|	ПоступлениеИзПереработки.Ссылка = &ТекущийДокумент";
	ШапкаДокумента = Запрос.Выполнить().Выбрать();
	ШапкаДокумента.Следующий();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеИзПереработки.Номенклатура,
	|	ПоступлениеИзПереработки.Номенклатура.Код КАК КодНоменклатуры,
	|	ПоступлениеИзПереработки.Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	ПоступлениеИзПереработки.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ПоступлениеИзПереработки.ЕдиницаИзмерения.Наименование КАК ВидУпаковки,
	|	ЕСТЬNULL(ПоступлениеИзПереработки.Коэффициент, 0) КАК КоличествоВОдномМесте,
	|	СУММА(ЕСТЬNULL(ПоступлениеИзПереработки.Количество, 0)) КАК Количество,
	|	СУММА(ЕСТЬNULL(ПоступлениеИзПереработки.СтоимостьУУ, 0)) КАК СуммаПлановая,
	|	0 КАК КоличествоМест,
	|	МИНИМУМ(ПоступлениеИзПереработки.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	Документ.ПоступлениеИзПереработки.Товары КАК ПоступлениеИзПереработки
	|ГДЕ
	|	ПоступлениеИзПереработки.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеИзПереработки.Номенклатура,
	|	ПоступлениеИзПереработки.Номенклатура.Код,
	|	ПоступлениеИзПереработки.ЕдиницаИзмерения,
	|	ПоступлениеИзПереработки.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
	|	ПоступлениеИзПереработки.Номенклатура.БазоваяЕдиницаИзмерения.Код,
	|	ПоступлениеИзПереработки.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеИзПереработки.Коэффициент
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	ВыборкаСтрок = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент  = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	// Загрузим настройки пользователя
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеИзПереработки_МХ18";

	Макет = ИнициализацияМакета(СтруктураПараметров, "МХ18");

	Шапка                        = Макет.ПолучитьОбласть("Шапка");
	ЗаголовокТаблицы             = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	Строка                       = Макет.ПолучитьОбласть("Строка");
	Итого                        = Макет.ПолучитьОбласть("Итого");
	ИтогоПоНакладнойОднаСтраница = Макет.ПолучитьОбласть("ИтогоПоНакладнойОднаСтраница");
	ИтогоПоНакладнойМногоСтраниц = Макет.ПолучитьОбласть("ИтогоПоНакладнойМногоСтраниц");
	ПодвалТаблицы                = Макет.ПолучитьОбласть("ПодвалТаблицы");
	Подвал                       = Макет.ПолучитьОбласть("Подвал");
	
	// Выводим шапку
	Шапка.Параметры.Заполнить(ШапкаДокумента);
	Шапка.Параметры.НомерДокумента = ШапкаДокумента.Номер;
	Шапка.Параметры.ДатаДокумента  = ШапкаДокумента.ДатаДокумента;
	
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ШапкаДокумента.Организация, ШапкаДокумента.ДатаДокумента);

	Шапка.Параметры.ПредставлениеОрганизации   = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации,"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
	Шапка.Параметры.ПредставлениеПолучателя    = ШапкаДокумента.Склад;
	Шапка.Параметры.ПредставлениеПодразделения = ШапкаДокумента.Подразделение;
	Шапка.Параметры.ОрганизацияПоОКПО          = СведенияОбОрганизации.КодПоОКПО;
	
	Товары=ШапкаДокумента.Товары.Выгрузить();
	Если НЕ Товары[0].ТОП.Пустая() Тогда
		стрСчетов="";
		Для Каждого СтрокаТз ИЗ Товары Цикл
			Если Найти(стрСчетов,Строка(СтрокаТз.ТОП.ПроводкиБУ[0].СчетКредит))>0 Тогда Продолжить; КонецЕсли;
			стрСчетов=стрСчетов+Строка(СтрокаТз.ТОП.ПроводкиБУ[0].СчетКредит)+" ";
		КонецЦикла;	
		Шапка.Параметры.КорСчет=стрСчетов;
	КонецЕсли;

	ТабДокумент.Вывести(Шапка);

	// Выводим заголовок таблицы
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	// Вычисляем количество строк в таблице
	КоличествоСтрок = ВыборкаСтрок.Количество();
	
	// Инициализация счетчика страниц
	НомерСтраницы = 1;

	// Инициализация итогов по странице
	ИтогоМассаБруттоНаСтранице = 0;
	ИтогоМестНаСтранице        = 0;
	ИтогоКоличествоНаСтранице  = 0;
	ИтогоСуммаНаСтранице       = 0;

	// Инициализация итогов по документу
	ИтогоМассаБрутто = 0;
	ИтогоМест        = 0;
	ИтогоКоличество  = 0;
    ИтогСумма        = 0;
	
	// Выводим многострочную часть документа
	Для Каждого СтрокаДокумента Из ВыборкаСтрок Цикл

		// Проверим, помещается ли строка с итогами на страницу, если нет, будем
		// выводить итоги по странице, а строку перенесем на следующую страницу
		СтрокаСИтогами = Новый Массив;
		СтрокаСИтогами.Добавить(Строка);
		
		// Если строка - последняя в таблице, проверим, поместятся ли
		// итоги по накладной и подвал.
		Если (ВыборкаСтрок.Индекс(СтрокаДокумента) + 1) = КоличествоСтрок Тогда
			
			Если НомерСтраницы > 1 Тогда
				СтрокаСИтогами.Добавить(Итого);
				СтрокаСИтогами.Добавить(ИтогоПоНакладнойМногоСтраниц);
				СтрокаСИтогами.Добавить(Подвал);
			Иначе
				СтрокаСИтогами.Добавить(ИтогоПоНакладнойОднаСтраница);
				СтрокаСИтогами.Добавить(Подвал);
			КонецЕсли;
				
		Иначе // не последняя строка, достаточно проверить, поместятся ли итоги по странице
			
			СтрокаСИтогами.Добавить(Итого);
			
		КонецЕсли;
		
		Если НЕ ПечатныеФормыСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСИтогами) Тогда

			// Выводим итоги по странице
			Итого.Параметры.ИтогМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице;
			Итого.Параметры.ИтогМестНаСтранице        = ИтогоМестНаСтранице;
			Итого.Параметры.ИтогКоличествоНаСтранице  = ИтогоКоличествоНаСтранице;
			Итого.Параметры.ИтогСуммаНаСтранице       = ИтогоСуммаНаСтранице;
			
			ТабДокумент.Вывести(Итого);

			// Выводим подвал таблицы
			ТабДокумент.Вывести(ПодвалТаблицы);
			
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			// Очистим итоги по странице
			ИтогоМассаБруттоНаСтранице = 0;
			ИтогоМестНаСтранице        = 0;
			ИтогоКоличествоНаСтранице  = 0;
			ИтогоСуммаНаСтранице       = 0;
			
			// Установим новый номер
			НомерСтраницы = НомерСтраницы + 1;
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;

		// Выводим строку
		Строка.Параметры.Заполнить(СтрокаДокумента);
		Строка.Параметры.ТоварНаименование = СокрЛП(СтрокаДокумента.Номенклатура.НаименованиеПолное);
		Строка.Параметры.ТоварКод             = СтрокаДокумента.КодНоменклатуры;
        Строка.Параметры.Цена              = ?(СтрокаДокумента.Количество = 0, 0, СтрокаДокумента.СуммаПлановая / СтрокаДокумента.Количество);
		Строка.Параметры.Сумма             = СтрокаДокумента.СуммаПлановая;

		Мест        = СтрокаДокумента.КоличествоМест;
		Мест        = ?(Мест <> Неопределено, Мест, 0);
		Количество  = СтрокаДокумента.Количество;

		ТабДокумент.Вывести(Строка);

		// Увеличим итоги по странице
		ИтогоМассаБруттоНаСтранице = 0;
		ИтогоМестНаСтранице        = ИтогоМестНаСтранице       + Мест;
		ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице + Количество;
        ИтогоСуммаНаСтранице       = ИтогоСуммаНаСтранице      + СтрокаДокумента.СуммаПлановая;
		
		// Увеличим итоги по дукументу
		ИтогоМассаБрутто = 0;
		ИтогоМест        = ИтогоМест       + Мест;
		ИтогоКоличество  = ИтогоКоличество + Количество;
        ИтогСумма        = ИтогСумма       + СтрокаДокумента.СуммаПлановая;

	КонецЦикла;
	
	// Если страниц много, выводим промежуточные итоги по последней странице
	// перед итогами по накладной
	Если НомерСтраницы > 1 Тогда
		
		// Выводим итоги по странице
		Итого.Параметры.ИтогМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице;
		Итого.Параметры.ИтогМестНаСтранице        = ИтогоМестНаСтранице;
		Итого.Параметры.ИтогКоличествоНаСтранице  = ИтогоКоличествоНаСтранице;
		Итого.Параметры.ИтогСуммаНаСтранице       = ИтогоСуммаНаСтранице;
		
		ТабДокумент.Вывести(Итого);
		
		// Выводим итоги по накладной
		ИтогоПоНакладнойМногоСтраниц.Параметры.ИтогМассаБрутто = ИтогоМассаБрутто;
		ИтогоПоНакладнойМногоСтраниц.Параметры.ИтогМест        = ИтогоМест;
		ИтогоПоНакладнойМногоСтраниц.Параметры.ИтогКоличество  = ИтогоКоличество;
	    ИтогоПоНакладнойМногоСтраниц.Параметры.ИтогСумма       = ИтогСумма;

		ТабДокумент.Вывести(ИтогоПоНакладнойМногоСтраниц);
		
	Иначе // только итоги по накладной
		
		ИтогоПоНакладнойОднаСтраница.Параметры.ИтогМассаБрутто = ИтогоМассаБрутто;
		ИтогоПоНакладнойОднаСтраница.Параметры.ИтогМест        = ИтогоМест;
		ИтогоПоНакладнойОднаСтраница.Параметры.ИтогКоличество  = ИтогоКоличество;
	    ИтогоПоНакладнойОднаСтраница.Параметры.ИтогСумма       = ИтогСумма;

		ТабДокумент.Вывести(ИтогоПоНакладнойОднаСтраница);
		
	КонецЕсли;
	
	// Выводим подвал таблицы
	ТабДокумент.Вывести(ПодвалТаблицы);
	
	// Выводим подвал документа
	Подвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, , ",,,,,,,,0");
	Подвал.Параметры.ИтогСуммаПрописью                          = ЧислоПрописью(Цел(ИтогСумма), , ",,,,,,,,0");
	Подвал.Параметры.Копейки                          			= Формат((ИтогСумма-Цел(ИтогСумма))*100, "ЧЦ=2; ЧН=; ЧВН=");
	
	ТабДокумент.Вывести(Подвал);

	Возврат ТабДокумент;

КонецФункции 

Функция Печать_М11(СтруктураПараметров)
	
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ТоварКод=?(Колонка="","Код",Колонка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номер 	КАК НомерДокумента,
	|	Дата	КАК ДатаДокумента,
	|	Дата	КАК ДатаСоставления,
	|	Организация,
	|	Склад,
	|	Комплектующие,
	|	Подразделение КАК Подразделение,
	|	Склад КАК Отпустил,
	|	Подразделение КАК Получил
	|ИЗ
	|	Документ.ПоступлениеИзПереработки КАК ПоступлениеИзПереработки
	|
	|ГДЕ
	|	ПоступлениеИзПереработки.Ссылка = &ТекущийДокумент
	|";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК МатериалНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                 КАК НоменклатурныйНомер,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
	|	ВложенныйЗапрос.Серия                КАК Серия,
	|	ВложенныйЗапрос.ТОП                  КАК ТОП,
	|	ВложенныйЗапрос.Номенклатура.ВестиПартионныйУчетПоСериям     КАК ПартионныйУчетПоСериям,
	|	ВложенныйЗапрос.Количество           КАК Количество,
	|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки
	|ИЗ 
	|	(
	|	ВЫБРАТЬ
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		ХарактеристикаНоменклатуры	КАК Характеристика,
	|		СерияНоменклатуры           КАК Серия,
	|		ТОП       				    КАК ТОП,
	|		СУММА(Количество)           КАК Количество,
	|		НомерСтроки         		КАК НомерСтроки
	|	ИЗ
	|		Документ.ПоступлениеИзПереработки.Комплектующие КАК ПоступлениеИзПереработки
	|	ГДЕ
	|		ПоступлениеИзПереработки.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		ХарактеристикаНоменклатуры,
	|		ТОП,
	|		СерияНоменклатуры,
	|		НомерСтроки
	|
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР
	|";

	ЗапросПоНоменклатуре = Запрос.Выполнить();
	
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеИзПереработки_М11";
	
	ТаблицаТовары=Шапка.Комплектующие.Выгрузить();
	ТаблицаТовары.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки", "Количество");
	ТаблицаТовары.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
	СтруктураПоискаПоТоварам = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
			  
	ТаблицаСтоимости        = ПолучитьТаблицуСтоимостиТоваров(СтруктураПараметров.СсылкаНаОбъект);
	ТаблицаСтоимости.Индексы.Добавить("Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры,НомерСтроки");
	ВалютаУпрУчета          = МодульВалютногоУчета.ПолучитьВалюту("Упр");
	Параметры               = МодульВалютногоУчета.КурсВалюты(ВалютаУпрУчета, Шапка.ДатаДокумента);
	КурсВалютыУпрУчета      = Параметры.Курс;
	КратностьВалютыУпрУчета = Параметры.Кратность;
	
	// Вывод заголовка
	Макет = ИнициализацияМакета(СтруктураПараметров, "М11");
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заголовок = "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + Строка(Шапка.НомерДокумента);
	Область.Параметры.Заполнить(Шапка);
	
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

	Область.Параметры.ПредставлениеОрганизации = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации);
	Область.Параметры.КодОКПО = СведенияОбОрганизации.КодПоОКПО;
	Область.Параметры.ПредставлениеПодразделения = Шапка.Подразделение;
	Область.Параметры.Склад=?(Шапка.Склад.Подразделение.Пустая(), Шапка.Склад, Шапка.Склад.Подразделение);

	тзКомплектующие=Шапка.Комплектующие.Выгрузить();
	Если тзКомплектующие.Количество()>0 И НЕ тзКомплектующие[0].ТОП.Пустая() Тогда
		стрСчетов="";
		Для Каждого СтрокаТз ИЗ тзКомплектующие Цикл
			Если Найти(стрСчетов, Строка(СтрокаТз.ТОП.ПроводкиБУ[0].СчетКредит))>0 Тогда Продолжить; КонецЕсли;
			стрСчетов=стрСчетов+Строка(СтрокаТз.ТОП.ПроводкиБУ[0].СчетКредит)+" ";
		КонецЦикла;	
		Область.Параметры.КоррСчет=стрСчетов;
	КонецЕсли;
	ТабДокумент.Вывести(Область);
	
	ВыборкаПоСтрокам = ЗапросПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоСтрокам.Следующий() Цикл
		Область=Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(ВыборкаПоСтрокам);
		Область.Параметры.МатериалНаименование = СокрЛП(ВыборкаПоСтрокам.МатериалНаименование) + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаПоСтрокам);
		
		Если ВыборкаПоСтрокам.Количество = 0 Тогда
			Сумма = 0;
			Цена  = 0;
		Иначе
			Количество = 0;
			Сумма = ПолучитьСтоимостьТовара(ТаблицаСтоимости,
			                                ВыборкаПоСтрокам.Номенклатура,
			                                ВыборкаПоСтрокам.Характеристика,
			                                ВыборкаПоСтрокам.Серия,
			                                ВыборкаПоСтрокам.ПартионныйУчетПоСериям,
				                                Количество,ВыборкаПоСтрокам.НомерСтроки);
			Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(Сумма, ВалютаУпрУчета, МодульВалютногоУчета.ПолучитьВалюту("Бух"), КурсВалютыУпрУчета, 1, КратностьВалютыУпрУчета, 1);
				
			СтруктураПоискаПоТоварам.Номенклатура = ВыборкаПоСтрокам.Номенклатура;
			СтруктураПоискаПоТоварам.ХарактеристикаНоменклатуры = ВыборкаПоСтрокам.Характеристика;
			СтруктураПоискаПоТоварам.СерияНоменклатуры = ВыборкаПоСтрокам.Серия;
			СтрокиТаблицыТовары = ТаблицаТовары.НайтиСтроки(СтруктураПоискаПоТоварам);
			Цена = Окр(?(Количество > 0, Сумма / Количество, 0), 2);
		КонецЕсли;

		Область.Параметры.Цена = Цена;
		Область.Параметры.Сумма = Сумма;
		Попытка Область.Параметры.Счет=ВыборкаПоСтрокам.ТОП.ПроводкиБУ[0].СчетДебет;
		Исключение
		КонецПопытки;	
		ТабДокумент.Вывести(Область);
	КонецЦикла;

	Область=Макет.ПолучитьОбласть("Подвал");
	ТабДокумент.Вывести(Область);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция Печать_ЛимитноЗаборнаяКарта(СтруктураПараметров)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ *
	|ИЗ
	|	Документ.ПоступлениеИзПереработки КАК ПоступлениеИзПереработки
	|
	|ГДЕ
	|	ПоступлениеИзПереработки.Ссылка = &ТекущийДокумент
	|";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	тзИзделияВыработка=Новый ТаблицаЗначений;
	тзДанные=Шапка.Комплектующие.Выгрузить();
	тзДанные=тзДанные.Скопировать(, "Номенклатура,Количество,ID_Товары");
	
	Товары=Шапка.Товары.Выгрузить();
	Для Каждого СтрокаТз Из Товары Цикл
		стрИмяКолонки=УбратьЛишниеПробелы(СтрокаТз.Номенклатура);
		Если тзДанные.Колонки.Найти(стрИмяКолонки)=Неопределено Тогда
			тзДанные.Колонки.Добавить(стрИмяКолонки,,СтрокаТз.Номенклатура.Наименование);
		КонецЕсли;
    КонецЦикла;
    тзИзделияВыработка=тзДанные.СкопироватьКолонки();
	НоваяСтрока=тзИзделияВыработка.Добавить();
	
	стрДляСвертки="";
	Для Каждого СтрокаТз Из тзДанные Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ID", СтрокаТз.ID_Товары);
		Массив = Товары.НайтиСтроки(ПараметрыОтбора);
		СтрокаТз[УбратьЛишниеПробелы(Массив[0].Номенклатура)]=СтрокаТз.Количество;
		стрДляСвертки=?(стрДляСвертки="",стрДляСвертки,стрДляСвертки+",")+УбратьЛишниеПробелы(Массив[0].Номенклатура);
		НоваяСтрока[УбратьЛишниеПробелы(Массив[0].Номенклатура)]=Массив[0].Количество;
	КонецЦикла;
	тзДанные.Свернуть("Номенклатура",стрДляСвертки);
	
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеИзПереработки_ЛимитноЗаборнаяКарта";
	Макет=ИнициализацияМакета(СтруктураПараметров, "ЛимитноЗаборнаяКарта");

	ВыводимаяОбласть=Макет.ПолучитьОбласть("Заголовок|Материалы");
	ВыводимаяОбласть.Параметры.Заголовок="Лимитно-заборная карта за "+Формат(Шапка.Дата,"ДФ=dd.MM.yyyy");
	ВыводимаяОбласть.Параметры.ТекстЦех="По цеху: "+Строка(Шапка.Подразделение.Наименование);
	ТабДокумент.Вывести(ВыводимаяОбласть);

	ВыводимаяОбласть=Макет.ПолучитьОбласть("Шапка|Материалы");
	ТабДокумент.Вывести(ВыводимаяОбласть);
	Для Каждого тзКолонка ИЗ тзДанные.Колонки Цикл
		Если Найти(тзКолонка.Имя,"Изделие_")=0 Тогда Продолжить; КонецЕсли;
		ВыводимаяОбласть=Макет.ПолучитьОбласть("Шапка|Изделие");
        ВыводимаяОбласть.Параметры.Изделие=тзКолонка.Заголовок;
		ТабДокумент.Присоединить(ВыводимаяОбласть);
	КонецЦикла;
	ВыводимаяОбласть=Макет.ПолучитьОбласть("Шапка|Итого");
	ТабДокумент.Присоединить(ВыводимаяОбласть);

	Для Каждого тзСтрока ИЗ тзИзделияВыработка Цикл
		ВыводимаяОбласть=Макет.ПолучитьОбласть("СтрокаВыработка|Материалы");
		ТабДокумент.Вывести(ВыводимаяОбласть);
		ИтогоПоВыработке=0;
		Для Каждого тзКолонка ИЗ тзИзделияВыработка.Колонки Цикл
			Если Найти(тзКолонка.Имя,"Изделие_")=0 Тогда Продолжить; КонецЕсли;
			ВыводимаяОбласть=Макет.ПолучитьОбласть("СтрокаВыработка|Изделие");
			КоличествоВыработки=тзСтрока[тзКолонка.Имя];
			
			ВыводимаяОбласть.Параметры.Количество=КоличествоВыработки;
			ТабДокумент.Присоединить(ВыводимаяОбласть);
			Если КоличествоВыработки<>Неопределено Тогда
				ИтогоПоВыработке=ИтогоПоВыработке+КоличествоВыработки;
			КонецЕсли;
		КонецЦикла;
		ВыводимаяОбласть=Макет.ПолучитьОбласть("СтрокаВыработка|Итого");
		ВыводимаяОбласть.Параметры.Количество=ИтогоПоВыработке;
		ТабДокумент.Присоединить(ВыводимаяОбласть);
	КонецЦикла;
	
	Для Каждого тзСтрока ИЗ тзДанные Цикл
		ВыводимаяОбласть=Макет.ПолучитьОбласть("Строка|Материалы");
		ЗаполнитьЗначенияСвойств(ВыводимаяОбласть.Параметры,тзСтрока);
		ТабДокумент.Вывести(ВыводимаяОбласть);
		ИтогоПоРасходу=0;
		Для Каждого тзКолонка ИЗ тзДанные.Колонки Цикл
			Если Найти(тзКолонка.Имя,"Изделие_")=0 Тогда Продолжить; КонецЕсли;
			ВыводимаяОбласть=Макет.ПолучитьОбласть("Строка|Изделие");
			КоличествоМатериалов=тзСтрока[тзКолонка.Имя];
			
			ВыводимаяОбласть.Параметры.Количество=КоличествоМатериалов;
			ТабДокумент.Присоединить(ВыводимаяОбласть);
			Если КоличествоМатериалов<>Неопределено Тогда
				ИтогоПоРасходу=ИтогоПоРасходу+КоличествоМатериалов;
			КонецЕсли;
		КонецЦикла;
		ВыводимаяОбласть=Макет.ПолучитьОбласть("Строка|Итого");
		ВыводимаяОбласть.Параметры.Количество=ИтогоПоРасходу;
		ТабДокумент.Присоединить(ВыводимаяОбласть);
	КонецЦикла;

	//Выводим подвал
	ВыводимаяОбласть=Макет.ПолучитьОбласть("Подвал|Материалы");
	ТабДокумент.Вывести(ВыводимаяОбласть);
	
	Возврат ТабДокумент;
КонецФункции

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	Если СтруктураПараметров.ИмяМакета = "АктНаСписание" Тогда
		ТабДокумент = Печать_АктНаСписание(СтруктураПараметров);
	ИначеЕсли СтруктураПараметров.ИмяМакета = "МХ18" Тогда
		ТабДокумент = Печать_МХ18(СтруктураПараметров);
	ИначеЕсли СтруктураПараметров.ИмяМакета = "М11" Тогда
		ТабДокумент = Печать_М11(СтруктураПараметров);
	ИначеЕсли СтруктураПараметров.ИмяМакета = "ЛимитноЗаборнаяКарта" Тогда
		ТабДокумент = Печать_ЛимитноЗаборнаяКарта(СтруктураПараметров);
	КонецЕсли;

	Возврат ТабДокумент;
КонецФункции
