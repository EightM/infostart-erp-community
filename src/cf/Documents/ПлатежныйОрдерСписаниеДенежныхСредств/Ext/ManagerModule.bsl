////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("ПлатежноеПоручение", "Платежное поручение");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция ВернутьРасчетныйСчет(СчетКонтрагента)	
	БанкДляРасчетов = СчетКонтрагента.БанкДляРасчетов;
	Возврат ?(БанкДляРасчетов.Пустая(), СчетКонтрагента.НомерСчета, СчетКонтрагента.Банк.КоррСчет);
КонецФункции

Функция ФорматироватьСуммуПрописи(СчетОрганизации, СуммаДок,СуммаБезКопеек)
	
	Результат     = СуммаДок;
	ЦелаяЧасть    = Цел(СуммаДок);
	ФорматСтрока  = "Л=ru_RU; ДП=Ложь";
	ПарамПредмета = СчетОрганизации.ВалютаДенежныхСредств.ПараметрыПрописиНаРусском;
	
	Если (Результат - ЦелаяЧасть) = 0 Тогда
		Если СуммаБезКопеек Тогда
			Результат = ЧислоПрописью(Результат,ФорматСтрока,ПарамПредмета);
			Результат = Лев(Результат,Найти(Результат,"0")-1);
		Иначе
			Результат = ЧислоПрописью(Результат,ФорматСтрока,ПарамПредмета);
		КонецЕсли;
	Иначе
		Результат = ЧислоПрописью(Результат,ФорматСтрока,ПарамПредмета);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ФорматироватьСумму(СуммаДок, СуммаБезКопеек)
	
	Результат  = СуммаДок;
	ЦелаяЧасть = Цел(СуммаДок);
	
	Если (Результат - ЦелаяЧасть) = 0 Тогда
		Если СуммаБезКопеек Тогда
			Результат = Формат(Результат,"ЧДЦ=2; ЧРД='='; ЧГ=0");
			Результат = Лев(Результат,Найти(Результат,"="));
		Иначе
			Результат = Формат(Результат,"ЧДЦ=2; ЧРД='-'; ЧГ=0");
		КонецЕсли;
	Иначе
		Результат = Формат(Результат,"ЧДЦ=2; ЧРД='-'; ЧГ=0");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция Проверить(РеквизитыШапки)

	Ошибка = Новый СписокЗначений();

	П101 = СокрЛП(РеквизитыШапки.СтатусСоставителя);
	П104 = СокрЛП(РеквизитыШапки.КодБК);
	П105 = СокрЛП(РеквизитыШапки.КодОКАТО);
	П106 = СокрЛП(РеквизитыШапки.ПоказательОснования);
	П107 = ?(ПустаяСтрока(СокрЛП(СтрЗаменить(РеквизитыШапки.ПоказательПериода,".","")))=1,"", РеквизитыШапки.ПоказательПериода);
	П107 = ?(СокрЛП(СтрЗаменить(РеквизитыШапки.ПоказательПериода, ".", ""))="0","", РеквизитыШапки.ПоказательПериода);
	П108 = СокрЛП(РеквизитыШапки.ПоказательНомера);
	П109 = РеквизитыШапки.ПоказательДаты;
	П110 = СокрЛП(РеквизитыШапки.ПоказательТипа);

	Если (Найти("01,02,03,04,05,06,07,08,09,10,11,12,13,14,15", П101) =0) Или (ПустаяСтрока(СокрЛП(П101))) Тогда
		Ошибка.Добавить("Неверное значение поля ""Статус составителя"".");
	КонецЕсли;

	Если (СтрЗаменить(П104,"0","")="")и(Найти("06,07", П101) =0) Тогда
		Ошибка.Добавить("Необходимо заполнить поле ""Код БК"".");
	КонецЕсли;
	
	Если ПустаяСтрока(П105) Тогда
		Ошибка.Добавить("Необходимо заполнить поле ""Код ОКАТО"".");
	КонецЕсли;

	// Проверяем в зависимости от статуса составителя
	Если П101 = "08" Тогда
		Если СтрЗаменить(П106,"0","")<>"" Тогда 
			Ошибка.Добавить("При статусе составителя ""08"" не следует заполнять поле ""Основание платежа"".");
		КонецЕсли;
		Если СтрЗаменить(П107,"0","")<>"" Тогда
			Ошибка.Добавить("При статусе составителя ""08"" не следует заполнять поле ""Период"".");
		КонецЕсли;
		Если СтрЗаменить(П108,"0","")<>"" Тогда
			Ошибка.Добавить("При статусе составителя ""08"" не следует заполнять поле ""Номер"".");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(П109) = Ложь Тогда
			Ошибка.Добавить("При статусе составителя ""08"" не следует заполнять поле ""Дата"".");
		КонецЕсли;
		Если СтрЗаменить(П110,"0","")<>"" Тогда
			Ошибка.Добавить("При статусе составителя ""08"" не следует заполнять поле ""Тип платежа"".");
		КонецЕсли;
	Иначе
		// Проверяем в зависимости от основания платежа
		Если СтрЗаменить(СокрЛП(П106),"0","") = "" Тогда
			Если СтрЗаменить(П107,"0","")<>"" Тогда
				Если НЕ ЗначениеЗаполнено(П107) Тогда
					Ошибка.Добавить("Возможно, неверно указана дата в поле ""Период""."); 
				КонецЕсли;
			КонецЕсли;
			Если СтрЗаменить(П109,"0","")<>"" Тогда
				Если НЕ ЗначениеЗаполнено(Дата(П109)) Тогда
					Ошибка.Добавить("Возможно, неверно указана дата в поле ""Дата""."); 
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли СтрДлина(П106)<>2 Тогда
			Ошибка.Добавить("Возможно, неверно заполнено поле ""Основание платежа"".");
			Если СтрЗаменить(П107,"0","")<>"" Тогда
				Если НЕ ЗначениеЗаполнено(П107) Тогда
					Ошибка.Добавить("Возможно, неверно указана дата в поле ""Период""."); 
				КонецЕсли;
			КонецЕсли;
			Если СтрЗаменить(П109,"0","")<>"" Тогда
				Если НЕ ЗначениеЗаполнено(Дата(П109)) Тогда
					Ошибка.Добавить("Возможно, неверно указана дата в поле ""Дата""."); 
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Найти("АП, АР", П106) > 0 Тогда
			Если СтрЗаменить(П107,"0","")<>"" Тогда
				Ошибка.Добавить("При основании платежа ""АП"" или ""АР"" в поле ""Период"" необходимо указывать ""0"".");
			КонецЕсли;
		ИначеЕсли Найти("ТР, РС, ОТ, РТ, ВУ, ПР", П106) > 0 Тогда
			Если СтрЗаменить(П107,"0","")<>"" Тогда
				Если НЕ ЗначениеЗаполнено(П107) Тогда
					Ошибка.Добавить("Возможно, неверно указана дата в поле ""Период""."); 
				КонецЕсли;
			КонецЕсли;
			Если СтрЗаменить(П109,"0","")<>"" Тогда
				Если НЕ ЗначениеЗаполнено(Дата(П109)) Тогда
					Ошибка.Добавить("Возможно, неверно указана дата в поле ""Дата""."); 
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Найти("ТП ,ЗД ", П106) > 0 Тогда
			Если СтрЗаменить(П107,"0","")<>"" Тогда
				ДД = Сред((П107), 1, 2);
				ММ = Сред((П107), 4, 2);
				ГГ = Сред((П107), 7, 4);
				
				Если НЕ ММ="" Тогда
					ММ = Число(Сред((П107), 4, 2));
				Иначе
					ММ = 0;
				КонецЕсли;	
							
				Если НЕ ГГ="" Тогда
					ГГ = Число(Сред((П107), 7, 4));
				Иначе
					ГГ = 0;
				КонецЕсли;
				
				Если (Найти("Д1, Д2, Д3, МС", ДД) > 0) Тогда
					Если (ММ<1)или
						(ММ>12)или 
						(ГГ<2000)или
						(СтрДлина(П107)-СтрДлина(СтрЗаменить(П107,".",""))<>2) Тогда
						Ошибка.Добавить("Возможно, неверно указана дата в поле ""Период""."); 
					КонецЕсли;
				ИначеЕсли (Найти("КВ", ДД) > 0) Тогда
					Если (ММ<1)или
						(ММ>4)или 
						(ГГ<2000)или
						(СтрДлина(П107)-СтрДлина(СтрЗаменить(П107,".",""))<>2) Тогда
							Ошибка.Добавить("Неверно указан показатель налогового периода в поле ""Период"".");
					КонецЕсли;
				ИначеЕсли (Найти("ПЛ", ДД) > 0) Тогда
					Если (ММ<1)или
						(ММ>2)или 
						(ГГ<2000)или
						(СтрДлина(П107)-СтрДлина(СтрЗаменить(П107,".",""))<>2) Тогда
							Ошибка.Добавить("Неверно указан показатель налогового периода в поле ""Период"".");
					КонецЕсли;
				ИначеЕсли (Найти("ГД", ДД) > 0) Тогда
					Если (ММ<>0)или
						(ГГ<2000)или
						(СтрДлина(П107)-СтрДлина(СтрЗаменить(П107,".",""))<>2) Тогда
							Ошибка.Добавить("Неверно указан показатель налогового периода в поле ""Период"".");
					КонецЕсли;
				Иначе
					Если НЕ ЗначениеЗаполнено(П107) Тогда
						Ошибка.Добавить("Возможно, неверно указана дата в поле ""Период""."); 
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если СтрЗаменить(П108,"0","")<>"" Тогда
				Ошибка.Добавить("При основании платежа ""ТП"" или ""ЗД"" в поле ""Номер"" необходимо указывать ""0"".");
			КонецЕсли;
			Если Найти("ЗД ", П106) > 0 Тогда
				Если СтрЗаменить(П109,"0","")<>"" Тогда
					Ошибка.Добавить("Не должна заполнятся дата");
				КонецЕсли;
			Иначе
				Если СтрЗаменить(П109,"0","")<>"" Тогда
					Если НЕ ЗначениеЗаполнено(Дата(П109)) Тогда
						Ошибка.Добавить("Возможно, неверно указана дата в поле ""Дата""."); 
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Найти("БФ", П106) > 0 Тогда
		Иначе
			Ошибка.Добавить("Неверно указано значение в поле ""Основание платежа"".");
		КонецЕсли;
		Если СтрЗаменить(П110,"0","")="" Тогда
		ИначеЕсли Найти("НС, АВ, ПЕ, ПЦ, СА, АШ, ИШ, ПЛ, ГП, ВЗ", П110) > 0 Тогда
		Иначе
			Ошибка.Добавить("Некорректный тип платежа");
		КонецЕсли;
	КонецЕсли;

	//Выводим список найденых ошибок
	Для Ном = 0 по Ошибка.Количество()-1 Цикл
		Сообщить(Ошибка.Получить(Ном), СтатусСообщения.Важное);
	КонецЦикла;

	Возврат Ошибка;

КонецФункции

Функция ПолучитьРеквизитыШапки(СсылкаНаОбъект, стрРеквизиты="")
	Если НЕ ПустаяСтрока(стрРеквизиты) Тогда стрРеквизиты=","+стрРеквизиты; КонецЕсли; 
	Для каждого мдРеквизит Из СсылкаНаОбъект.Метаданные().Реквизиты Цикл
		стрРеквизиты=стрРеквизиты+","+Символы.ПС+мдРеквизит.Имя;
	КонецЦикла;	

	Запрос=Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Дата,
	|	Номер,
	|	Проведен,
	|	Контрагент,
	|	Организация
	|	"+стрРеквизиты+"
	|ИЗ
	|	Документ.ПлатежныйОрдерСписаниеДенежныхСредств КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент
	|";
	
	#Если НаСервере Тогда
	Запрос.Выполнить();
	#КонецЕсли
	РеквизитыШапки=Запрос.Результат.Выбрать();
	РеквизитыШапки.Следующий();

	Возврат РеквизитыШапки;
КонецФункции 	

Функция Печать_ПлатежногоПоручения(СтруктураПараметров)
    РеквизитыШапки=ПолучитьРеквизитыШапки(СтруктураПараметров.СсылкаНаОбъект);
	
	Если РеквизитыШапки.Организация.Пустая() Тогда
		Сообщить("Не указана организация.", СтатусСообщения.Важное);
		Возврат Неопределено;
	КонецЕсли;

	Если РеквизитыШапки.Контрагент.Пустая() И Не РеквизитыШапки.ВидОперации=Перечисления.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПереводНаДругойСчет Тогда
		Сообщить("Не указан контрагент.", СтатусСообщения.Важное);
		Возврат Неопределено;
	КонецЕсли;
	
	НомерПечать=ОбщегоНазначенияСервер.НомерНаПечать(СтруктураПараметров.СсылкаНаОбъект);
	
	Если Прав(НомерПечать,3)="000" Тогда
		Сообщить("Номер платежного поручения не может оканчиваться на ""000""!", СтатусСообщения.Важное);
		Возврат Неопределено;
	КонецЕсли;
	
	Организация=РеквизитыШапки.Организация;
	Контрагент=РеквизитыШапки.Контрагент;
	СчетОрганизации=РеквизитыШапки.СчетОрганизации;
	СчетКонтрагента=РеквизитыШапки.СчетКонтрагента;
	ИННПлательщика=РеквизитыШапки.ИННПлательщика;
	КППплательщика=РеквизитыШапки.КППплательщика;
	ИННПолучателя=РеквизитыШапки.ИННПолучателя;
	КПППолучателя=РеквизитыШапки.КПППолучателя;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПлатежноеПоручение_ПлатежноеПоручение";
	
	Макет=ИнициализацияМакета(СтруктураПараметров, "ПлатежноеПоручение");
	Обл=Макет.ПолучитьОбласть("ЗаголовокТаблицы");

	МесяцПрописью   = СчетОрганизации.МесяцПрописью;
	СуммаБезКопеек  = СчетОрганизации.СуммаБезКопеек;
	ФорматДаты      = "ДФ=" + ?(МесяцПрописью = 1,"'дд ММММ гггг'","'дд.ММ.гггг'");
	БанкОрганизации = ?(НЕ ЗначениеЗаполнено(СчетОрганизации.БанкДляРасчетов), СчетОрганизации.Банк, СчетОрганизации.БанкДляРасчетов);
	БанкКонтрагента = ?(НЕ ЗначениеЗаполнено(СчетКонтрагента.БанкДляРасчетов), СчетКонтрагента.Банк, СчетКонтрагента.БанкДляРасчетов);

	Обл.Параметры.НаименованиеНомер = "ПЛАТЕЖНОЕ ПОРУЧЕНИЕ № " + НомерПечать;
	Обл.Параметры.ДатаДокумента     = Формат(РеквизитыШапки.Дата,ФорматДаты);
	Обл.Параметры.ВидПлатежа        = РеквизитыШапки.ВидПлатежа;
	Обл.Параметры.СуммаЧислом       = ФорматироватьСумму(РеквизитыШапки.СуммаДокумента, СуммаБезКопеек);
	Обл.Параметры.СуммаПрописью     = ФорматироватьСуммуПрописи(СчетОрганизации, РеквизитыШапки.СуммаДокумента,СуммаБезКопеек);

	Обл.Параметры.ПлательщикИНН     = "ИНН "+?(ПустаяСтрока(ИННПлательщика), Организация.ИНН, СокрЛП(ИННПлательщика));
	Обл.Параметры.ПлательщикКПП     = "КПП "+?(ПустаяСтрока(КППплательщика), ?(РеквизитыШапки.ВидОперации=Перечисления.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПеречислениеНалога,"0",""),СокрЛП(КППплательщика));	

	СтрКорреспондент="";
	Если НЕ СчетОрганизации.БанкДляРасчетов.Пустая() Тогда
		СтрКорреспондент= " р/с "+СчетОрганизации.НомерСчета+" в "+СчетОрганизации.Банк+" "+СчетОрганизации.Банк.Город;
	КонецЕсли;

	Если РеквизитыШапки.ВидОперации=Перечисления.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПеречислениеНалога Тогда
		ТекстПлательщикПечать=?(ПустаяСтрока(Организация.НаименованиеПлательщикаПриПеречисленииНалогов), ?(ПустаяСтрока(РеквизитыШапки.ТекстПлательщика),Организация.НаименованиеПолное,СокрЛП(РеквизитыШапки.ТекстПлательщика)),Организация.НаименованиеПлательщикаПриПеречисленииНалогов+СтрКорреспондент);
	Иначе
        ТекстПлательщикПечать=?(ПустаяСтрока(РеквизитыШапки.ТекстПлательщика),Организация.НаименованиеПолное,СокрЛП(РеквизитыШапки.ТекстПлательщика));
	КонецЕсли;
	
	Обл.Параметры.Плательщик            = ТекстПлательщикПечать;
	Обл.Параметры.БанкПлательщика       = "" + БанкОрганизации + " " + БанкОрганизации.Город;
	Обл.Параметры.НомерСчетаПлательщика = ВернутьРасчетныйСчет(СчетОрганизации);
	Обл.Параметры.БикБанкаПлательщика   = БанкОрганизации.Код;
	Обл.Параметры.СчетБанкаПлательщика  = БанкОрганизации.КоррСчет;

	Если НЕ РеквизитыШапки.ВидОперации=Перечисления.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПереводНаДругойСчет Тогда
		Обл.Параметры.ПолучательИНН     = "ИНН " + ?(ПустаяСтрока(ИННПолучателя), Контрагент.ИНН, СокрЛП(ИННПолучателя));
		Обл.Параметры.ПолучательКПП     = "КПП " + ?(ПустаяСтрока(КПППолучателя),"",СокрЛП(КПППолучателя));
		Обл.Параметры.Получатель        = ?(ПустаяСтрока(РеквизитыШапки.ТекстПолучателя),Контрагент.НаименованиеПолное,СокрЛП(РеквизитыШапки.ТекстПолучателя));
	Иначе
		Обл.Параметры.ПолучательИНН     = "ИНН " + ?(ПустаяСтрока(ИННПолучателя), Организация.ИНН, СокрЛП(ИННПолучателя));
		Обл.Параметры.ПолучательКПП     = "КПП " + ?(ПустаяСтрока(КПППолучателя),"",СокрЛП(КПППолучателя));
		Обл.Параметры.Получатель        = ?(ПустаяСтрока(РеквизитыШапки.ТекстПолучателя),Организация.НаименованиеПолное,СокрЛП(РеквизитыШапки.ТекстПолучателя));
	КонецЕсли;

	Обл.Параметры.БанкПолучателя        = "" + БанкКонтрагента + " " + БанкКонтрагента.Город;
	Обл.Параметры.БикБанкаПолучателя    = БанкКонтрагента.Код;
	Обл.Параметры.СчетБанкаПолучателя   = БанкКонтрагента.КоррСчет;
	Обл.Параметры.НомерСчетаПолучателя  = ВернутьРасчетныйСчет(СчетКонтрагента);
	Обл.Параметры.НазначениеПлатежа     = СокрЛП(РеквизитыШапки.НазначениеПлатежа);
	Обл.Параметры.Очередность           = РеквизитыШапки.ОчередностьПлатежа;
	Обл.Параметры.СрокПлатежа           = "";

	Если РеквизитыШапки.ВидОперации=Перечисления.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПеречислениеНалога Или РеквизитыШапки.ИспользоватьРеквизитыНалоговПриПечати Тогда
		Проверить(РеквизитыШапки);

		Обл.Параметры.СтатусСоставителя   = ?(ПустаяСтрока(РеквизитыШапки.СтатусСоставителя), "0", СокрЛП(РеквизитыШапки.СтатусСоставителя));
		Обл.Параметры.КодБК               = ?(ПустаяСтрока(РеквизитыШапки.КодБК), "", СокрЛП(РеквизитыШапки.КодБК));
		Обл.Параметры.КодОКАТО            = ?(ПустаяСтрока(РеквизитыШапки.КодОКАТО), "", СокрЛП(РеквизитыШапки.КодОКАТО));
		Обл.Параметры.ПоказательОснования = ?(ПустаяСтрока(РеквизитыШапки.ПоказательОснования), "0", СокрЛП(РеквизитыШапки.ПоказательОснования));
		Обл.Параметры.ПоказательНомера    = ?(ПустаяСтрока(РеквизитыШапки.ПоказательНомера), "0", СокрЛП(РеквизитыШапки.ПоказательНомера));
		Обл.Параметры.ПоказательДаты      = ?(РеквизитыШапки.ПоказательДаты = '00010101000000', "0", Формат(РеквизитыШапки.ПоказательДаты,"ДФ='дд.ММ.гггг'"));
		Обл.Параметры.ПоказательТипа      = ?(ПустаяСтрока(РеквизитыШапки.ПоказательТипа), "0", СокрЛП(РеквизитыШапки.ПоказательТипа));
		Если (ПустаяСтрока(РеквизитыШапки.ПоказательПериода)) ИЛИ (РеквизитыШапки.ПоказательПериода="  .  .    ") Тогда
			Обл.Параметры.ПоказательПериода = "0";
		Иначе
			Обл.Параметры.ПоказательПериода = СокрЛП(РеквизитыШапки.ПоказательПериода);
		КонецЕсли;
		Обл.Параметры.УИН = ?(ПустаяСтрока(РеквизитыШапки.УИН), "", СокрЛП(РеквизитыШапки.УИН));
	КонецЕсли;

	ТабДокумент.Вывести(Обл);

	Возврат ТабДокумент;

КонецФункции

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	Если СтруктураПараметров.ИмяМакета="ПлатежноеПоручение" тогда
		ТабДокумент=Печать_ПлатежногоПоручения(СтруктураПараметров);
	КонецЕсли;

	Возврат ТабДокумент;
КонецФункции