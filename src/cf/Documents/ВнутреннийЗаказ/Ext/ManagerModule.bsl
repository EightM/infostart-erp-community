////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("Заказ", "Внутренний заказ");
	Структура.Вставить("ЗаказКорректировка", "Внутренний заказ (с учетом корректировок)");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция Печать_СчетЗаказ(СтруктураПараметров, Тип)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ПустаяСсылка", Справочники.ФизическиеЛица.ПустаяСсылка());
	Запрос.Текст="ВЫБРАТЬ
	             |	ЗаказПокупателя.Номер,
	             |	ЗаказПокупателя.Дата,
	             |	ЗаказПокупателя.Организация,
	             |	ВЫБОР
	             |		КОГДА ЗаказПокупателя.Исполнитель = &ПустаяСсылка
	             |			ТОГДА ЗаказПокупателя.ПодразделениеИсполнитель
	             |		ИНАЧЕ ЗаказПокупателя.Исполнитель
	             |	КОНЕЦ КАК Заказчик,
	             |	ЗаказПокупателя.Организация КАК Руководители,
	             |	ЗаказПокупателя.Организация КАК Поставщик
	             |ИЗ
	             |	Документ.ВнутреннийЗаказ КАК ЗаказПокупателя
	             |ГДЕ
	             |	ЗаказПокупателя.Ссылка = &ТекущийДокумент";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВнутреннийЗаказ_СчетЗаказ";

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК Характеристика,
	|	NULL КАК Серия,
	|	МИНИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки,
	|	ВложенныйЗапрос.НомерТЧ КАК НомерТЧ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказПокупателя.Номенклатура КАК Номенклатура,
	|		ЗаказПокупателя.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ЗаказПокупателя.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ЗаказПокупателя.Количество КАК Количество,
	|		1 КАК НомерТЧ,
	|		ЗаказПокупателя.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ВнутреннийЗаказ.Товары КАК ЗаказПокупателя
	|	ГДЕ
	|		ЗаказПокупателя.Ссылка = &ТекущийДокумент
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказПокупателя.Номенклатура,
	|		ЗаказПокупателя.Номенклатура.ЕдиницаХраненияОстатков,
	|		NULL,
	|		ЗаказПокупателя.Количество,
	|		2,
	|		ЗаказПокупателя.НомерСтроки
	|	ИЗ
	|		Документ.ВнутреннийЗаказ.ВозвратнаяТара КАК ЗаказПокупателя
	|	ГДЕ
	|		ЗаказПокупателя.Ссылка = &ТекущийДокумент) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры,
	|	ВложенныйЗапрос.Номенклатура.Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление,
	|	ВложенныйЗапрос.НомерТЧ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерТЧ,
	|	НомерСтроки
	|";
	ЗапросТовары = Запрос.Выполнить().Выгрузить();

	Макет = ИнициализацияМакета(СтруктураПараметров, "ВнутреннийЗаказ");

	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Внутренний заказ");
	
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Заказчик");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеЗаказчика = СокрЛП(Шапка.Заказчик.Наименование);
	ТабДокумент.Вывести(ОбластьМакета);

	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ВыводитьКоды=Не ПустаяСтрока(Колонка);
	
	ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");

	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьДанных);

	ОбластьКолонкаТовар = Макет.Область("Товар");
	Если Не ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки=ОбластьКолонкаТовар.ШиринаКолонки+Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;

	ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");

	Для каждого ВыборкаСтрокТовары Из ЗапросТовары Цикл 
		Если ВыборкаСтрокТовары.Количество = 0 Тогда Продолжить; КонецЕсли;

		Если Не ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьНомера.Параметры.НомерСтроки = ЗапросТовары.Индекс(ВыборкаСтрокТовары) + 1;
		ТабДокумент.Вывести(ОбластьНомера);

		Если ВыводитьКоды Тогда
			Если Колонка = "Артикул" Тогда
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
			Иначе
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;

		ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьДанных.Параметры.Товар = ВыборкаСтрокТовары.Номенклатура.НаименованиеПолное + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
		ТабДокумент.Присоединить(ОбластьДанных);
	КонецЦикла;

	// Вывести Итого
	ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");

	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьДанных);

	// Вывести Сумму прописью
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + ЗапросТовары.Количество();
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалЗаказа");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;
КонецФункции

Функция Печать_СчетЗаказКорректировки(СтруктураПараметров, Тип)
    СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	Организация,
	|	Заказчик    КАК Заказчик,
	|	Организация КАК Руководители,
	|	Организация КАК Поставщик
	|ИЗ
	|	Документ.ВнутреннийЗаказ КАК ЗаказПокупателя
	|
	|ГДЕ
	|	ЗаказПокупателя.Ссылка = &ТекущийДокумент
	|";
	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВнутреннийЗаказ_СчетЗаказ";

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК Характеристика,
	|	NULL КАК Серия,
	|	ВложенныйЗапрос.НомерТЧ,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК НаименованиеПолное
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказПокупателя.Номенклатура КАК Номенклатура,
	|		ЗаказПокупателя.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ЗаказПокупателя.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ЗаказПокупателя.Количество КАК Количество,
	|		1 КАК НомерТЧ
	|	ИЗ
	|		Документ.ВнутреннийЗаказ.Товары КАК ЗаказПокупателя
	|	ГДЕ
	|		ЗаказПокупателя.Ссылка = &ТекущийДокумент
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказПокупателя.Номенклатура,
	|		ЗаказПокупателя.ЕдиницаИзмерения,
	|		ЗаказПокупателя.ХарактеристикаНоменклатуры,
	|		ЗаказПокупателя.Количество,
	|		1 КАК НомерТЧ
	|	ИЗ
	|		Документ.КорректировкаВнутреннегоЗаказа.Товары КАК ЗаказПокупателя
	|	ГДЕ
	|		ЗаказПокупателя.Ссылка.ВнутреннийЗаказ = &ТекущийДокумент
	|		И ЗаказПокупателя.Ссылка.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказПокупателя.Номенклатура,
	|		ЗаказПокупателя.Номенклатура.ЕдиницаХраненияОстатков,
	|		NULL,
	|		ЗаказПокупателя.Количество,
	|		2 КАК НомерТЧ
	|	ИЗ
	|		Документ.ВнутреннийЗаказ.ВозвратнаяТара КАК ЗаказПокупателя
	|	ГДЕ
	|		ЗаказПокупателя.Ссылка = &ТекущийДокумент
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказПокупателя.Номенклатура,
	|		ЗаказПокупателя.Номенклатура.ЕдиницаХраненияОстатков,
	|		NULL,
	|		ЗаказПокупателя.Количество,
	|		2 КАК НомерТЧ
	|	ИЗ
	|		Документ.КорректировкаВнутреннегоЗаказа.ВозвратнаяТара КАК ЗаказПокупателя
	|	ГДЕ
	|		ЗаказПокупателя.Ссылка.ВнутреннийЗаказ = &ТекущийДокумент
	|		И ЗаказПокупателя.Ссылка.Проведен
	|) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры,
	|	ВложенныйЗапрос.НомерТЧ,
	|	ВложенныйЗапрос.Номенклатура.Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)),
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|";
	ЗапросТовары=Запрос.Выполнить().Выгрузить();

	Макет = ИнициализацияМакета(СтруктураПараметров, "ВнутреннийЗаказ");

	// Выводим шапку накладной
	СведенияОПоставщике = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата);
	Если Тип = "Счет" Тогда
		ОбластьМакета=Макет.ПолучитьОбласть("ЗаголовокСчета");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли; 

	ОбластьМакета=Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Внутренний заказ");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета=Макет.ПолучитьОбласть("Заказчик");
	ОбластьМакета.Параметры.ПредставлениеЗаказчика = Шапка.Заказчик;
	ТабДокумент.Вывести(ОбластьМакета);

	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ВыводитьКоды=Не ПустаяСтрока(Колонка);

	ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");

	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьДанных);

	ОбластьКолонкаТовар = Макет.Область("Товар");
	Если Не ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки+Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;

	ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");

	НумераторСтрок = 0;

	Для каждого ВыборкаСтрокТовары Из ЗапросТовары Цикл 
		Если ВыборкаСтрокТовары.Количество=0 Тогда Продолжить; КонецЕсли;

		Если Не ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		НумераторСтрок = НумераторСтрок + 1;
		ОбластьНомера.Параметры.НомерСтроки = НумераторСтрок;
		ТабДокумент.Вывести(ОбластьНомера);

		Если ВыводитьКоды Тогда
			Если Колонка = "Артикул" Тогда
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
			Иначе
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;

		ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьДанных.Параметры.Товар = СокрП(ВыборкаСтрокТовары.НаименованиеПолное) + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
		ТабДокумент.Присоединить(ОбластьДанных);
	КонецЦикла;

	// Вывести Итого
	ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");

	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьДанных);

	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалЗаказа");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;
КонецФункции

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	Если СтруктураПараметров.ИмяМакета="Заказ" тогда
		ТабДокумент=Печать_СчетЗаказ(СтруктураПараметров, СтруктураПараметров.ИмяМакета);

	ИначеЕсли СтруктураПараметров.ИмяМакета="ЗаказКорректировка" тогда
		ТабДокумент=Печать_СчетЗаказКорректировки(СтруктураПараметров, СтруктураПараметров.ИмяМакета);
	КонецЕсли;

	Возврат ТабДокумент;
КонецФункции