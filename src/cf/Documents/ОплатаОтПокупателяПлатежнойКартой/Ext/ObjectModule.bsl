Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт
	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;
КонецФункции

Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	СуммаДокумента=РасшифровкаПлатежа.Итог("СуммаПлатежа");
	СуммаДокументаУСН=РасшифровкаПлатежа.Итог("СуммаУСН");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Движения по регистрам

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_УчетНДС(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ВзаиморасчетыСКонтрагентами") Тогда Возврат; КонецЕсли;

	тзДвижения=СтруктураТД.Взаиморасчеты.Скопировать();
	
	//Данные по эквайрингу
	Если ДенежныеСредстваСервер.ЕстьВзаиморасчеты(ВидОперации) Тогда
		РасчетыВозврат=ДенежныеСредстваСервер.НаправленияДвижения(ВидОперации);

		НоваяСтрока=тзДвижения.Добавить();
		НоваяСтрока.Период=Дата;
		НоваяСтрока.Активность=Истина;
		НоваяСтрока.Регистратор=Ссылка;
		НоваяСтрока.ВидДвижения=ВидДвиженияНакопления[?(РасчетыВозврат=Перечисления.РасчетыВозврат.Возврат, "Расход", "Приход")];
		НоваяСтрока.ДоговорКонтрагента=ДоговорВзаиморасчетовЭквайрера;
		НоваяСтрока.Контрагент=Эквайрер;
		НоваяСтрока.Организация=Организация;
		НоваяСтрока.СуммаБух=СтруктураТД.РасшифровкаПлатежа.Итог("СуммаПлатежа");
		НоваяСтрока.СуммаВал=СтруктураТД.РасшифровкаПлатежа.Итог("СуммаВал");
	КонецЕсли;
	Движения.ВзаиморасчетыСКонтрагентами.Загрузить(тзДвижения);
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
// Проведение по регистрам (по нескольким регистрам одного типа)

Процедура ДвижениеПоРегистру_УчетВзаиморасчетов(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетНДС(СтруктураШД, СтруктураТД, Отказ)
	Если ДенежныеСредстваСервер.ЕстьВзаиморасчеты(ВидОперации) Тогда
		УчетНДС.ДвижениеДенежныхСредств(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ОбработкаЗаполнения(Основание)
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание) Тогда Возврат; КонецЕсли; 

	Если ТипЗнч(ДокументОснование)=Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		ВидОперации=Перечисления.ВидыОперацийОплатаОтПокупателяПлатежнойКартой.ВозвратДенежныхСредствПокупателю;
	Иначе
		ВидОперации=Перечисления.ВидыОперацийОплатаОтПокупателяПлатежнойКартой.ОплатаПокупателя;
	КонецЕсли;

	Если ТипЗнч(ДокументОснование)=Тип("ДокументСсылка.КомиссияОтчетПродажиКомиссионера") Тогда
		СуммаДокумента=СуммаДокумента-ДокументОснование.СуммаВознаграждения;
	КонецЕсли;

	СтрокаПлатеж=РасшифровкаПлатежа.Добавить();
	Если УправлениеМетаданными.ЕстьРеквизит("ДоговорКонтрагента", ДокументОснование.Метаданные()) Тогда
		СтрокаПлатеж.ДоговорКонтрагента=ДокументОснование.ДоговорКонтрагента;
	КонецЕсли;	
	СтрокаПлатеж.СтавкаНДС=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
	СтрокаПлатеж.СуммаПлатежа=СуммаДокумента;
	СтрокаПлатеж.СуммаНДС=ДенежныеСредстваСервер.РассчитатьСуммуНДС(СтрокаПлатеж.СуммаПлатежа, СтрокаПлатеж.СтавкаНДС);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;
	СтруктураТД.Вставить("Взаиморасчеты", ВзаиморасчетыСервер.СформироватьТаблицуОплаты(СтруктураШД, СтруктураТД, ВидДвиженияНакопления[?(ВидОперации=Перечисления.ВидыОперацийОплатаОтПокупателяПлатежнойКартой.ВозвратДенежныхСредствПокупателю, "Приход", "Расход")], Движения.ВзаиморасчетыСКонтрагентами.ВыгрузитьКолонки(), Отказ, ДополнительныеСвойства.Заголовок));

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	Если НЕ ВидОплаты.ТипОплаты=Перечисления.ТипыОплатЧекаККМ.ПлатежнаяКарта Тогда
		ОбщегоНазначения.СообщитьОбОшибке("В документе выбран вид оплаты неверного типа!", Отказ, Заголовок);
	КонецЕсли;
	
	//Формируем структуру шапки документа "СтруктураШД"
	СтруктураШД=УправлениеДокументамиСервер.СформироватьСтруктуруШД(ЭтотОбъект);

	//Формируем структуру таблиц документа "СтруктураТД"
	СтруктураТД=Новый Структура("РасшифровкаПлатежа", ДенежныеСредстваСервер.СформироватьТаблицуПлатежей(ЭтотОбъект, Отказ, Заголовок));
	
	ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);