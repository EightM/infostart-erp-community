Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт

	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;

КонецФункции

Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	
КонецПроцедуры

Процедура ЗаполнитьСтрокиДокумента() Экспорт
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("КонецПериода",  Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("СостояниеПредположения0", Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение);	
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.СчетФактура,
	|	ИсточникДанных.ВидЦенности,
	|	ИсточникДанных.СтавкаНДС,
	|	ИсточникДанных.СуммаБезНДСОстаток + ИсточникДанных.НДСОстаток КАК ПродажиСНДС0,
	|	ИсточникДанных.Покупатель
	|ИЗ
	|	РегистрНакопления.НДСРеализация0.Остатки(&КонецПериода,	Организация = &Организация И Состояние = &СостояниеПредположения0) КАК ИсточникДанных
	|";
	РезультатЗапроса=Запрос.Выполнить().Выгрузить();

	ТаблицаРезультата=Состав.ВыгрузитьКолонки();
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(РезультатЗапроса, ТаблицаРезультата);
	ТаблицаРезультата.ЗаполнитьЗначения(Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0, "Событие");
	Если Год(Дата)>2018 Тогда
		ТаблицаРезультата.ЗаполнитьЗначения(Перечисления.СтавкиНДС.НДС20_120, "СтавкаНДС");	
	Иначе	
		ТаблицаРезультата.ЗаполнитьЗначения(Перечисления.СтавкиНДС.НДС18_118, "СтавкаНДС");
	КонецЕсли;

	Состав.Загрузить(ТаблицаРезультата);	
КонецПроцедуры

Процедура СкорректироватьВыручкуПоЭкспорту(СтруктураШД, ТаблицаПоДокументам)
	ТаблицаПоДокументам.Колонки.Добавить("КурсоваяРазница", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	//Для каждого СтрокаКоллекции Из ТаблицаПоДокументам Цикл
	//	Если Не СтрокаКоллекции.СуммаБезНДС = 0 Тогда
	//		СтрокаКоллекции.КурсоваяРазница=СтрокаКоллекции.СуммаБезНДС;
	//	КонецЕсли;
	//КонецЦикла; 
	
	//////Запрос=Новый Запрос;
	//////Запрос.УстановитьПараметр("Дата", Новый Граница(КонецДня(СтруктураШД.Дата), ВидГраницы.Включая));
	//////Запрос.УстановитьПараметр("Организация", СтруктураШД.Организация);
	//////Запрос.УстановитьПараметр("СписокСФ", ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаПоДокументам.ВыгрузитьКолонку("СчетФактура")));
	//////Запрос.Текст="
	//////|ВЫБРАТЬ
	//////|	ИсточникДанных.СчетФактура,
	//////|	ИсточникДанных.ДокументОплаты,
	//////|	СУММА(ИсточникДанных.РаспределеннаяСуммаОстаток) КАК РаспределеннаяСумма,
	//////|	СУММА(ИсточникДанных.КурсоваяРазницаОстаток) КАК КурсоваяРазница
	//////|ИЗ
	//////|	РегистрНакопления.НДСУчетРаспределенныхОплатПокупателей.Остатки(&Дата, Организация=&Организация И СчетФактура В (&СписокСФ)) КАК ИсточникДанных
	//////|СГРУППИРОВАТЬ ПО
	//////|	ИсточникДанных.СчетФактура,
	//////|	ИсточникДанных.ДокументОплаты
	//////|";
	//////ТаблицаКорректировки=Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
	//////ТаблицаКорректировки.Индексы.Добавить("СчетФактура");
	//////
	//////МассивРаспределения=Новый Массив;
	//////СтруктураОтбора=Новый Структура("СчетФактура");

	//////ТаблицаПоДокументам.Колонки.Добавить("КурсоваяРазница", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	//////ТаблицаПоДокументам.Колонки.Добавить("КурсовыеРазницыПоДокументам", Новый ОписаниеТипов("ТаблицаЗначений"));
	//////Для Каждого СтрокаТаблицы Из ТаблицаПоДокументам Цикл
	//////	СтрокаТаблицы.КурсовыеРазницыПоДокументам = Новый ТаблицаЗначений;
	//////	СтрокаТаблицы.КурсовыеРазницыПоДокументам.Колонки.Добавить("ДокументОплаты");
	//////	СтрокаТаблицы.КурсовыеРазницыПоДокументам.Колонки.Добавить("КурсоваяРазница", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	//////	Если Не СтрокаТаблицы.СуммаБезНДС = 0 Тогда
	//////		СтруктураОтбора.СчетФактура = СтрокаТаблицы.СчетФактура;
	//////		СтрокиКорректировки = ТаблицаКорректировки.НайтиСтроки(СтруктураОтбора);
	//////		Если Не СтрокиКорректировки.Количество() = 0 Тогда
	//////			Для Каждого СтрокаКорректировки Из СтрокиКорректировки Цикл
	//////				Если Не СтрокаКорректировки.КурсоваяРазница = 0 Тогда
	//////					СтрокаСДокументом = СтрокаТаблицы.КурсовыеРазницыПоДокументам.Добавить();
	//////					СтрокаСДокументом.ДокументОплаты = СтрокаКорректировки.ДокументОплаты;
	//////					МассивРаспределения.Очистить();
	//////					МассивРаспределения.Добавить(СтрокаТаблицы.СуммаБезНДС);
	//////					МассивРаспределения.Добавить(?(СтрокаКорректировки.РаспределеннаяСумма <= СтрокаТаблицы.СуммаБезНДС, 0, СтрокаКорректировки.РаспределеннаяСумма - СтрокаТаблицы.СуммаБезНДС));
	//////					РаспределеннаяКР = ОбщегоНазначения.РаспределитьПропорционально(СтрокаКорректировки.КурсоваяРазница, МассивРаспределения)[0];
	//////					СтрокаТаблицы.КурсоваяРазница = СтрокаТаблицы.КурсоваяРазница + РаспределеннаяКР;
	//////					СтрокаСДокументом.КурсоваяРазница = РаспределеннаяКР;
	//////				КонецЕсли;
	//////			КонецЦикла;
	//////		КонецЕсли;
	//////	КонецЕсли;
	//////КонецЦикла;
		
КонецПроцедуры

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ)
	
	ТаблицаПоДокументам=СтруктураТД.Состав;
	Заголовок=ДополнительныеСвойства.Заголовок;
	// Подготовка таблицы движений по регистру НДСРеализация0
	ТаблицаДвижений_НДСРеализация0 = Движения.НДСРеализация0.ВыгрузитьКолонки();
	
	// Списываем остатки по предположению
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоДокументам,ТаблицаДвижений_НДСРеализация0);
	ТаблицаДвижений_НДСРеализация0.ЗаполнитьЗначения(Перечисления.СтавкиНДС.НДС0,"СтавкаНДС");
	ТаблицаДвижений_НДСРеализация0.ЗаполнитьЗначения(Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение,"Состояние");
	ТаблицаДвижений_НДСРеализация0.ЗаполнитьЗначения(0, "НДС");
	ТаблицаДвижений_НДСРеализация0.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход,"ВидДвижения");
	
	ТаблицаПоДокументам.Колонки.Добавить("Состояние",Новый ОписаниеТипов("ПеречислениеСсылка.НДССостоянияРеализация0"));
	ТаблицаПоДокументам.Колонки.Добавить("ВидДвижения");
	ТаблицаПоДокументам.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход,"ВидДвижения");
	
	// Отражаем подтверждение/неподтверждение 
	Для каждого ТекСтрокаСостав Из ТаблицаПоДокументам Цикл
		Если ТекСтрокаСостав.Событие = Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0 Тогда
			// Выделение НДС из выручки при неподтвержденной ставке 0%
			ТекСтрокаСостав.СуммаБезНДС = ?(СтруктураШД.УчетнаяПолитика.НДСПриНеподтвержденииСверху, ТекСтрокаСостав.СуммаБезНДС, ТекСтрокаСостав.СуммаБезНДС - ТекСтрокаСостав.НДС);
			ТекСтрокаСостав.Состояние   = Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0;
		Иначе
			ТекСтрокаСостав.СтавкаНДС = Перечисления.СтавкиНДС.НДС0;
			ТекСтрокаСостав.Состояние = Перечисления.НДССостоянияРеализация0.ПодтвержденаРеализация0;
			ТекСтрокаСостав.СуммаБезНДС = ТекСтрокаСостав.СуммаБезНДС + ТекСтрокаСостав.КурсоваяРазница;
		КонецЕсли; 
	КонецЦикла; 
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоДокументам,ТаблицаДвижений_НДСРеализация0);
	
	//Запись движений
	Движения.НДСРеализация0.мПериод          = СтруктураШД.Дата;
	Движения.НДСРеализация0.мТаблицаДвижений = ТаблицаДвижений_НДСРеализация0;
	Движения.НДСРеализация0.ДобавитьДвижение();
	
	//Движения по регистру НДСРеализация0
	////////////////////////////////////////////////////////
	
	СписокСчетовФактур = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ТаблицаДвижений_НДСРеализация0.ВыгрузитьКолонку("СчетФактура"),Истина);
	
	ДанныеПоРеализации0 = ПолучитьДанныеПоРеализации0(СтруктураШД,СписокСчетовФактур,Отказ);
	ДанныеПоРеализации0.Индексы.Добавить("СчетФактура");
	
	СформироватьДвиженияПоНеподтверждениюСтавки0_Реализация(СтруктураШД, ТаблицаПоДокументам,ДанныеПоРеализации0, Отказ, Заголовок);
	
	////////////////////////////////////////////////////////
	// Движения по регистрам приобретения, отражающие подтверждение или неподтверждение ставки 0
	// для всех поступлений МПЗ, связанных с данной реализацией
	СформироватьДвижениеНДСПредъявленныйРеализация0_ОтражениеПодтверждения0(СтруктураШД, ТаблицаПоДокументам, ДанныеПоРеализации0, Отказ, Заголовок);
	//Движения по регистру НДС покупки (и проводки)
	////////////////////////////////////////////////////////
	
	СформироватьКорректирующиеДвиженияРеализация0_Подтверждение0(СтруктураШД, ТаблицаПоДокументам);
	
КонецПроцедуры

Функция ПолучитьДанныеПоРеализации0(СтруктураШД,СписокСчетовФактур,Отказ)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("КонецПериода", Новый Граница(КонецДня(СтруктураШД.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", СтруктураШД.Организация);
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	Запрос.УстановитьПараметр("СостояниеОжидания", Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение);
	Запрос.УстановитьПараметр("Начало2006Года", '20060101');
	Запрос.УстановитьПараметр("МоментОпределения_ПоОтгрузке", Перечисления.МоментыОпределенияНалоговойБазыНДС.ПоОтгрузке);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	НДСРеализация0Обороты.СчетФактура,
	|	ЕСТЬNULL(НДСРеализация0Обороты.СуммаБезНДСПриход, 0) + ЕСТЬNULL(НДСРеализация0Обороты.НДСПриход, 0) КАК СуммаРеализации,
	|	ВЫБОР
	|		КОГДА НДСРеализация0Обороты.СчетФактура.Дата < &Начало2006Года
	|			ТОГДА УчетнаяПолитикаНалоговыйУчет.МоментОпределенияНалоговойБазыНДС
	|		ИНАЧЕ &МоментОпределения_ПоОтгрузке
	|	КОНЕЦ КАК МоментОпределенияНалоговойБазыНДС
	|ИЗ
	|	РегистрНакопления.НДСРеализация0.Обороты(, &КонецПериода, Период,
	|		Организация = &Организация
	|		    И СчетФактура В (&СписокСчетовФактур)
	|		    И Состояние = &СостояниеОжидания) КАК НДСРеализация0Обороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитика КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО НДСРеализация0Обороты.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
	|			И (УчетнаяПолитикаНалоговыйУчет.Период В
	|				(ВЫБРАТЬ
	|					МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период)
	|				ИЗ
	|					РегистрСведений.УчетнаяПолитика КАК УчетнаяПолитикаНалоговыйУчет
	|				ГДЕ
	|					НДСРеализация0Обороты.СчетФактура.Дата >= УчетнаяПолитикаНалоговыйУчет.Период
	|					И
	|					НДСРеализация0Обороты.Организация = УчетнаяПолитикаНалоговыйУчет.Организация))
	|";
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Процедура СформироватьДвиженияПоНеподтверждениюСтавки0_Реализация(СтруктураШД, ТаблицаПоДокументам,ДанныеПоРеализации0, Отказ, Заголовок)
	ТаблицаДвижений_НДСНачисленный = Неопределено;
	СостояниеНеПодтвержденаСтавка0 = Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0;
	Ставка0 = Перечисления.СтавкиНДС.НДС0;
	
	Для каждого СтрокаТаблицы Из ТаблицаПоДокументам Цикл
		Если СтрокаТаблицы.Состояние = СостояниеНеПодтвержденаСтавка0 Тогда
			Если ТаблицаДвижений_НДСНачисленный = Неопределено тогда
				ТаблицаДвижений_НДСНачисленный = Движения.НДСНачисленный.ВыгрузитьКолонки();
			КонецЕсли;
			СтрокаДвиженияСторно0 = ТаблицаДвижений_НДСНачисленный.Добавить();
			СтрокаДвиженияСторно0.Организация = СтруктураШД.Организация;
			СтрокаДвиженияСторно0.СчетФактура = СтрокаТаблицы.СчетФактура;
			СтрокаДвиженияСторно0.ВидЦенности = СтрокаТаблицы.ВидЦенности;
			СтрокаДвиженияСторно0.СтавкаНДС   = Ставка0;
			СтрокаДвиженияСторно0.Покупатель  = СтрокаТаблицы.Покупатель;
			СтрокаДвиженияСторно0.ВидНачисления = Перечисления.НДСВидНачисления.Реализация0;
			СтрокаДвиженияСторно0.СуммаБезНДС = (-1)*(СтрокаТаблицы.СуммаБезНДС + ?(СтруктураШД.УчетнаяПолитика.НДСПриНеподтвержденииСверху, 0, СтрокаТаблицы.НДС));
			СтрокаДвиженияСторно0.НДС         = 0;
			СтрокаДвиженияСторно0.Событие     = Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0;
			СтрокаДвиженияСторно0.ВидДвижения = ВидДвиженияНакопления.Приход;
			
			СтрокаДвижения=ТаблицаДвижений_НДСНачисленный.Добавить();
			СтрокаДвижения.Организация = СтрокаДвиженияСторно0.Организация;
			СтрокаДвижения.СчетФактура = СтрокаДвиженияСторно0.СчетФактура;
			СтрокаДвижения.ВидЦенности = СтрокаДвиженияСторно0.ВидЦенности;
			СтрокаДвижения.СтавкаНДС   = СтрокаТаблицы.СтавкаНДС;
			СтрокаДвижения.Покупатель  = СтрокаТаблицы.Покупатель;
			СтрокаДвижения.ВидНачисления = Перечисления.НДСВидНачисления.Реализация0;
			СтрокаДвижения.СуммаБезНДС = СтрокаТаблицы.СуммаБезНДС;
			СтрокаДвижения.НДС         = СтрокаТаблицы.НДС;
			СтрокаДвижения.Событие     = Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0;
			СтрокаДвижения.ВидДвижения = ВидДвиженияНакопления.Приход;
			
			СтрокаИнформацииОРеализации = ДанныеПоРеализации0.Найти(СтрокаДвиженияСторно0.СчетФактура,"СчетФактура");
		КонецЕсли; 
	КонецЦикла; 
	
	Если не ТаблицаДвижений_НДСНачисленный = Неопределено Тогда
		Движения.НДСНачисленный.мПериод	= СтруктураШД.Дата;
		Движения.НДСНачисленный.мТаблицаДвижений = ТаблицаДвижений_НДСНачисленный;
		Движения.НДСНачисленный.ДобавитьДвижение();
	КонецЕсли; 

КонецПроцедуры

Процедура СформироватьДвижениеНДСПредъявленныйРеализация0_ОтражениеПодтверждения0(СтруктураШД, тзДокументыРеализации, ДанныеПоРеализации0, Отказ,Заголовок)

	тзПодтверждений=тзДокументыРеализации.Скопировать();
	тзПодтверждений.Свернуть("СчетФактура,Событие", "СуммаБезНДС,НДС,КурсоваяРазница");
	тзПодтверждений.Колонки.Добавить("СуммаРеализации", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2));
	
	Для каждого СтрокаПодтверждения Из тзПодтверждений Цикл
		СтрокаРеализации = ДанныеПоРеализации0.Найти(СтрокаПодтверждения.СчетФактура,"СчетФактура");
		Если СтрокаРеализации = Неопределено Тогда
			ОбщегоНазначения.СообщитьОбОшибке("По документу <"+Строка(СтрокаПодтверждения.СчетФактура)+"> не обнаружена реализация по ставке НДС 0%.",,Заголовок);
		ИначеЕсли НЕ ЗначениеЗаполнено(СтрокаРеализации.СуммаРеализации) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("По документу <"+Строка(СтрокаПодтверждения.СчетФактура)+"> не обнаружена реализация по ставке НДС 0%.",,Заголовок);
		Иначе
			СтрокаПодтверждения.СуммаРеализации = СтрокаРеализации.СуммаРеализации + СтрокаПодтверждения.КурсоваяРазница;
		КонецЕсли; 
	КонецЦикла;
	
	Если Отказ Тогда Возврат; КонецЕсли; 
	
	ТаблицаДвижений_НДСПредъявленныйРеализация0 = Движения.НДСПредъявленныйРеализация0.ВыгрузитьКолонки();
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("КонецПериода", Новый Граница(КонецДня(СтруктураШД.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", СтруктураШД.Организация);	
	Запрос.УстановитьПараметр("СостояниеПредположения0", Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение);
	Запрос.УстановитьПараметр("СписокДокументовРеализации", ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(тзДокументыРеализации.ВыгрузитьКолонку("СчетФактура"), Истина));	
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.Организация,
	|	ИсточникДанных.СчетФактура,
	|	ИсточникДанных.ДокументОтгрузки,
	|	ИсточникДанных.ВидЦенности,
	|	ИсточникДанных.СтавкаНДС,
	|	ИсточникДанных.СчетУчетаНДС,
	|	ИсточникДанных.СуммаБезНДСКонечныйОстаток как ОсталосьСуммаБезНДС,
	|	ИсточникДанных.НДСКонечныйОстаток как ОсталосьНДС,
	|	ЕСТЬNULL(ИсточникДанных.СуммаБезНДСПриход, 0) как СуммаБезНДС,
	|	ЕСТЬNULL(ИсточникДанных.НДСПриход, 0) КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСПредъявленныйРеализация0.ОстаткиИОбороты(, &КонецПериода, Период,,
	|			Организация = &Организация
	|			И ДокументОтгрузки В (&СписокДокументовРеализации)
	|			И Состояние = &СостояниеПредположения0) КАК ИсточникДанных
	|";
	тзОжиданиеПодтверждения=Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
	тзОжиданиеПодтверждения.Индексы.Добавить("ДокументОтгрузки");
	
	Для каждого СтрокаПодтверждения Из тзПодтверждений Цикл
		СтрокиПредположения=тзОжиданиеПодтверждения.НайтиСтроки(Новый Структура("ДокументОтгрузки", СтрокаПодтверждения.СчетФактура));
		Для каждого СтрокаПредположения Из СтрокиПредположения Цикл
			СуммаПодтвержденияПоСтрокеРеализации = СтрокаПодтверждения.СуммаБезНДС + ?(СтрокаПодтверждения.Событие = Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0 и СтруктураШД.УчетнаяПолитика.НДСПриНеподтвержденииСверху,0, СтрокаПодтверждения.НДС);
			КПогашениюБезНДС = Окр(СтрокаПредположения.СуммаБезНДС*(СуммаПодтвержденияПоСтрокеРеализации)/СтрокаПодтверждения.СуммаРеализации,2);
			КПогашениюБезНДС = Макс(0, Мин(КПогашениюБезНДС,СтрокаПредположения.ОсталосьСуммаБезНДС));
			КПогашениюНДС = Окр(СтрокаПредположения.НДС*(СуммаПодтвержденияПоСтрокеРеализации)/СтрокаПодтверждения.СуммаРеализации,2);
			КПогашениюНДС = Макс(0, Мин(КПогашениюНДС,СтрокаПредположения.ОсталосьНДС));

			Если КПогашениюБезНДС=0 И КПогашениюНДС=0 Тогда Продолжить; КонецЕсли; 
			
			// регистр НДСПредъявленныйРеализация0
			// погашение суммы предположения 0%
			СтрокаСписанияПредположения=ТаблицаДвижений_НДСПредъявленныйРеализация0.Добавить();
			СтрокаСписанияПредположения.Организация		= СтруктураШД.Организация;
			СтрокаСписанияПредположения.СчетФактура		= СтрокаПредположения.СчетФактура;
			СтрокаСписанияПредположения.Состояние		= Перечисления.НДССостоянияРеализация0.ОжидаетсяПодтверждение;
			СтрокаСписанияПредположения.ДокументОтгрузки= СтрокаПодтверждения.СчетФактура;
			СтрокаСписанияПредположения.ВидЦенности		= СтрокаПредположения.ВидЦенности;
			СтрокаСписанияПредположения.СтавкаНДС		= СтрокаПредположения.СтавкаНДС;
			СтрокаСписанияПредположения.СчетУчетаНДС	= СтрокаПредположения.СчетУчетаНДС;
			СтрокаСписанияПредположения.СуммаБезНДС 	= КПогашениюБезНДС;
			СтрокаСписанияПредположения.НДС 			= КПогашениюНДС;

			Если СтрокаПодтверждения.Событие = Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0 Тогда
				СтрокаСписанияПредположения.Событие = Перечисления.СобытияПоНДСПокупки.ПодтвержденаСтавка0;
			Иначе
				СтрокаСписанияПредположения.Событие = Перечисления.СобытияПоНДСПокупки.НеПодтвержденаСтавка0;
			КонецЕсли;
			
			СтрокаСписанияПредположения.ВидДвижения = ВидДвиженияНакопления.Расход;
			
			// Отражение подтверждения/неподтверждения 0%
			СтрокаОтраженияПодтверждения = ТаблицаДвижений_НДСПредъявленныйРеализация0.Добавить();
			СтрокаОтраженияПодтверждения.Организация	= СтрокаСписанияПредположения.Организация;
			СтрокаОтраженияПодтверждения.СчетФактура	= СтрокаСписанияПредположения.СчетФактура;
			Если СтрокаСписанияПредположения.Событие	= Перечисления.СобытияПоНДСПокупки.ПодтвержденаСтавка0 Тогда
				СтрокаОтраженияПодтверждения.Состояние	= Перечисления.НДССостоянияРеализация0.ПодтвержденаРеализация0;
			Иначе
				СтрокаОтраженияПодтверждения.Состояние	= Перечисления.НДССостоянияРеализация0.НеПодтвержденаРеализация0
			КонецЕсли;
			СтрокаОтраженияПодтверждения.ДокументОтгрузки = СтрокаСписанияПредположения.ДокументОтгрузки;
			СтрокаОтраженияПодтверждения.ВидЦенности	= СтрокаСписанияПредположения.ВидЦенности;
			СтрокаОтраженияПодтверждения.СтавкаНДС		= СтрокаСписанияПредположения.СтавкаНДС;
			СтрокаОтраженияПодтверждения.СуммаБезНДС	= СтрокаСписанияПредположения.СуммаБезНДС;
			СтрокаОтраженияПодтверждения.НДС			= СтрокаСписанияПредположения.НДС;
			СтрокаОтраженияПодтверждения.СчетУчетаНДС			= СтрокаСписанияПредположения.СчетУчетаНДС;
			СтрокаОтраженияПодтверждения.Событие		= СтрокаСписанияПредположения.Событие;
			СтрокаОтраженияПодтверждения.ВидДвижения	= ВидДвиженияНакопления.Приход;

			СтрокаПредположения.ОсталосьСуммаБезНДС = СтрокаПредположения.ОсталосьСуммаБезНДС - КПогашениюБезНДС;
			СтрокаПредположения.ОсталосьНДС	 = СтрокаПредположения.ОсталосьНДС    - КПогашениюНДС;
		КонецЦикла; 
	КонецЦикла; 
	
	Если ТаблицаДвижений_НДСПредъявленныйРеализация0.Количество()>0 Тогда
		Движения.НДСПредъявленныйРеализация0.мПериод = СтруктураШД.Дата;
		Движения.НДСПредъявленныйРеализация0.мТаблицаДвижений = ТаблицаДвижений_НДСПредъявленныйРеализация0;
		Движения.НДСПредъявленныйРеализация0.ДобавитьДвижение();
	КонецЕсли; 
		
КонецПроцедуры
 
Процедура СформироватьКорректирующиеДвиженияРеализация0_Подтверждение0(СтруктураШД, ТаблицаПоДокументам);
		
	ТаблицаДвижений_НДСНачисленный = Движения.НДСНачисленный.Выгрузить();
	ТаблицаДвижений_НДСНачисленный.Очистить();
	
	Для Каждого СтрокаТаблицы Из ТаблицаПоДокументам Цикл
		Если Не СтрокаТаблицы.КурсоваяРазница = 0 Тогда
			Если СтрокаТаблицы.Состояние = Перечисления.НДССостоянияРеализация0.ПодтвержденаРеализация0 Тогда
				ДвижениеНДСНачисленный = ТаблицаДвижений_НДСНачисленный.Добавить();
				ЗаполнитьЗначенияСвойств(ДвижениеНДСНачисленный, СтрокаТаблицы);
				
				ДвижениеНДСНачисленный.СуммаБезНДС = СтрокаТаблицы.КурсоваяРазница;
				ДвижениеНДСНачисленный.НДС = 0;
				ДвижениеНДСНачисленный.ВидНачисления = Перечисления.НДСВидНачисления.Реализация0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ТаблицаДвижений_НДСНачисленный.Количество() > 0  Тогда
		Движения.НДСНачисленный.мПериод	= СтруктураШД.Дата;
		Движения.НДСНачисленный.мТаблицаДвижений = ТаблицаДвижений_НДСНачисленный;
		Движения.НДСНачисленный.ВыполнитьПриход(Ложь);
	КонецЕсли;
				
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Перем СтруктураШД, ТаблицаПоДокументам;
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 
	
	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	//Формирование значений реквизитов шапки документа
	СтруктураШД=УправлениеДокументамиСервер.ПолучитьСтруктуруРеквизитовШапки(ЭтотОбъект);
	
	//Формирование значений реквизитов табличных частей
	cтрТекстЗапроса="
	|СчетФактура Как ДокРеализации,
	|СтавкаНДС Как СтавкаРеализации,
	|ПродажиСНДС0 Как СуммаБезНДС,
	|";
	тзСостав=УправлениеДокументамиСервер.ПолучитьСтруктуруТЧ(ЭтотОбъект, "Состав", cтрТекстЗапроса);

	//Принудительная установка ставки НДС 0% по события "Подтверждена ставка 0%".
	Для каждого СтрокаКоллекции Из тзСостав Цикл
		Если СтрокаКоллекции.Событие=Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0 Тогда
			СтрокаКоллекции.СтавкаНДС=Перечисления.СтавкиНДС.НДС0;
			СтрокаКоллекции.НДС=0;
		КонецЕсли;
	КонецЦикла;
	СкорректироватьВыручкуПоЭкспорту(СтруктураШД, тзСостав);

	СтруктураТД=Новый Структура("Состав", тзСостав);
	
	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства, "Продажа");