// Заполняет табличную часть НДС по договорам налогового агента
//
Процедура ЗаполнитьТабличнуюЧастьПоДоговорамНалоговогоАгента() Экспорт

	Результат = ПолучитьОстаткиНДСРасчетыСБюджетом();
	
	ОплатаПоДоговорамНалоговогоАгента.Загрузить(Результат);
	
КонецПроцедуры

// Заполняет табличную часть НДС по собственному потреблению
//
Процедура ЗаполнитьТабличнуюЧастьДляСобственногоПотребления() Экспорт
 
	Результат = ПолучитьОстаткиНДСРасчетыСБюджетом(Истина);
	
	ОплатаДляСобственногоПотребления.Загрузить(Результат);
	
КонецПроцедуры

// Функция возвращает выборку из регистра НДСРасчетыСПоставщиками по расчетам с бюджетом
//
// Параметры
//  ПоДоговорамНалоговогоАгента - если Истина, то выбираются расчеты по агентским договорам
//
Функция ПолучитьОстаткиНДСРасчетыСБюджетом(ОтбиратьПоПустомуДоговору = Ложь)

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтбиратьПоПустомуДоговору", ОтбиратьПоПустомуДоговору);
	Запрос.УстановитьПараметр("ПустойДоговор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	Запрос.УстановитьПараметр("Дата", Новый граница(КонецДня(Дата),ВидГраницы.Включая));
	Запрос.Текст="
	|ВЫБРАТЬ
	|	НДСРасчетыСПоставщикамиОстатки.Поставщик,
	|	НДСРасчетыСПоставщикамиОстатки.ДоговорКонтрагента,
	|	НДСРасчетыСПоставщикамиОстатки.Документ как СчетФактура,
	|	СУММА(НДСРасчетыСПоставщикамиОстатки.СуммаОстаток) КАК Сумма
	|ИЗ
	|	РегистрНакопления.НДСРасчетыСПоставщиками.Остатки(&Дата,
	|			Организация = &Организация
	|			И РасчетыСБюджетом = ИСТИНА
	|			И ВЫБОР
	|				КОГДА ДоговорКонтрагента = &ПустойДоговор
	|					ТОГДА &ОтбиратьПоПустомуДоговору
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ОтбиратьПоПустомуДоговору
	|							ТОГДА ЛОЖЬ
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|			КОНЕЦ) КАК НДСРасчетыСПоставщикамиОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСРасчетыСПоставщикамиОстатки.ДоговорКонтрагента,
	|	НДСРасчетыСПоставщикамиОстатки.Поставщик,
	|	НДСРасчетыСПоставщикамиОстатки.Документ
	|";

	Возврат Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// По результату запроса по шапке документа и табличным частям формирует движения по регистрам.
//
Процедура ДвиженияПоРегистрам(СтруктураШД, ТаблицаПоДоговорамНалоговогоАгента, ТаблицаДляСобственногоПотребления, Отказ, Заголовок)
	Если Отказ Тогда Возврат; КонецЕсли; 
	ДвиженияПоРегиструНДСРасчетыСПоставщиками(СтруктураШД, ТаблицаПоДоговорамНалоговогоАгента, Отказ, Заголовок);
	ДвиженияПоРегиструНДСРасчетыСПоставщиками(СтруктураШД, ТаблицаДляСобственногоПотребления , Отказ, Заголовок);	
КонецПроцедуры

// Движения по регистру НДСРасчетыСПоставщиками
//
Процедура ДвиженияПоРегиструНДСРасчетыСПоставщиками(СтруктураШД, ТаблицаПоДоговорам, Отказ, Заголовок)
	Если Отказ ИЛИ (ТаблицаПоДоговорам.Количество() = 0) Тогда Возврат;	КонецЕсли;
	
	НаборЗаписей_НДСРасчетыСПоставщиками = Движения.НДСРасчетыСПоставщиками;
	
	ТаблицаДвижений_НДСРасчетыСПоставщиками = НаборЗаписей_НДСРасчетыСПоставщиками.Выгрузить();
	ТаблицаДвижений_НДСРасчетыСПоставщиками.Очистить();
	
	// Расход по сущестующим записям в регистре
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоДоговорам, ТаблицаДвижений_НДСРасчетыСПоставщиками);
	
	НаборЗаписей_НДСРасчетыСПоставщиками.мПериод = Дата;
	НаборЗаписей_НДСРасчетыСПоставщиками.мТаблицаДвижений = ТаблицаДвижений_НДСРасчетыСПоставщиками;
	НаборЗаписей_НДСРасчетыСПоставщиками.ВыполнитьРасход();	
КонецПроцедуры

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
Функция ПодготовитьТаблицуПоДоговорамНалоговогоАгента(РезультатЗапросаПоДоговорамНалоговогоАгента, СтруктураШД)

	ТаблицаПоДоговорамНалоговогоАгента = РезультатЗапросаПоДоговорамНалоговогоАгента.Выгрузить();
	
	ТаблицаПоДоговорамНалоговогоАгента.Колонки.Добавить("РасчетыСБюджетом", Новый ОписаниеТипов("Булево"));
	ТаблицаПоДоговорамНалоговогоАгента.ЗаполнитьЗначения(Истина, "РасчетыСбюджетом");
	
	Возврат ТаблицаПоДоговорамНалоговогоАгента;

КонецФункции // ПодготовитьТаблицуПоДоговорамНалоговогоАгента()

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
Функция ПодготовитьТаблицуДляСобственногоПотребления(РезультатЗапросаДляСобственногоПотребления, СтруктураШД)

	ТаблицаДляСобственногоПотребления = РезультатЗапросаДляСобственногоПотребления.Выгрузить();
	
	ТаблицаДляСобственногоПотребления.Колонки.Добавить("РасчетыСБюджетом", Новый ОписаниеТипов("Булево"));
	ТаблицаДляСобственногоПотребления.ЗаполнитьЗначения(Истина, "РасчетыСбюджетом");
	
	Возврат ТаблицаДляСобственногоПотребления;

КонецФункции // ПодготовитьТаблицуПоДоговорамНалоговогоАгента()

// Проверяет правильность заполнения строк табличной части.
//
Процедура ПроверитьЗаполнениеТабличнойЧастиПоДоговорамНалоговогоАгента(СтруктураШД, ТаблицаПоДоговорамНалоговогоАгента, Отказ, Заголовок)

	//Проверка полей без прекращения проведения
	СтрокаСообщения = "Не заполнен документ оплаты.";
	Для каждого СтрокаТаблицы из ТаблицаПоДоговорамНалоговогоАгента Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДокументОплаты) Тогда
			СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(СтрокаТаблицы.НомерСтроки) + """ табличной части ""По договорам налогового агента"" : ";
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке+СтрокаСообщения,,Заголовок,СтатусСообщения.Внимание);
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

// Проверяет правильность заполнения строк табличной части.
//
Процедура ПроверитьЗаполнениеТабличнойЧастиДляСобственногоПотребления(СтруктураШД, ТаблицаДляСобственногоПотребления, Отказ, Заголовок)
	//Проверка полей без прекращения проведения
	СтрокаСообщения = "Не заполнен документ оплаты.";
	Для каждого СтрокаТаблицы из ТаблицаДляСобственногоПотребления Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДокументОплаты) Тогда
			СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(СтрокаТаблицы.НомерСтроки) + """ табличной части ""Для собственного потребления"" : ";
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке+СтрокаСообщения,,Заголовок,СтатусСообщения.Внимание);
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	Заголовок=ДополнительныеСвойства.Заголовок;
	СтруктураШД = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("Организация",			"Ссылка.Организация");
	СтруктураПолей.Вставить("Поставщик",			"Поставщик");
	СтруктураПолей.Вставить("ДоговорКонтрагента",	"ДоговорКонтрагента");
	СтруктураПолей.Вставить("СчетФактура",			"СчетФактура");
	СтруктураПолей.Вставить("Документ",				"СчетФактура");
	СтруктураПолей.Вставить("ДокументОплаты",		"ДокументОплаты");
	СтруктураПолей.Вставить("Сумма",				"Сумма");
	СтруктураПолей.Вставить("РаспределеннаяСумма",	"Сумма");
	РезультатЗапросаПоДоговорамНалоговогоАгента = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ОплатаПоДоговорамНалоговогоАгента", СтруктураПолей);
	СтруктураПолей.Удалить("Поставщик");
	СтруктураПолей.Удалить("ДоговорКонтрагента");
	РезультатЗапросаДляСобственногоПотребления = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ОплатаДляСобственногоПотребления", СтруктураПолей);
	ТаблицаПоДоговорамНалоговогоАгента = ПодготовитьТаблицуПоДоговорамНалоговогоАгента(РезультатЗапросаПоДоговорамНалоговогоАгента, СтруктураШД);
	ТаблицаДляСобственногоПотребления = ПодготовитьТаблицуДляСобственногоПотребления(РезультатЗапросаДляСобственногоПотребления, СтруктураШД);
	ПроверитьЗаполнениеТабличнойЧастиПоДоговорамНалоговогоАгента(СтруктураШД,ТаблицаПоДоговорамНалоговогоАгента, Отказ, Заголовок);
	ПроверитьЗаполнениеТабличнойЧастиДляСобственногоПотребления(СтруктураШД,ТаблицаДляСобственногоПотребления, Отказ, Заголовок);
	
	ДвиженияПоРегистрам(СтруктураШД, ТаблицаПоДоговорамНалоговогоАгента, ТаблицаДляСобственногоПотребления, Отказ, Заголовок);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);