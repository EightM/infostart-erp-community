Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт

	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;

КонецФункции

Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	СуммаДокумента=Товары.Итог("Сумма")+Товары.Итог("СуммаНДС");
	СуммаНДС=ЦенообразованиеСервер.ПолучитьНДСДокумента(ЭтотОбъект);

	Если не ЗначениеЗаполнено(ВалютаДокумента) Тогда
		ВалютаДокумента=ДополнительныеСвойства.ВалютаБухУчета;
	КонецЕсли;

	Для каждого СтрокаКоллекции Из Товары Цикл
		СтрокаКоллекции.Коэффициент=1;
	КонецЦикла;

	
КонецПроцедуры

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_УчетНДС(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетНДС(СтруктураШД, СтруктураТД, Отказ)
	Если СтруктураШД.ДокументСоздан_НО_НДС Тогда Возврат; КонецЕсли; 
	Если СтруктураШД.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда Возврат; КонецЕсли;

	ТаблицаПоТоварам=СтруктураТД.Товары;
	Если СтруктураШД.ПрямаяЗаписьВКнигу Тогда
		// Прямая запись в книгу покупок
		ТаблицаДвижений_НДСЗаписиКнигиПокупок = Движения.НДСЗаписиКнигиПокупок.Выгрузить();
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоТоварам,ТаблицаДвижений_НДСЗаписиКнигиПокупок);
		ТаблицаДвижений_НДСЗаписиКнигиПокупок.ЗаполнитьЗначения(СтруктураШД.организация, "Организация");
		ТаблицаДвижений_НДСЗаписиКнигиПокупок.ЗаполнитьЗначения(СтруктураШД.ДатаОплаты, "ДатаОплаты");
		ТаблицаДвижений_НДСЗаписиКнигиПокупок.ЗаполнитьЗначения(СтруктураШД.Ссылка, "СчетФактура");
		ТаблицаДвижений_НДСЗаписиКнигиПокупок.ЗаполнитьЗначения(СтруктураШД.Контрагент, "Поставщик");
		ТаблицаДвижений_НДСЗаписиКнигиПокупок.ЗаполнитьЗначения(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету, "Событие");
		
		Движения.НДСЗаписиКнигиПокупок.мПериод = СтруктураШД.Дата;
		Движения.НДСЗаписиКнигиПокупок.мТаблицаДвижений = ТаблицаДвижений_НДСЗаписиКнигиПокупок;
		Движения.НДСЗаписиКнигиПокупок.ДобавитьДвижение();
	    Возврат;
	КонецЕсли; 
	УчетНДС.СформироватьДвиженияПоРегиструНДСПредъявленный(СтруктураШД, ТаблицаПоТоварам, "Товары", Движения, Отказ);
	
	УчетНДС.СформироватьДвиженияПоРегиструНДСРасчетыСПоставщиками_Задолженность(СтруктураШД, ТаблицаПоТоварам, "Товары", Движения, Отказ, СтруктураШД.УчетАгентскогоНДС, неопределено);
	
	Если СтруктураШД.УчетАгентскогоНДС Тогда
		// На данный момент все наборы движений записаны.
		// Необходимо прочитать состояние набора "НДСПредъявленный"
		Движения_НДСПредъявленный = ОбщегоНазначения.ПолучитьНаборЗаписейПоСсылке(СтруктураШД.Ссылка,РегистрыНакопления.НДСПредъявленный, Истина).Выгрузить();
		
        УчетНДС.СформироватьДвиженияПоРегиструНДСНачисленный_ПоступлениеАгентскогоНДС(СтруктураШД,Движения_НДСПредъявленный,Движения);
	КонецЕсли; 
	
	//////////////////////////////////////////////////////////////////////
	// При необходимости, отражаем в регистре партионного учета для НДС
	ТаблицаПоТоварамБезУслуг=ТаблицаПоТоварам.Скопировать();
	ТаблицаПоТоварамБезУслуг.Индексы.Добавить("Услуга");
	
	СтрокиПоУслугам = ТаблицаПоТоварамБезУслуг.НайтиСтроки(Новый Структура("Услуга",Истина));
	
	Для каждого СтрокаКУдалению Из СтрокиПоУслугам Цикл
		ТаблицаПоТоварамБезУслуг.Удалить(СтрокаКУдалению);
	КонецЦикла; 
	
	ТаблицаДвиженийНДСПартии = Движения.НДСПартииТоваров;
	
	Если ТаблицаПоТоварамБезУслуг.Количество()>0 Тогда
		УчетНДС.СформироватьДвиженияПоступленияПоРегиструНДСПартииТоваров(СтруктураШД,ТаблицаПоТоварамБезУслуг, ТаблицаДвиженийНДСПартии, Отказ);
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
    Если ОбменДанными.Загрузка Тогда Возврат; КонецЕсли;

	Если НЕ (ЗначениеЗаполнено(РасчетныйДокумент)) Тогда // и ТипЗнч(РасчетныйДокумент) = Тип("ДокументСсылка.ВводНачальныхОстатков")) Тогда //НДС
		ОбщегоНазначения.СинхронизацияПометкиНаУдалениеУСчетаФактуры(ЭтотОбъект);
		УчетНДС.ПроверитьСоответствиеРеквизитовСчетаФактуры(ЭтотОбъект, "СчетФактураПолученный");
	КонецЕсли; 
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	//Формирование значений реквизитов шапки документа
	СтруктураШД=УправлениеДокументамиСервер.ПолучитьСтруктуруРеквизитовШапки(ЭтотОбъект);	
	СтруктураШД.Вставить("ДокументСоздан_НО_НДС", (ЗначениеЗаполнено(РасчетныйДокумент)) и (ТипЗнч(РасчетныйДокумент) = Тип("ДокументСсылка.ВводНачальныхОстатков")));
	СтруктураШД.Вставить("КурсВзаиморасчетов", 1);
	СтруктураШД.Вставить("КратностьВзаиморасчетов", 1);

	//Формирование значений реквизитов табличных частей
	СтруктураТД=Новый Структура;
	СтруктураТД.Вставить("Товары", УправлениеДокументамиСервер.ПолучитьСтруктуруТЧ(ЭтотОбъект, "Товары"));
	УчетНДС.ДобавитьСчетУчетаНДС(СтруктураТД.Товары);
	ВзаиморасчетыСервер.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(СтруктураТД.Товары, СтруктураШД, Истина);
	
	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства, "Покупка");