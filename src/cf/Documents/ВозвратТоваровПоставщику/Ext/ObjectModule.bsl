Перем мСтруктураПараметровДляПолученияДоговора Экспорт;

Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт
	СуммаДокумента=ЦенообразованиеСервер.ПолучитьСуммуДокументаСНДС(ЭтотОбъект, "Товары");

	// Заполним реквизит склад в табличных частях "Товары" и "Возвратная тара"
	Для Каждого СтрокаКоллекции Из Товары Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаКоллекции.Склад) Тогда
			СтрокаКоллекции.Склад=Склад;
		КонецЕсли;
		Если НЕ УчитыватьНДС Тогда
			СтрокаКоллекции.СтавкаНДС=Перечисления.СтавкиНДС.БезНДС;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаКоллекции.ЕдиницаИзмеренияМест) И СтрокаКоллекции.КоличествоМест=0 Тогда
			СтрокаКоллекции.ЕдиницаИзмеренияМест=Неопределено;
		КонецЕсли;		
	КонецЦикла;
	Для Каждого СтрокаКоллекции из ВозвратнаяТара Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаКоллекции.Склад) Тогда
			СтрокаКоллекции.Склад=Склад;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт

	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;

КонецФункции

Функция ПодготовитьТаблицуТоваров(ТаблицаТоваров, СтруктураШД)
    ОписаниеТипаЧисло=ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2);

	ТаблицаТоваров.Колонки.Удалить("КоличествоДок");
	ТаблицаТоваров.Колонки.Количество.Имя="КоличествоДок";
	ТаблицаТоваров.Колонки.Добавить("Количество"		 , ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,3));
	ТаблицаТоваров.Колонки.Добавить("СуммаВзаиморасчетов", ОписаниеТипаЧисло);
	ТаблицаТоваров.Колонки.Добавить("СуммаУпр"           , ОписаниеТипаЧисло);
	ТаблицаТоваров.Колонки.Добавить("СуммаСНДС"           , ОписаниеТипаЧисло);
	ТаблицаТоваров.Колонки.Добавить("СуммаБух"	 		 , ОписаниеТипаЧисло);
	ТаблицаТоваров.Колонки.Добавить("НДСУпр"             , ОписаниеТипаЧисло);	

	// Надо рассчитать стоимость без НДС.
	Для каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
		Если СтрокаТаблицы.КоличествоДок = NULL Тогда
			СтрокаТаблицы.КоличествоДок = 0;
		КонецЕсли;
		СтрокаТаблицы.Количество  = - СтрокаТаблицы.КоличествоДок;
	КонецЦикла;

	НеВключатьНДСВСтоимостьПартий=СтруктураШД.УчетнаяПолитика.НеВключатьНДСВСтоимостьПартий;
	// Надо рассчитать стоимость без НДС.
	Для каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
		СтоимостьСНДС  = СтрокаТаблицы.Стоимость + ?(УчитыватьНДС И Не СуммаВключаетНДС, СтрокаТаблицы.НДС, 0);
		Если НеВключатьНДСВСтоимостьПартий И НЕ (СтруктураШД.НДСВключенВСтоимость) Тогда
			СтрокаТаблицы.Стоимость = СтрокаТаблицы.Стоимость - ?(УчитыватьНДС И СуммаВключаетНДС, СтрокаТаблицы.НДС, 0);
		Иначе
			СтрокаТаблицы.Стоимость = СтоимостьСНДС;
		КонецЕсли;

		// Суммы пересчитаем в валюту упр. учета
		СтрокаТаблицы.СуммаУпр = - ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтоимостьСНДС, ВалютаДокумента,
										 СтруктураШД.ВалютаУправленческогоУчета, СтруктураШД.КурсДокумента, 
										 СтруктураШД.КурсВалютыУправленческогоУчета,
										 СтруктураШД.КратностьДокумента, 
										 СтруктураШД.КратностьВалютыУправленческогоУчета);

		СтрокаТаблицы.СуммаБух = - ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтоимостьСНДС, ВалютаДокумента, 
		                                 ДополнительныеСвойства.ВалютаБухУчета,
		                                 СтруктураШД.КурсДокумента, 
										 СтруктураШД.КурсВалютыРегламентированногоУчета,
		                                 СтруктураШД.КратностьДокумента, 
										 СтруктураШД.КратностьВалютыРегламентированногоУчета);

		СтрокаТаблицы.СуммаВзаиморасчетов = - ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтоимостьСНДС, ВалютаДокумента,
		                                 СтруктураШД.ВалютаВзаиморасчетов, 
		                                 СтруктураШД.КурсДокумента, КурсВзаиморасчетов, СтруктураШД.КратностьДокумента, 
		                                 КратностьВзаиморасчетов);
										 

		СтрокаТаблицы.НДСУпр = - ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.НДС, ВалютаДокумента,
										 СтруктураШД.ВалютаУправленческогоУчета, СтруктураШД.КурсДокумента, 
										 СтруктураШД.КурсВалютыУправленческогоУчета,
		                                 СтруктураШД.КратностьДокумента, 
										 СтруктураШД.КратностьВалютыУправленческогоУчета);
										 
		// Суммы пересчитаем в валюту упр. учета
		СтрокаТаблицы.Стоимость = - ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.Стоимость, СтруктураШД.ВалютаДокумента,
		                                 СтруктураШД.ВалютаУправленческогоУчета,
		                                 СтруктураШД.КурсДокумента,
		                                 СтруктураШД.КурсВалютыУправленческогоУчета,
		                                 СтруктураШД.КратностьДокумента,
		                                 СтруктураШД.КратностьВалютыУправленческогоУчета);
										 
		СтрокаТаблицы.СуммаСНДС=СтоимостьСНДС;
	КонецЦикла;

	Возврат ТаблицаТоваров;

КонецФункции

Функция ПодготовитьТаблицуТары(ТаблицаТары, СтруктураШД)
    ОписаниеТипаЧисло=ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2);
    ТаблицаТары.Колонки.Добавить("СуммаВзаиморасчетов", ОписаниеТипаЧисло);
	
	Для каждого СтрокаТаблицы Из ТаблицаТары Цикл
		СтрокаТаблицы.Количество = СтрокаТаблицы.КоличествоДок;
	КонецЦикла;

	ДанныеДоговора = МодульВалютногоУчета.КурсВалюты(СтруктураШД.ВалютаВзаиморасчетов, Дата);

	// Надо рассчитать сумму без НДС.
	Для каждого СтрокаТаблицы Из ТаблицаТары Цикл

		СтрокаТаблицы.СуммаВзаиморасчетов = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.Сумма, ВалютаДокумента,
		                                 СтруктураШД.ВалютаВзаиморасчетов, 
		                                 СтруктураШД.КурсДокумента, КурсВзаиморасчетов, 
										 СтруктураШД.КратностьДокумента, КратностьВзаиморасчетов);

		// Суммы пересчитаем в валюту упр. учета. По таре считаем, что СуммаБезНДС = Сумма
		СтрокаТаблицы.Стоимость = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.Сумма, ВалютаДокумента,
		                                 СтруктураШД.ВалютаУправленческогоУчета, 
		                                 СтруктураШД.КурсДокумента,
		                                 СтруктураШД.КурсВалютыУправленческогоУчета, 
		                                 СтруктураШД.КратностьДокумента,
		                                 СтруктураШД.КратностьВалютыУправленческогоУчета);

	КонецЦикла;

	Возврат ТаблицаТары;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Движения по регистрам 

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);
	//Движения по регистру "Учет ТМЦ (по ячейкам) или Учет ТМЦ (в рознице)
	ДвиженияПоРегистрам_УчетТМЦ(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистру "Товары к передачи со складов"
	ДвижениеПоРегистру_ТоварыКПередачеСоСкладов(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистру "Заказы поставщикам"
	ДвижениеПоРегистру_ЗаказыПоставщикам(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистру "Закупки"
	ДвижениеПоРегистру_Закупки(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистру "Товары полученные"
	ДвижениеПоРегистру_ТоварыПолученные(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистру "Списанные товары"
	ДвижениеПоРегистру_СписанныеТовары(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистрам "НДС"
	ДвижениеПоРегистру_УчетНДС(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистру "Взаиморасчеты с контрагентами"
	ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ);
	
	//Движения по регистру "Учет партий ТМЦ, Продажи"
	ДвижениеПоРегистру_УчетПартийТМЦ(СтруктураШД, СтруктураТД, Отказ);

	ДвижениеПоРегистру_РасходыПриУСН(СтруктураШД, СтруктураТД, Отказ);	
КонецПроцедуры

Процедура ДвижениеПоРегистру_ТоварыКПередачеСоСкладов(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ ВидПередачи=Перечисления.ВидыПередачиТоваров.ПоОрдеру Тогда Возврат;  КонецЕсли;
	
	Если СтруктураШД.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Или СтруктураШД.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
		тзДвижения=Движения.ТоварыКПередачеСоСкладов.ВыгрузитьКолонки();
		
		//Товары
		Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
			НоваяСтрока=тзДвижения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.Количество=СтрокаКоллекции.КоличествоДок;
			НоваяСтрока.СтатусПартии=Перечисления.СтатусыПартийТоваров.Купленный;
		КонецЦикла; 

		//Возвратная тара
		Для каждого СтрокаКоллекции Из СтруктураТД.ВозвратнаяТара Цикл
			НоваяСтрока=тзДвижения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.Количество=СтрокаКоллекции.КоличествоДок;
			НоваяСтрока.СтатусПартии=Перечисления.СтатусыПартийТоваров.ВозвратнаяТара;
			НоваяСтрока.Качество=Справочники.Качество.Новый;
		КонецЦикла; 
		тзДвижения.ЗаполнитьЗначения(Ссылка, "ДокументПередачи");
		тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");

		Движения.ТоварыКПередачеСоСкладов.Загрузить(тзДвижения);
	КонецЕсли;
КонецПроцедуры

Процедура ДвижениеПоРегистру_ЗаказыПоставщикам(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ ЗначениеЗаполнено(СтруктураШД.Сделка) Тогда Возврат; КонецЕсли;
	Если НЕ ТипЗНЧ(СтруктураШД.Сделка)=Тип("ДокументСсылка.ЗаказПоставщику") Тогда Возврат; КонецЕсли;
	
	тзДанные=Движения.ЗаказыПоставщикам.ВыгрузитьКолонки();
	Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
		ЗаполнитьЗначенияСвойств(тзДанные.Добавить(), СтрокаКоллекции);
	КонецЦикла;
	//*** тзДанные.ЗаполнитьЗначения(Перечисления.СтатусыПартийТоваров.Купленный, "СтатусПартии");
	тзДанные.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	тзДанные.ЗаполнитьЗначения(СтруктураШД.Сделка, "ЗаказПоставщику");

	Движения.ЗаказыПоставщикам.Загрузить(тзДанные);
КонецПроцедуры

Процедура ДвижениеПоРегистру_Закупки(СтруктураШД, СтруктураТД, Отказ)
	тзДвижения=Движения.Закупки.ВыгрузитьКолонки();
	Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
		НоваяСтрока=тзДвижения.Добавить();			
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.Стоимость=СтрокаКоллекции.СуммаУпр;
		НоваяСтрока.НДС=СтрокаКоллекции.НДСУпр;
	КонецЦикла;

	стрСтатусПартий=?(СтруктураШД.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СКомитентом, "НаКомиссию", "Купленный");
	тзДвижения.ЗаполнитьЗначения(Перечисления.СтатусыПартийТоваров[стрСтатусПартий], "СтатусПартии");
	тзДвижения.ЗаполнитьЗначения(СтруктураШД.Сделка, "ЗаказПоставщику");

	Движения.Закупки.Загрузить(тзДвижения);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ТоварыНаСкладах(СтруктураШД, СтруктураТД, Отказ)
	
КонецПроцедуры

Процедура ДвижениеПоРегистру_ТоварыПолученные(СтруктураШД, СтруктураТД, Отказ)
	тзДанные=Движения.ТоварыПолученные.ВыгрузитьКолонки();
	Если СтруктураШД.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
		Для каждого СтрокаКоллекции Из СтруктураТД.ВозвратнаяТара Цикл
			НоваяСтрока=тзДанные.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.СтатусПолучения=Перечисления.СтатусыПолученияПередачиТоваров.ВозвратнаяТара;
			НоваяСтрока.Сделка=СтруктураШД.Сделка;
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Расход;
		КонецЦикла; 

	ИначеЕсли СтруктураШД.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
		Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
			НоваяСтрока=тзДанные.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.СтатусПолучения=Перечисления.СтатусыПолученияПередачиТоваров.НаКомиссию;
			НоваяСтрока.Сделка=СтруктураШД.Сделка;
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
			НоваяСтрока.Сделка=СтруктураШД.Сделка;
		КонецЦикла; 
									
		Для каждого СтрокаКоллекции Из СтруктураТД.ВозвратнаяТара Цикл
			НоваяСтрока=тзДанные.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
			НоваяСтрока.СтатусПолучения=Перечисления.СтатусыПолученияПередачиТоваров.ВозвратнаяТара;
			НоваяСтрока.Сделка=СтруктураШД.Сделка;
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Расход;
		КонецЦикла;
	КонецЕсли;

	Движения.ТоварыПолученные.Загрузить(тзДанные);	
КонецПроцедуры

Процедура ДвиженияПоРегистрам_УчетТМЦ(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ТоварыНаСкладах") Тогда Возврат; КонецЕсли;
	Если НЕ ВидПередачи=Перечисления.ВидыПередачиТоваров.СоСклада Тогда Возврат; КонецЕсли;

	Если СтруктураШД.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Или СтруктураШД.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
		тзДвижения=Движения.ТоварыНаСкладах.ВыгрузитьКолонки();

		//Товары
		Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
			Если СтрокаКоллекции.ВидСклада=Перечисления.ВидыСкладов.Оптовый Тогда
				Если Не СтрокаКоллекции.ЯчеистыйСклад Тогда Продолжить; КонецЕсли;
				НоваяСтрока=тзДвижения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
				НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
			КонецЕсли;
		КонецЦикла; 
		
		//Возвратная тара
		Для каждого СтрокаКоллекции Из СтруктураТД.ВозвратнаяТара Цикл
			Если СтрокаКоллекции.ВидСклада=Перечисления.ВидыСкладов.Оптовый Тогда
				Если Не СтрокаКоллекции.ЯчеистыйСклад Тогда Продолжить; КонецЕсли;
				НоваяСтрока=тзДвижения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
				НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Расход;
				НоваяСтрока.Качество=Справочники.Качество.Новый;
			КонецЕсли;
		КонецЦикла; 

		Движения.ТоварыНаСкладах.Загрузить(тзДвижения);
	КонецЕсли;
КонецПроцедуры

Процедура ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ВзаиморасчетыСКонтрагентами") Тогда Возврат; КонецЕсли;
	Если НЕ СтруктураШД.ПроводитьПоВзаиморасчетам Тогда Возврат; КонецЕсли;
	тзДвижения=Движения.ВзаиморасчетыСКонтрагентами.ВыгрузитьКолонки();
	ВзаиморасчетыСервер.ОтражениеЗадолженности(СтруктураШД, СтруктураТД, "Расход", тзДвижения, Отказ, ДополнительныеСвойства.Заголовок, Истина);
	Движения.ВзаиморасчетыСКонтрагентами.Загрузить(тзДвижения);
КонецПроцедуры

Процедура ДвижениеПоРегистру_СписанныеТовары(СтруктураШД, СтруктураТД, Отказ)
	тзДвижения=Движения.СписанныеТовары.ВыгрузитьКолонки(); ПорядковыйНомер=0;

	//Товары
	Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
		ПорядковыйНомер=ПорядковыйНомер+1;
		НоваяСтрока=тзДвижения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.НомерСтрокиДокумента=ПорядковыйНомер;
		НоваяСтрока.Количество=СтрокаКоллекции.КоличествоДок;
		НоваяСтрока.ДокументПартии=СтрокаКоллекции.ДокументЗакупки;
		НоваяСтрока.КодОперацииПартииТоваров=Перечисления.КодыОперацийПартииТоваров.ВозвратПоставщику;
		Если ЗначениеЗаполнено(СтрокаКоллекции.Заказ) тогда
			Если СтрокаКоллекции.Заказ.Метаданные().Имя="ЗаказПокупателя" Тогда
				НоваяСтрока.ЗаказСписания=СтрокаКоллекции.Заказ;
			КонецЕсли;
		КонецЕсли;		
		Если СтруктураШД.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			НоваяСтрока.ДопустимыйСтатус1=Перечисления.СтатусыПартийТоваров.НаКомиссию;
		Иначе
			НоваяСтрока.ДопустимыйСтатус1=Перечисления.СтатусыПартийТоваров.Купленный;
		КонецЕсли;		
	КонецЦикла;
	
	//Возвратная тара
	Для каждого СтрокаКоллекции Из СтруктураТД.ВозвратнаяТара Цикл
		ПорядковыйНомер=ПорядковыйНомер+1;
		НоваяСтрока=тзДвижения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.НомерСтрокиДокумента=ПорядковыйНомер;
		НоваяСтрока.Количество=СтрокаКоллекции.КоличествоДок;
		НоваяСтрока.ЗаказПартии=СтрокаКоллекции.Заказ;
		НоваяСтрока.КодОперацииПартииТоваров=Перечисления.КодыОперацийПартииТоваров.ВозвратПоставщику;
		НоваяСтрока.ДопустимыйСтатус1=Перечисления.СтатусыПартийТоваров.ВозвратнаяТара;
	КонецЦикла;

	Если ВидПередачи=Перечисления.ВидыПередачиТоваров.ПоОрдеру Тогда
		 тзДвижения.ЗаполнитьЗначения(Истина,"НеСписывать");
	КонецЕсли;
	Движения.СписанныеТовары.Загрузить(тзДвижения);	
	Движения.СписанныеТовары.Записать(Истина);
КонецПРоцедуры

Процедура ДвижениеПоРегистру_УчетПартийТМЦ(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ПартииТоваровНаСкладах") Тогда Возврат; КонецЕсли;

	СтруктураШД.Вставить("Отказ", Отказ);
	СтруктураШД.Вставить("ТаблицаСписания", Движения.СписанныеТовары.Выгрузить());
	УправлениеЗапасамиПартионныйУчет.ДвижениеПартийТоваров(Ссылка, СтруктураШД);
КонецПроцедуры

Процедура ДвижениеПоРегистру_РасходыПриУСН(СтруктураШД, СтруктураТД, Отказ)
	УчетнаяПолитика=ПараметрыУчетнойПолитики(Истина);
	Если УчетнаяПолитика.ОбъектНалогообложенияУСН=Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда	Возврат; КонецЕсли;	
	СистемаНалогообложения=УчетнаяПолитика.СистемаНалогообложения;
	ВключитьДвиженияУСН=Ложь;
	Если ДополнительныеСвойства.Свойство("ВключитьДвиженияУСН") Тогда
		ВключитьДвиженияУСН=ДополнительныеСвойства.ВключитьДвиженияУСН;
	КонецЕсли;

	Если СистемаНалогообложения=Перечисления.СистемыНалогообложения.Упрощенная Или СистемаНалогообложения=Перечисления.СистемыНалогообложения.Упрощенная_ЕНВД ИЛИ ВключитьДвиженияУСН Тогда
		Если СтруктураТД.Товары.Количество()<>0 Тогда
			тзДанные=СтруктураТД.Товары.Скопировать(); 
			Если УчетнаяПолитика.УчитыватьСписание Тогда
				тзДанные.Свернуть("Номенклатура,НеПринимаетсяУСН,ТОП,НомерСтрокиТабличнойЧасти,ВидТабличнойЧасти","Сумма,СуммаНДС");
			Иначе
				тзДанные.Свернуть("НеПринимаетсяУСН,ТОП,НомерСтрокиТабличнойЧасти,ВидТабличнойЧасти","Сумма,СуммаНДС");
			КонецЕсли;
			Для Каждого СтрокаКоллекции ИЗ тзДанные Цикл
				НоваяСтрока=Движения.РасходыПриУСН.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаКоллекции);
				НоваяСтрока.Сумма=-(СтрокаКоллекции.Сумма+СтрокаКоллекции.СуммаНДС);
				Если УчетнаяПолитика.ПорядокПризнанияРасходовПоНДС=Перечисления.ПорядокПризнанияРасходовПоНДС.ВключатьВСтоимость Тогда
	 				НоваяСтрока.СуммаНДС=-СтрокаКоллекции.СуммаНДС;
				КонецЕсли;
				НоваяСтрока.ДоговорКонтрагента=ДоговорКонтрагента;
				НоваяСтрока.Активность=Истина;
				НоваяСтрока.Период=Дата;
				НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
				НоваяСтрока.Организация=Организация;
				НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.Куплено;
				НоваяСтрока.РасчетныйДокумент=Ссылка;
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
 
//////////////////////////////////////////////////////////////////////////////////
// Проведение по регистрам (по нескольким регистрам одного типа)

Процедура ДвижениеПоРегистру_УчетВзаиморасчетов(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетНДС(СтруктураШД, СтруктураТД, Отказ)
	Если СтруктураШД.УчетнаяПолитика.ОрганизацияНеЯвляетсяПлательщикомНДС Тогда Возврат; КонецЕсли;
	Если СтруктураШД.ВидДоговора<>Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда Возврат; КонецЕсли;
    Если СтруктураТД.Товары.Количество()=0 Тогда Возврат; КонецЕсли; 

	Если СтруктураШД.УчитыватьНДС Тогда
		СтруктураШД.Вставить("НалоговыйАгентПоОплате", СтруктураШД.ДоговорКонтрагента.НалоговыйАгентПоОплате);
		УчетНДС.СформироватьДвиженияВозвратаПоставщикуПоРегистрамНДС(СтруктураШД, СтруктураТД.Товары, Движения, Отказ, ДополнительныеСвойства.Заголовок);
	КонецЕсли; 
	УчетНДС.ОтразитьВозвратПоставщикуПоРегиструРасчетовСПоставщикамиНДС(СтруктураШД, Движения, СтруктураТД.Товары, Отказ, ДополнительныеСвойства.Заголовок);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

Процедура ОбработкаЗаполнения(Основание)
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание) Тогда Возврат; КонецЕсли;

	Если ТипЗнч(Основание)=Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Если Основание.ВидПоступления=Перечисления.ВидыПоступленияТоваров.ПоОрдеру Тогда
			Склад=Основание.Склад.Склад;
		Иначе
			Склад=Основание.Склад;
		КонецЕсли;
	КонецЕсли;

	ЗаполнениеДокументов.ЗаполнитьТабличныеЧастиДокументаПоОснованию(ЭтотОбъект, Основание);
	
	ОбработкаТабличныхЧастей.ЗаполнитьТиповыеОперации(ЭтотОбъект);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
    Если ОбменДанными.Загрузка Тогда Возврат; КонецЕсли;	
	УчетНДС.ПроверитьСоответствиеРеквизитовСчетаФактуры(ЭтотОбъект, ?(Не ПоставщикуВыставляетсяСчетФактураНаВозврат, "СчетФактураПолученный", "СчетФактураВыданный"));
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	Если УчитыватьНДС Тогда
		ПроверяемыеРеквизиты.Добавить("Товары.СтавкаНДС");
	КонецЕсли;	

	//Формирование значений реквизитов шапки документа
	стрТекстЗапрос="Док.ДоговорКонтрагента.НалоговыйАгентПоОплате Как НалоговыйАгентПоОплате,";
	СтруктураШД=УправлениеДокументамиСервер.ПолучитьСтруктуруРеквизитовШапки(ЭтотОбъект,,стрТекстЗапрос);
	СтруктураШД.Вставить("ПроводитьПоВзаиморасчетам", СтруктураШД.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	СтруктураШД.Вставить("Направление", "Поступление");
	СтруктураШД.Вставить("ЭтоВозврат", Истина);

	ВзаиморасчетыСервер.ПроверитьСоответствиеОрганизацииДоговоруВзаиморасчетов(Организация, ДоговорКонтрагента, СтруктураШД.ДоговорОрганизация, Отказ, Заголовок);
	УправлениеЗапасами.КорректировкаМассиваОбязательныхПолей(ЭтотОбъект, "Товары", ПроверяемыеРеквизиты, СтруктураШД.ВидСклада);
	УправлениеЗапасами.КорректировкаМассиваОбязательныхПолей(ЭтотОбъект, "ВозвратнаяТара", ПроверяемыеРеквизиты);

	//Формирование значений реквизитов табличных частей документа

	//Табличная часть "Товары"
	стрТекстЗапроса="
	|ДокументПоступления Как ДокументЗакупки,
	|";
	тзТовары=УправлениеДокументамиСервер.ПолучитьСтруктуруТЧ(ЭтотОбъект, "Товары", стрТекстЗапроса);
	тзТовары=ПодготовитьТаблицуТоваров(тзТовары, СтруктураШД);
	ВзаиморасчетыСервер.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(тзТовары, СтруктураШД, ?(СтруктураШД.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом, Истина, СтруктураШД.НДСВключенВСтоимость));
		
	//Табличная часть "Возвратная тара"
	стрТекстЗапроса="
	|Количество Как КоличествоДок, // Количество нужно выгружать с другим псевдонимом, иначе нельзя будет использовать отрицательные значения
	|";	
	тзВозвратнаяТара=УправлениеДокументамиСервер.ПолучитьСтруктуруТЧ(ЭтотОбъект, "ВозвратнаяТара", стрТекстЗапроса);
	тзВозвратнаяТара=ПодготовитьТаблицуТары(тзВозвратнаяТара, СтруктураШД);
	
	//Структура табличных частей (важен порядок)
	СтруктураТД=Новый Структура;
	СтруктураТД.Вставить("Товары", тзТовары);
	СтруктураТД.Вставить("ВозвратнаяТара", тзВозвратнаяТара);
	
	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства, "Покупка");