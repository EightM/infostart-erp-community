Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт

	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;

КонецФункции

Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	СуммаДокумента=РасшифровкаПлатежа.Итог("СуммаПлатежа");
	
КонецПроцедуры

Функция СформироватьТаблицуПлатежей(Отказ, Заголовок)
	тзДанные=РасшифровкаПлатежа.Выгрузить();
	тзДанные.Колонки.Добавить("СуммаБух");
	тзДанные.Колонки.Добавить("ВидТабличнойЧасти");
	тзДанные.Колонки.Добавить("НомерСтрокиТабличнойЧасти");
	тзДанные.Колонки.Добавить("ВестиПлатежныйКалендарь");
	тзДанные.Колонки.Добавить("ВалютаВзаиморасчетов");
	тзДанные.Колонки.Добавить("ВидДоговора");
	Для каждого СтрокаКоллекции Из тзДанные Цикл
		СтрокаКоллекции.СуммаБух=СтрокаКоллекции.СуммаПлатежа;
		СтрокаКоллекции.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтроки;
		СтрокаКоллекции.ВестиПлатежныйКалендарь=СтрокаКоллекции.ДоговорКонтрагента.ВестиПлатежныйКалендарь;
		СтрокаКоллекции.ВидДоговора=СтрокаКоллекции.ДоговорКонтрагента.ВидДоговора;
		СтрокаКоллекции.ВалютаВзаиморасчетов=СтрокаКоллекции.ДоговорКонтрагента.ВалютаВзаиморасчетов;
		Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(СтрокаКоллекции.ДоговорКонтрагента) Тогда
			Если НЕ Организация=СтрокаКоллекции.ДоговорКонтрагента.Организация Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Выбран договор контрагента, не соответствующий организации, указанной в документе!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	тзДанные.ЗаполнитьЗначения("РасшифровкаПлатежа", "ВидТабличнойЧасти");

	Возврат тзДанные;	
КонецФункции

//////////////////////////////////////////////////////////////////////////////////
//// Проведение по регистрам

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ВзаиморасчетыСКонтрагентами") Тогда Возврат; КонецЕсли;
	
	тзДвижения=Движения.ВзаиморасчетыСКонтрагентами.ВыгрузитьКолонки();
	
	тзДанные=СтруктураТД.РасшифровкаПлатежа.Скопировать();
	тзДанные.Свернуть("Направление,Контрагент,ДоговорКонтрагента,ТипДоговораКонтрагента,ВидДоговора", "СуммаБух,СуммаВал");
	Для Каждого СтрокаКоллекции ИЗ тзДанные Цикл
		Если СтрокаКоллекции.Направление=Перечисления.ВидыДвиженийПриходРасход.Приход Тогда
			НоваяСтрока=тзДвижения.Добавить();
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);

		ИначеЕсли СтрокаКоллекции.Направление=Перечисления.ВидыДвиженийПриходРасход.Расход Тогда
			НоваяСтрока=тзДвижения.Добавить();
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Расход;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);

		Иначе //Приход + Расход
			НоваяСтрока=тзДвижения.Добавить();
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);

			НоваяСтрока=тзДвижения.Добавить();
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Расход;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		КонецЕсли;
	КонецЦикла;
	тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(Организация, "Организация");
	
	Движения.ВзаиморасчетыСКонтрагентами.Загрузить(тзДвижения);
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
// Проведение по регистрам (по нескольким регистрам одного типа)

Процедура ДвижениеПоРегистру_УчетВзаиморасчетов(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ОбработкаЗаполнения(Основание)
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание) Тогда Возврат; КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	//Формирование значений реквизитов шапки документа
	СтруктураШД=УправлениеДокументамиСервер.СформироватьСтруктуруШД(ЭтотОбъект);

	//Формируем структуру таблиц документа
	СтруктураТД=Новый Структура;
	СтруктураТД.Вставить("РасшифровкаПлатежа", СформироватьТаблицуПлатежей(Отказ, Заголовок));

	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства, "Продажа");