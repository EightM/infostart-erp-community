////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("КорректировкаДолга"   , "Корректировка долга");
	Структура.Вставить("Уведомление"         , "Уведомление об уступке права требования");
	//Структура.Вставить("СоглашениеУступкаПраваТребования"   , "Соглашение об уступке права требования");
	//Структура.Вставить("СоглашениеПереводДолга", "Соглашение о переводе долга");
	Структура.Вставить("БухгалтерскаяСправка", "Бухгалтерская справка");
	Структура.Вставить("ДоговорУступкиПраваТребования", "Договор уступки права требования");
	Структура.Вставить("АктВзаимозачета", "Акт взаимозачета");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция Печать_Документа(СтруктураПараметров)

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.УстановитьПараметр("УвеличениеДолга", Перечисления.ВидыЗадолженности.Кредиторская);
	Запрос.УстановитьПараметр("УменьшениеДолга", Перечисления.ВидыЗадолженности.Дебиторская);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Ссылка.Номер                               КАК Номер,
	|	Ссылка.Дата                                КАК Дата,
	|	Ссылка.КонтрагентДебитор                   КАК Получатель,
	|	Ссылка.Организация                         КАК Поставщик,
	|	Ссылка.Организация                         КАК Организация,
	|	НомерСтроки,
	|	ДоговорКонтрагента                         КАК ДоговорВзаиморасчетов,
	|	ДоговорКонтрагента.Представление           КАК ПредставлениеДоговора,
	|	ДоговорКонтрагента.ВалютаВзаиморасчетов    КАК Валюта,
	//|	Сделка                                     КАК Сделка,
	//|	Сделка.Представление                       КАК ПредставлениеСделки,
	|	ВЫБОР КОГДА ВидЗадолженности = &УвеличениеДолга ТОГДА СуммаБух ИНАЧЕ 0 КОНЕЦ КАК УвеличениеДолгаКонтрагента,
	|	ВЫБОР КОГДА ВидЗадолженности = &УменьшениеДолга ТОГДА СуммаБух ИНАЧЕ 0 КОНЕЦ КАК УменьшениеДолгаКонтрагента
	|ИЗ
	|	Документ.КорректировкаДолга.СуммыДолга КАК КорректировкаДолга
	|
	|ГДЕ
	|	КорректировкаДолга.Ссылка = &ТекущийДокумент
	|
	|ИТОГИ ПО
	|	ДоговорКонтрагента.ВалютаВзаиморасчетов
	|";
	Шапка = Запрос.Выполнить();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КорректировкаДолга_КорректировкаДолга";

	Макет = ИнициализацияМакета(СтруктураПараметров, "КорректировкаДолга");

	// Выводим шапку накладной
	ЗаголовокВыведен = Ложь;
	НомерПП = 0;
	
	ВыборкаВалют=Шапка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВалют.Следующий() Цикл
		ИтогоВПлюс  = 0;
		ИтогоВМинус = 0;

		ВыборкаСтрокТовары = ВыборкаВалют.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если НЕ ЗаголовокВыведен Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
				ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(ВыборкаСтрокТовары, "Корректировка долга");
				ТабДокумент.Вывести(ОбластьМакета);

				ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
				ОбластьМакета.Параметры.ПредставлениеПоставщика = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ВыборкаСтрокТовары.Организация, ВыборкаСтрокТовары.Дата), "ПолноеНаименование,");
				ТабДокумент.Вывести(ОбластьМакета);

				ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
				ОбластьМакета.Параметры.ПредставлениеПолучателя = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ВыборкаСтрокТовары.Получатель, ВыборкаСтрокТовары.Дата), "ПолноеНаименование,");
				ТабДокумент.Вывести(ОбластьМакета);

				ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
				ЗаголовокВыведен = Истина;
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			НомерПП = НомерПП + 1;
			ОбластьМакета.Параметры.НомерПП = НомерПП;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ТабДокумент.Вывести(ОбластьМакета);

			ИтогоВПлюс  = ИтогоВПлюс  + ВыборкаСтрокТовары.УвеличениеДолгаКонтрагента;
			ИтогоВМИнус = ИтогоВМИнус + ВыборкаСтрокТовары.УменьшениеДолгаКонтрагента;
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.ИтогоВПлюс  = ИтогоВПлюс;
		ОбластьМакета.Параметры.ИтогоВМИнус = ИтогоВМИнус;
		ОбластьМакета.Параметры.Валюта      = ВыборкаВалют.Валюта;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
	Возврат ТабДокумент;
КонецФункции

Функция Печать_БухгалтерскойСправки(СтруктураПараметров, стрВидРегистра)
	Запрос=Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ОперацияБух.Организация,
	|	ОперацияБух.Номер,
	|	ОперацияБух.Дата,
	|	ОперацияБух.Комментарий,
	|	ОперацияБух.Ответственный
	|ИЗ
	|	Документ.КорректировкаДолга КАК ОперацияБух
	|ГДЕ
	|	ОперацияБух.Ссылка = &Ссылка
	|";
	
	Док=Запрос.Выполнить().Выбрать();
	Док.Следующий();
	
	стрДополнительныеПапаметры="";
	стрДополнительныеПапаметры=?(стрВидРегистра="Хозрасчетный","ХозрасчетныйДвиженияССубконто.ВалютаДт,
	|	ХозрасчетныйДвиженияССубконто.ВалютаКт,
	|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаДт,
	|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаКт,","Null КАК ВалютаДт,
	|	Null КАК ВалютаКт,
	|	Null КАК ВалютнаяСуммаДт,
	|	Null КАК ВалютнаяСуммаКт,");

	
	Запрос=Новый Запрос();
	Запрос.УстановитьПараметр("Регистратор", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ХозрасчетныйДвиженияССубконто.НомерСтроки КАК НомерСтроки,
	|	ХозрасчетныйДвиженияССубконто.СчетДт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт3,
	|	ХозрасчетныйДвиженияССубконто.СчетКт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт3,
	|	ХозрасчетныйДвиженияССубконто.Организация,
	|	ХозрасчетныйДвиженияССубконто.Сумма,
	|	"+стрДополнительныеПапаметры+"
	|	ХозрасчетныйДвиженияССубконто.КоличествоДт,
	|	ХозрасчетныйДвиженияССубконто.КоличествоКт,
	|	ХозрасчетныйДвиженияССубконто.Содержание
	|ИЗ
	|	РегистрБухгалтерии."+стрВидРегистра+".ДвиженияССубконто(, , Регистратор = &Регистратор) КАК ХозрасчетныйДвиженияССубконто
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	ВыборкаДвижений = Запрос.Выполнить().Выбрать();
	
	Макет = ИнициализацияМакета(СтруктураПараметров, "БухгалтерскаяСправка");
	
	// Получаем области макета для вывода в табличный документ.
	ШапкаДокумента   = Макет.ПолучитьОбласть("Шапка");
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	СтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ПодвалТаблицы    = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ПодвалДокумента  = Макет.ПолучитьОбласть("Подвал");
	
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.ПолеСверху              = 10;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 10;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	// Загрузим настройки пользователя.
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_БухгалтерскаяСправка_БухгалтерскаяСправка";

	// Выведем шапку документа.
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Док.Организация, Док.Дата);
	
	ШапкаДокумента.Параметры.Организация    = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации);
	ШапкаДокумента.Параметры.НомерДокумента = ОбщегоНазначенияСервер.НомерНаПечать(Док);
	ШапкаДокумента.Параметры.ДатаДокумента  = Формат(Док.Дата, "ДЛФ=D");
	ШапкаДокумента.Параметры.Содержание     = Док.Комментарий;
	
	ТабДокумент.Вывести(ШапкаДокумента);
	
	// Выведем заголовок таблицы.
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	// Выведем строки документа.
	Пока ВыборкаДвижений.Следующий() Цикл
		
		СтрокаТаблицы.Параметры.Заполнить(ВыборкаДвижений);
		
		АналитикаДт = Строка(ВыборкаДвижений.СубконтоДт1) + Символы.ПС
		            + Строка(ВыборкаДвижений.СубконтоДт2) + Символы.ПС
                    + Строка(ВыборкаДвижений.СубконтоДт3);
					
		АналитикаКт = Строка(ВыборкаДвижений.СубконтоКт1) + Символы.ПС
		            + Строка(ВыборкаДвижений.СубконтоКт2) + Символы.ПС
                    + Строка(ВыборкаДвижений.СубконтоКт3);
					
		СтрокаТаблицы.Параметры.АналитикаДт = АналитикаДт;
		СтрокаТаблицы.Параметры.АналитикаКт = АналитикаКт;
									 
		// Проверим, помещается ли строка с подвалом.
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(СтрокаТаблицы);
		СтрокаСПодвалом.Добавить(ПодвалТаблицы);
		СтрокаСПодвалом.Добавить(ПодвалДокумента);
		
		Если НЕ ПечатныеФормыСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			// Выведем подвал таблицы.
			ТабДокумент.Вывести(ПодвалТаблицы);
				
			// Выведем разрыв страницы.
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

			// Выведем заголовок таблицы.
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ТабДокумент.Вывести(СтрокаТаблицы);
	КонецЦикла;
	
	// Выведем подвал таблицы.
	ТабДокумент.Вывести(ПодвалТаблицы);
	
	// Выведем подвал документа.
	ПодвалДокумента.Параметры.РасшифровкаПодписиИсполнителя = ?(НЕ ЗначениеЗаполнено(Док.Ответственный), "", ОбщегоНазначения.ФамилияИнициалыФизЛица(Док.Ответственный.ФизЛицо));
	ТабДокумент.Вывести(ПодвалДокумента);
	
	Возврат ТабДокумент;		
КонецФункции 

Функция Печать_Уведомления(СтруктураПараметров)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Ссылка.Номер                    КАК Номер,
	|	Ссылка.Дата                     КАК Дата,
	|	Ссылка.КонтрагентКредитор       КАК Получатель,
	|	Ссылка.Организация              КАК Организация,
	|	ДокументРасчетовСКонтрагентом   КАК ДокументРасчетовСКонтрагентом,
	|	ДоговорКонтрагента              КАК ДоговорКонтрагента,
	|	Ссылка.КонтрагентДебитор        КАК Передает,
	|	СуммаБух                   		КАК Сумма,              
	|	НомерСтроки
	|ИЗ
	|	Документ.КорректировкаДолга.СуммыДолга КАК КорректировкаДолга
	|
	|ГДЕ
	|	КорректировкаДолга.Ссылка = &ТекущийДокумент
	|";
	Шапка = Запрос.Выполнить();
    Выборка=Шапка.Выбрать();
	Выборка.Следующий();
	ТабДокумент = Новый ТабличныйДокумент;

	Макет = ИнициализацияМакета(СтруктураПараметров, "Уведомление");

	ВыборкаВалют = Шапка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Передает=Выборка.Передает.НаименованиеПолное;
	ОбластьМакета.Параметры.Номер=Выборка.Номер;
	Сведения=КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Выборка.Передает, Выборка.Дата);
	//ОбластьМакета.Параметры.ИННПередает=Сведения.ИНН;
	//ОбластьМакета.Параметры.АдресПередает=Сведения.ЮридическийАдрес;
	ОбластьМакета.Параметры.Дата=Формат(Выборка.Дата,"ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.Организация=Выборка.Организация.НаименованиеПолное;
	ТабДокумент.Вывести(ОбластьМакета);
	НомСтроки=0;
	ИтогоСуммаДокумента=0;
	ИтогоСуммаЗачета=0;
	стрДоговорыПередачи="";
	Пока ВыборкаВалют.Следующий() Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		НомСтроки=НомСтроки+1;
//		ОбластьМакета.Параметры.НомСтроки=НомСтроки;
		ОбластьМакета.Параметры.стрДокумент=?(ЗначениеЗаполнено(ВыборкаВалют.ДокументРасчетовСКонтрагентом),ВыборкаВалют.ДокументРасчетовСКонтрагентом,ВыборкаВалют.ДоговорКонтрагента);
		
		//ОбластьМакета.Параметры.ДатаДок=?(ЗначениеЗаполнено(ВыборкаВалют.ДокументРасчетовСКонтрагентом),ВыборкаВалют.ДокументРасчетовСКонтрагентом.Дата,Дата);
		//ОбластьМакета.Параметры.Док=?(ЗначениеЗаполнено(ВыборкаВалют.ДокументРасчетовСКонтрагентом),ВыборкаВалют.ДокументРасчетовСКонтрагентом,ВыборкаВалют.ДоговорКонтрагента);		
		СуммаДокумента=ВыборкаВалют.Сумма;
		СуммаЗачета=?(ЗначениеЗаполнено(ВыборкаВалют.ДокументРасчетовСКонтрагентом),ВыборкаВалют.ДокументРасчетовСКонтрагентом.СуммаДокумента,ВыборкаВалют.Сумма);
		ОбластьМакета.Параметры.СуммаДокумента=СуммаДокумента;
		ОбластьМакета.Параметры.СуммаЗачета=СуммаЗачета;
		ИтогоСуммаДокумента=ИтогоСуммаДокумента+СуммаДокумента;
		ИтогоСуммаЗачета=ИтогоСуммаЗачета+СуммаЗачета;
		ТабДокумент.Вывести(ОбластьМакета);
//		стрДоговорыПередачи=стрДоговорыПередачи+" № "+СокрЛП(ВыборкаВалют.ДоговорКонтрагента.Номер)+" от"+СокрЛП(ВыборкаВалют.ДоговорКонтрагента.Дата);
	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.ИтогоСуммаЗачетаПрописью=ЧислоПрописью(ИтогоСуммаЗачета, , "руб.,руб.,руб.,м,коп.,коп.,коп.,ж");
	ОбластьМакета.Параметры.ИтогоСуммаДокумента=Формат(ИтогоСуммаДокумента,"ЧДЦ=2");
	ОбластьМакета.Параметры.ИтогоСуммаЗачета=Формат(ИтогоСуммаЗачета,"ЧДЦ=2");
	
	ОбластьМакета.Параметры.Организация=Выборка.Организация.НаименованиеПолное;
	ОбластьМакета.Параметры.Передает=Выборка.Передает.НаименованиеПолное;
	ОбластьМакета.Параметры.Получатель=Выборка.Получатель.НаименованиеПолное;

	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция Печать_ДоговорУступкиПраваТребования(СтруктураПараметров)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СтруктураПараметров.СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Ссылка.Номер                    КАК Номер,
	|	Ссылка.Дата                     КАК Дата,
	|	Ссылка.КонтрагентКредитор       КАК Получатель,
	|	Ссылка.Организация              КАК Организация,
	|	Ссылка.ДоговорКонтрагента       КАК Договор,
	|	ДокументРасчетовСКонтрагентом   КАК ДокументРасчетовСКонтрагентом,
	|	ДоговорКонтрагента              КАК ДоговорКонтрагента,
	|	Ссылка.КонтрагентДебитор        КАК Передает,
	|	СуммаБух                   		КАК Сумма,              
	|	НомерСтроки
	|ИЗ
	|	Документ.КорректировкаДолга.СуммыДолга КАК КорректировкаДолга
	|
	|ГДЕ
	|	КорректировкаДолга.Ссылка = &ТекущийДокумент
	|";
	Шапка = Запрос.Выполнить();
	тзСуммыДолга=Шапка.Выгрузить();
    Выборка=Шапка.Выбрать();
	Выборка.Следующий();
	ТабДокумент = Новый ТабличныйДокумент;

	Макет = ИнициализацияМакета(СтруктураПараметров, "ДоговорУступкиПраваТребования");

	ВыборкаВалют=Шапка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Руководители=ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(Выборка.Организация, Выборка.Дата, СтруктураПараметров.СсылкаНаОбъект);
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
	СведенияОКонтрагенте  = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Выборка.Получатель, Выборка.Дата);

	СуммаЗачета=тзСуммыДолга.Итог("Сумма");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Номер=Выборка.Номер;
	ОбластьМакета.Параметры.Организация=Выборка.Организация.НаименованиеПолное;
	ОбластьМакета.Параметры.Дата=Формат(Выборка.Дата,"ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.Директор=Руководители.Руководитель;
	ОбластьМакета.Параметры.КонтрагентКредитор=Выборка.Получатель.Наименование;
	ОбластьМакета.Параметры.КонтрагентДебитор=Выборка.Передает.Наименование;
	ОбластьМакета.Параметры.КонтрагентВЛице=Выборка.Получатель.ПараметрыПечати_Должность+" "+Выборка.Получатель.ПараметрыПечати_ВЛице;
	ОбластьМакета.Параметры.стрСуммаДокумента=Формат(СуммаЗачета,"ЧДЦ=2")+"("+ЧислоПрописью(СуммаЗачета, , "руб.,руб.,руб.,м,коп.,коп.,коп.,ж")+")"+" в том числе НДС 18%";
	ОбластьМакета.Параметры.стрДоговор=Выборка.Договор.Наименование;
	ОбластьМакета.Параметры.ОрганизацияИНН=Строка(СведенияОбОрганизации.ИНН);
	ОбластьМакета.Параметры.ФактицескийАдресОрганизация=Строка(СведенияОбОрганизации.ФактическийАдрес);
	ОбластьМакета.Параметры.ТелефонОрганизация=Строка(СведенияОбОрганизации.Телефоны);
	ОбластьМакета.Параметры.Руководитель=Руководители.Руководитель;
	ОбластьМакета.Параметры.ГлавныйБухгалтер=Руководители.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.КонтрагентИНН=Строка(СведенияОКонтрагенте.ИНН);
	ОбластьМакета.Параметры.ФактическийАдресКонтрагент=Строка(СведенияОКонтрагенте.ФактическийАдрес);
	ОбластьМакета.Параметры.ТелефонКонтрагент=Строка(СведенияОКонтрагенте.Телефоны);
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция Печать_СоглашениеУступкаПраваТребования(СтруктураПараметров)
	
КонецФункции	

Функция Печать_СоглашениеПереводДолга(СтруктураПараметров)
	
КонецФункции	

Функция ПолучитьДанныеДокумента(СсылкаНаОбъект)
	стрРеквизиты="";
	Для каждого мдРеквизит Из СсылкаНаОбъект.Метаданные().Реквизиты Цикл
		стрРеквизиты=стрРеквизиты+","+Символы.ПС+мдРеквизит.Имя;
	КонецЦикла;	

	Запрос=Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Дата,
	|	Номер,
	|	Проведен,
	|	Организация.НаименованиеПолное Как ОрганизацияНаименованиеПолное,
	|	КонтрагентДебитор.НаименованиеПолное Как КонтрагентДебиторНаименованиеПолное,
	|	КонтрагентКредитор.НаименованиеПолное Как КонтрагентКредиторНаименованиеПолное
	|	"+стрРеквизиты+",
	|	СуммыДолга Как ДолгКредитора,
	|	СуммыДолга Как ДолгДебитора
	|ИЗ
	|	Документ.КорректировкаДолга КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент
	|";
	
	#Если НаСервере Тогда
	Запрос.Выполнить();
	#КонецЕсли
	РеквизитыШапки=Запрос.Результат.Выбрать();
	РеквизитыШапки.Следующий();

	Возврат РеквизитыШапки;
КонецФункции 	

Функция Печать_АктВзаимозачета(СтруктураПараметров)
	
	ДанныеДокумента=ПолучитьДанныеДокумента(СтруктураПараметров.СсылкаНаОбъект);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктВзаимозачета_АктВзаимозачета";
	Макет = ИнициализацияМакета(СтруктураПараметров, "АктВзаимозачета");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Номер=ДанныеДокумента.Номер;
	ОбластьМакета.Параметры.Дата=ДанныеДокумента.Дата;
	ОбластьМакета.Параметры.Организация=ДанныеДокумента.ОрганизацияНаименованиеПолное;
	Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(ДанныеДокумента.Организация, ДанныеДокумента.Дата, СтруктураПараметров.СсылкаНаОбъект);
	ОбластьМакета.Параметры.Директор=Руководители.Руководитель;
	ТабДокумент.Вывести(ОбластьМакета);
	
	АктТрехсторонний=?((НЕ ДанныеДокумента.КонтрагентКредитор.Пустая()) И (НЕ ДанныеДокумента.КонтрагентДебитор.Пустая()) И (ДанныеДокумента.КонтрагентКредитор<>ДанныеДокумента.КонтрагентДебитор),Истина, Ложь);
	НомерСтороны="2";
	Если АктТрехсторонний Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаКлиент");
		ОбластьМакета.Параметры.Клиент=ДанныеДокумента.КонтрагентДебиторНаименованиеПолное;
		ОбластьМакета.Параметры.НомерСтороны=НомерСтороны;
		ТабДокумент.Вывести(ОбластьМакета);
		НомерСтороны="3";
	КонецЕсли;	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаКлиент");
	ОбластьМакета.Параметры.Клиент=ДанныеДокумента.КонтрагентКредиторНаименованиеПолное;
	ОбластьМакета.Параметры.НомерСтороны=НомерСтороны;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Раздел1");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТЧ");
	ТабДокумент.Вывести(ОбластьМакета);
	ИтогоСуммаДокумента=0; ИтогоСуммаЗачета=0; ИтогоСуммаНДС=0;
	ДолгДебитора=ДанныеДокумента.ДолгКредитора.Выгрузить();
	Для Каждого СтрокаПродажи ИЗ ДолгДебитора Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТЧ");
		ОбластьМакета.Параметры.стрДокумент=?(ЗначениеЗаполнено(СтрокаПродажи.ДокументРасчетовСКонтрагентом),Строка(СтрокаПродажи.ДокументРасчетовСКонтрагентом)+" по договору "+Строка(СтрокаПродажи.ДоговорКонтрагента),СтрокаПродажи.ДоговорКонтрагента);
		СуммаДокумента=?(ЗначениеЗаполнено(СтрокаПродажи.ДокументРасчетовСКонтрагентом),СтрокаПродажи.ДокументРасчетовСКонтрагентом.СуммаДокумента, СтрокаПродажи.СуммаБух);
		ОбластьМакета.Параметры.СуммаДокумента=СуммаДокумента;
		ОбластьМакета.Параметры.СуммаЗачета=СтрокаПродажи.СуммаБух;
		//ОбластьМакета.Параметры.СуммаНДС=СтрокаПродажи.СуммаНДС;
		ИтогоСуммаДокумента=ИтогоСуммаДокумента+СуммаДокумента;
		ИтогоСуммаЗачета=ИтогоСуммаЗачета+СтрокаПродажи.СуммаБух;
	//	ИтогоСуммаНДС=ИтогоСуммаНДС+СтрокаПродажи.СуммаНДС;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТЧ");
	ОбластьМакета.Параметры.ИтогоСуммаДокумента=ИтогоСуммаДокумента;
	ОбластьМакета.Параметры.ИтогоСуммаЗачетаПрописью=ОбщегоНазначения.СформироватьСуммуПрописью(ИтогоСуммаЗачета, МодульВалютногоУчета.ПолучитьВалюту("Бух"));
	ОбластьМакета.Параметры.ИтогоСуммаЗачета=ИтогоСуммаЗачета;
//	ОбластьМакета.Параметры.ИтогоСуммаНДС=ИтогоСуммаНДС;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если АктТрехсторонний Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПустая");
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСторона");
	ОбластьМакета.Параметры.НомерСтороны=НомерСтороны;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТЧ");
	ТабДокумент.Вывести(ОбластьМакета);
	ИтогоСуммаДокумента=0; ИтогоСуммаЗачета=0; ИтогоСуммаНДС=0;
	
	ДолгКредитора=ДанныеДокумента.ДолгКредитора.Выгрузить();
	Для Каждого СтрокаПродажи ИЗ ДолгКредитора Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТЧ");
		ОбластьМакета.Параметры.стрДокумент=?(ЗначениеЗаполнено(СтрокаПродажи.ДокументРасчетовСКонтрагентом),Строка(СтрокаПродажи.ДокументРасчетовСКонтрагентом)+" по договору "+Строка(СтрокаПродажи.ДоговорКонтрагента),СтрокаПродажи.ДоговорКонтрагента);
		СуммаДокумента=?(ЗначениеЗаполнено(СтрокаПродажи.ДокументРасчетовСКонтрагентом),СтрокаПродажи.ДокументРасчетовСКонтрагентом.СуммаДокумента,СтрокаПродажи.СуммаБух);
		ОбластьМакета.Параметры.СуммаДокумента=СуммаДокумента;
		ОбластьМакета.Параметры.СуммаЗачета=СтрокаПродажи.СуммаБух;
	//	ОбластьМакета.Параметры.СуммаНДС=СтрокаПродажи.СуммаНДС;
		ИтогоСуммаДокумента=ИтогоСуммаДокумента+СуммаДокумента;
		ИтогоСуммаЗачета=ИтогоСуммаЗачета+СтрокаПродажи.СуммаБух;
	//	ИтогоСуммаНДС=ИтогоСуммаНДС+СтрокаПродажи.СуммаНДС;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТЧ");
	ОбластьМакета.Параметры.ИтогоСуммаДокумента=ИтогоСуммаДокумента;
	ОбластьМакета.Параметры.ИтогоСуммаЗачетаПрописью=ОбщегоНазначения.СформироватьСуммуПрописью(ИтогоСуммаЗачета, МодульВалютногоУчета.ПолучитьВалюту("Бух"));
	ОбластьМакета.Параметры.ИтогоСуммаЗачета=ИтогоСуммаЗачета;
//	ОбластьМакета.Параметры.ИтогоСуммаНДС=ИтогоСуммаНДС;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ДанныеДокумента.Организация, ДанныеДокумента.Дата);
	СведенияОКонтрагенте  = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ДанныеДокумента.КонтрагентКредитор, ДанныеДокумента.Дата);
	
	ОбластьМакета.Параметры.НомерСтороны=НомерСтороны;
	ОбластьМакета.Параметры.Организация=СокрЛП(ДанныеДокумента.ОрганизацияНаименованиеПолное);
	ОбластьМакета.Параметры.ОрганизацияИНН=Строка(СведенияОбОрганизации.ИНН);
	ОбластьМакета.Параметры.ФактицескийАдресОрганизация=Строка(СведенияОбОрганизации.ФактическийАдрес);
	ОбластьМакета.Параметры.ТелефонОрганизация=Строка(СведенияОбОрганизации.Телефоны);
	
	ОбластьМакета.Параметры.Контрагент=СокрЛП(ДанныеДокумента.КонтрагентКредиторНаименованиеПолное);
	ОбластьМакета.Параметры.КонтрагентИНН=Строка(СведенияОКонтрагенте.ИНН);
	ОбластьМакета.Параметры.ФактическийАдресКонтрагент=Строка(СведенияОКонтрагенте.ФактическийАдрес);
	ОбластьМакета.Параметры.ТелефонКонтрагент=Строка(СведенияОКонтрагенте.Телефоны);
	
	ОбластьМакета.Параметры.Руководитель=Руководители.Руководитель;
	ОбластьМакета.Параметры.ГлавныйБухгалтер=Руководители.ГлавныйБухгалтер;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если АктТрехсторонний Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСторона3");
		СведенияОКонтрагенте  = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ДанныеДокумента.КонтрагентДебитор, ДанныеДокумента.Дата);
		
		ОбластьМакета.Параметры.Контрагент=СокрЛП(ДанныеДокумента.КонтрагентДебиторНаименованиеПолное);
		ОбластьМакета.Параметры.КонтрагентИНН=Строка(СведенияОКонтрагенте.ИНН);
		ОбластьМакета.Параметры.ФактическийАдресКонтрагент=Строка(СведенияОКонтрагенте.ФактическийАдрес);
		ОбластьМакета.Параметры.ТелефонКонтрагент=Строка(СведенияОКонтрагенте.Телефоны);
		
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;

	Возврат ТабДокумент;	
КонецФункции	

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	Если СтруктураПараметров.ИмяМакета = "КорректировкаДолга" Тогда		
		ТабДокумент = Печать_Документа(СтруктураПараметров);
	ИначеЕсли СтруктураПараметров.ИмяМакета = "Уведомление" Тогда		
		ТабДокумент = Печать_Уведомления(СтруктураПараметров);	
	ИначеЕсли СтруктураПараметров.ИмяМакета = "СоглашениеУступкаПраваТребования" Тогда		
		ТабДокумент = Печать_СоглашениеУступкаПраваТребования(СтруктураПараметров);	
	ИначеЕсли СтруктураПараметров.ИмяМакета = "СоглашениеПереводДолга" Тогда		
		ТабДокумент = Печать_СоглашениеПереводДолга(СтруктураПараметров);	
	ИначеЕсли СтруктураПараметров.ИмяМакета = "БухгалтерскаяСправка" Тогда			
		ТабДокумент = Печать_БухгалтерскойСправки(СтруктураПараметров, "Хозрасчетный");
	ИначеЕсли СтруктураПараметров.ИмяМакета = "ДоговорУступкиПраваТребования" Тогда			
		ТабДокумент = Печать_ДоговорУступкиПраваТребования(СтруктураПараметров);
	ИначеЕсли СтруктураПараметров.ИмяМакета = "АктВзаимозачета" Тогда			
		ТабДокумент = Печать_АктВзаимозачета(СтруктураПараметров);
	КонецЕсли;

	Возврат ТабДокумент;
КонецФункции
