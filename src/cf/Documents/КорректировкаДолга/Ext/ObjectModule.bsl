Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	СуммаДокумента=СуммыДолга.Итог("СуммаБух");
	СуммаУСН=СуммыДолга.Итог("СуммаУСН");
	
	
КонецПроцедуры

Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт
	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;
КонецФункции

Процедура ЗаполнитьОстаткамиДебиторскойЗадолженности() Экспорт
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент",  КонтрагентДебитор);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента,
	|	ВзаиморасчетыСКонтрагентами.СуммаБухОстаток КАК СуммаБух,
	|	ВзаиморасчетыСКонтрагентами.СуммаВалОстаток КАК СуммаВал,
	|	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК КурсВзаиморасчетов,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) КАК КратностьВзаиморасчетов
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаДокумента, Контрагент = &Контрагент И Организация = &Организация) КАК ВзаиморасчетыСКонтрагентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, ) КАК КурсыВалютСрезПоследних
	|		ПО ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыВалютСрезПоследних.Валюта
	|ГДЕ
	|	ВзаиморасчетыСКонтрагентами.СуммаБухОстаток > 0 ИЛИ ВзаиморасчетыСКонтрагентами.СуммаВалОстаток > 0
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока=СуммыДолга.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.ВидЗадолженности=Перечисления.ВидыЗадолженности.Дебиторская;
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаполнитьОстаткамиКредиторскойЗадолженности() Экспорт	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент",  КонтрагентДебитор);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента,
	|	-ВзаиморасчетыСКонтрагентами.СуммаБухОстаток КАК СуммаБух,
	|	-ВзаиморасчетыСКонтрагентами.СуммаВалОстаток КАК СуммаВал,
	|	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК КурсВзаиморасчетов,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) КАК КратностьВзаиморасчетов
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаДокумента, Контрагент = &Контрагент  И Организация = &Организация) КАК ВзаиморасчетыСКонтрагентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента) КАК КурсыВалютСрезПоследних
	|		ПО ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыВалютСрезПоследних.Валюта
	|ГДЕ
	|	ВзаиморасчетыСКонтрагентами.СуммаБухОстаток > 0 ИЛИ ВзаиморасчетыСКонтрагентами.СуммаВалОстаток > 0
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока=СуммыДолга.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.ВидЗадолженности=Перечисления.ВидыЗадолженности.Кредиторская;
	КонецЦикла;	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры м функции обеспечивающие проведение

Процедура ПодготовитьТаблицуСуммДолга(ТаблицаРасчетов, СтруктураШД)
	ТаблицаРасчетов.Колонки.Вставить(1, "Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаРасчетов.Колонки.Добавить("УвеличениеДолгаКонтрагента", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2));
	ТаблицаРасчетов.Колонки.Добавить("УменьшениеДолгаКонтрагента", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2));
	ТаблицаРасчетов.Колонки.Добавить("УвеличениеДолгаУпр", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2));
	ТаблицаРасчетов.Колонки.Добавить("УменьшениеДолгаУпр", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2));
	ТаблицаРасчетов.Колонки.Добавить("ЭтоВозврат", Новый ОписаниеТипов("Булево"));
	ТаблицаРасчетов.ЗаполнитьЗначения(СтруктураШД.КонтрагентДебитор, "Контрагент");
	
	Для каждого СтрокаТаблицы Из ТаблицаРасчетов Цикл
		СтрокаТаблицы.УвеличениеДолгаКонтрагента = ?(СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская,  0, СтрокаТаблицы.СуммаБух);
		СтрокаТаблицы.УменьшениеДолгаКонтрагента = ?(СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская, 0, СтрокаТаблицы.СуммаБух);

		СтрокаТаблицы.УвеличениеДолгаУпр = ?(СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская, 0, СтрокаТаблицы.СуммаВал);
		СтрокаТаблицы.УменьшениеДолгаУпр = ?(СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская, 0, СтрокаТаблицы.СуммаВал);

		//СтрокаТаблицы.УвеличениеДолгаУпр = ?(СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская, 0,
		//								 ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.Сумма, 
		//								 СтрокаТаблицы.ВалютаВзаиморасчетов, СтруктураШД.ВалютаУправленческогоУчета, 
		//								 СтрокаТаблицы.КурсВзаиморасчетов, СтруктураШД.КурсВалютыУправленческогоУчета, 
		//								 СтрокаТаблицы.КратностьВзаиморасчетов, СтруктураШД.КратностьВалютыУправленческогоУчета));

		//СтрокаТаблицы.УменьшениеДолгаУпр = ?(СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская, 0, 
		//								 ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.Сумма, 
		//								 СтрокаТаблицы.ВалютаВзаиморасчетов, СтруктураШД.ВалютаУправленческогоУчета, 
		//								 СтрокаТаблицы.КурсВзаиморасчетов, СтруктураШД.КурсВалютыУправленческогоУчета, 
		//								 СтрокаТаблицы.КратностьВзаиморасчетов, СтруктураШД.КратностьВалютыУправленческогоУчета));

		Если СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская Тогда
			СтрокаТаблицы.Контрагент = СтруктураШД.КонтрагентКредитор;
		КонецЕсли;
			
		Если СтрокаТаблицы.ДоговорВид = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком ИЛИ СтрокаТаблицы.ДоговорВид = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			СтрокаТаблицы.ЭтоВозврат = СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская;
			
		ИначеЕсли СтрокаТаблицы.ДоговорВид = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем ИЛИ СтрокаТаблицы.ДоговорВид = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером	Тогда
			СтрокаТаблицы.ЭтоВозврат = СтрокаТаблицы.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская;
		КонецЕсли; 
	КонецЦикла;
	
	Если ВидОперации=Перечисления.ВидыОперацийКорректировкаДолга.СписаниеЗадолженностиК тогда
		Для Каждого СтрокаКоллекции Из ТаблицаРасчетов Цикл
			СтрокаКоллекции.ВидЗадолженности=Перечисления.ВидыЗадолженности.Кредиторская;
			СтрокаКоллекции.УвеличениеДолгаКонтрагента=СтрокаКоллекции.УменьшениеДолгаКонтрагента;
			СтрокаКоллекции.УменьшениеДолгаКонтрагента=0;
			СтрокаКоллекции.УвеличениеДолгаУпр=СтрокаКоллекции.УменьшениеДолгаУпр;
			СтрокаКоллекции.УменьшениеДолгаУпр=0;
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьЗаполнениеТабличнойЧастиСуммыДолга(тзСуммыДолга, СтруктураШД, Отказ, Заголовок)
	//УправлениеВзаиморасчетами.ПроверитьОрганизациюДоговораВзаиморасчетовВТабличнойЧасти(ЭтотОбъект, "СуммыДолга", тзСуммыДолга, Отказ, Заголовок);
	
	ЭтоВалютныйДокумент = СтруктураШД.ВалютаДокумента <> СтруктураШД.ВалютаРегламентированногоУчета;
	
	Для каждого СтрокаТаблицы Из тзСуммыДолга Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДоговорКонтрагента) Тогда Продолжить; КонецЕсли;

        СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(СтрокаТаблицы.НомерСтроки) +""" табличной части ""Суммы долга"": ";

		Если ЗначениеЗаполнено(СтрокаТаблицы.ДоговорКонтрагента) И Организация <> СтрокаТаблицы.ДоговорОрганизация Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке+" выбран договор контрагента, не соответствующий организации, указанной в документе!", Отказ, Заголовок);
		КонецЕсли;
				
		Если СтрокаТаблицы.ВалютаВзаиморасчетов <> СтруктураШД.ВалютаДокумента Тогда
			Если ЭтоВалютныйДокумент  Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + " выбран договор с несоответствующей документу валютой взаиморасчетов.
									|Необходимо выбрать договор с валютой " + СтруктураШД.ВалютаДокумента
									+ ?(ЭтоВалютныйДокумент, "", " или договор в условных единицах"), Отказ, Заголовок);

			КонецЕсли; 
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Движения по регистрам

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ)
	//Движения по регистрам "Взаиморасчеты с контрагентам"
	ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистрам "НДС"
	ДвижениеПоРегистру_УчетНДС(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистру "КУДиР"
	ДвижениеПоРегистру_КУДиР(СтруктураШД, СтруктураТД, Отказ);

	//Движения по регистру "Расходы при УСН"
	ДвижениеПоРегистру_РасходыПриУСН(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ВзаиморасчетыСКонтрагентами") Тогда Возврат; КонецЕсли;

	тзДвижения=Движения.ВзаиморасчетыСКонтрагентами.ВыгрузитьКолонки();

	ПереносЗадолженности=ВидОперации=Перечисления.ВидыОперацийКорректировкаДолга.ПереносЗадолженности;
	Если ПереносЗадолженности Тогда
		ПереносДолгаНаДругогоКонтрагента = СтруктураШД.КонтрагентДебитор <> СтруктураШД.КонтрагентКредитор;
	КонецЕсли;

	тзСуммыДолга=СтруктураТД.СуммыДолга.Скопировать();
	Для каждого СтрокаКоллекции Из тзСуммыДолга Цикл
		Если СтрокаКоллекции.УвеличениеДолгаКонтрагента<>0 Тогда
			НоваяСтрока=тзДвижения.Добавить();
			НоваяСтрока.СуммаБух=СтрокаКоллекции.УвеличениеДолгаКонтрагента;
			НоваяСтрока.СуммаВал=СтрокаКоллекции.УвеличениеДолгаУпр;			
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления["Приход"];
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);

			Если ПереносЗадолженности Тогда
				НоваяСтрока=тзДвижения.Добавить();
				НоваяСтрока.ВидДвижения=ВидДвиженияНакопления["Расход"];
				НоваяСтрока.Организация=СтруктураШД.Организация;
				НоваяСтрока.Контрагент=СтруктураШД.КонтрагентКредитор;
				НоваяСтрока.ДоговорКонтрагента=СтруктураШД.ДоговорКонтрагента;
				НоваяСтрока.СуммаБух=СтрокаКоллекции.УвеличениеДолгаКонтрагента;
				НоваяСтрока.СуммаВал=СтрокаКоллекции.УвеличениеДолгаУпр;

				//НоваяСтрока.СуммаБух = СтрокаКоллекции.УвеличениеДолгаУпр; //Сумма упр всегда должна быть в валюте бух.учета.
				//НоваяСтрока.СуммаВал = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаКоллекции.Сумма,
				//						СтрокаКоллекции.ВалютаВзаиморасчетов, СтруктураШД.ВалютаВзаиморасчетов, //ДоговорКонтрагентаВалютаВзаиморасчетов
				//						СтрокаКоллекции.КурсВзаиморасчетов, СтруктураШД.ДоговорКонтрагентаКурсВзаиморасчетов,
				//						СтрокаКоллекции.КратностьВзаиморасчетов, СтруктураШД.ДоговорКонтрагентаКратностьВзаиморасчетов);
			КонецЕсли;
		КонецЕсли;

		Если СтрокаКоллекции.УменьшениеДолгаКонтрагента<>0 Тогда
			НоваяСтрока=тзДвижения.Добавить();
			НоваяСтрока.СуммаВал=СтрокаКоллекции.УменьшениеДолгаКонтрагента;
			НоваяСтрока.СуммаБух=СтрокаКоллекции.УменьшениеДолгаУпр;			
			НоваяСтрока.ВидДвижения=ВидДвиженияНакопления["Расход"];
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);

			Если ПереносЗадолженности Тогда
				НоваяСтрока=тзДвижения.Добавить();
				НоваяСтрока.ВидДвижения=ВидДвиженияНакопления["Приход"];
				НоваяСтрока.Организация=СтруктураШД.Организация;
				НоваяСтрока.Контрагент=СтруктураШД.КонтрагентКредитор;
				НоваяСтрока.ДоговорКонтрагента=СтруктураШД.ДоговорКонтрагента;
				НоваяСтрока.СуммаБух=СтрокаКоллекции.УменьшениеДолгаКонтрагента;
				НоваяСтрока.СуммаВал=СтрокаКоллекции.УменьшениеДолгаУпр;
				
				//НоваяСтрока.СуммаБух = СтрокаКоллекции.УменьшениеДолгаУпр; //Сумма упр всегда должна быть в валюте бух.учета.
				//НоваяСтрока.СуммаВал = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаКоллекции.Сумма,
				//						СтрокаКоллекции.ВалютаВзаиморасчетов, СтруктураШД.ВалютаВзаиморасчетов, //ДоговорКонтрагентаВалютаВзаиморасчетов
				//						СтрокаКоллекции.КурсВзаиморасчетов, СтруктураШД.ДоговорКонтрагентаКурсВзаиморасчетов,
				//						СтрокаКоллекции.КратностьВзаиморасчетов, СтруктураШД.ДоговорКонтрагентаКратностьВзаиморасчетов);
			КонецЕсли;			
		КонецЕсли;		
	КонецЦикла;

	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	
	Движения.ВзаиморасчетыСКонтрагентами.Загрузить(тзДвижения);	
КонецПроцедуры

Процедура ДвижениеПоРегистру_РасходыПриУСН(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "РасходыПриУСН") Тогда Возврат; КонецЕсли;

	УчетнаяПолитика=СтруктураШД.УчетнаяПолитика;
	Если УчетнаяПолитика.ОбъектНалогообложенияУСН=Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда	Возврат; КонецЕсли;	
	
	СистемаНалогообложения=УчетнаяПолитика.СистемаНалогообложения;
	Если СистемаНалогообложения=Перечисления.СистемыНалогообложения.Упрощенная Или СистемаНалогообложения=Перечисления.СистемыНалогообложения.Упрощенная_ЕНВД Тогда
		тзДанные=СтруктураТД.СуммыДолга.Скопировать();
		тзДанные.Свернуть("ДоговорКонтрагента,ТОП,НеПринимаетсяУСН,НомерСтрокиТабличнойЧасти,ВидТабличнойЧасти","СуммаБух, СуммаУСН");
		тзДанные.Колонки.Добавить("ДоговорКонтрагентаДебитор");
		тзДанные.ЗаполнитьЗначения(ДоговорКонтрагента,"ДоговорКонтрагентаДебитор");
		тзДанные.Колонки.Добавить("НеПринимаетсяУСНДебитор");
		тзДанные.ЗаполнитьЗначения(НеПринимаетсяУСН,"НеПринимаетсяУСНДебитор");
		
		Если ВидОперации=Перечисления.ВидыОперацийКорректировкаДолга.ПереносЗадолженности Тогда	
			Для Каждого СтрокаКоллекции ИЗ тзДанные Цикл
				Если СтрокаКоллекции.ДоговорКонтрагента.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда 
					НоваяСтрока=Движения.РасходыПриУСН.Добавить();
					НоваяСтрока.ТОП=СтрокаКоллекции.ТОП;
					НоваяСтрока.Активность=Истина;
					НоваяСтрока.Период=Дата;
					НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
					НоваяСтрока.Организация=Организация;
					НоваяСтрока.РасчетныйДокумент=Ссылка;
					НоваяСтрока.ДоговорКонтрагента=СтрокаКоллекции.ДоговорКонтрагента;
					НоваяСтрока.Сумма=СтрокаКоллекции.СуммаБух;
					НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.Куплено;
					НоваяСтрока.НеПринимаетсяУСН=СтрокаКоллекции.НеПринимаетсяУСН;
					НоваяСтрока.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтрокиТабличнойЧасти;
					НоваяСтрока.ВидТабличнойЧасти=СтрокаКоллекции.ВидТабличнойЧасти;
				КонецЕсли;
				Если СтрокаКоллекции.ДоговорКонтрагентаДебитор.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда 
					НоваяСтрока=Движения.РасходыПриУСН.Добавить();
					НоваяСтрока.ТОП=СтрокаКоллекции.ТОП;
					НоваяСтрока.Активность=Истина;
					НоваяСтрока.Период=Дата;
					НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
					НоваяСтрока.Организация=Организация;
					НоваяСтрока.РасчетныйДокумент=Ссылка;
					НоваяСтрока.ДоговорКонтрагента=СтрокаКоллекции.ДоговорКонтрагентаДебитор;
					НоваяСтрока.Сумма=СтрокаКоллекции.СуммаБух;
					НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.ПредоплатаПоставщику;
					НоваяСтрока.НеПринимаетсяУСН=СтрокаКоллекции.НеПринимаетсяУСНДебитор;
					НоваяСтрока.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтрокиТабличнойЧасти;
					НоваяСтрока.ВидТабличнойЧасти=СтрокаКоллекции.ВидТабличнойЧасти;
				КонецЕсли;
				Если СтрокаКоллекции.ДоговорКонтрагента.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.Прочее И СтрокаКоллекции.СуммаУСН<>0 И СтрокаКоллекции.НеПринимаетсяУСН=Ложь Тогда 
					НоваяСтрока=Движения.РасходыПриУСН.Добавить();
					НоваяСтрока.ТОП=СтрокаКоллекции.ТОП;
					НоваяСтрока.Активность=Истина;
					НоваяСтрока.Период=Дата;
					НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
					НоваяСтрока.Организация=Организация;
					НоваяСтрока.РасчетныйДокумент=Ссылка;
					НоваяСтрока.ДоговорКонтрагента=СтрокаКоллекции.ДоговорКонтрагента;
					НоваяСтрока.Сумма=СтрокаКоллекции.СуммаБух;
					НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.КупленоОплаченоПоставщику;
					НоваяСтрока.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтрокиТабличнойЧасти;
					НоваяСтрока.ВидТабличнойЧасти=СтрокаКоллекции.ВидТабличнойЧасти;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
		
		Если ВидОперации=Перечисления.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности Тогда 
			Для Каждого СтрокаКоллекции ИЗ тзДанные Цикл
				Если СтрокаКоллекции.ДоговорКонтрагента.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
					НоваяСтрока=Движения.РасходыПриУСН.Добавить();
					НоваяСтрока.ТОП=СтрокаКоллекции.ТОП;
					НоваяСтрока.Активность=Истина;
					НоваяСтрока.Период=Дата;
					НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
					НоваяСтрока.Организация=Организация;
					НоваяСтрока.РасчетныйДокумент=Ссылка;
					НоваяСтрока.ДоговорКонтрагента=СтрокаКоллекции.ДоговорКонтрагента;
					НоваяСтрока.Сумма=СтрокаКоллекции.СуммаБух;
					НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.Куплено;
					НоваяСтрока.НеПринимаетсяУСН=СтрокаКоллекции.НеПринимаетсяУСН;
					НоваяСтрока.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтрокиТабличнойЧасти;
					НоваяСтрока.ВидТабличнойЧасти=СтрокаКоллекции.ВидТабличнойЧасти;
				КонецЕсли;
				Если СтрокаКоллекции.ДоговорКонтрагента.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.Прочее И СтрокаКоллекции.СуммаУСН<>0 Тогда
					НоваяСтрока=Движения.РасходыПриУСН.Добавить();
					НоваяСтрока.ТОП=СтрокаКоллекции.ТОП;
					НоваяСтрока.Активность=Истина;
					НоваяСтрока.Период=Дата;
					НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
					НоваяСтрока.Организация=Организация;
					НоваяСтрока.РасчетныйДокумент=Ссылка;
					НоваяСтрока.ДоговорКонтрагента=СтрокаКоллекции.ДоговорКонтрагента;
					НоваяСтрока.Сумма=СтрокаКоллекции.СуммаБух;
					НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.КупленоОплаченоПоставщику;
					НоваяСтрока.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтрокиТабличнойЧасти;
					НоваяСтрока.ВидТабличнойЧасти=СтрокаКоллекции.ВидТабличнойЧасти;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
		
		Если ВидОперации=Перечисления.ВидыОперацийКорректировкаДолга.СписаниеЗадолженностиК Тогда 
			Для Каждого СтрокаКоллекции ИЗ тзДанные Цикл
				Если СтрокаКоллекции.ДоговорКонтрагента.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
					НоваяСтрока=Движения.РасходыПриУСН.Добавить();
					НоваяСтрока.ТОП=СтрокаКоллекции.ТОП;
					НоваяСтрока.Активность=Истина;
					НоваяСтрока.Период=Дата;
					НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
					НоваяСтрока.Организация=Организация;
					НоваяСтрока.РасчетныйДокумент=Ссылка;
					НоваяСтрока.ДоговорКонтрагента=СтрокаКоллекции.ДоговорКонтрагента;
					НоваяСтрока.Сумма=СтрокаКоллекции.СуммаБух;
					НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.ПредоплатаПоставщику;
					НоваяСтрока.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтрокиТабличнойЧасти;
					НоваяСтрока.ВидТабличнойЧасти=СтрокаКоллекции.ВидТабличнойЧасти;
				КонецЕсли;
				Если СтрокаКоллекции.ДоговорКонтрагента.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.Прочее И СтрокаКоллекции.СуммаУСН<>0 И СтрокаКоллекции.НеПринимаетсяУСН=Ложь Тогда
					НоваяСтрока=Движения.РасходыПриУСН.Добавить();
					НоваяСтрока.ТОП=СтрокаКоллекции.ТОП;
					НоваяСтрока.Активность=Истина;
					НоваяСтрока.Период=Дата;
					НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
					НоваяСтрока.Организация=Организация;
					НоваяСтрока.РасчетныйДокумент=Ссылка;
					НоваяСтрока.ДоговорКонтрагента=СтрокаКоллекции.ДоговорКонтрагента;
					НоваяСтрока.Сумма=СтрокаКоллекции.СуммаБух;
					НоваяСтрока.СтатусыОплатыРасходов=Перечисления.СтатусыРасходовУСН.КупленоОплаченоПоставщику;
					НоваяСтрока.НомерСтрокиТабличнойЧасти=СтрокаКоллекции.НомерСтрокиТабличнойЧасти;
					НоваяСтрока.ВидТабличнойЧасти=СтрокаКоллекции.ВидТабличнойЧасти;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДвижениеПоРегистру_КУДиР(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "КнигаУчетаДоходовИРасходов") Тогда Возврат; КонецЕсли;
	
	Если ВидОперации=Перечисления.ВидыОперацийКорректировкаДолга.СписаниеЗадолженностиК Тогда Возврат; КонецЕсли;
	Если ВидОперации=Перечисления.ВидыОперацийКорректировкаДолга.ПереносЗадолженности Тогда	Возврат; КонецЕсли;

	СистемаНалогообложения=СтруктураШД.УчетнаяПолитика.СистемаНалогообложения;
	Если СистемаНалогообложения=Перечисления.СистемыНалогообложения.Упрощенная Или СистемаНалогообложения=Перечисления.СистемыНалогообложения.Упрощенная_ЕНВД Тогда
		тзДанные=СтруктураТД.СуммыДолга.СкопироватьКолонки();
		Для Каждого СтрокаКоллекции ИЗ СтруктураТД.СуммыДолга Цикл
			Если СтрокаКоллекции.ДоговорКонтрагента.ВидДоговора<>Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда Продолжить; КонецЕсли;
			ЗаполнитьЗначенияСвойств(тзДанные.Добавить(), СтрокаКоллекции);
		КонецЦикла;
		тзДанные.Свернуть("ДоговорКонтрагента,ТОП","СуммаБух,СуммаУСН");
		НалоговыйУчет.ДвиженияДенежныхСредствКУДиР(Ссылка, ДополнительныеСвойства, СтруктураШД, тзДанные, "Доходы");
	КонецЕсли;
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
// Проведение по регистрам (по нескольким регистрам одного типа)

Процедура ДвижениеПоРегистру_УчетВзаиморасчетов(СтруктураШД, СтруктураТД, Отказ)
	ДвижениеПоРегистру_ВзаиморасчетыСКонтрагентами(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_УчетНДС(СтруктураШД, СтруктураТД, Отказ)
	Заголовок=ДополнительныеСвойства.Заголовок;
	тзСуммыДолга=СтруктураТД.СуммыДолга;
	
	// Получим таблицы значений, совпадающие со струкутрой набора записей регистра.
	ТаблицаДвижений_НДСРасчетыСПокупателями=Движения.НДСРасчетыСПокупателями.Выгрузить();
	ТаблицаДвижений_НДСРасчетыСПокупателями.Очистить();

	ТаблицаДвижений_НДСРасчетыСПоставщиками=Движения.НДСРасчетыСПоставщиками.Выгрузить();
	ТаблицаДвижений_НДСРасчетыСПоставщиками.Очистить();

	Если СтруктураШД.ВидОперации=Перечисления.ВидыОперацийКорректировкаДолга.ПереносЗадолженности 
		И (СтруктураШД.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком
		ИЛИ СтруктураШД.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем)
		Тогда
		
		Если СтруктураШД.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
			ТаблицаПереноса = ТаблицаДвижений_НДСРасчетыСПоставщиками.СкопироватьКолонки();
		ИначеЕсли СтруктураШД.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
			ТаблицаПереноса = ТаблицаДвижений_НДСРасчетыСПокупателями.СкопироватьКолонки();
		КонецЕсли;
		СохранятьДокументРасчетов = (СтруктураШД.КонтрагентДебитор = СтруктураШД.КонтрагентКредитор);
	Иначе
		ТаблицаПереноса = Неопределено;
	КонецЕсли;
	
	// Разобьем на таблицы по договорам с покупателями и поставщиками,
	// договора типа "Прочее" по взаиморасчетам для целей НДС не проводим.
	// Корректировки долга с комитентами и комиссионерами тоже не отражаем,
	// потому что в документе недостаточно информации о причине корректировки.
	Для каждого СтрокаТаблицыДолгов Из тзСуммыДолга Цикл
	
		Если СтрокаТаблицыДолгов.ДоговорВид = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем 
			ИЛИ (СтрокаТаблицыДолгов.ДоговорВид = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом
			И СтрокаТаблицыДолгов.ВидЗадолженности = перечисления.ВидыЗадолженности.Дебиторская) Тогда
			
            ТекущаяТаблица = ТаблицаДвижений_НДСРасчетыСПокупателями;
			Если СтрокаТаблицыДолгов.УвеличениеДолгаКонтрагента <> 0 Тогда
				СтрокаТаблицыДвижений=ТекущаяТаблица.Добавить();
				СтрокаТаблицыДвижений.Организация        = СтруктураШД.Организация;
				СтрокаТаблицыДвижений.Покупатель         = СтрокаТаблицыДолгов.Контрагент;
				СтрокаТаблицыДвижений.ДоговорКонтрагента = СтрокаТаблицыДолгов.ДоговорКонтрагента;
				СтрокаТаблицыДвижений.ТипДоговораКонтрагента = СтрокаТаблицыДолгов.ТипДоговораКонтрагента;
				СтрокаТаблицыДвижений.Сумма 			 = СтрокаТаблицыДолгов.СуммаБух;
				СтрокаТаблицыДвижений.Документ			 = ?(Не ЗначениеЗаполнено(СтрокаТаблицыДолгов.ДокументРасчетовСКонтрагентом), СтруктураШД.Ссылка, СтрокаТаблицыДолгов.ДокументРасчетовСКонтрагентом);
				СтрокаТаблицыДвижений.ВидДвижения		 = ВидДвиженияНакопления.Приход;
			КонецЕсли;

			Если СтрокаТаблицыДолгов.УменьшениеДолгаКонтрагента <> 0 Тогда
				СтрокаТаблицыДвижений=ТекущаяТаблица.Добавить();
				СтрокаТаблицыДвижений.Организация        = СтруктураШД.Организация;
				СтрокаТаблицыДвижений.Покупатель         = СтрокаТаблицыДолгов.Контрагент;
				СтрокаТаблицыДвижений.ДоговорКонтрагента = СтрокаТаблицыДолгов.ДоговорКонтрагента;
				СтрокаТаблицыДвижений.ТипДоговораКонтрагента = СтрокаТаблицыДолгов.ТипДоговораКонтрагента;
				СтрокаТаблицыДвижений.Сумма 			 = СтрокаТаблицыДолгов.СуммаБух;
				СтрокаТаблицыДвижений.Документ			 = ?(Не ЗначениеЗаполнено(СтрокаТаблицыДолгов.ДокументРасчетовСКонтрагентом), СтруктураШД.Ссылка, СтрокаТаблицыДолгов.ДокументРасчетовСКонтрагентом);
				СтрокаТаблицыДвижений.ВидДвижения		 = ВидДвиженияНакопления.Расход;
			КонецЕсли;

		ИначеЕсли СтрокаТаблицыДолгов.ДоговорВид = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком 
			ИЛИ (СтрокаТаблицыДолгов.ДоговорВид = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером 
			И СтрокаТаблицыДолгов.ВидЗадолженности = перечисления.ВидыЗадолженности.Кредиторская) Тогда

            ТекущаяТаблица = ТаблицаДвижений_НДСРасчетыСПоставщиками;
			Если СтрокаТаблицыДолгов.УвеличениеДолгаКонтрагента <> 0 Тогда
				СтрокаТаблицыДвижений=ТекущаяТаблица.Добавить();
				СтрокаТаблицыДвижений.Организация        = СтруктураШД.Организация;
				СтрокаТаблицыДвижений.Поставщик          = СтрокаТаблицыДолгов.Контрагент;
				СтрокаТаблицыДвижений.ДоговорКонтрагента = СтрокаТаблицыДолгов.ДоговорКонтрагента;
				СтрокаТаблицыДвижений.ТипДоговораКонтрагента = СтрокаТаблицыДолгов.ТипДоговораКонтрагента;
				СтрокаТаблицыДвижений.Сумма 			 = СтрокаТаблицыДолгов.СуммаБух;
				СтрокаТаблицыДвижений.Документ			 = ?(Не ЗначениеЗаполнено(СтрокаТаблицыДолгов.ДокументРасчетовСКонтрагентом), СтруктураШД.Ссылка, СтрокаТаблицыДолгов.ДокументРасчетовСКонтрагентом);
				СтрокаТаблицыДвижений.ВидДвижения		 = ВидДвиженияНакопления.Расход;
			КонецЕсли;

			Если СтрокаТаблицыДолгов.УменьшениеДолгаКонтрагента <> 0 Тогда
				СтрокаТаблицыДвижений=ТекущаяТаблица.Добавить();
				СтрокаТаблицыДвижений.Организация        = СтруктураШД.Организация;
				СтрокаТаблицыДвижений.Поставщик          = СтрокаТаблицыДолгов.Контрагент;
				СтрокаТаблицыДвижений.ДоговорКонтрагента = СтрокаТаблицыДолгов.ДоговорКонтрагента;
				СтрокаТаблицыДвижений.ТипДоговораКонтрагента = СтрокаТаблицыДолгов.ТипДоговораКонтрагента;
				СтрокаТаблицыДвижений.Сумма 			 = СтрокаТаблицыДолгов.СуммаБух;
				СтрокаТаблицыДвижений.Документ			 = ?(Не ЗначениеЗаполнено(СтрокаТаблицыДолгов.ДокументРасчетовСКонтрагентом), СтруктураШД.Ссылка, СтрокаТаблицыДолгов.ДокументРасчетовСКонтрагентом);
				СтрокаТаблицыДвижений.ВидДвижения		 = ВидДвиженияНакопления.Приход;
			КонецЕсли;
		КонецЕсли;
		
		Если ТаблицаПереноса <> Неопределено И СтрокаТаблицыДвижений <> Неопределено Тогда
			СтрокаПереноса = ТаблицаПереноса.Добавить();
			//ЗаполнитьЗначенияСвойств(СтрокаПереноса, СтрокаТаблицыДвижений, "Организация, ВалютаРасчетов,Сумма,ВалютнаяСумма");
			ЗаполнитьЗначенияСвойств(СтрокаПереноса, СтрокаТаблицыДвижений, "Организация,Сумма");

			Если СохранятьДокументРасчетов И СтрокаТаблицыДолгов.ДоговорВид = СтруктураШД.ВидДоговора Тогда
				СтрокаПереноса.Документ = СтрокаТаблицыДвижений.Документ;
			Иначе
				СтрокаПереноса.Документ = СтруктураШД.Ссылка;
			КонецЕсли;

			СтрокаПереноса.ВидДвижения = ?((не СтрокаТаблицыДолгов.УвеличениеДолгаКонтрагента = 0)  
										= (СтруктураШД.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем),
										ВидДвиженияНакопления.Расход,
										ВидДвиженияНакопления.Приход);
		КонецЕсли;
		
		Если ТаблицаПереноса <> Неопределено И СтрокаТаблицыДвижений = Неопределено Тогда
			СтрокаПереноса = ТаблицаПереноса.Добавить();
			Если СохранятьДокументРасчетов И СтрокаТаблицыДолгов.ДоговорВид = СтруктураШД.ВидДоговора Тогда
				СтрокаПереноса.Документ = СтрокаТаблицыДвижений.Документ;
			Иначе
				СтрокаПереноса.Документ = СтруктураШД.Ссылка;
			КонецЕсли;

			СтрокаПереноса.Организация   	= СтруктураШД.Организация;
			СтрокаПереноса.Сумма 			= СтрокаТаблицыДолгов.СуммаБух;
			СтрокаПереноса.Документ		= ?(Не ЗначениеЗаполнено(СтрокаТаблицыДолгов.ДокументРасчетовСКонтрагентом), СтруктураШД.Ссылка, СтрокаТаблицыДолгов.ДокументРасчетовСКонтрагентом);

			СтрокаПереноса.ВидДвижения = ?((не СтрокаТаблицыДолгов.УвеличениеДолгаКонтрагента = 0)  
										= (СтруктураШД.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем),
										ВидДвиженияНакопления.Расход,
										ВидДвиженияНакопления.Приход);
		КонецЕсли;

		СтрокаТаблицыДвижений=Неопределено;							
	КонецЦикла;
	
	Если Не ТаблицаПереноса = Неопределено Тогда
		Если ТаблицаПереноса.Количество()=0 Тогда
			НоваяСтрока=ТаблицаПереноса.Добавить();
			НоваяСтрока.Организация   	= СтруктураШД.Организация;
			НоваяСтрока.Сумма 			= тзСуммыДолга[0].СуммаБух;
			НоваяСтрока.Документ		= ?(Не ЗначениеЗаполнено(тзСуммыДолга[0].ДокументРасчетовСКонтрагентом), СтруктураШД.Ссылка, тзСуммыДолга[0].ДокументРасчетовСКонтрагентом);
		КонецЕсли; 
		//ТаблицаПереноса.Свернуть("Организация,ДоговорКонтрагента,ТипДоговораКонтрагента,Документ,ВалютаРасчетов,ВидДвижения","Сумма, ВалютнаяСумма");
		ТаблицаПереноса.Свернуть("Организация,ДоговорКонтрагента,ТипДоговораКонтрагента,Документ,ВидДвижения","Сумма");
		Если СтруктураШД.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
			КолонкаКонтрагента = ТаблицаПереноса.Колонки.Добавить("Поставщик");
			ТаблицаПереноса.ЗаполнитьЗначения(СтруктураШД.КонтрагентКредитор,КолонкаКонтрагента.Имя);
			ТаблицаПереноса.ЗаполнитьЗначения(СтруктураШД.ДоговорКонтрагента,"ДоговорКонтрагента");
			ТаблицаПереноса.ЗаполнитьЗначения(СтруктураШД.ТипДоговораКонтрагента,"ТипДоговораКонтрагента");
			ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПереноса,ТаблицаДвижений_НДСРасчетыСПоставщиками);
		Иначе
			КолонкаКонтрагента = ТаблицаПереноса.Колонки.Добавить("Покупатель");
			ТаблицаПереноса.ЗаполнитьЗначения(СтруктураШД.КонтрагентКредитор,КолонкаКонтрагента.Имя);
			ТаблицаПереноса.ЗаполнитьЗначения(СтруктураШД.ДоговорКонтрагента,"ДоговорКонтрагента");
			ТаблицаПереноса.ЗаполнитьЗначения(СтруктураШД.ТипДоговораКонтрагента,"ТипДоговораКонтрагента");
			ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПереноса, ТаблицаДвижений_НДСРасчетыСПокупателями);
		КонецЕсли; 
	КонецЕсли; 
	
	Если ТаблицаДвижений_НДСРасчетыСПоставщиками.Количество()>0 Тогда
		Если УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "НДСРасчетыСПоставщиками") Тогда
			Движения.НДСРасчетыСПоставщиками.мПериод          = СтруктураШД.Дата;
			Движения.НДСРасчетыСПоставщиками.мТаблицаДвижений = ТаблицаДвижений_НДСРасчетыСПоставщиками;
			Движения.НДСРасчетыСПоставщиками.ДобавитьДвижение();
		КонецЕсли;
	КонецЕсли; 	
	
	Если ТаблицаДвижений_НДСРасчетыСПокупателями.Количество() > 0 Тогда
		Если УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "НДСРасчетыСПокупателями") Тогда
			Движения.НДСРасчетыСПокупателями.мПериод          = СтруктураШД.Дата;
			Движения.НДСРасчетыСПокупателями.мТаблицаДвижений = ТаблицаДвижений_НДСРасчетыСПокупателями;
			Движения.НДСРасчетыСПокупателями.ДобавитьДвижение();
		КонецЕсли;
	КонецЕсли;
	
Конецпроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ОбработкаЗаполнения(Основание)
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.КорректировкаДолга") Тогда
		ОрганизацияДебитор = ЗаполнениеДокументов.ОрганизацияПоКонтрагенту(Основание.КонтрагентДебитор);
		Если НЕ ЗначениеЗаполнено(ОрганизацияДебитор) Тогда
			ОрганизацияКредитор = ЗаполнениеДокументов.ОрганизацияПоКонтрагенту(Основание.КонтрагентКредитор);
			Если НЕ ЗначениеЗаполнено(ОрганизацияКредитор) Тогда Возврат; КонецЕсли;
			Организация        = ОрганизацияКредитор;
			КонтрагентДебитор  = ЗаполнениеДокументов.КонтрагентПоОрганизации(Основание.Организация);
			КонтрагентКредитор = Основание.КонтрагентДебитор;  
		Иначе
			Организация = ОрганизацияДебитор;
			КонтрагентКредитор = ЗаполнениеДокументов.КонтрагентПоОрганизации(Основание.Организация);
			КонтрагентДебитор  = Основание.КонтрагентКредитор;  
		КонецЕсли;
		
		Для каждого СтрокаОснования Из Основание.СуммыДолга Цикл
			НоваяСтрока=СуммыДолга.Добавить();
			НоваяСтрока.ВидЗадолженности=?(СтрокаОснования.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская, Перечисления.ВидыЗадолженности.Кредиторская, Перечисления.ВидыЗадолженности.Дебиторская);

			текКонтрагент=?(НоваяСтрока.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская, КонтрагентДебитор, КонтрагентКредитор);
			
			Запрос=Новый Запрос;
			Запрос.УстановитьПараметр("Контрагент", текКонтрагент);
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.Текст = "
			|ВЫБРАТЬ 
			|	ИсточникДанных.Ссылка 
			|ИЗ 
			|	Справочник.ДоговорыКонтрагентов Как ИсточникДанных
			|ГДЕ 
			|	ИсточникДанных.Владелец=&Контрагент И ИсточникДанных.Организация=&Организация
			|";
			Выборка=Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				НоваяСтрока.ДоговорКонтрагента = Выборка.Ссылка;
			Иначе 
				ОбщегоНазначения.СообщитьОбОшибке("У контрагента "+текКонтрагент+" отсутствует договор на поставку с организацией "+Организация+".");
			КонецЕсли;
			НоваяСтрока.КурсВзаиморасчетов      = СтрокаОснования.КурсВзаиморасчетов;
			НоваяСтрока.КратностьВзаиморасчетов = СтрокаОснования.КратностьВзаиморасчетов;
			НоваяСтрока.СуммаБух                = СтрокаОснования.СуммаБух;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();
	
	//Формирование значений реквизитов шапки документа
	СтруктураШД=УправлениеДокументамиСервер.ПолучитьСтруктуруРеквизитовШапки(ЭтотОбъект);
	Если СтруктураШД.ВидОперации=Перечисления.ВидыОперацийКорректировкаДолга.ПереносЗадолженности Тогда
		Если СтруктураШД.ВалютаВзаиморасчетов=СтруктураШД.ВалютаДокумента Тогда
			СтруктураШД.Вставить("ДоговорКонтрагентаКурсВзаиморасчетов",      СтруктураШД.КурсВзаиморасчетов);
			СтруктураШД.Вставить("ДоговорКонтрагентаКратностьВзаиморасчетов", СтруктураШД.КратностьВзаиморасчетов);
		Иначе
			СтруктураКурса = МодульВалютногоУчета.КурсВалюты(СтруктураШД.ВалютаВзаиморасчетов, СтруктураШД.Дата);
			СтруктураШД.Вставить("ДоговорКонтрагентаКурсВзаиморасчетов",      СтруктураКурса.Курс);
			СтруктураШД.Вставить("ДоговорКонтрагентаКратностьВзаиморасчетов", СтруктураКурса.Кратность);
		КонецЕсли;
	КонецЕсли;

	//Формирование значений реквизитов табличных частей документа
	стрТекстЗапрос="
	|Док.ДоговорКонтрагента.Организация Как ДоговорОрганизация,
	|Док.ДоговорКонтрагента.ВидДоговора Как ДоговорВид,
	|Док.ДоговорКонтрагента.Владелец Как КонтрагентДоговора,
	|Док.ДоговорКонтрагента.ВалютаВзаиморасчетов Как ВалютаВзаиморасчетов,
	|Док.ДоговорКонтрагента.ВестиПлатежныйКалендарь Как ВестиПлатежныйКалендарь,
	|";	
	тзСуммыДолга=УправлениеДокументамиСервер.ПолучитьСтруктуруТЧ(ЭтотОбъект, "СуммыДолга", стрТекстЗапрос);

	ПодготовитьТаблицуСуммДолга(тзСуммыДолга, СтруктураШД);
	ПроверитьЗаполнениеТабличнойЧастиСуммыДолга(тзСуммыДолга, СтруктураШД, Отказ, Заголовок);
	
	СтруктураТД=Новый Структура;
	СтруктураТД.Вставить("СуммыДолга", тзСуммыДолга);

	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);