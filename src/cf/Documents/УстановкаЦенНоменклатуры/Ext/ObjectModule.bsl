Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт
	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;
КонецФункции

Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт 
	Информация="";
	Для Каждого ТекущийТип Из ТипыЦен Цикл
		Если НЕ ПустаяСтрока(Информация) Тогда
			Информация=Информация+", ";
		КонецЕсли;
		Информация=Информация+СокрЛП(ТекущийТип.ТипЦен);
	КонецЦикла;	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка таблиц для проведения

Функция СформироватьТаблицу_Товары(СтруктураШД, Отказ, Заголовок)
	тзДанные=Товары.ВыгрузитьКолонки();
	тзДанные.Колонки.Добавить("Услуга");
	тзДанные.Колонки.Добавить("Набор");
	тзДанные.Колонки.Добавить("БазовыйТипЦен");
	тзДанные.Колонки.Добавить("Рассчитывается");
	тзДанные.Колонки.Добавить("Период");
	тзДанные.Колонки.Добавить("Активность");

	Для каждого СтрокаКоллекции Из Товары Цикл
		Если НеПроводитьНулевыеЗначения Тогда
			Рассчитывается=Ложь;
			Если УправлениеМетаданными.ЕстьРеквизит("Рассчитывается", СтрокаКоллекции.ТипЦен.Метаданные()) Тогда
				Рассчитывается=СтрокаКоллекции.ТипЦен.Рассчитывается;
			КонецЕсли;			
			Если НЕ Рассчитывается И СтрокаКоллекции.Цена=0 Тогда Продолжить; КонецЕсли;
		КонецЕсли;

		НоваяСтрока=тзДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		
		НоваяСтрока.Услуга=СтрокаКоллекции.Номенклатура.Услуга;
		НоваяСтрока.Набор=СтрокаКоллекции.Номенклатура.Набор;
		
		Если Контрагент.Пустая() Тогда
			НоваяСтрока.Рассчитывается=НоваяСтрока.ТипЦен.Рассчитывается;
			НоваяСтрока.БазовыйТипЦен=НоваяСтрока.ТипЦен.БазовыйТипЦен;
		КонецЕсли; 
		
		СтрокаНачалаСообщенияОбОшибке="В строке номер """+ СокрЛП(НоваяСтрока.НомерСтроки)+""" табличной части для типа цен """ +СокрЛП(НоваяСтрока.ТипЦен)+""" ";
		// Единица для товаров.
		Если ЗначениеЗаполнено(НоваяСтрока.Номенклатура) И Не НоваяСтрока.Услуга И НЕ ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмерения) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не заполнена единица измерения.", Отказ, Заголовок);
		КонецЕсли;
		// Наборов-пакетов здесь быть не должно.
		Если ЗначениеЗаполнено(НоваяСтрока.Номенклатура) И НоваяСтрока.Набор Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке+"содержится набор-пакет. Наборов-пакетов здесь быть не должно!", Отказ, Заголовок);
		КонецЕсли;
		// Проверить заполнение способа расчета для динамических цен, рассчитываемых и хранимых цен.
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.СпособРасчетаЦены) И (НоваяСтрока.Рассчитывается = Истина Или ЗначениеЗаполнено(НоваяСтрока.БазовыйТипЦен)) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не заполнен способ расчета цены.", Отказ, Заголовок);
		КонецЕсли;		
	КонецЦикла;
	
	тзДанные.ЗаполнитьЗначения(Дата, "Период");
	тзДанные.ЗаполнитьЗначения(Истина, "Активность");
	
	Возврат тзДанные;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Движения по регистрам

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ)
    ДвижениеПоРегистру_ЦеныНоменклатуры(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_ЦеныНоменклатурыКонтрагентов(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ЦеныНоменклатуры(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ Контрагент.Пустая() Тогда Возврат; КонецЕсли;
	Движения.ЦеныНоменклатуры.Загрузить(СтруктураТД.Товары);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ЦеныНоменклатурыКонтрагентов(СтруктураШД, СтруктураТД, Отказ)
	Если Контрагент.Пустая() Тогда Возврат; КонецЕсли;
	Движения.ЦеныНоменклатурыКонтрагентов.Загрузить(СтруктураТД.Товары);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД,  Отказ);	
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание) Тогда Возврат; КонецЕсли;
	Контрагент=""; //Временно
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);

	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	//Формирование значений реквизитов шапки документа
	СтруктураШД=УправлениеДокументамиСервер.ПолучитьСтруктуруРеквизитовШапки(ЭтотОбъект);
	
	//Формирование значений реквизитов шапки документа
	СтруктураТД=Новый Структура("Товары", СформироватьТаблицу_Товары(СтруктураШД, Отказ, Заголовок));

	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);