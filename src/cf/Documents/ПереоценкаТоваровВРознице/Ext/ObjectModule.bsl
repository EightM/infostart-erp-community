Процедура АвтоЗаполнениеРеквизитовДокумента() Экспорт
	
	ИтогоСуммаПереоценки=Товары.Итог("СуммаПереоценки");
КонецПроцедуры

Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт
	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Движения по регистрам 

Процедура ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);
	ДвижениеПоРегистру_ЦеныНоменклатуры(СтруктураШД, СтруктураТД, Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ЦеныНоменклатуры(СтруктураШД, СтруктураТД, Отказ)
	Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда Возврат; КонецЕсли;
	тзДвижения=Движения.ЦеныНоменклатуры.ВыгрузитьКолонки();

	Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
		НоваяСтрока=тзДвижения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.Цена=СтрокаКоллекции.ЦенаВРознице;
		НоваяСтрока.ЕдиницаИзмерения=СтрокаКоллекции.Номенклатура.ЕдиницаХраненияОстатков;
	КонецЦикла;

	тзДвижения.ЗаполнитьЗначения(ТипЦен, "ТипЦен");
	тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(ДополнительныеСвойства.ВалютаБухУчета, "Валюта");

	Движения.ЦеныНоменклатуры.Загрузить(тзДвижения);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ОбработкаЗаполнения(Основание)
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание) Тогда Возврат; КонецЕсли;

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокОснование", Основание);
	Запрос.УстановитьПараметр("ВидСкладаРозничный", Перечисления.ВидыСкладов.Розничный);

	Если ТипЗнч(Основание)=Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Запрос.Текст="
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Док.Номенклатура КАК Номенклатура,
		|	Док.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	Док.Склад КАК Склад,
		|	Док.Количество КАК Количество
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК Док
		|ГДЕ
		|	Док.Ссылка = &ДокОснование И Док.Склад.ВидСклада = &ВидСкладаРозничный
		|";
	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Запрос.Текст="
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Док.Номенклатура КАК Номенклатура,
		|	Док.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	Док.Ссылка.СкладПолучатель КАК Склад,
		|	Док.Количество КАК Количество
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК Док
		|ГДЕ
		|	Док.Ссылка = &ДокОснование И Док.Ссылка.СкладПолучатель.ВидСклада = &ВидСкладаРозничный
		|";
	КонецЕсли;

	тзТовары=Запрос.Выполнить().Выгрузить();
	Если тзТовары.Количество()=0 Тогда Возврат; КонецЕсли;

	тзСклады=тзТовары.Скопировать(, "Склад");
	тзСклады.Свернуть("Склад");
	Если тзСклады.Количество()>1 Тогда
		#Если Клиент Тогда
		СтрокаВыбора=тзСклады.ВыбратьСтроку("Выберите склад");		
		Если СтрокаВыбора=Неопределено Тогда Возврат; КонецЕсли;
		Склад=СтрокаВыбора.Склад;
		#КонецЕсли
	Иначе
		Склад=тзСклады[0].Склад;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Склад) Тогда Возврат; КонецЕсли;

	Товары.Загрузить(ОбщегоНазначения.ОтобратьСтрокиПоКритериям(тзТовары, Новый Структура("Склад", Склад)).Выгрузить());
	Для Каждого СтрокаКолекции Из Товары Цикл
		СтрокаКолекции.ЦенаВРознице=ЦенообразованиеСервер.ПолучитьЦенуНоменклатурыРозницы(СтрокаКолекции.Номенклатура, Склад.ТипЦенРозничнойТорговли, СтрокаКолекции.ХарактеристикаНоменклатуры, Дата, СтрокаКолекции.Номенклатура.ЕдиницаХраненияОстатков);
	КонецЦикла;

	ОбработкаТабличныхЧастей.ЗаполнитьТиповыеОперации(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли; 

	СтруктураШД=ДополнительныеСвойства.СтруктураШД;
	СтруктураТД=ДополнительныеСвойства.СтруктураТД;

	Если ДополнительныеСвойства.Свойство("РегистрыДляПроведения") Тогда
		Для каждого СтрокаМассива Из ДополнительныеСвойства.РегистрыДляПроведения Цикл
			Выполнить("ДвижениеПоРегистру_"+СтрокаМассива+"(СтруктураШД, СтруктураТД, Отказ);");
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ДвиженияПоРегистрам(СтруктураШД, СтруктураТД, Отказ);	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);
	
	//Автозаполнение ревизитов шапки\табличных частей
	АвтоЗаполнениеРеквизитовДокумента();

	//Формируем структуру шапки документа "СтруктураШД"
	СтруктураШД=УправлениеДокументамиСервер.ПолучитьСтруктуруРеквизитовШапки(ЭтотОбъект);	

	//Формирование значений реквизитов табличных частей документа
	СтруктураТД=Новый Структура("Товары", УправлениеДокументамиСервер.ПолучитьСтруктуруТЧ(ЭтотОбъект, "Товары"));
	
	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);
	ДополнительныеСвойства.Вставить("СтруктураШД", СтруктураШД);
	ДополнительныеСвойства.Вставить("СтруктураТД", СтруктураТД);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства, "Покупка");