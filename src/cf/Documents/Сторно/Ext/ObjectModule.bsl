Процедура СторнироватьДвижения_РегистрыНакопления(ИмяРегистра, СсылкаНаДокумент)
	НаборЗаписей1=РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей1.Отбор.Регистратор.Установить(СсылкаНаДокумент);
	НаборЗаписей1.Прочитать();
	тзЗаписей=НаборЗаписей1.Выгрузить();
	Если НаборЗаписей1.Количество()=0 Тогда Возврат; КонецЕсли;
	
	НаборЗаписей2=РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей2.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей2.Прочитать();
	Для каждого СтркаКоллекции Из тзЗаписей Цикл
		НоваяСтрока=НаборЗаписей2.Добавить();
		НоваяСтрока.Период=Дата;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтркаКоллекции,,"Период");
		Для каждого мдРесурс Из Метаданные.РегистрыНакопления[ИмяРегистра].Ресурсы Цикл
			НоваяСтрока[мдРесурс.Имя] = -НоваяСтрока[мдРесурс.Имя];
		КонецЦикла; 
	КонецЦикла;
	НаборЗаписей2.Записать();
КонецПроцедуры

Процедура СторнироватьДвижения_РегистрыБухгалтерии(ИмяРегистра, СсылкаНаДокумент)
	НаборЗаписей1=РегистрыБухгалтерии[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей1.Отбор.Регистратор.Установить(СсылкаНаДокумент);
	НаборЗаписей1.Прочитать();
	Если НаборЗаписей1.Количество()=0 Тогда Возврат; КонецЕсли;
	
	НаборЗаписей2=РегистрыБухгалтерии[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей2.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей2.Прочитать();
	Для каждого СтркаКоллекции Из НаборЗаписей1 Цикл
		НоваяСтрока=НаборЗаписей2.Добавить();
		НоваяСтрока.Период=Дата;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтркаКоллекции,,"Период");
		
		Для каждого ВидыСубконто Из СтркаКоллекции.СчетДт.ВидыСубконто Цикл
			текВидСубконто=ВидыСубконто.ВидСубконто;
			НоваяСтрока.СубконтоДт[текВидСубконто]=СтркаКоллекции.СубконтоДт[текВидСубконто];
		КонецЦикла;	
		
		Для каждого ВидыСубконто Из СтркаКоллекции.СчетКт.ВидыСубконто Цикл
			текВидСубконто=ВидыСубконто.ВидСубконто;
			НоваяСтрока.СубконтоКт[текВидСубконто]=СтркаКоллекции.СубконтоКт[текВидСубконто];
		КонецЦикла;

		Для каждого мдРесурс Из Метаданные.РегистрыБухгалтерии[ИмяРегистра].Ресурсы Цикл
			стрИмя=мдРесурс.Имя;
			Если мдРесурс.ПризнакУчета=Неопределено Тогда
				Если НоваяСтрока[стрИмя]=NULL Тогда Продолжить; КонецЕсли; 
				НоваяСтрока[стрИмя] = -НоваяСтрока[стрИмя];
			Иначе
				Если НоваяСтрока[стрИмя+"Дт"]<>NULL Тогда 
					НоваяСтрока[стрИмя+"Дт"] = -НоваяСтрока[стрИмя+"Дт"];
				КонецЕсли; 
				Если НоваяСтрока[стрИмя+"Кт"]<>NULL Тогда 
				НоваяСтрока[стрИмя+"Кт"] = -НоваяСтрока[стрИмя+"Кт"];
				КонецЕсли;
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;
	НаборЗаписей2.Записать();
КонецПроцедуры

Процедура СторнироватьДвижения_РегистрыСведений(ИмяРегистра, СсылкаНаДокумент)
	стрВыбрать="
	|&Период,
	|&Актуальность,
	|&Регистратор
	|";
	Для каждого мдИзмерение Из Метаданные.РегистрыСведений[ИмяРегистра].Измерения Цикл
		стрВыбрать=стрВыбрать+","+Символы.ПС+"ИсточникДанных."+мдИзмерение.Имя;
	КонецЦикла;

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Актуальность", Истина);
	Запрос.УстановитьПараметр("Регистратор", СсылкаНаДокумент);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	"+стрВыбрать+"
	|ИЗ
	|	РегистрСведений."+ИмяРегистра+" КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Регистратор = &Регистратор
	|";

	Движения[ИмяРегистра].Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий модуля

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если Не ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения) Тогда Возврат; КонецЕсли;
	СторнируемыйДокумент=ДанныеЗаполнения;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли;

	МассивРегистровДляПроведения=Неопределено;
    ДополнительныеСвойства.Свойство("РегистрыДляПроведения", МассивРегистровДляПроведения);

	СсылкаНаДокумент=СторнируемыйДокумент;
	Если ТипЗнч(СсылкаНаДокумент)=Тип("СправочникСсылка.ФантомныеСсылки") Тогда
		СсылкаНаДокумент=УправлениеКонфигурациейСервер.ЗначениеФантомнойСсылки(СсылкаНаДокумент);
	КонецЕсли;	 

	Если ТипЗнч(СсылкаНаДокумент)=Тип("ДокументСсылка.УстановкаСкидокНоменклатуры") Тогда
	    СторнироватьДвижения_РегистрыСведений("СкидкиНаценкиНоменклатуры"	 , СсылкаНаДокумент);
		СторнироватьДвижения_РегистрыСведений("СкидкиНаценкиПоЦеновымГруппам", СсылкаНаДокумент);
		СторнироватьДвижения_РегистрыСведений("СкидкиНоменклатурыНатуральные", СсылкаНаДокумент);
		Возврат;
	КонецЕсли; //Исключение из правил 

	мдДокумент=СсылкаНаДокумент.Метаданные();
	Для каждого РегистрДокумента Из мдДокумент.Движения  Цикл
		Если НЕ МассивРегистровДляПроведения=Неопределено Тогда
			Если МассивРегистровДляПроведения.Найти(РегистрДокумента.Имя)=Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Если Метаданные.РегистрыНакопления.Содержит(РегистрДокумента) Тогда
			СторнироватьДвижения_РегистрыНакопления(РегистрДокумента.Имя, СсылкаНаДокумент);
		ИначеЕсли Метаданные.РегистрыБухгалтерии.Содержит(РегистрДокумента) Тогда		
			СторнироватьДвижения_РегистрыБухгалтерии(РегистрДокумента.Имя, СсылкаНаДокумент);
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	СсылкаНаДокумент=СторнируемыйДокумент;
	Если ТипЗнч(СсылкаНаДокумент)=Тип("СправочникСсылка.ФантомныеСсылки") Тогда
		СсылкаНаДокумент=УправлениеКонфигурациейСервер.ЗначениеФантомнойСсылки(СсылкаНаДокумент);
	КонецЕсли;
	Если УправлениеМетаданными.ЕстьРеквизит("Организация", СсылкаНаДокумент.Метаданные()) Тогда
		Если НЕ Организация=СсылкаНаДокумент.Организация Тогда
			Организация=СсылкаНаДокумент.Организация;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);