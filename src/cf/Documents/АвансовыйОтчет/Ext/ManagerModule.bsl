////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("Аванс_Отчет", "Авансовый отчет");
	Структура.Вставить("Аванс_ОтчетБУ", "Авансовый отчет (по бух.учету)");
	Структура.Вставить("ПриходНаРозничныеСкладыВЦенахАТТ", "Приход на розничные склады в ценах АТТ");
	Структура.Вставить("М4", "М-4 (Приходный ордер)");
	Структура.Вставить("БухгалтерскаяСправка", "Бухгалтерская cправка");
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция Печать_АвансовогоОтчета_ПараметрыПечати_Проводки(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	ЗапросПоПроводкам=Новый Запрос(); Счетчик=0;
	ЗапросПоПроводкам.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	ЗапросПоПроводкам.Текст=" 
	|ВЫБРАТЬ ПЕРВЫЕ 8
	|	Хозрасчетный.СчетДт,
	|	Хозрасчетный.СчетКт,
	|	СУММА(Хозрасчетный.Сумма) КАК Сумма,
	|	МИНИМУМ(Хозрасчетный.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка И (НЕ(Хозрасчетный.СчетДт.Забалансовый ИЛИ Хозрасчетный.СчетКт.Забалансовый))
	|
	|СГРУППИРОВАТЬ ПО
	|	Хозрасчетный.СчетДт,
	|	Хозрасчетный.СчетКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	тзДанные=ЗапросПоПроводкам.Выполнить().Выгрузить();	
	
	Возврат тзДанные;
КонецФункции

Функция Печать_АвансовогоОтчета_ПараметрыПечати_Позиции(СтруктураПараметров,ПараметрыПечати)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	ЗапросТовары = Новый Запрос();
	
	ЗапросТовары.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	ЗапросТовары.УстановитьПараметр("Валюта",          ПараметрыПечати.ВалютаДокумента);
	
	СтрокаВыборкиПоляСодержания = ОбработкаТабличныхЧастей.ПолучитьЧастьЗапросаДляВыбораСодержания("АвансовыйОтчет");
	
	ЗапросТовары.Текст = "
	|ВЫБРАТЬ
	|	Док.ДокументНомер,
	|	Док.ДокументДата,
	|	Док.НаименованиеРасхода,
	|	Док.ВидДокВходящий,
	|	Док.ПоОтчету,
	|	Док.ПоОтчетуВВалюте,
	|	Док.КУчету,
	|	Док.КУчетуВВалюте,
	|	Док.СуммаНДС,
	|	Док.Договор,
	|	Док.ТОП
	|ИЗ
	|
	|(
	|ВЫБРАТЬ
	|	АвансовыйОтчет.НомерВходящегоДокумента КАК ДокументНомер,
	|	АвансовыйОтчет.ДатаВходящегоДокумента КАК ДокументДата,
	|	АвансовыйОтчет.Номенклатура	   КАК НаименованиеРасхода,
	|	АвансовыйОтчет.ВидДокВходящий  КАК ВидДокВходящий,
	|	СУММА(АвансовыйОтчет.Сумма)    КАК ПоОтчету,
	|	СУММА(АвансовыйОтчет.Сумма)    КАК ПоОтчетуВВалюте,
	|	СУММА(АвансовыйОтчет.Сумма)    КАК КУчету,
	|	СУММА(АвансовыйОтчет.Сумма)    КАК КУчетуВВалюте,
	|	СУММА(АвансовыйОтчет.СуммаНДС) КАК СуммаНДС,
	|	NULL КАК Договор,
	|	АвансовыйОтчет.ТОП КАК ТОП
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчет
	|
	|ГДЕ
	|	АвансовыйОтчет.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчет.НомерВходящегоДокумента,
	|	АвансовыйОтчет.ДатаВходящегоДокумента,
	|	АвансовыйОтчет.Номенклатура,
	|	АвансовыйОтчет.ВидДокВходящий,
	|	АвансовыйОтчет.ТОП
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчет.НомерВходящегоДокумента,
	|	АвансовыйОтчет.ДатаВходящегоДокумента,
	|	ВЫРАЗИТЬ(АвансовыйОтчет.Содержание КАК Строка(1000)),
	|	АвансовыйОтчет.ВидДокВходящий,
	|	СУММА(АвансовыйОтчет.Сумма),
	|	СУММА(АвансовыйОтчет.Сумма),
	|	СУММА(АвансовыйОтчет.Сумма),
	|	СУММА(АвансовыйОтчет.Сумма),
	|	0,
	|	АвансовыйОтчет.ДоговорКонтрагента,
	|	АвансовыйОтчет.ТОП
	|ИЗ
	|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК АвансовыйОтчет
	|
	|ГДЕ
	|	АвансовыйОтчет.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчет.НомерВходящегоДокумента,
	|	АвансовыйОтчет.ДатаВходящегоДокумента,
	|	ВЫРАЗИТЬ(АвансовыйОтчет.Содержание КАК Строка(1000)),
	|	АвансовыйОтчет.ВидДокВходящий,
	|	АвансовыйОтчет.ДоговорКонтрагента,
	|	АвансовыйОтчет.ТОП
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчет.НомерВходящегоДокумента,
	|	АвансовыйОтчет.ДатаВходящегоДокумента,
	|" + СтрокаВыборкиПоляСодержания + ",
	|	АвансовыйОтчет.ВидДокВходящий,
	|	СУММА(АвансовыйОтчет.СуммаПоОтчету),
	|	СУММА(АвансовыйОтчет.СуммаПоОтчету),
	|	СУММА(АвансовыйОтчет.Сумма),
	|	СУММА(АвансовыйОтчет.Сумма),
	|	СУММА(АвансовыйОтчет.СуммаНДС),
	|	NULL,
	|	АвансовыйОтчет.ТОП
	|ИЗ
	|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчет
	|
	|ГДЕ
	|	АвансовыйОтчет.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчет.НомерВходящегоДокумента,
	|	АвансовыйОтчет.ДатаВходящегоДокумента,
	|	АвансовыйОтчет.ВидДокВходящий,
	|	АвансовыйОтчет.ТОП,
	|" + СтрокаВыборкиПоляСодержания + "
	|
	|) КАК Док
	|
	|УПОРЯДОЧИТЬ ПО
	|	Док.ДокументДата,
	|	Док.ДокументНомер
	|";
	
	тзДанные = ЗапросТовары.Выполнить().Выгрузить();
	тзДанные.Колонки.Добавить("ПоУчету");
	тзДанные.Колонки.Добавить("ПоУчетуВВалюте");
	тзДанные.Колонки.Добавить("ДебетСубСчета");
	ИтогоКУчету=0;
	ИтогоКУчетуВВалюте = 0;
	ИтогоПоОтчету        = 0;
	ИтогоПоОтчетуВВалюте = 0;
	СуммаВВалюте = 0;
	
	Для Каждого СтрокаКоллекции ИЗ тзДанные Цикл
		СтрокаКоллекции.НаименованиеРасхода = СтрокаКоллекции.ВидДокВходящий+" ("+СокрЛП(СтрокаКоллекции.НаименованиеРасхода)+")";
		
		СуммаКУчету = СтрокаКоллекции.КУчету+ ?(ПараметрыПечати.СуммаВключаетНДС, 0, СтрокаКоллекции.СуммаНДС);
		
		Сумма = СтрокаКоллекции.ПоОтчету;
		
		СтрокаКоллекции.ПоОтчету  = Сумма;
		СтрокаКоллекции.ПоУчету = СуммаКУчету;
		ИтогоПоОтчету = ИтогоПоОтчету + Сумма;
		ИтогоКУчету = ИтогоКУчету + СуммаКУчету;
		
		Если ПараметрыПечати.ПечатьВИностраннойВалюте Тогда
			СтрокаКоллекции.ПоОтчетуВВалюте = Сумма;
			СтрокаКоллекции.ПоУчетуВВалюте = СуммаКУчету;
			ИтогоПоОтчетуВВалюте = ИтогоПоОтчетуВВалюте + Сумма;
			ИтогоКУчетуВВалюте=ИтогоКУчетуВВалюте+СуммаКУчету;
			СуммаВВалюте = 0;
		Иначе
			СтрокаКоллекции.ПоОтчетуВВалюте = 0;
			СтрокаКоллекции.ПоУчетуВВалюте = 0;
		КонецЕсли;
		
		Попытка 
			Если СтрокаКоллекции.СуммаНДС=0 Тогда
				СтрокаКоллекции.ДебетСубСчета=СтрокаКоллекции.ТОП.ПроводкиБУ[0].СчетДебет;
			Иначе
				ДебетСубСчета="";
				Для Каждого СтрокаТОП ИЗ СтрокаКоллекции.ТОП.ПроводкиБУ Цикл
					ДебетСубСчета=ДебетСубСчета+?(ДебетСубСчета="","",", ")+СтрокаТОП.СчетДебет;
				КонецЦикла;	
				СтрокаКоллекции.ДебетСубСчета=ДебетСубСчета;
			Конецесли;
		Исключение
		КонецПопытки; 
	КонецЦикла;
	
	ПараметрыПечати.Вставить("ИтогоПоОтчету",ИтогоПоОтчету);
	ПараметрыПечати.Вставить("ИтогоПоОтчетувВалюте",ИтогоПоОтчетуВВалюте);
	ПараметрыПечати.Вставить("ИтогоПоУчету",ИтогоКУчету);
	ПараметрыПечати.Вставить("ИтогоПоУчетувВалюте",ИтогоКУчетуВВалюте);
	
	Возврат тзДанные;
КонецФункции

Функция Печать_АвансовогоОтчета_ПараметрыПечати(СтруктураПараметров,ВалютаБухУчета,БУ)
	
	ПараметрыПечати = Новый Структура;
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст ="
	|ВЫБРАТЬ
	|	Номер,
	|	Дата                  КАК ДатаДокумента,
	|	ФизЛицо               КАК ПодотчетноеЛицо,
	|	ФизЛицо.Представление КАК ПредставлениеПодотчетногоЛица,
	|	Организация           КАК Руководители,
	|	Организация.Ссылка    КАК Организация,
	|	НазначениеАванса,
	|	Подразделение,
	|	Подразделение.Представление КАК ПредставлениеПодразделения,
	|	Подразделение.Код КАК КодПодразделения,
	|	ВалютаДокумента,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС,
	|	ВалютаДокумента,
	|	КурсДокумента,
	|	КратностьДокумента,
	|	КоличествоДокументов,
	|	КоличествоЛистов,
	|	ВалютаДокумента.Представление       КАК ПредставлениеВалютыДокумента,
	|	СуммаДокумента                      КАК СуммаДокумента
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
	|
	|ГДЕ
	|	АвансовыйОтчет.Ссылка = &ТекущийДокумент
	|";
	тзДанные=Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
	КонецЦикла;
	ПараметрыПечати.Вставить("ПечатьВИностраннойВалюте",НЕ ПараметрыПечати.ВалютаДокумента=ВалютаБухУчета);

	
	Запрос=Новый Запрос; СуммаДоДокумента=0;
	Запрос.УстановитьПараметр("Организация", ПараметрыПечати.Организация);
	Запрос.УстановитьПараметр("ФизЛицо"    , ПараметрыПечати.ПодотчетноеЛицо);
	Запрос.УстановитьПараметр("ДатаОстатка", ПараметрыПечати.ДатаДокумента - 1);
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
	Если БУ Тогда
		Запрос.Текст = "
		|	ВЫБРАТЬ
		|	ИсточникДанных.СуммаОстаток КАК СуммаВзаиморасчетов
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаОстатка, Счет В ИЕРАРХИИ(&Счет), , Субконто1 = &ФизЛицо И Организация=&Организация) КАК ИсточникДанных
		|";
	Иначе	
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ИсточникДанных.СуммаОстаток КАК СуммаВзаиморасчетов
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСПодотчетнымиЛицами.Остатки(&ДатаОстатка, ФизЛицо=&ФизЛицо И Организация=&Организация) КАК ИсточникДанных
		|";
	КонецЕсли;
	
	ПредыдущийАванс=Запрос.Выполнить().Выбрать();
	Пока ПредыдущийАванс.Следующий() Цикл
		СуммаДоДокумента=СуммаДоДокумента+ПредыдущийАванс.СуммаВзаиморасчетов; 
	КонецЦикла;
	
	// теперь отнимем сумму расходных ордеров в первой вкладке
	ПолученоИзКассы=0;
	Для Каждого СтрокаДок ИЗ СсылкаНаОбъект.ВыданныеАвансы Цикл
		ПолученоИзКассы=ПолученоИзКассы+СтрокаДок.СуммаВыдано;
	КонецЦикла;
	
	СуммаДоДокумента = СуммаДоДокумента - ПолученоИзКассы;
	
	ПараметрыПечати.ТабельныйНомер="";
	ПараметрыПечати.ДолжностьПодотчетногоЛицаПредставление="";

	ФамилияИмяОтчествоФизЛица=ПечатныеФормыСервер.ФамилияИмяОтчество(ПараметрыПечати.ПодотчетноеЛицо, ПараметрыПечати.ДатаДокумента);
	ФамилияИмяОтчествоПодотчетного=ФамилияИмяОтчествоФизЛица.Фамилия+" "+ФамилияИмяОтчествоФизЛица.Имя+" "+ФамилияИмяОтчествоФизЛица.Отчество;
	ПараметрыПечати.Вставить("ПредставлениеПодотчетногоЛица",ФамилияИмяОтчествоПодотчетного);
	ПараметрыПечати.Вставить("НомерДокумента",ОбщегоНазначенияСервер.НомерНаПечать(СсылкаНаОбъект));
	ПараметрыПечати.Вставить("ПолученоИзКассы",ПолученоИзКассы);
	Если ПараметрыПечати.ПечатьВИностраннойВалюте Тогда
		ПараметрыПечати.Вставить("ПолученоИзКассыВВалюте",ПолученоИзКассы);		
		ПараметрыПечати.Вставить("Валюта",СокрЛП(ПараметрыПечати.ВалютаДокумента));
	КонецЕсли;
	
	Если СуммаДоДокумента >= 0 тогда
		ПараметрыПечати.Вставить("НачальныйОстаток",СуммаДоДокумента);
	Иначе
		ПараметрыПечати.Вставить("НачальныйПерерасход", - СуммаДоДокумента);
	КонецЕсли;
	ПараметрыПечати.Вставить("ИтогоПолучено", ПолученоИзКассы);
	
	ПараметрыПечати.Вставить("Израсходовано", ПараметрыПечати.СуммаДокумента);
	
	ОстатокНаКонец = СуммаДоДокумента + ПолученоИзКассы - ПараметрыПечати.СуммаДокумента;
	Если ОстатокНаКонец >= 0  Тогда
		ПараметрыПечати.Вставить("КонечныйОстаток",ОстатокНаКонец);
	Иначе
		ПараметрыПечати.Вставить("КонечныйПерерасход", - ОстатокНаКонец);
	КонецЕсли;
	
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Организация, ПараметрыПечати.ДатаДокумента);
	ПредставлениеОрганизации = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
	
	Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(ПараметрыПечати.Руководители, ПараметрыПечати.ДатаДокумента, СсылкаНаОбъект);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	Кассир       = Руководители.Кассир;
	
	Если НЕ ПараметрыПечати.ПечатьВИностраннойВалюте Тогда
		ИспСумма = Окр(ПараметрыПечати.СуммаДокумента, 2, 1);
		ЦелСумма = Цел(ПараметрыПечати.СуммаДокумента);
		КопСумма = 100 * (Окр(ИспСумма - ЦелСумма, 2, 1));
		
		ПараметрыПечати.Вставить("ИзрасходованоРуб",ЦелСумма);
		ПараметрыПечати.Вставить("ИзрасходованоКоп", Формат(КопСумма,"ЧН=00"));
	КонецЕсли;
	
	ПараметрыПечати.Вставить("ДатаДокумента", ПараметрыПечати.ДатаДокумента);
	ПараметрыПечати.Вставить("Руководитель",Руководитель);
	ПараметрыПечати.Вставить("ГлавныйБухгалтер",Бухгалтер);
	
	Если ЗначениеЗаполнено(Руководители.Исполнитель) Тогда
		ПараметрыПечати.Вставить("Бухгалтер",Руководители.Исполнитель);
	Иначе	
		ПараметрыПечати.Вставить("Бухгалтер",Бухгалтер);
	КонецЕсли;
	ПараметрыПечати.Вставить("Кассир",Кассир);
	Если НЕ ПараметрыПечати.ПечатьВИностраннойВалюте Тогда
		ПараметрыПечати.Вставить("ОрганизацияПоОКПО",СведенияОбОрганизации.КодПоОКПО);
	КонецЕсли;
	ПараметрыПечати.Вставить("СуммаОтчетаПрописью",ОбщегоНазначения.СформироватьСуммуПрописью(ПараметрыПечати.СуммаДокумента, ПараметрыПечати.ВалютаДокумента));
	
	ПараметрыПечати.Вставить("ПредставлениеОрганизации",ПредставлениеОрганизации);
	ПараметрыПечати.Вставить("ПредставлениеГлавногоБухгалтера",Бухгалтер);
	ПараметрыПечати.Вставить("РуководительПредставление",Руководитель);
	ПараметрыПечати.Вставить("ДолжностьРуководителяПредставление",Руководители.РуководительДолжность);
	
	Если ЗначениеЗаполнено(Руководители.Исполнитель) Тогда
		ПараметрыПечати.Вставить("Пользователь",Руководители.Исполнитель);
	Иначе
		ПараметрыПечати.Вставить("Пользователь",ПараметрыСеанса.ТекущийПользователь);
	КонецЕсли;
	ПараметрыПечати.Вставить("Проводки",Печать_АвансовогоОтчета_ПараметрыПечати_Проводки(СтруктураПараметров));
	ПараметрыПечати.Вставить("Позиции",Печать_АвансовогоОтчета_ПараметрыПечати_Позиции(СтруктураПараметров,ПараметрыПечати));
	Если ПараметрыПечати.ПечатьВИностраннойВалюте Тогда
		ПараметрыПечати.Вставить("Валюта", СокрЛП(ПараметрыПечати.ВалютаДокумента));
	Конецесли;	
	
	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;
	
	Возврат ПараметрыПечати;
КонецФункции

Функция Печать_АвансовогоОтчета(СтруктураПараметров, ВалютаБухУчета, БУ=Ложь, ТабДокумент=Неопределено)
	
	ПараметрыПечати=Печать_АвансовогоОтчета_ПараметрыПечати(СтруктураПараметров,ВалютаБухУчета,БУ);
	
	Если СтруктураПараметров.Свойство("ПараметрыПечати") Тогда
		Возврат ПараметрыПечати;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ВыполняемыйМодуль") Тогда
		Если Не ПустаяСтрока(СтруктураПараметров.ВыполняемыйМодуль) Тогда
			Выполнить(СтруктураПараметров.ВыполняемыйМодуль);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Макет=ИнициализацияМакета(СтруктураПараметров, "АвансовыйОтчет"+?(ПараметрыПечати.ПечатьВИностраннойВалюте, "ВИностраннойВалюте", ""));
	
	Если ТабДокумент=Неопределено Тогда
		ТабДокумент=Новый ТабличныйДокумент;	
	КонецЕсли;
	ТабДокумент.ИмяПараметровПечати="ПАРАМЕТРЫ_ПЕЧАТИ_АвансовыйОтчет_АвансовыйОтчет";
	ОбластьМакета=Макет.ПолучитьОбласть("Титул");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	Счетчик=0;
	Для Каждого СтрокаКоллекции ИЗ ПараметрыПечати.Проводки Цикл
		ОбластьМакета.Параметры["СубСчетДебет"  +(Счетчик+1)] = СтрокаКоллекции.СчетДт;
		ОбластьМакета.Параметры["СуммаДебет"    +(Счетчик+1)] = СтрокаКоллекции.Сумма;
		ОбластьМакета.Параметры["СубСчетКредит" +(Счетчик+1)] = СтрокаКоллекции.СчетКт;
		ОбластьМакета.Параметры["СуммаКредит"   +(Счетчик+1)] = СтрокаКоллекции.Сумма;
		Счетчик = Счетчик + 1;
	КонецЦикла;
	ТабДокумент.Вывести(ОбластьМакета);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	Если ПараметрыПечати.ПечатьВИностраннойВалюте Тогда
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	Конецесли;	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим табличные части
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	НомерСтроки   = 0;
	Для Каждого СтрокаКоллекции ИЗ ПараметрыПечати.Позиции Цикл
		ОбластьМакета.Параметры.Заполнить(СтрокаКоллекции);
		НомерСтроки = НомерСтроки + 1;
		ОбластьМакета.Параметры.НомерСтроки         = НомерСтроки;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
	// Выводим подвал авансовго отчета
	ОбластьМакета=Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если ПараметрыПечати.ВалютаДокумента <> ВалютаБухУчета Тогда
		Сообщить("Авансовый отчет выведен в валюте взаиморасчетов с подотчетным лицом (" + ПараметрыПечати.ВалютаДокумента + ") в форме отличной от унифицированной.");
	КонецЕсли;
	
	Возврат ТабДокумент;
КонецФункции

Функция Печать_М4_ПараметрыПечати_Позиции(СсылкаНаОбъект,ПараметрыПечати)
	ЗапросПоТоварам=Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	ЗапросПоТоварам.УстановитьПараметр("Курс",      1);
	ЗапросПоТоварам.УстановитьПараметр("Кратность", 1);
	ЗапросПоТоварам.Текст = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код                КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.КоличествоПринято,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Стоимость,
	|	ВложенныйЗапрос.СуммаНДС,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка       КАК Метка
	|
	|ИЗ
	|	(
	|	ВЫБРАТЬ
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		СтавкаНДС,
	|		СУММА(Количество)                    КАК КоличествоПринято,
	|		Цена * &Курс / &Кратность        КАК Цена,
	|		СУММА(Сумма    * &Курс / &Кратность) КАК Стоимость,
	|		СУММА(СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	|		ХарактеристикаНоменклатуры           КАК Характеристика,
	|		СерияНоменклатуры                    КАК Серия,
	|		МИНИМУМ(НомерСтроки)                 КАК НомерСтроки,
	|		0                                    КАК Метка
	|	ИЗ
	|		Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчет
	|	ГДЕ
	|		АвансовыйОтчет.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО 
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		СтавкаНДС,
	|		ХарактеристикаНоменклатуры,
	|		СерияНоменклатуры,
	|		Цена * &Курс / &Кратность
	|	) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура,
	|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК Строка(1000)),
	|	Номенклатура.Код,
	|	Номенклатура.ЕдиницаХраненияОстатков.Представление  КАК ЕдиницаИзмеренияНаименование,
	|	Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	""Без НДС"",
	|	Количество,
	|	Цена     * &Курс / &Кратность,
	|	Сумма    * &Курс / &Кратность,
	|	0,
	|	NULL,
	|	NULL,
	|	НомерСтроки КАК НомерСтроки,
	|	2           КАК Метка
	|ИЗ
	|	Документ.АвансовыйОтчет.ВозвратнаяТара КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|
	|";
	тзДанные=ЗапросПоТоварам.Выполнить().Выгрузить();
	тзДанные.Колонки.Добавить("ВсегоСНДС");
	тзДанные.Колонки.Добавить("СуммаБезНДС");
	
	ИтогоКоличествоПринято = 0;
	ИтогоСуммаБезНДС = 0;
	ИтогоСуммаНДС    = 0;
	ИтогоВсегоСНДС   = 0;
	
	Для Каждого СтрокаКоллекции ИЗ тзДанные Цикл
		Кратность = 1;
		ВсегоСНДС = (СтрокаКоллекции.Стоимость+?(СсылкаНаОбъект.СуммаВключаетНДС, 0, СтрокаКоллекции.СуммаНДС));
		СуммаНДС          = СтрокаКоллекции.СуммаНДС;
		Цена              = (ВсегоСНДС - СуммаНДС) / СтрокаКоллекции.КоличествоПринято;
		СтрокаКоллекции.ВсегоСНДС         = ВсегоСНДС;
		СтрокаКоллекции.СуммаБезНДС       = ВсегоСНДС - СуммаНДС;
		СтрокаКоллекции.СуммаНДС          = СуммаНДС;
		СтрокаКоллекции.Цена              = Цена;
		СтрокаКоллекции.ТоварНаименование = СокрЛП(СтрокаКоллекции.ТоварНаименование)
		+ ПечатныеФормыСервер.ПредставлениеСерий(СтрокаКоллекции)
		+ ?(СтрокаКоллекции.Метка = 2, " (возвратная тара)", "");
		
		ИтогоКоличествоПринято = ИтогоКоличествоПринято + СтрокаКоллекции.КоличествоПринято;
		ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВсегоСНДС - СуммаНДС;
		ИтогоСуммаНДС          = ИтогоСуммаНДС          + СуммаНДС;
		ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;
	КонецЦикла;	
	
	ПараметрыПечати.Вставить("ИтогоКоличествоПринято", ИтогоКоличествоПринято);
	ПараметрыПечати.Вставить("ИтогоСуммаБезНДС", ИтогоСуммаБезНДС);
	ПараметрыПечати.Вставить("ИтогоСуммаНДС", ИтогоСуммаНДС);
	ПараметрыПечати.Вставить("ИтогоВсегоСНДС", ИтогоВсегоСНДС);
	
	Возврат тзДанные;
КонецФункции

Функция Печать_М4_ПараметрыПечати(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	
	ПараметрыПечати = Новый Структура;
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Номер КАК Номер,
	|	Дата  КАК ДатаСоставления,
	|	Номер КАК НомерСопроводительногоДокумента,
	|	Организация,
	|	Организация КАК ЮрФизЛицо,
	|	Склад КАК  МестоПриемки,
	|   Склад.Представление КАК СкладНаименование,
	|	Подразделение,
	|	Подразделение  КАК ПредставлениеПодразделения,
	|	Null КАК ПоставщикКод,
	|	Null КАК Поставщик,
	|	ВалютаДокумента,
	|	КурсДокумента КАК Курс,
	|	КратностьДокумента КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Ссылка = &ТекущийДокумент
	|";
	тзДанные=Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
	КонецЦикла;
	СведенияОПокупателе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.ЮрФизЛицо, ПараметрыПечати.ДатаСоставления);
	ПараметрыПечати.Вставить("ПредставлениеОрганизации",ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПокупателе));
	ПараметрыПечати.Вставить("ОрганизацияПоОКПО",СведенияОПокупателе.КодПоОКПО);
	ПараметрыПечати.Вставить("НомерДокумента",ОбщегоНазначенияСервер.НомерНаПечать(ПараметрыПечати));
	ПараметрыПечати.Вставить("ДатаСоставления",ПараметрыПечати.ДатаСоставления);
	ПредставлениеКонтрагента = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Поставщик, ПараметрыПечати.ДатаСоставления), "ПолноеНаименование,");
	ПараметрыПечати.Вставить("ПоставщикНаименование",ПредставлениеКонтрагента);
	ПараметрыПечати.Вставить("Позиции", Печать_М4_ПараметрыПечати_Позиции(СсылкаНаОбъект,ПараметрыПечати));
	
	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;
	
	Возврат ПараметрыПечати;
	
КонецФункции

Функция Печать_М4(СтруктураПараметров,ТабДокумент=Неопределено)
	ПараметрыПечати=Печать_М4_ПараметрыПечати(СтруктураПараметров);
	
	Если СтруктураПараметров.Свойство("ПараметрыПечати") Тогда
		Возврат ПараметрыПечати;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ВыполняемыйМодуль") Тогда
		Если Не ПустаяСтрока(СтруктураПараметров.ВыполняемыйМодуль) Тогда
			Выполнить(СтруктураПараметров.ВыполняемыйМодуль);
		КонецЕсли;
	КонецЕсли;

	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Макет = ИнициализацияМакета(СтруктураПараметров, "М4");
	
	Если ТабДокумент=Неопределено Тогда
		ТабДокумент=Новый ТабличныйДокумент;	
	КонецЕсли;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АвансовыйОтчет_М4";
	
	
	ОбластьМакета=Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок докмента
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	НомерСтраницы   = 1;
	
	КоличествоСтрок = ПараметрыПечати.Позиции.Количество();
	Ном              = 0;
	
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;	
	
	// Выводим многострочную часть докмента
	ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтрок");
	ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");	
	Для Каждого СтрокаКоллекции ИЗ ПараметрыПечати.Позиции Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаКоллекции.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		Ном = Ном + 1;
		ОбластьМакета.Параметры.Заполнить(СтрокаКоллекции);
		МассивВыводимыхОбластей.Очистить();
		МассивВыводимыхОбластей.Добавить(ОбластьМакета);
		МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
		Если Ном = КоличествоСтрок Тогда
			МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		КонецЕсли;
		Если НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
			НомерСтраницы = НомерСтраницы + 1;
			ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
			ТабДокумент.Вывести(ПодвалСтрок);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;												  
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
КонецФункции

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	ВалютаБухУчета=МодульВалютногоУчета.ПолучитьВалюту("Бух");
	
	Если СтруктураПараметров.ИмяМакета="Аванс_Отчет" Тогда
		ТабДокумент=Печать_АвансовогоОтчета(СтруктураПараметров, ВалютаБухУчета,,ТабДокумент);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="Аванс_ОтчетБУ" Тогда
		ТабДокумент=Печать_АвансовогоОтчета(СтруктураПараметров, ВалютаБухУчета, Истина,ТабДокумент);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="М4" тогда
		ТабДокумент=Печать_М4(СтруктураПараметров,ТабДокумент);

	ИначеЕсли СтруктураПараметров.ИмяМакета="ПриходНаРозничныеСкладыВЦенахАТТ" Тогда
		ТабДокумент=ПечатныеФормыСервер.ПриходРасходСРозничныхСкладовВЦенахАТТ(СтруктураПараметров.СсылкаНаОбъект, ВалютаБухУчета, Истина);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="БухгалтерскаяСправка" Тогда
		ТабДокумент=ПечатныеФормыСервер.БухгалтерскаяСправка(СтруктураПараметров, "Хозрасчетный");		
	КонецЕсли;
	
	Возврат ТабДокумент;
КонецФункции
