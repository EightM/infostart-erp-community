Функция ПараметрыУчетнойПолитики(Переписать=Ложь) Экспорт

	Если Переписать=Ложь Тогда
		Переписать=?(ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(ЭтоНовый(), ТекущаяДата(), Дата), Ложь, Организация);
	КонецЕсли;

	Возврат ДополнительныеСвойства.УчетнаяПолитика;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Движения по регистрам 

Процедура ДвиженияПоРегистрам(Отказ)
	ДвижениеПоРегистру_ПорогиНакопительныхСкидок(Отказ);
КонецПроцедуры

Процедура ДвижениеПоРегистру_ПорогиНакопительныхСкидок(Отказ)
	тзДвижения=Движения.ПорогиНакопительныхСкидок.ВыгрузитьКолонки();
	Для каждого СтркаКоллекции Из ШкалаДиапазонов Цикл
		ЗаполнитьЗначенияСвойств(тзДвижения.Добавить(), СтркаКоллекции);
	КонецЦикла;
	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(Дата, "Период");
	тзДвижения.ЗаполнитьЗначения(Ссылка, "Регистратор");
	Движения.ПорогиНакопительныхСкидок.Загрузить(тзДвижения);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	УправлениеДокументамиСервер.ПередПроведением(Отказ, РежимПроведения, ЭтотОбъект);
	Если Отказ Тогда Возврат; КонецЕсли;

	ДвиженияПоРегистрам(Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
Перем ПредыдущаяСтрокаТЗ;
	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ЭтотОбъект);
	
	Если ШкалаДиапазонов.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнена шкала порогов.", Отказ, Заголовок);
		Возврат; 
	КонецЕсли;

	тзШкалаДиапазонов=ШкалаДиапазонов.Выгрузить();
	тзШкалаДиапазонов.Сортировать("НижняяГраница");
	КоличествоСтрок=тзШкалаДиапазонов.Количество() - 1;
	Для ъ=0 По КоличествоСтрок Цикл
		ТекущаяСтрокаТЗ=тзШкалаДиапазонов.Получить(ъ);
		СтрокаНачалаСообщенияОбОшибке = "В строке номер " + СокрЛП(ТекущаяСтрокаТЗ.НомерСтроки);
		Если ъ > 0 Тогда
			Если ТекущаяСтрокаТЗ.НижняяГраница = ПредыдущаяСтрокаТЗ.НижняяГраница Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + " продублирована верхняя граница.", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
		ПредыдущаяСтрокаТЗ=ТекущаяСтрокаТЗ;
	КонецЦикла;

	//Инициализация доп.свойств документа	
    ДополнительныеСвойства.Вставить("Заголовок", Заголовок);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Операторы основной программы

УправлениеДокументамиСервер.ИнициализацияМодуля(ДополнительныеСвойства);
