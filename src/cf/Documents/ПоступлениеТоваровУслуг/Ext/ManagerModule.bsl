////////////////////////////////////////////////////////////////////////////////
//Управление печатными формами

Процедура СтруктураПечатныхФорм(Структура) Экспорт
	Структура.Вставить("ТОРГ12", "ТОРГ-12 (Товарная накладная за поставщика с услугами)");
	Структура.Вставить("ТОРГ12_БезУслуг", "ТОРГ-12 (Товарная накладная за поставщика)");
	Структура.Вставить("ТОРГ4", "ТОРГ-4 (Акт о приемке товара без счета поставщика)");
	Структура.Вставить("М4", "М-4 (Приходный ордер)");
	Структура.Вставить("Накладная", "Приходная накладная");
	Структура.Вставить("Бланк", "Бланк товарного наполнения");
	Структура.Вставить("ПриходНаРозничныеСкладыВЦенахАТТ", "Приход на розничные склады в ценах АТТ");
	Структура.Вставить("БухгалтерскаяСправка", "Бухгалтерская справка");
	Структура.Вставить("Акт", "Акт об оказании услуг");
	Структура.Вставить("НакладнаяСНаценкой", "Накладная с наценкой");	
КонецПроцедуры

Функция ИнициализацияМакета(СтруктураПараметров, стрМакет)
	Если СтруктураПараметров.Свойство("Макет") Тогда
		Возврат СтруктураПараметров.Макет;
	КонецЕсли;
	Макет=СтруктураПараметров.МакетШаблон;
	Если Макет=Неопределено Тогда
		Если Метаданные.ОбщиеМакеты.Найти(стрМакет)=Неопределено Тогда
			Макет=ПолучитьМакет(стрМакет);
		Иначе
			Макет=ПолучитьОбщийМакет(стрМакет);
		КонецЕсли;
	КонецЕсли;
	Возврат Макет;
КонецФункции

Функция ПолучитьРеквизитыШапки(СсылкаНаОбъект, стрРеквизиты="")
	Если НЕ ПустаяСтрока(стрРеквизиты) Тогда стрРеквизиты=","+стрРеквизиты; КонецЕсли; 
	Для каждого мдРеквизит Из СсылкаНаОбъект.Метаданные().Реквизиты Цикл
		стрРеквизиты=стрРеквизиты+","+Символы.ПС+мдРеквизит.Имя;
	КонецЦикла;	

	Запрос=Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Дата,
	|	Номер,
	|	Проведен,
	|	Контрагент КАК Поставщик,
	|	Организация КАК Покупатель,
	|	КурсВзаиморасчетов Как Курс,
	|	КратностьВзаиморасчетов Как Кратность
	|	"+стрРеквизиты+"
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка=&ТекущийДокумент
	|";

	#Если НаСервере Тогда
	Запрос.Выполнить();
	#КонецЕсли
	РеквизитыШапки=Запрос.Результат.Выбрать();
	РеквизитыШапки.Следующий();

	Возврат РеквизитыШапки;
КонецФункции 	

Функция Печать_ТОРГ12ЗаПоставщика(СтруктураПараметров, БезУслуг=Ложь)
	//ОбщиеПараметрыПечати=ПолучитьОбщиеДанныеДляПечати(СтруктураПараметров.СсылкаНаОбъект);
	//ПараметрыПечати=ТОРГ12_ПараметрыПечати(ОбщиеПараметрыПечати, СтруктураПараметров.СсылкаНаОбъект,БезУслуг);
	//Если СтруктураПараметров.Свойство("ПараметрыПечати") Тогда
	//	Возврат ПараметрыПечати;
	//КонецЕсли;
	
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	
	ЕдиницаИзмеренияВеса=Константы.ЕдиницаИзмеренияВеса.Получить();
	
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ТоварКод=?(Колонка="","Код",Колонка);

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Дата КАК Дата,
	|	ДатаВходящегоДокумента  КАК ДатаДокумента,
	|	Номер КАК НомерДокумента,
	|	Организация             КАК Организация,
	|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
	|	      ТОГДА Организация
	|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР КОГДА Грузоотправитель = &ПустойКонтрагент
	|	      ТОГДА Контрагент
	|	      ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
	|	Организация             КАК Плательщик,
	|	Контрагент,
	|	Контрагент              КАК Поставщик,
	|	БанковскийСчетКонтрагента КАК БанковскийСчет,
	|	Сделка,
	|	ДоговорКонтрагента.Представление КАК Основание,
	|	ДоговорКонтрагента.ВалютаВзаиморасчетов Как ВалютаВзаиморасчетов,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов      КАК Курс,
	|	КратностьВзаиморасчетов КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент
	|";
	тзШапка=Запрос.Выполнить().Выгрузить();
	
	ПараметрыПечати=Новый Структура;
	Для каждого СтрокаКоллекции Из тзШапка.Колонки Цикл
		ПараметрыПечати.Вставить(СтрокаКоллекции.Имя, тзШапка[0][СтрокаКоллекции.Имя]);
	КонецЦикла;
	
	// Выводим общие реквизиты шапки
	СведенияОПокупателе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Организация, ПараметрыПечати.Дата);
	СведенияОПоставщике = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Контрагент,  ПараметрыПечати.Дата,, ПараметрыПечати.БанковскийСчет);
	СведенияОГрузополучателе  = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Грузополучатель,  ПараметрыПечати.ДатаДокумента);
	СведенияОГрузоотправителе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Грузоотправитель, ПараметрыПечати.ДатаДокумента);
	
	ПараметрыПечати.Вставить("НомерДокумента", СокрЛП(ПараметрыПечати.НомерДокумента));
	ПараметрыПечати.Вставить("ДатаДокумента", Формат(ПараметрыПечати.ДатаДокумента, "ДФ=""дд ММММ гггг"""));
	ПараметрыПечати.Вставить("ПредставлениеГрузополучателя", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет"));
	ПараметрыПечати.Вставить("АдресДоставки", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ФактическийАдрес"));
	ПараметрыПечати.Вставить("ПредставлениеПлательщика", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПокупателе));
	ПараметрыПечати.Вставить("ПредставлениеОрганизации", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузоотправителе));
	ПараметрыПечати.Вставить("ПредставлениеПоставщика", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПоставщике));
	ПараметрыПечати.Вставить("ОрганизацияПоОКПО", СведенияОГрузоотправителе.КодПоОКПО);
	ПараметрыПечати.Вставить("ПоставщикПоОКПО", СведенияОПоставщике.КодПоОКПО);
	ПараметрыПечати.Вставить("ГрузополучательПоОКПО", СведенияОГрузополучателе.КодПоОКПО);
	ПараметрыПечати.Вставить("ПлательщикПоОКПО", СведенияОПокупателе.КодПоОКПО);
	
	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);

	Если ПараметрыПечати.ВалютаДокумента = ПараметрыПечати.ВалютаВзаиморасчетов Тогда
		// Документ оформлен в валюте взаиморасчетов
		ЗапросПоТоварам.УстановитьПараметр("Курс", ПараметрыПечати.Курс);
		ЗапросПоТоварам.УстановитьПараметр("Кратность", ПараметрыПечати.Кратность);
	Иначе
		// Документ оформлен в валюте регламентированного учета
		ЗапросПоТоварам.УстановитьПараметр("Курс", 1);
		ЗапросПоТоварам.УстановитьПараметр("Кратность", 1);
	КонецЕсли;

	ЗапросПоТоварам.Текст="
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                    КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "   КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                              КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление            КАК ВидУпаковки,
	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоМест > 0 ТОГДА ВложенныйЗапрос.КоличествоМест * ВложенныйЗапрос.ЕдиницаИзмеренияМест.Вес
	|		ИНАЧЕ ВложенныйЗапрос.Количество * ВложенныйЗапрос.ЕдиницаИзмерения.Вес
	|	КОНЕЦ КАК МассаБрутто,
	|	ВложенныйЗапрос.Характеристика      КАК Характеристика,
	|	ВложенныйЗапрос.Серия               КАК Серия,
	|	ВложенныйЗапрос.СтавкаНДС           КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена                КАК Цена,
	|	ВложенныйЗапрос.Количество          КАК Количество,
	|	ВложенныйЗапрос.КоличествоМест      КАК КоличествоМест,
	|	ВложенныйЗапрос.Сумма               КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС            КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки         КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка               КАК Метка
	|ИЗ
	|
	|	(
	|	ВЫБРАТЬ
	|		ПоступлениеТоваровУслуг.Номенклатура,
	|		ПоступлениеТоваровУслуг.Коэффициент,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмеренияМест,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмеренияМест.Коэффициент     КАК КоэффициентМест,
	|		ПоступлениеТоваровУслуг.ХарактеристикаНоменклатуры           КАК Характеристика,
	|		ПоступлениеТоваровУслуг.СерияНоменклатуры                    КАК Серия,
	|		ПоступлениеТоваровУслуг.СтавкаНДС,
	|		ПоступлениеТоваровУслуг.Цена * &Курс / &Кратность            КАК Цена,
	|		СУММА(ПоступлениеТоваровУслуг.Количество)                    КАК Количество,
	|		СУММА(ПоступлениеТоваровУслуг.КоличествоМест)                КАК КоличествоМест,
	|		СУММА(ПоступлениеТоваровУслуг.Сумма    * &Курс / &Кратность) КАК Сумма,
	|		СУММА(ПоступлениеТоваровУслуг.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	|		МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки)                 КАК НомерСтроки,
	|		0                                                            КАК Метка
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|	ГДЕ
	|		ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|		ПоступлениеТоваровУслуг.Номенклатура,
	|		ПоступлениеТоваровУслуг.Коэффициент,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмеренияМест,
	|		ПоступлениеТоваровУслуг.ХарактеристикаНоменклатуры,
	|		ПоступлениеТоваровУслуг.СерияНоменклатуры,
	|		ПоступлениеТоваровУслуг.СтавкаНДС,
	|		ПоступлениеТоваровУслуг.Цена
	|
	|	) КАК ВложенныйЗапрос
	|";

	Если НЕ БезУслуг Тогда
		ЗапросПоТоварам.Текст = ЗапросПоТоварам.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Номенклатура                  КАК Номенклатура,
		|	ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Содержание КАК Строка (1000)) КАК ТоварНаименование,
		|	ПоступлениеТоваровУслуг.Номенклатура." + ТоварКод + " КАК ТоварКод,
		|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Представление               КАК БазоваяЕдиницаНаименование,
		|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
		|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков                             КАК ЕдиницаИзмерения,
		|	NULL                                                  КАК ВидУпаковки,
		|	NULL                                                  КАК КоличествоВОдномМесте,
		|	0                                                     КАК МассаБрутто,
		|	NULL                                                  КАК Характеристика,
		|	NULL                                                  КАК Серия,
		|	ПоступлениеТоваровУслуг.СтавкаНДС                     КАК СтавкаНДС,
		|	ПоступлениеТоваровУслуг.Цена * &Курс / &Кратность     КАК Цена,
		|	ПоступлениеТоваровУслуг.Количество                    КАК Количество,
		|	NULL                                                  КАК КоличествоМест,
		|	ПоступлениеТоваровУслуг.Сумма    * &Курс / &Кратность КАК Сумма,
		|	ПоступлениеТоваровУслуг.СуммаНДС * &Курс / &Кратность КАК СуммаНДС,
		|	ПоступлениеТоваровУслуг.НомерСтроки                   КАК НомерСтроки,
		|	1                                                     КАК Метка
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслуг
		|
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент
		|";
	КонецЕсли;

	ЗапросПоТоварам.Текст = ЗапросПоТоварам.Текст + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Номенклатура                    КАК Номенклатура,
	|	ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	ПоступлениеТоваровУслуг.Номенклатура." + ТоварКод + "   КАК ТоварКод,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Представление               КАК БазоваяЕдиницаНаименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков                             КАК ЕдиницаИзмерения,
	|	NULL                                                  КАК ВидУпаковки,
	|	NULL                                                  КАК КоличествоВОдномМесте,
	|	ПоступлениеТоваровУслуг.Количество * ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Вес КАК МассаБрутто,
	|	NULL                                                  КАК Характеристика,
	|	NULL                                                  КАК Серия,
	|	""Без НДС""                                           КАК СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Цена * &Курс / &Кратность     КАК Цена,
	|	ПоступлениеТоваровУслуг.Количество                    КАК Количество,
	|	NULL                                                  КАК КоличествоМест,
	|	ПоступлениеТоваровУслуг.Сумма * &Курс / &Кратность    КАК Сумма,
	|	0                                                     КАК СуммаНДС,
	|	ПоступлениеТоваровУслуг.НомерСтроки                   КАК НомерСтроки,
	|	2                                                     КАК Метка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК ПоступлениеТоваровУслуг
	|
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент
	|";

	ЗапросПоТоварам.Текст = ЗапросПоТоварам.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|";

	//ВыборкаСтрок = ЗапросПоТоварам.Выполнить().Выгрузить();
	ПараметрыПечати.Вставить("Позиции", ЗапросПоТоварам.Выполнить().Выгрузить());
	ПараметрыПечати.Позиции.Колонки.Добавить("СуммаБезНДС");
	ПараметрыПечати.Позиции.Колонки.Добавить("СуммаСНДС");
	ПараметрыПечати.Позиции.Колонки.Добавить("МассаБрутто");
	Для Каждого ВыборкаСтрокТовары Из ПараметрыПечати.Позиции Цикл
		СуммаСНДС = Окр((ВыборкаСтрокТовары.Сумма + ?(ПараметрыПечати.СуммаВключаетНДС, 0, ВыборкаСтрокТовары.СуммаНДС)), 2);
		Если НЕ ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
			МассаБрутто = 0;
		Иначе
			МассаБрутто = ВыборкаСтрокТовары.МассаБрутто;
			МассаБрутто = ?(МассаБрутто <> Неопределено И МассаБрутто <> NULL, МассаБрутто, 0);
		КонецЕсли;
		Мест        = ВыборкаСтрокТовары.КоличествоМест;
		Мест        = ?(Мест <> Неопределено И Мест <> NULL, Мест, 0);
		Количество  = ВыборкаСтрокТовары.Количество;
		СуммаНДС    = Окр(ВыборкаСтрокТовары.СуммаНДС, 2);
		СуммаБезНДС = СуммаСНДС - СуммаНДС;

		ВыборкаСтрокТовары.МассаБрутто = МассаБрутто;
		ВыборкаСтрокТовары.СуммаСНДС   = СуммаСНДС;
		ВыборкаСтрокТовары.СуммаНДС    = СуммаНДС;
		ВыборкаСтрокТовары.СтавкаНДС   = ВыборкаСтрокТовары.СтавкаНДС;
		ВыборкаСтрокТовары.СуммаБезНДС = СуммаБезНДС;
		ВыборкаСтрокТовары.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование)+ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары)+?(ВыборкаСтрокТовары.Метка = 2, " (возвратная тара)", "");
		ВыборкаСтрокТовары.Цена = ?(ПараметрыПечати.СуммаВключаетНДС, ?(Количество = 0, 0, СуммаБезНДС / Количество), ВыборкаСтрокТовары.Цена);
	КонецЦикла;
	
	Макет=ИнициализацияМакета(СтруктураПараметров, "ТОРГ12");
	ПараметрыПечати.Вставить("ОбластьШапка", Макет.ПолучитьОбласть("Шапка"));
	ПараметрыПечати.Вставить("ОбластьЗаголовокТаблицы", Макет.ПолучитьОбласть("ЗаголовокТаб"));
	ПараметрыПечати.Вставить("ОбластьСтрока", Макет.ПолучитьОбласть("Строка"));
	ПараметрыПечати.Вставить("ОбластьИтоговПоСтранице", Макет.ПолучитьОбласть("ИтогоПоСтранице"));
	ПараметрыПечати.Вставить("ОбластьВсего", Макет.ПолучитьОбласть("Всего"));
	ПараметрыПечати.Вставить("ОбластьПодвала", Макет.ПолучитьОбласть("Подвал"));
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_ТОРГ12";


	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ВыполняемыйМодуль") Тогда
		Если Не ПустаяСтрока(СтруктураПараметров.ВыполняемыйМодуль) Тогда
			Выполнить(СтруктураПараметров.ВыполняемыйМодуль);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыПечати.ОбластьШапка.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ПараметрыПечати.ОбластьШапка);

	НомерСтраницы   = 1;

	КоличествоСтрок = ПараметрыПечати.Позиции.Количество();

	// инициализация итогов по странице
	ИтогоМассаБруттоНаСтранице = 0;
	ИтогоМестНаСтранице        = 0;
	ИтогоКоличествоНаСтранице  = 0;
	ИтогоСуммаНаСтранице       = 0;
	ИтогоНДСНаСтранице         = 0;
	ИтогоСуммаСНДСНаСтранице   = 0;

	// инициализация итогов по документу
	ИтогоМассаБрутто = 0;
	ИтогоМест        = 0;
	ИтогоКоличество  = 0;
	ИтогоСумма       = 0;
	ИтогоНДС         = 0;
	ИтогоСуммаСНДС   = 0;
	Ном              = 0;

	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	// Выводим многострочную часть докмента
	Для Каждого ВыборкаСтрокТовары Из ПараметрыПечати.Позиции Цикл
		Ном = Ном + 1;
		ПараметрыПечати.ОбластьСтрока.Параметры.Очистить();
		ПараметрыПечати.ОбластьСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
		ПараметрыПечати.ОбластьСтрока.Параметры.Номер = ПараметрыПечати.Позиции.Индекс(ВыборкаСтрокТовары) + 1;
		
		Если Ном = 1 Тогда // первая срока
			ПараметрыПечати.ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабДокумент.Вывести(ПараметрыПечати.ОбластьЗаголовокТаблицы);
		Иначе
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ПараметрыПечати.ОбластьСтрока);
			МассивВыводимыхОбластей.Добавить(ПараметрыПечати.ОбластьИтоговПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ПараметрыПечати.ОбластьПодвала);
			КонецЕсли;		
			
			Если Ном <> 1 И НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.Очистить();
				ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
				ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
				ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
				ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
				ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
				ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;
				
				ТабДокумент.Вывести(ПараметрыПечати.ОбластьИтоговПоСтранице);
				
				// очистим итоги по странице
				ИтогоМассаБруттоНаСтранице = 0;
				ИтогоМестНаСтранице        = 0;
				ИтогоКоличествоНаСтранице  = 0;
				ИтогоСуммаНаСтранице       = 0;
				ИтогоНДСНаСтранице         = 0;
				ИтогоСуммаСНДСНаСтранице   = 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ПараметрыПечати.ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ПараметрыПечати.ОбластьЗаголовокТаблицы);
			КонецЕсли;
		КонецЕсли;

		ТабДокумент.Вывести(ПараметрыПечати.ОбластьСтрока);

		// увеличим итоги по странице
		ИтогоМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице + МассаБрутто;
		ИтогоМестНаСтранице        = ИтогоМестНаСтранице        + Мест;
		ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице  + Количество;
		ИтогоСуммаНаСтранице       = ИтогоСуммаНаСтранице       + СуммаБезНДС;
		ИтогоНДСНаСтранице         = ИтогоНДСНаСтранице         + СуммаНДС;
		ИтогоСуммаСНДСНаСтранице   = ИтогоСуммаСНДСНаСтранице   + СуммаСНДС;

		// увеличим итоги по дукументу
		ИтогоМассаБрутто = ИтогоМассаБрутто + МассаБрутто;
		ИтогоМест        = ИтогоМест        + Мест;
		ИтогоКоличество  = ИтогоКоличество  + Количество;
		ИтогоСумма       = ИтогоСумма       + СуммаБезНДС;
		ИтогоНДС         = ИтогоНДС         + СуммаНДС;
		ИтогоСуммаСНДС   = ИтогоСуммаСНДС   + СуммаСНДС;
	КонецЦикла;

	// Выводим итоги по последней странице
	ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
	ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
	ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
	ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
	ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
	ПараметрыПечати.ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;
	ТабДокумент.Вывести(ПараметрыПечати.ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ПараметрыПечати.ОбластьВсего.Параметры.ИтогМассаБрутто = ИтогоМассаБрутто;
	ПараметрыПечати.ОбластьВсего.Параметры.ИтогМест        = ИтогоМест;
	ПараметрыПечати.ОбластьВсего.Параметры.ИтогКоличество  = ИтогоКоличество;
	ПараметрыПечати.ОбластьВсего.Параметры.ИтогСуммы       = ИтогоСумма;
	ПараметрыПечати.ОбластьВсего.Параметры.ИтогНДС         = ИтогоНДС;
	ПараметрыПечати.ОбластьВсего.Параметры.ИтогСуммыСНДС   = ИтогоСуммаСНДС;
	ТабДокумент.Вывести(ПараметрыПечати.ОбластьВсего);

	// Выводим подвал документа
	ПолнаяДатаДокумента = Формат(ПараметрыПечати.ДатаДокумента, "ДФ=""дд ММММ гггг """"года""""""");
	ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
	ПервыйРазделитель = Найти(ПолнаяДатаДокумента," ");
	ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента,ДлинаСтроки-ПервыйРазделитель)," ")+ПервыйРазделитель;
	ПараметрыПечати.ОбластьПодвала.Параметры.ДатаДокументаДень     = """"+Лев(ПолнаяДатаДокумента,ПервыйРазделитель-1)+"""";
	ПараметрыПечати.ОбластьПодвала.Параметры.ДатаДокументаМесяц    = Сред(ПолнаяДатаДокумента,ПервыйРазделитель+1,ВторойРазделитель-ПервыйРазделитель-1);
	ПараметрыПечати.ОбластьПодвала.Параметры.ДатаДокументаГод      = Прав(ПолнаяДатаДокумента,ДлинаСтроки-ВторойРазделитель);

	Если ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) И ИтогоМассаБрутто > 0 Тогда
		ПараметрыПечати.ОбластьПодвала.Параметры.МассаГрузаПрописью = ЧислоПрописью(ИтогоМассаБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".";
	КонецЕсли;

	Если ИтогоМест > 0 Тогда
		ПараметрыПечати.ОбластьПодвала.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтогоМест, ,",,,,,,,,0");
	КонецЕсли;

	ПараметрыПечати.ОбластьПодвала.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ПараметрыПечати.ОбластьПодвала.Параметры.СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(ИтогоСуммаСНДС, МодульВалютногоУчета.ПолучитьВалюту("Бух"));
	ТабДокумент.Вывести(ПараметрыПечати.ОбластьПодвала);
	Возврат ТабДокумент;
КонецФункции

Функция Печать_ТОРГ4(СтруктураПараметров)
	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ТоварКод=?(Колонка="","Код",Колонка);

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент",     СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВидПоступленияОрдер", Перечисления.ВидыПоступленияТоваров.ПоОрдеру);
	Запрос.УстановитьПараметр("ПустойКонтрагент",    Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Номер КАК Номер,
	|	Дата  КАК Дата,
	|	Дата  КАК ДатаДокумента,
	|	ДатаВходящегоДокумента  КАК ДатаДокументаСопровождения,
	|	Номер КАК НомерДокументаСопровождения,
	|	Организация,
	|	Организация КАК ЮрФизЛицо,
	|	Организация КАК Руководители,
	|	Контрагент,
	|	Контрагент КАК Поставщик,
	|	ВЫБОР КОГДА Грузоотправитель = &ПустойКонтрагент
	|	      ТОГДА Контрагент
	|	      ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
	|	Подразделение.Представление КАК ПредставлениеПодразделения,
	|	Подразделение,
	|	ВЫБОР
	|		КОГДА ВидПоступления = &ВидПоступленияОрдер ТОГДА Склад.Склад
	|		ИНАЧЕ Склад
	|	КОНЕЦ КАК МестоПриемки,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов      КАК Курс,
	|	КратностьВзаиморасчетов КАК Кратность
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент";

	Шапка=Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ЗапросПоТоварам=Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	ЗапросПоТоварам.УстановитьПараметр("Курс",            Шапка.Курс);
	ЗапросПоТоварам.УстановитьПараметр("Кратность",       Шапка.Кратность);
	ЗапросПоТоварам.Текст="
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "   КАК ТоварКод,
	|	ВложенныйЗапрос.КоличествоМест,
	|	ВложенныйЗапрос.Количество КАК КоличествоШтук,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Стоимость,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка       КАК Метка
	|
	|ИЗ
	|	(
	|	ВЫБРАТЬ
	|		ПоступлениеТоваровУслуг.Номенклатура,
	|		СУММА(ПоступлениеТоваровУслуг.КоличествоМест) КАК КоличествоМест,
	|		СУММА(ПоступлениеТоваровУслуг.Количество) КАК Количество,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.Коэффициент,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмеренияМест,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмеренияМест.Коэффициент  КАК КоэффициентМест,
	|		ПоступлениеТоваровУслуг.Цена        * &Курс / &Кратность  КАК Цена,
	|		СУММА(ПоступлениеТоваровУслуг.Сумма * &Курс / &Кратность) КАК Стоимость,
	|		ПоступлениеТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|		ПоступлениеТоваровУслуг.ХарактеристикаНоменклатуры КАК Характеристика,
	|		ПоступлениеТоваровУслуг.СерияНоменклатуры          КАК Серия,
	|		МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки)       КАК НомерСтроки,
	|		0                                                  КАК Метка
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|
	|	ГДЕ
	|		ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО
	|		ПоступлениеТоваровУслуг.Номенклатура,
	|		ПоступлениеТоваровУслуг.СтавкаНДС,
	|		ПоступлениеТоваровУслуг.Цена,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмеренияМест,
	|		ПоступлениеТоваровУслуг.Коэффициент,
	|		ПоступлениеТоваровУслуг.ХарактеристикаНоменклатуры,
	|		ПоступлениеТоваровУслуг.СерияНоменклатуры
	|	) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	ПоступлениеТоваровУслуг.Номенклатура." + ТоварКод + "   КАК ТоварКод,
	|	0,
	|	ПоступлениеТоваровУслуг.Количество КАК КоличествоШтук,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Представление               КАК ЕдиницаИзмеренияНаименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	0,
	|	ПоступлениеТоваровУслуг.Цена  * &Курс / &Кратность,
	|	ПоступлениеТоваровУслуг.Сумма * &Курс / &Кратность,
	|	""Без НДС"",
	|	NULL,
	|	NULL,
	|	ПоступлениеТоваровУслуг.НомерСтроки КАК НомерСтроки,
	|	2                                   КАК Метка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК ПоступлениеТоваровУслуг
	|
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|
	|";
	ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

	Макет=ИнициализацияМакета(СтруктураПараметров, "ТОРГ4");

	ТабДокумент=Новый ТабличныйДокумент;
	//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_ТОРГ4";

	// Выводим общие реквизиты шапки
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");

	СведенияОПокупателе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаДокумента);

	Если ЗначениеЗаполнено(Шапка.Контрагент) Тогда
		СведенияОПоставщике = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента);
		СведенияОГрузоотправителе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
		ОбластьМакета.Параметры.ПредставлениеПоставщика       = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПоставщике);
		ОбластьМакета.Параметры.ОписаниеПоставщика            = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ЮридическийАдрес,Телефоны,");
		ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		ОбластьМакета.Параметры.ПоставщикПоОКПО               = СведенияОПоставщике.КодПоОКПО;
	КонецЕсли;
	
	ОбластьМакета.Параметры.ОрганизацияПоОКПО=Шапка.Организация.КодПоОКПО;
	ОбластьМакета.Параметры.ВидДеятельностиПоОКДП=Шапка.Организация.КодОКВЭД;
	
	Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента, СтруктураПараметров.СсылкаНаОбъект);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;

	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначенияСервер.НомерНаПечать(СсылкаНаОбъект);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.ГрузополучательПоОКПО    = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.ФИОРуководителя          = Руководитель;
	ОбластьМакета.Параметры.ДолжностьРуководителя     = Руководители.РуководительДолжность;
	ОбластьМакета.Параметры.РеквизитыСопроводительногоДокумента = "сопроводительный документ № "
	                                                            + Шапка.НомерДокументаСопровождения + " от "
	                                                            + Формат(Шапка.ДатаДокументаСопровождения, "ДФ='дд ММММ гггг'");

	ТабДокумент.Вывести(ОбластьМакета);

	СтрокНаСтранице = 23;
	СтрокШапки      = 20;
	СтрокПодвала    = 7;
	НомерСтраницы   = 1;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	КоличествоСтрок = ВыборкаСтрокТовары.Количество();

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// инициализация итогов по странице
	ИтогоМестПоСтранице        = 0;
	ИтогоШтукПоСтранице        = 0;
	ИтогоМассаБруттоПоСтранице = 0;
	ИтогоМассаНеттоПоСтранице  = 0;
	ИтогоСтоимостьПоСтранице   = 0;

	// инициализация итогов по документу
	ИтогоМест        = 0;
	ИтогоШтук        = 0;
	ИтогоМассаБрутто = 0;
	ИтогоМассаНетто  = 0;
	ИтогоСтоимость   = 0;
	Ном              = 0;

	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда

			ОбластьИтоговПоСтранице=Макет.ПолучитьОбласть("ИтогиПоСтранице");
			ОбластьИтоговПоСтранице.Параметры.ИтогоМестПоСтранице        = ИтогоМестПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоШтукПоСтранице        = ИтогоШтукПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоМассаБруттоПоСтранице = ИтогоМассаБруттоПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоМассаНеттоПоСтранице  = ИтогоМассаНеттоПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоСтоимостьПоСтранице   = ИтогоСтоимостьПоСтранице;

			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

			// очистим итоги по странице
			ИтогоМестПоСтранице        = 0;
			ИтогоШтукПоСтранице        = 0;
			ИтогоМассаБруттоПоСтранице = 0;
			ИтогоМассаНеттоПоСтранице  = 0;
			ИтогоСтоимостьПоСтранице   = 0;

			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование)
		                                          + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары)
		                                          + ?(ВыборкаСтрокТовары.Метка = 2, " (возвратная тара)", "");
		ТабДокумент.Вывести(ОбластьМакета);

		// Обновим итоги по странице
		ИтогоМестПоСтранице        = ИтогоМестПоСтранице        + ВыборкаСтрокТовары.КоличествоМест;
		ИтогоШтукПоСтранице        = ИтогоШтукПоСтранице        + ВыборкаСтрокТовары.КоличествоШтук;
		ИтогоМассаБруттоПоСтранице = ИтогоМассаБруттоПоСтранице + 0;
		ИтогоМассаНеттоПоСтранице  = ИтогоМассаНеттоПоСтранице  + 0;
		ИтогоСтоимостьПоСтранице   = ИтогоСтоимостьПоСтранице   + ВыборкаСтрокТовары.Стоимость / Шапка.Кратность;

		// Обновим итогов по документу
		ИтогоМест        = ИтогоМест        + ВыборкаСтрокТовары.КоличествоМест;
		ИтогоШтук        = ИтогоШтук        + ВыборкаСтрокТовары.КоличествоШтук;
		ИтогоМассаБрутто = ИтогоМассаБрутто + 0;
		ИтогоМассаНетто  = ИтогоМассаНетто  + 0;
		ИтогоСтоимость   = ИтогоСтоимость   + ВыборкаСтрокТовары.Стоимость / Шапка.Кратность;

	КонецЦикла;

	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.ИтогоМестПоСтранице        = ИтогоМестПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоШтукПоСтранице        = ИтогоШтукПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоМассаБруттоПоСтранице = ИтогоМассаБруттоПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоМассаНеттоПоСтранице  = ИтогоМассаНеттоПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоСтоимостьПоСтранице   = ИтогоСтоимостьПоСтранице;
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

	// Выводим итоги по документу в общем
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоМест        = ИтогоМест;
	ОбластьМакета.Параметры.ИтогоШтук        = ИтогоШтук;
	ОбластьМакета.Параметры.ИтогоМассаБрутто = ИтогоМассаБрутто;
	ОбластьМакета.Параметры.ИтогоМассаНетто  = ИтогоМассаНетто;
	ОбластьМакета.Параметры.ИтогоСтоимость   = ИтогоСтоимость;
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	
	ОтветственныеЛицаОрганизации = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.Дата, СсылкаНаОбъект);
	
	ОбластьМакета.Параметры.ФИОЧленаКомиссии1=ОтветственныеЛицаОрганизации.ЧленКомиссии1;
	ОбластьМакета.Параметры.ФИОЧленаКомиссии2=ОтветственныеЛицаОрганизации.ЧленКомиссии2;
	ОбластьМакета.Параметры.ФИОЧленаКомиссии3=ОтветственныеЛицаОрганизации.ЧленКомиссии3;
	ОбластьМакета.Параметры.ДолжностьЧленаКомиссии1=ОтветственныеЛицаОрганизации.ЧленКомиссииДолжность1;
	ОбластьМакета.Параметры.ДолжностьЧленаКомиссии2=ОтветственныеЛицаОрганизации.ЧленКомиссииДолжность2;
	ОбластьМакета.Параметры.ДолжностьЧленаКомиссии3=ОтветственныеЛицаОрганизации.ЧленКомиссииДолжность3;
	
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;

КонецФункции

Функция Печать_НакладнаяСНаценкой(СтруктураПараметров)

	СсылкаНаОбъект=СтруктураПараметров.СсылкаНаОбъект;
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	ДатаВходящегоДокумента,
	|	ДоговорКонтрагента,
	|	Контрагент,
	|	КурсВзаиморасчетов,
	|	КратностьВзаиморасчетов,
	|	Контрагент КАК Поставщик,
	|	Организация,
	|	Организация КАК Покупатель,
	|	СуммаДокумента,
	|	ВалютаДокумента,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент",  СсылкаНаОбъект);
	ЗапросПоТоварам.УстановитьПараметр("СуммаВключаетНДС", Шапка.СуммаВключаетНДС);

	Если Шапка.ВалютаДокумента = Шапка.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		// Документ оформлен в валюте взаиморасчетов
		ЗапросПоТоварам.УстановитьПараметр("Курс",      Шапка.КурсВзаиморасчетов);
		ЗапросПоТоварам.УстановитьПараметр("Кратность", Шапка.КратностьВзаиморасчетов);
	Иначе
		// Документ оформлен в валюте регламентированного учета
		ЗапросПоТоварам.УстановитьПараметр("Курс",      1);
		ЗапросПоТоварам.УстановитьПараметр("Кратность", 1);
	КонецЕсли;

	ЗапросПоТоварам.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000))    КАК Товар,
	|	ВложенныйЗапрос.Номенклатура.Код                   КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление     КАК ЕдиницаИзмеренияПоступления,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление КАК ЕдиницаИзмеренияМест,
	|	ВложенныйЗапрос.КоличествоМест,
	|	ВложенныйЗапрос.Количество                         КАК КоличествоПоступления,
	|	ВложенныйЗапрос.Коэффициент,
	|	ВложенныйЗапрос.ЦенаПоступления,
	|	ВложенныйЗапрос.СуммаПоступления,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаИзмеренияПродажи,
	|	ВложенныйЗапрос.КоличествоПродажи,
	|	ВложенныйЗапрос.ЦенаПродажи,
	|	ВложенныйЗапрос.СуммаПродажи,
	|	ВложенныйЗапрос.ПроцентНаценки,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПоступлениеТоваровУслуг.Номенклатура          КАК Номенклатура,
	|		СУММА(ПоступлениеТоваровУслуг.КоличествоМест) КАК КоличествоМест,
	|		СУММА(ПоступлениеТоваровУслуг.Количество)     КАК Количество,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения      КАК ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмеренияМест  КАК ЕдиницаИзмеренияМест,
	|		ПоступлениеТоваровУслуг.Коэффициент           КАК Коэффициент,
	|		ВЫБОР
	|			КОГДА &СуммаВключаетНДС ТОГДА МИНИМУМ((ПоступлениеТоваровУслуг.Сумма * &Курс / &Кратность) / ПоступлениеТоваровУслуг.Количество)
	|			ИНАЧЕ МИНИМУМ(((ПоступлениеТоваровУслуг.Сумма + ПоступлениеТоваровУслуг.СуммаНДС) * &Курс / &Кратность) / ПоступлениеТоваровУслуг.Количество)
	|		КОНЕЦ КАК ЦенаПоступления,
	|		ВЫБОР
	|			КОГДА &СуммаВключаетНДС ТОГДА СУММА(ПоступлениеТоваровУслуг.Сумма * &Курс / &Кратность)
	|			ИНАЧЕ СУММА((ПоступлениеТоваровУслуг.Сумма + ПоступлениеТоваровУслуг.СуммаНДС) * &Курс / &Кратность)
	|		КОНЕЦ КАК СуммаПоступления,
	|		СУММА(ПоступлениеТоваровУслуг.Количество * ПоступлениеТоваровУслуг.Коэффициент / ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК КоличествоПродажи,
	|		МИНИМУМ(ПоступлениеТоваровУслуг.ЦенаВРознице)                                      КАК ЦенаПродажи,
	|		СУММА((ПоступлениеТоваровУслуг.Количество * ПоступлениеТоваровУслуг.Коэффициент / ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) * ПоступлениеТоваровУслуг.ЦенаВРознице) КАК СуммаПродажи,
	|		СУММА(ПоступлениеТоваровУслуг.ПроцентРозничнойНаценки)                           КАК ПроцентНаценки,
	|		ПоступлениеТоваровУслуг.СтавкаНДС                  КАК СтавкаНДС,
	|		ПоступлениеТоваровУслуг.ХарактеристикаНоменклатуры КАК Характеристика,
	|		ПоступлениеТоваровУслуг.СерияНоменклатуры          КАК Серия,
	|		МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки)       КАК НомерСтроки
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|	
	|	ГДЕ
	|		ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПоступлениеТоваровУслуг.Номенклатура,
	|		ПоступлениеТоваровУслуг.СтавкаНДС,
	|		ПоступлениеТоваровУслуг.Цена,
	|		ПоступлениеТоваровУслуг.ЦенаВРознице,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмеренияМест,
	|		ПоступлениеТоваровУслуг.Коэффициент,
	|		ПоступлениеТоваровУслуг.ХарактеристикаНоменклатуры,
	|		ПоступлениеТоваровУслуг.СерияНоменклатуры) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР
	|";

	ВыборкаСтрок = ЗапросПоТоварам.Выполнить().Выгрузить();

	ТабДокумент                     = Новый ТабличныйДокумент;
	//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_НакладнаяСНаценкой";
	Макет                           = ИнициализацияМакета(СтруктураПараметров, "НакладнаяСНаценкой");
	ФлагПечатиМест                  = (ВыборкаСтрок.Итог("КоличествоМест") > 0);

	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Накладная");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата), "ПолноеНаименование,");
	ОбластьМакета.Параметры.Поставщик = Шапка.Контрагент;
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Шапка.Покупатель, Шапка.Дата), "ПолноеНаименование,");
	ОбластьМакета.Параметры.Получатель = Шапка.Организация;
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести табличную часть
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы" + ?(ФлагПечатиМест, "Мест", ""));

	ОбластьМакета.Параметры.ЗаголовокПоступления = "Поступление" + ?(Шапка.УчитыватьНДС, " с НДС", "");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Строка" + ?(ФлагПечатиМест, "Мест", ""));

	ВсегоПоступления = 0;
	ВсегоПродажи     = 0;
	ВсегоНаценки     = 0;

	Для Каждого ВыборкаСтрокТовары Из ВыборкаСтрок Цикл
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.НомерСтроки  = ВыборкаСтрок.Индекс(ВыборкаСтрокТовары) + 1;
		ОбластьМакета.Параметры.Товар        = СокрЛП(ВыборкаСтрокТовары.Товар) + ПечатныеФормыСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
		СуммаНаценки                         = ВыборкаСтрокТовары.СуммаПродажи - ВыборкаСтрокТовары.СуммаПоступления;
		ОбластьМакета.Параметры.СуммаНаценки = СуммаНаценки;

		ТабДокумент.Вывести(ОбластьМакета);

		ВсегоПоступления = ВсегоПоступления + ВыборкаСтрокТовары.СуммаПоступления;
		ВсегоПродажи     = ВсегоПродажи     + ВыборкаСтрокТовары.СуммаПродажи;
		ВсегоНаценки     = ВсегоНаценки     + СуммаНаценки;
	КонецЦикла;

	// Вывести Итого
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.ВсегоПоступления = ОбщегоНазначения.ФорматСумм(ВсегоПоступления);
	ОбластьМакета.Параметры.ВсегоПродажи     = ОбщегоНазначения.ФорматСумм(ВсегоПродажи);
	ОбластьМакета.Параметры.ВсегоНаценки     = ОбщегоНазначения.ФорматСумм(ВсегоНаценки);
	ОбластьМакета.Параметры.ВсегоПроцент     = ?(ВсегоПоступления = 0, "", ОбщегоНазначения.ФорматСумм(100 * ВсегоНаценки / ВсегоПоступления));
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести Сумму прописью
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований "  + ВыборкаСтрок.Количество()
	                                       + ", сумма поступления " + ОбщегоНазначения.ФорматСумм(ВсегоПоступления, МодульВалютногоУчета.ПолучитьВалюту("Бух"))
	                                       + ", сумма продажи "     + ОбщегоНазначения.ФорматСумм(ВсегоПродажи,     МодульВалютногоУчета.ПолучитьВалюту("Бух"))
	                                       + ", сумма наценки "     + ОбщегоНазначения.ФорматСумм(ВсегоНаценки,     МодульВалютногоУчета.ПолучитьВалюту("Бух"));

	ОбластьМакета.Параметры.СуммаПоступленияПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(ВсегоПоступления, МодульВалютногоУчета.ПолучитьВалюту("Бух"));
	ОбластьМакета.Параметры.СуммаПродажиПрописью     = ОбщегоНазначения.СформироватьСуммуПрописью(ВсегоПродажи,     МодульВалютногоУчета.ПолучитьВалюту("Бух"));
	ОбластьМакета.Параметры.СуммаНаценкиПрописью     = ОбщегоНазначения.СформироватьСуммуПрописью(ВсегоНаценки,     МодульВалютногоУчета.ПолучитьВалюту("Бух"));
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести подписи
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;
КонецФункции

Функция Печать(СтруктураПараметров, КоличествоЭкземпляров=1, НаПринтер=Ложь, ТабДокумент=Неопределено) Экспорт
	Если СтруктураПараметров.ИмяМакета="Накладная" тогда
		ТабДокумент=Печать_ПоступлениеТоваров(СтруктураПараметров,ТабДокумент);

	ИначеЕсли СтруктураПараметров.ИмяМакета="ТОРГ12" тогда
		ТабДокумент=Печать_ТОРГ12(СтруктураПараметров,ТабДокумент);

	ИначеЕсли СтруктураПараметров.ИмяМакета="ТОРГ12_БезУслуг" тогда
		ТабДокумент=Печать_ТОРГ12(СтруктураПараметров,ТабДокумент, Истина);

	ИначеЕсли СтруктураПараметров.ИмяМакета="ТОРГ4" тогда
		ТабДокумент=Печать_ТОРГ4(СтруктураПараметров);

	ИначеЕсли СтруктураПараметров.ИмяМакета="М4" тогда
		ТабДокумент=Печать_М4(СтруктураПараметров,ТабДокумент);

	ИначеЕсли СтруктураПараметров.ИмяМакета="Бланк" Тогда
		ТабДокумент="БланкТоварногоНаполнения";

	ИначеЕсли СтруктураПараметров.ИмяМакета="ПриходНаРозничныеСкладыВЦенахАТТ" Тогда
		ТабДокумент=ПечатныеФормыСервер.ПриходРасходСРозничныхСкладовВЦенахАТТ(СтруктураПараметров.СсылкаНаОбъект, МодульВалютногоУчета.ПолучитьВалюту("Бух"), Истина);

	ИначеЕсли СтруктураПараметров.ИмяМакета="БухгалтерскаяСправка" Тогда
		ТабДокумент=ПечатныеФормыСервер.БухгалтерскаяСправка(СтруктураПараметров, "Хозрасчетный");

	ИначеЕсли СтруктураПараметров.ИмяМакета="Акт" Тогда
	    ТабДокумент=Печать_АктаОбОказанииУслуг(СтруктураПараметров,ТабДокумент);
		
	ИначеЕсли СтруктураПараметров.ИмяМакета="НакладнаяСНаценкой" Тогда
	    ТабДокумент=Печать_НакладнаяСНаценкой(СтруктураПараметров);
	КонецЕсли;

	Возврат ТабДокумент;
КонецФункции

Функция ПолучитьОбщиеДанныеДляПечати(СсылкаНаОбъект)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          СсылкаНаОбъект.Дата);
	Запрос.УстановитьПараметр("ТекущийДокумент",    СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ПустойКонтрагент",   Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст="ВЫБРАТЬ
	|	ИсточникДанных.Склад КАК Склад,
	|	ИсточникДанных.Номер КАК Номер,
	|	ИсточникДанных.Дата КАК Дата,
	|	ИсточникДанных.Дата КАК ДатаДокумента,
	|	ИсточникДанных.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ИсточникДанных.Грузоотправитель = &ПустойКонтрагент
	|			ТОГДА ИсточникДанных.Контрагент
	|		ИНАЧЕ ИсточникДанных.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА ИсточникДанных.Грузополучатель = &ПустойКонтрагент
	|			ТОГДА ИсточникДанных.Организация
	|		ИНАЧЕ ИсточникДанных.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ИсточникДанных.БанковскийСчетКонтрагента КАК БанковскийСчет,
	|	ИсточникДанных.Организация КАК Организация,
	|	ИсточникДанных.Сделка КАК Сделка,
	|	ИсточникДанных.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ИсточникДанных.ДоговорКонтрагента.Представление КАК Основание,
	|	ИсточникДанных.Подразделение КАК Подразделение,
	|	ИсточникДанных.ВалютаДокумента КАК ВалютаДокумента,
	|	ИсточникДанных.КурсВзаиморасчетов КАК Курс,
	|	ИсточникДанных.КратностьВзаиморасчетов КАК Кратность,
	|	ИсточникДанных.УчитыватьНДС КАК УчитыватьНДС,
	|	ИсточникДанных.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент";
	тзДанные=Запрос.Выполнить().Выгрузить();
	СтруктураДанных=ИнициализацияСтруктурыДанных();
	Для каждого СтрокаКоллекции Из тзДанные.Колонки Цикл
		Если СтруктураДанных.Свойство(СтрокаКоллекции.Имя) Тогда
			СтруктураДанных[СтрокаКоллекции.Имя]=тзДанные[0][СтрокаКоллекции.Имя];
		Иначе	
			СтруктураДанных.Вставить(СтрокаКоллекции.Имя, тзДанные[0][СтрокаКоллекции.Имя]);
		Конецесли;
	КонецЦикла;
	
	ТоварКод=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ПустаяСтрока(ТоварКод) Тогда ТоварКод="Код"; КонецЕсли; 
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	// Вычислим курс документа для печати
	Если СсылкаНаОбъект.ВалютаДокумента = СсылкаНаОбъект.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		// Документ оформлен в валюте взаиморасчетов
		Запрос.УстановитьПараметр("Курс", СсылкаНаОбъект.КурсВзаиморасчетов);
		Запрос.УстановитьПараметр("Кратность", СсылкаНаОбъект.КратностьВзаиморасчетов);
	Иначе
		// Документ оформлен в валюте регламентированного учета
		Запрос.УстановитьПараметр("Курс",      1);
		Запрос.УстановитьПараметр("Кратность", 1);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.Номенклатура                                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ИсточникДанных.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК НоменклатураНаименование,
	|	ИсточникДанных.Номенклатура." + ТоварКод + "                 КАК НоменклатураКод,
	|	ИсточникДанных.Номенклатура.КодТНВЭД                 		  КАК НоменклатураКодТНВЭД,
	|	ИсточникДанных.ЕдиницаИзмерения.Представление                КАК БазоваяЕдиницаНаименование,
	|	ИсточникДанных.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ИсточникДанных.ЕдиницаИзмерения     						  КАК ЕдиницаИзмерения,
	|	ИсточникДанных.ЕдиницаИзмеренияМест.Представление            КАК ВидУпаковки,
	|	ИсточникДанных.ЕдиницаИзмеренияМест.Коэффициент / ИсточникДанных.Коэффициент КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ИсточникДанных.КоличествоМест > 0 ТОГДА ИсточникДанных.КоличествоМест * ИсточникДанных.ЕдиницаИзмеренияМест.Вес
	|		ИНАЧЕ ИсточникДанных.Количество * ИсточникДанных.ЕдиницаИзмерения.Вес
	|	КОНЕЦ КАК МассаБрутто,
	|	ИсточникДанных.ХарактеристикаНоменклатуры       КАК Характеристика,
	|	ИсточникДанных.СерияНоменклатуры                КАК Серия,
	|	ИсточникДанных.СерияНоменклатуры.НомерГТД     КАК ПредставлениеГТД,
	|	ИсточникДанных.СерияНоменклатуры.СтранаПроисхождения.НаименованиеПолное  КАК ПредставлениеСтраны,
	|   	ВЫБОР КОГДА ИсточникДанных.СерияНоменклатуры = &ПустаяСерия Тогда
	|   		ИсточникДанных.Номенклатура.СтранаПроисхождения
	|		Иначе 
	|			ИсточникДанных.СерияНоменклатуры.СтранаПроисхождения
	|   	Конец КАК СтранаПроисхождения,	
	|		ВЫБОР КОГДА ИсточникДанных.СерияНоменклатуры = &ПустаяСерия Тогда
	|   		ИсточникДанных.Номенклатура.СтранаПроисхождения.Код
	|		Иначе 
	|			ИсточникДанных.СерияНоменклатуры.СтранаПроисхождения.Код
	|   	Конец КАК СтранаПроисхожденияКод,	
	|	ИсточникДанных.СтавкаНДС            КАК СтавкаНДС,
	|	ИсточникДанных.Цена * &Курс / &Кратность            КАК Цена,
	|	ИсточникДанных.Количество           КАК Количество,
	|	ИсточникДанных.КоличествоМест       КАК КоличествоМест,
	|	ВЫБОР КОГДА  Ссылка.СуммаВключаетНДС ТОГДА (ИсточникДанных.Сумма* &Курс / &Кратность)-(ИсточникДанных.СуммаНДС* &Курс / &Кратность) ИНАЧЕ ИсточникДанных.Сумма* &Курс / &Кратность КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА  Ссылка.СуммаВключаетНДС ТОГДА Сумма* &Курс / &Кратность ИНАЧЕ (ИсточникДанных.Сумма* &Курс / &Кратность)+(ИсточникДанных.СуммаНДС* &Курс / &Кратность) КОНЕЦ КАК СтоимостьСНДС,
	|	ИсточникДанных.СуммаНДС             КАК СуммаНДС,
	|	ИсточникДанных.НомерСтроки          КАК НомерСтроки,
	|	""Товары""                КАК ТабличнаяЧасть
	|ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ИсточникДанных
	|	ГДЕ
	|		ИсточникДанных.Ссылка = &ТекущийДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсточникДанных.Номенклатура                  КАК Номенклатура,
	|	"+ОбработкаТабличныхЧастей.ПолучитьЧастьЗапросаДляВыбораСодержания("ИсточникДанных")+" КАК НоменклатураНаименование,
	|	ИсточникДанных.Номенклатура." + ТоварКод + " КАК НоменклатураКод,
	|	NULL					  	                		 КАК НоменклатураКодТНВЭД,
	|	ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК БазоваяЕдиницаНаименование,
	|	ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	NULL                                                 КАК ВидУпаковки,
	|	NULL                                                 КАК КоличествоВОдномМесте,
	|	0                                                    КАК МассаБрутто,
	|	NULL                                                 КАК Характеристика,
	|	NULL                                                 КАК Серия,
	|	NULL                                                 КАК ПредставлениеГТД,
	|	NULL                                                 КАК ПредставлениеСтраны,
	|	NULL                                                 КАК СтранаПроисхождения,
	|	NULL                                                 КАК СтранаПроисхожденияКод,
	|	ИсточникДанных.СтавкаНДС                     КАК СтавкаНДС,
	|	ИсточникДанных.Цена * &Курс / &Кратность     КАК Цена,
	|	ИсточникДанных.Количество                    КАК Количество,
	|	NULL                                                 КАК КоличествоМест,
	|	ВЫБОР КОГДА  Ссылка.СуммаВключаетНДС ТОГДА (ИсточникДанных.Сумма* &Курс / &Кратность)-(ИсточникДанных.СуммаНДС* &Курс / &Кратность) ИНАЧЕ ИсточникДанных.Сумма* &Курс / &Кратность КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА  Ссылка.СуммаВключаетНДС ТОГДА Сумма* &Курс / &Кратность ИНАЧЕ (ИсточникДанных.Сумма* &Курс / &Кратность)+(ИсточникДанных.СуммаНДС* &Курс / &Кратность) КОНЕЦ КАК СтоимостьСНДС,
	|	ИсточникДанных.СуммаНДС * &Курс / &Кратность КАК СуммаНДС,
	|	ИсточникДанных.НомерСтроки                   КАК НомерСтроки,
	|	""Услуги""                                           КАК ТабличнаяЧасть
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ИсточникДанных
	|
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсточникДанных.Номенклатура                    КАК Номенклатура,
	|	ВЫРАЗИТЬ(ИсточникДанных.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК НоменклатураНаименование,
	|	ИсточникДанных.Номенклатура." + ТоварКод + "   КАК НоменклатураКод,
	|	NULL					  	                		  КАК НоменклатураКодТНВЭД,
	|	ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Представление               КАК БазоваяЕдиницаНаименование,
	|	ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков                             КАК ЕдиницаИзмерения,
	|	NULL                                                  КАК ВидУпаковки,
	|	NULL                                                  КАК КоличествоВОдномМесте,
	|	ИсточникДанных.Количество * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Вес КАК МассаБрутто,
	|	NULL                                                  КАК Характеристика,
	|	NULL                                                  КАК Серия,
	|	NULL                                                  КАК ПредставлениеГТД,
	|	NULL                                                  КАК ПредставлениеСтраны,
	|	NULL                                                  КАК СтранаПроисхождения,
	|	NULL                                                  КАК СтранаПроисхожденияКод,
	|	""Без НДС""                                           КАК СтавкаНДС,
	|	ИсточникДанных.Цена * &Курс / &Кратность      КАК Цена,
	|	ИсточникДанных.Количество                     КАК Количество,
	|	NULL                                                  КАК КоличествоМест,
	|	ИсточникДанных.Сумма* &Курс / &Кратность КАК СтоимостьБезНДС,
	|	ИсточникДанных.Сумма* &Курс / &Кратность КАК СтоимостьСНДС,
	|	0                                                     КАК СуммаНДС,
	|	ИсточникДанных.НомерСтроки                    КАК НомерСтроки,
	|	""ВозвратнаяТара""                                           КАК ТабличнаяЧасть
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК ИсточникДанных
	|
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсточникДанных.ОбъектСтроительства                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ИсточникДанных.ОбъектСтроительства.Наименование КАК Строка(1000)) КАК НоменклатураНаименование,
	|	ИсточникДанных.ОбъектСтроительства.Код КАК НоменклатураКод,
	|	NULL					  	                		 КАК НоменклатураКодТНВЭД,
	|	NULL КАК БазоваяЕдиницаНаименование,
	|	NULL КАК БазоваяЕдиницаКодПоОКЕИ,
	|	NULL КАК ЕдиницаИзмерения,
	|	NULL                                                 КАК ВидУпаковки,
	|	NULL                                                 КАК КоличествоВОдномМесте,
	|	0                                                    КАК МассаБрутто,
	|	NULL                                                 КАК Характеристика,
	|	NULL                                                 КАК Серия,
	|	NULL                                                 КАК ПредставлениеГТД,
	|	NULL                                                 КАК ПредставлениеСтраны,
	|	NULL                                                 КАК СтранаПроисхождения,
	|	NULL                                                 КАК СтранаПроисхожденияКод,
	|	ИсточникДанных.СтавкаНДС                     КАК СтавкаНДС,
	|	ИсточникДанных.Сумма/ИсточникДанных.Количество*&Курс/&Кратность КАК Цена,
	|	ИсточникДанных.Количество                    КАК Количество,
	|	NULL                                                 КАК КоличествоМест,
	|	ВЫБОР КОГДА  Ссылка.СуммаВключаетНДС ТОГДА (ИсточникДанных.Сумма* &Курс / &Кратность)-(ИсточникДанных.СуммаНДС* &Курс / &Кратность) ИНАЧЕ ИсточникДанных.Сумма* &Курс / &Кратность КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА  Ссылка.СуммаВключаетНДС ТОГДА Сумма* &Курс / &Кратность ИНАЧЕ (ИсточникДанных.Сумма* &Курс / &Кратность)+(ИсточникДанных.СуммаНДС* &Курс / &Кратность) КОНЕЦ КАК СтоимостьСНДС,
	|	ИсточникДанных.СуммаНДС * &Курс / &Кратность КАК СуммаНДС,
	|	ИсточникДанных.НомерСтроки                   КАК НомерСтроки,
	|	""ОбъектСтроительства""                                           КАК ТабличнаяЧасть
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ИсточникДанных
	|
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсточникДанных.НематериальныйАктив                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ИсточникДанных.НематериальныйАктив.Наименование КАК Строка(1000)) КАК НоменклатураНаименование,
	|	ИсточникДанных.НематериальныйАктив.Код КАК НоменклатураКод,
	|	NULL					  	                		 КАК НоменклатураКодТНВЭД,
	|	NULL КАК БазоваяЕдиницаНаименование,
	|	NULL КАК БазоваяЕдиницаКодПоОКЕИ,
	|	NULL КАК ЕдиницаИзмерения,
	|	NULL                                                 КАК ВидУпаковки,
	|	NULL                                                 КАК КоличествоВОдномМесте,
	|	0                                                    КАК МассаБрутто,
	|	NULL                                                 КАК Характеристика,
	|	NULL                                                 КАК Серия,
	|	NULL                                                 КАК ПредставлениеГТД,
	|	NULL                                                 КАК ПредставлениеСтраны,
	|	NULL                                                 КАК СтранаПроисхождения,
	|	NULL                                                 КАК СтранаПроисхожденияКод,
	|	ИсточникДанных.СтавкаНДС                     КАК СтавкаНДС,
	|	ИсточникДанных.Сумма*&Курс/&Кратность КАК Цена,
	|	1                    КАК Количество,
	|	NULL                                                 КАК КоличествоМест,
	|	ВЫБОР КОГДА  Ссылка.СуммаВключаетНДС ТОГДА (ИсточникДанных.Сумма* &Курс / &Кратность)-(ИсточникДанных.СуммаНДС* &Курс / &Кратность) ИНАЧЕ ИсточникДанных.Сумма* &Курс / &Кратность КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА  Ссылка.СуммаВключаетНДС ТОГДА Сумма* &Курс / &Кратность ИНАЧЕ (ИсточникДанных.Сумма* &Курс / &Кратность)+(ИсточникДанных.СуммаНДС* &Курс / &Кратность) КОНЕЦ КАК СтоимостьСНДС,
	|	ИсточникДанных.СуммаНДС * &Курс / &Кратность КАК СуммаНДС,
	|	ИсточникДанных.НомерСтроки                   КАК НомерСтроки,
	|	""НематериальныеАктивы""                                           КАК ТабличнаяЧасть
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.НематериальныеАктивы КАК ИсточникДанных
	|
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ТекущийДокумент
	|УПОРЯДОЧИТЬ ПО ТабличнаяЧасть УБЫВ, НомерСтроки ВОЗР
	|
	|";
	тзТовары=Запрос.Выполнить().Выгрузить();

	НомерСтроки=0;
	тзДанные = ИнициализацияТабличнойЧасти();
	Для Каждого СтрокаТз ИЗ тзТовары Цикл
		НоваяСтрока=тзДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТз);
		НомерСтроки=НомерСтроки+1;
		НоваяСтрока.НомерСтроки=НомерСтроки;
		
		Если ЗначениеЗаполнено(СтрокаТз.Серия) И ЗначениеЗаполнено(СтрокаТз.Серия.НомерРазделаГТД) Тогда
			СтрокаТз.ПредставлениеГТД=СокрЛП(СтрокаТз.ПредставлениеГТД)+"/"+СокрЛП(СтрокаТз.Серия.НомерРазделаГТД);
		КонецЕсли; //***
		
		Если ((СтрокаТз.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120)
			ИЛИ (СтрокаТз.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118)
			ИЛИ (СтрокаТз.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110)) Тогда
			СтрокаТз.СтоимостьБезНДС = СтрокаТз.СтоимостьСНДС;
			Если НЕ СсылкаНаОбъект.СуммаВключаетНДС Тогда
				СтрокаТз.Цена = 0;
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаТз.Цена = 0 Тогда
			СтрокаТз.Цена=?(СтрокаТз.Количество=0, 0, Окр(СтрокаТз.СтоимостьБезНДС / СтрокаТз.Количество, 2));
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТз.НоменклатураНаименование) Тогда
			СтрокаТз.НоменклатураНаименование = СтрокаТз.Номенклатура;
		КонецЕсли;
		
		Если Строка(СтрокаТз.ПредставлениеСтраны)="Россия" 
			ИЛИ Строка(СтрокаТз.ПредставлениеСтраны)="Российская Федерация"
			ИЛИ СтрокаТз.СтранаПроисхождения=Справочники.КлассификаторСтранМира.РОССИЯ Тогда			
			СтрокаТз.ПредставлениеСтраны="";
			СтрокаТз.СтранаПроисхожденияКод="";
		Иначе
			Если ЗначениеЗаполнено(СтрокаТз.СтранаПроисхождения) Тогда
				СтрокаТз.ПредставлениеСтраны=СокрЛП(СтрокаТз.СтранаПроисхождения.Наименование);
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТз.ЕдиницаИзмерения) Тогда
			СтрокаТз.Количество=0;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураДанных.Вставить("Позиции", тзДанные);

 	Возврат СтруктураДанных;
КонецФункции	

Функция ИнициализацияСтруктурыДанных()
	СтруктураДанных=Новый Структура;
	СтруктураДанных.Вставить("Склад");
	СтруктураДанных.Вставить("Номер");
	СтруктураДанных.Вставить("Дата");
	СтруктураДанных.Вставить("ДатаДокумента");
	СтруктураДанных.Вставить("Организация");
	СтруктураДанных.Вставить("АдресДоставки");
	СтруктураДанных.Вставить("Грузополучатель");
	СтруктураДанных.Вставить("Грузоотправитель");
	СтруктураДанных.Вставить("БанковскийСчет");
	СтруктураДанных.Вставить("Покупатель");
	СтруктураДанных.Вставить("Сделка");
	СтруктураДанных.Вставить("ДоговорКонтрагента");
	СтруктураДанных.Вставить("Основание");
	СтруктураДанных.Вставить("Подразделение");
	СтруктураДанных.Вставить("ВалютаДокумента");
	СтруктураДанных.Вставить("Курс");
	СтруктураДанных.Вставить("Кратность");
	СтруктураДанных.Вставить("УчитыватьНДС");
	СтруктураДанных.Вставить("СуммаВключаетНДС");
	
	Возврат СтруктураДанных
КонецФункции

Функция ИнициализацияТабличнойЧасти()
	
	Товары=Новый ТаблицаЗначений();
	Товары.Колонки.Добавить("Номенклатура");
	Товары.Колонки.Добавить("НоменклатураНаименование");
	Товары.Колонки.Добавить("НоменклатураКод");
	Товары.Колонки.Добавить("НоменклатураКодТНВЭД");
	Товары.Колонки.Добавить("БазоваяЕдиницаНаименование");
	Товары.Колонки.Добавить("БазоваяЕдиницаКодПоОКЕИ");
	Товары.Колонки.Добавить("ЕдиницаИзмерения");
	Товары.Колонки.Добавить("ВидУпаковки");
	Товары.Колонки.Добавить("КоличествоВОдномМесте",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("МассаБрутто",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("Характеристика");
	Товары.Колонки.Добавить("Серия");
	Товары.Колонки.Добавить("ПредставлениеГТД");
	Товары.Колонки.Добавить("ПредставлениеСтраны");
	Товары.Колонки.Добавить("СтранаПроисхождения");
	Товары.Колонки.Добавить("СтранаПроисхожденияКод");
	Товары.Колонки.Добавить("СтавкаНДС");
	Товары.Колонки.Добавить("Цена",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("ЕстьСкидкиПоСтроке");
	Товары.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("КоличествоМест",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("СтоимостьБезНДС",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("СтоимостьСНДС",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("СуммаНДС");
	Товары.Колонки.Добавить("НомерСтроки",Новый ОписаниеТипов("Число"));
	Товары.Колонки.Добавить("ТабличнаяЧасть");
	
	Возврат Товары;
КонецФункции

Функция М4_ПараметрыПечати(ПараметрыПечати, СсылкаНаОбъект)
	
	МассивСтрокДляУдаления=Новый Массив;
	Для Каждого СтрокаТз ИЗ ПараметрыПечати.Позиции Цикл
		Если НЕ СтрокаТз.ТабличнаяЧасть="Услуги" Тогда Продолжить; КонецЕсли;
		МассивСтрокДляУдаления.Добавить(СтрокаТз);
	КонецЦикла;	
	Для Каждого СтрокаМ ИЗ МассивСтрокДляУдаления Цикл
		ПараметрыПечати.Позиции.Удалить(СтрокаМ);
	КонецЦикла;	

	СведенияОПокупателе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Организация, ПараметрыПечати.ДатаДокумента);
	ПараметрыПечати.Вставить("ПредставлениеОрганизации", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПокупателе));
	ПараметрыПечати.Вставить("ОрганизацияПоОКПО", СведенияОПокупателе.КодПоОКПО);
	ПараметрыПечати.Вставить("ПредставлениеПодразделения", ПараметрыПечати.Подразделение);
	ПараметрыПечати.Вставить("ВидПоступления",СсылкаНаОбъект.ВидПоступления);
	Если ПараметрыПечати.ВидПоступления=Перечисления.ВидыПоступленияТоваров.ПоОрдеру Тогда
		ПараметрыПечати.Вставить("НомерДокумента", СсылкаНаОбъект.Склад.Номер);
	Иначе	
		ПараметрыПечати.Вставить("НомерДокумента", ОбщегоНазначенияСервер.НомерНаПечать(СсылкаНаОбъект));
	КонецЕсли;
	ПараметрыПечати.Вставить("ДатаСоставления", ПараметрыПечати.ДатаДокумента);
	ПредставлениеКонтрагента = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Контрагент, ПараметрыПечати.ДатаДокумента), "ПолноеНаименование,");
	ПараметрыПечати.Вставить("ПоставщикНаименование", ПредставлениеКонтрагента);
	Если СсылкаНаОбъект.Товары.Количество()<>0 Тогда
		СтрокаДок=СсылкаНаОбъект.Товары[0];
		Если ЗначениеЗаполнено(СтрокаДок.ТОП) Тогда
			ПараметрыПечати.Вставить("СубСчет",СтрокаДок.ТОП.ПроводкиБУ[0].СчетКредит.Код);
			ПараметрыПечати.Вставить("КодАналитическогоУчета",Лев(СтрокаДок.ТОП.ПроводкиБУ[0].СчетКредит.Код,2));
		КонецЕсли;
	КонецЕсли;	
	ПараметрыПечати.Вставить("НомерСопроводительногоДокумента",СокрЛП(ПараметрыПечати.Номер));
	ПараметрыПечати.Вставить("СкладНаименование",СокрЛП(ПараметрыПечати.Склад.Наименование));
	ПараметрыПечати.Вставить("ДатаСоставления", Формат(ПараметрыПечати.ДатаДокумента,"ДФ=dd.MM.yyyy"));
	ПараметрыПечати.Вставить("ПоставщикКод", ПараметрыПечати.Контрагент.Код);

	ПараметрыПечати.Позиции.Колонки.НоменклатураНаименование.Имя="ТоварНаименование";
	ПараметрыПечати.Позиции.Колонки.СтоимостьБезНДС.Имя="СуммаБезНДС";
	ПараметрыПечати.Позиции.Колонки.СтоимостьСНДС.Имя="ВсегоСНДС";
	ПараметрыПечати.Позиции.Колонки.Количество.Имя="КоличествоПринято";
	ПараметрыПечати.Позиции.Колонки.НоменклатураКод.Имя="ТоварКод";
	ПараметрыПечати.Позиции.Колонки.БазоваяЕдиницаКодПоОКЕИ.Имя="ЕдиницаИзмеренияКод";
	ПараметрыПечати.Позиции.Колонки.БазоваяЕдиницаНаименование.Имя="ЕдиницаИзмеренияНаименование";

	Для Каждого СтрокаТз ИЗ ПараметрыПечати.Позиции Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТз.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		СтрокаТз.Цена= СтрокаТз.СуммаБезНДС / СтрокаТз.КоличествоПринято;
		СтрокаТз.ТоварНаименование = СокрЛП(СтрокаТз.ТоварНаименование)
		                                          + ПечатныеФормыСервер.ПредставлениеСерий(СтрокаТз)
		                                          + ?(СтрокаТз.ТабличнаяЧасть = "ВозвратнаяТара", " (возвратная тара)", "");
	КонецЦикла;
	ПараметрыПечати.Вставить("ИтогоКоличествоПринято", ПараметрыПечати.Позиции.Итог("КоличествоПринято"));
	ПараметрыПечати.Вставить("ИтогоСуммаБезНДС", ПараметрыПечати.Позиции.Итог("СуммаБезНДС"));
	ПараметрыПечати.Вставить("ИтогоСуммаНДС", ПараметрыПечати.Позиции.Итог("СуммаНДС"));
	ПараметрыПечати.Вставить("ИтогоВсегоСНДС", ПараметрыПечати.Позиции.Итог("ВсегоСНДС"));

	Возврат ПараметрыПечати;
КонецФункции	

Функция Печать_М4(СтруктураПараметров,ТабДокумент)
	ОбщиеПараметрыПечати=ПолучитьОбщиеДанныеДляПечати(СтруктураПараметров.СсылкаНаОбъект);
	ПараметрыПечати=М4_ПараметрыПечати(ОбщиеПараметрыПечати, СтруктураПараметров.СсылкаНаОбъект);
	
	Если СтруктураПараметров.Свойство("ПараметрыПечати") Тогда
		Возврат ПараметрыПечати;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ВыполняемыйМодуль") Тогда
		Если Не ПустаяСтрока(СтруктураПараметров.ВыполняемыйМодуль) Тогда
			Выполнить(СтруктураПараметров.ВыполняемыйМодуль);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТабДокумент=Неопределено Тогда
		ТабДокумент=Новый ТабличныйДокумент;	
	КонецЕсли;
	
	Макет=ИнициализацияМакета(СтруктураПараметров, "М4");
	//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_М4";

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим заголовок докмента
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	НомерСтраницы   = 1;
	КоличествоСтрок = ПараметрыПечати.Позиции.Количество();

	Ном              = 0;
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;	

	// Выводим многострочную часть докмента
	ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтрок");
	ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");	
	Для Каждого СтрокаТз ИЗ ПараметрыПечати.Позиции Цикл
		Ном = Ном + 1;
		ОбластьМакета.Параметры.Заполнить(СтрокаТз);
		МассивВыводимыхОбластей.Очистить();
		МассивВыводимыхОбластей.Добавить(ОбластьМакета);
		МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
		Если Ном = КоличествоСтрок Тогда
			МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		КонецЕсли;

		Если НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
			НомерСтраницы = НомерСтраницы + 1;
			ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
			ТабДокумент.Вывести(ПодвалСтрок);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;												  
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Возврат ТабДокумент;
КонецФункции	

Функция АктаОбОказанииУслуг_ПараметрыПечати(ПараметрыПечати, СсылкаНаОбъект)
	
	МассивСтрокДляУдаления=Новый Массив;
	Для каждого ВыборкаСтрокТовары из ПараметрыПечати.Позиции Цикл 
		Если НЕ ПараметрыПечати.СуммаВключаетНДС Тогда
			ВыборкаСтрокТовары.Цена=ВыборкаСтрокТовары.СтоимостьСНДС/?(ВыборкаСтрокТовары.Количество=0,1,ВыборкаСтрокТовары.Количество); 
		Конецесли;	
		Если ВыборкаСтрокТовары.ТабличнаяЧасть="Услуги" Тогда Продолжить; КонецЕсли;
		МассивСтрокДляУдаления.Добавить(ВыборкаСтрокТовары);
	КонецЦикла;
	Для Каждого СтрокаМ ИЗ МассивСтрокДляУдаления Цикл
		ПараметрыПечати.Позиции.Удалить(СтрокаМ);
	КонецЦикла;	

	Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(ПараметрыПечати.Организация, ПараметрыПечати.ДатаДокумента, СсылкаНаОбъект);
	ДолжностьРуководителя = Руководители.РуководительДолжность;
	Руководитель=УправлениеКонфигурациейСервер.ФИО(Руководители.РуководительФизЛицо, "Родительный"); 

	СведенияОрганизации=КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Организация, ПараметрыПечати.ДатаДокумента);
	
	ПредставлениеПолучателя = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОрганизации, "ПолноеНаименование,");
	ПредставлениеПолучателя1=ПредставлениеПолучателя+" в лице "+ДолжностьРуководителя+"а "+Руководитель+" действующего на основании устава";
	
	ПредставлениеПоставщика = ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Контрагент, ПараметрыПечати.ДатаДокумента), "ПолноеНаименование,");
	ПредставлениеПоставщика1=ПредставлениеПоставщика+" в лице "+ПараметрыПечати.Контрагент.ПараметрыПечати_Должность+" "+ПараметрыПечати.Контрагент.ПараметрыПечати_ВЛице+" действующего на основании "+ПараметрыПечати.Контрагент.ПараметрыПечати_Основание;
	
	ПараметрыПечати.Вставить("КДоговору","к договору №"+СокрЛП(ПараметрыПечати.ДоговорКонтрагента.Номер)+" от "+Формат(ПараметрыПечати.ДоговорКонтрагента.Дата, "ДЛФ=D"));
	ПараметрыПечати.Вставить("ТекстЗаголовка","Акт приемки-сдачи работ № "+Строка(ПараметрыПечати.Номер)+" от "+Формат(ПараметрыПечати.ДатаДокумента, "ДЛФ=Д"));
	ПараметрыПечати.Вставить("Исполнитель",ПредставлениеПоставщика1);
	ПараметрыПечати.Вставить("Заказчик",ПредставлениеПолучателя1);
	ПараметрыПечати.Вставить("Комментарий","Комментарий:"+СокрЛП(СсылкаНаОбъект.Комментарий));
	
	ВалютаБухУчета=МодульВалютногоУчета.ПолучитьВалюту("Бух");
	СуммыВРублях=ПараметрыПечати.ВалютаДокумента = ВалютаБухУчета;
	ВалютаПечати = ?(СуммыВРублях, ВалютаБухУчета, ПараметрыПечати.ВалютаДокумента);

	ПараметрыПечати.Вставить("СтоимостьСНДС",ОбщегоНазначения.ФорматСумм(ПараметрыПечати.Позиции.Итог("СтоимостьСНДС")));
	Если ПараметрыПечати.УчитыватьНДС Тогда
		ПараметрыПечати.Вставить("СуммаНДС",ОбщегоНазначения.ФорматСумм(ПараметрыПечати.Позиции.Итог("СуммаНДС")));
		ПараметрыПечати.Вставить("НДС", "В том числе НДС");
	КонецЕсли;
	ПараметрыПечати.Вставить("СуммаПрописью",ОбщегоНазначения.СформироватьСуммуПрописью(ПараметрыПечати.Позиции.Итог("СтоимостьСНДС"), ВалютаПечати));
	ПараметрыПечати.Вставить("ДатаПодписи",Формат(ПараметрыПечати.Дата, "ДЛФ=DD"));
	ПараметрыПечати.Вставить("ФактическийАдрес",ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОрганизации, "ФактическийАдрес,"));
	ПараметрыПечати.Вставить("Отпустил",ПредставлениеПоставщика);
	ПараметрыПечати.Вставить("Получил",ПредставлениеПолучателя);

    Возврат ПараметрыПечати;
КонецФункции	

Функция Печать_АктаОбОказанииУслуг(СтруктураПараметров,ТабДокумент)
	ОбщиеПараметрыПечати=ПолучитьОбщиеДанныеДляПечати(СтруктураПараметров.СсылкаНаОбъект);
	ПараметрыПечати=АктаОбОказанииУслуг_ПараметрыПечати(ОбщиеПараметрыПечати, СтруктураПараметров.СсылкаНаОбъект);
	
	Если СтруктураПараметров.Свойство("ПараметрыПечати") Тогда
		Возврат ПараметрыПечати;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ВыполняемыйМодуль") Тогда
		Если Не ПустаяСтрока(СтруктураПараметров.ВыполняемыйМодуль) Тогда
			Выполнить(СтруктураПараметров.ВыполняемыйМодуль);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТабДокумент=Неопределено Тогда
		ТабДокумент=Новый ТабличныйДокумент;	
	КонецЕсли;
	
//	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_Акт";
	Макет=ИнициализацияМакета(СтруктураПараметров, "Акт");

	ОбластьМакета=Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета=Макет.ПолучитьОбласть("Шапка");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьСтроки=Макет.ПолучитьОбласть("Строка");
	Для Каждого СтрокаТабличнойЧасти Из ПараметрыПечати.Позиции Цикл	
		ОбластьСтроки.Параметры.Заполнить(СтрокаТабличнойЧасти);
		ТабДокумент.Вывести(ОбластьСтроки);
	КонецЦикла;

	ОбластьМакета=Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	Если ПараметрыПечати.УчитыватьНДС Тогда
		ОбластьМакета=Макет.ПолучитьОбласть("ИтогоНДС");
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;

	ОбластьМакета=Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета=Макет.ПолучитьОбласть("Подписи");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;
КонецФункции	

Функция ТОРГ12_ПараметрыПечати(ПараметрыПечати, СсылкаНаОбъект,БезУслуг)
	
	МассивСтрокДляУдаления=Новый Массив;
	Если БезУслуг Тогда
		Для Каждого СтрокаТз ИЗ ПараметрыПечати.Позиции Цикл
			Если НЕ СтрокаТз.ТабличнаяЧасть="Услуги" Тогда Продолжить; КонецЕсли;
			МассивСтрокДляУдаления.Добавить(СтрокаТз);
		КонецЦикла;	
	КонецЕсли;
	Для Каждого СтрокаМ ИЗ МассивСтрокДляУдаления Цикл
		ПараметрыПечати.Позиции.Удалить(СтрокаМ);
	КонецЦикла;	

		// Выводим общие реквизиты шапки
	СведенияОПокупателе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Организация, ПараметрыПечати.ДатаДокумента);
	СведенияОПоставщике = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Контрагент,  ПараметрыПечати.ДатаДокумента,, ПараметрыПечати.БанковскийСчет);
	СведенияОГрузополучателе  = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Грузополучатель,  ПараметрыПечати.ДатаДокумента);
	СведенияОГрузоотправителе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Грузоотправитель, ПараметрыПечати.ДатаДокумента);

	ПараметрыПечати.Вставить("ЕдиницаИзмеренияВеса", Константы.ЕдиницаИзмеренияВеса.Получить());
	ПараметрыПечати.Вставить("НомерДокумента", СокрЛП(ПараметрыПечати.Номер));
	ПараметрыПечати.Дата  = Формат(ПараметрыПечати.ДатаДокумента, "ДФ=""дд ММММ гггг""");
	ПараметрыПечати.Вставить("ПредставлениеГрузополучателя", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет"));
	ПараметрыПечати.Вставить("АдресДоставки", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ФактическийАдрес"));
	ПараметрыПечати.Вставить("ПредставлениеПлательщика", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПокупателе));
	ПараметрыПечати.Вставить("Основание", ПараметрыПечати.Основание);
	ПараметрыПечати.Вставить("ПредставлениеОрганизации", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузоотправителе));
	ПараметрыПечати.Вставить("ПредставлениеПоставщика", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПоставщике));
	ПараметрыПечати.Вставить("ОрганизацияПоОКПО", СведенияОГрузоотправителе.КодПоОКПО);
	ПараметрыПечати.Вставить("ПоставщикПоОКПО", СведенияОПоставщике.КодПоОКПО);
	ПараметрыПечати.Вставить("ГрузополучательПоОКПО", СведенияОГрузополучателе.КодПоОКПО);
	ПараметрыПечати.Вставить("ПлательщикПоОКПО", СведенияОПокупателе.КодПоОКПО);
	
	ПолнаяДатаДокумента = Формат(ПараметрыПечати.ДатаДокумента, "ДФ=""дд ММММ гггг """"года""""""");
	ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
	ПервыйРазделитель = Найти(ПолнаяДатаДокумента," ");
	ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента,ДлинаСтроки-ПервыйРазделитель)," ")+ПервыйРазделитель;
	ПараметрыПечати.Вставить("ДатаДокументаДень", """"+Лев(ПолнаяДатаДокумента,ПервыйРазделитель-1)+"""");
	ПараметрыПечати.Вставить("ДатаДокументаМесяц",Сред(ПолнаяДатаДокумента,ПервыйРазделитель+1,ВторойРазделитель-ПервыйРазделитель-1));
	ПараметрыПечати.Вставить("ДатаДокументаГод",  Прав(ПолнаяДатаДокумента,ДлинаСтроки-ВторойРазделитель));	
	
	// Доверенность
	ПараметрыПечати.Вставить("МассаБрутто",  ПараметрыПечати.Позиции.Итог("МассаБрутто"));
	ПараметрыПечати.Вставить("КоличествоМест",         ПараметрыПечати.Позиции.Итог("КоличествоМест"));
	ПараметрыПечати.Вставить("Количество",   ПараметрыПечати.Позиции.Итог("Количество"));
	ПараметрыПечати.Вставить("СтоимостьБезНДС",        ПараметрыПечати.Позиции.Итог("СтоимостьБезНДС"));
	ПараметрыПечати.Вставить("СуммаНДС",          ПараметрыПечати.Позиции.Итог("СуммаНДС"));
	ПараметрыПечати.Вставить("СтоимостьСНДС",    ПараметрыПечати.Позиции.Итог("СтоимостьСНДС"));
	
	тзТовары=ПараметрыПечати.Позиции.СкопироватьКолонки();
	тзТара=ПараметрыПечати.Позиции.СкопироватьКолонки();
	Для Каждого СтрокаКоллекции ИЗ ПараметрыПечати.Позиции Цикл
		Если СтрокаКоллекции.ТабличнаяЧасть="ВозвратнаяТара" Тогда
			ЗаполнитьЗначенияСвойств(тзТара.Добавить(),СтрокаКоллекции);
		Иначе
			ЗаполнитьЗначенияСвойств(тзТовары.Добавить(),СтрокаКоллекции);
		КонецЕсли;	
	КонецЦикла;	
	ПараметрыПечати.Вставить("МассаБруттоПоТовару",  тзТовары.Итог("МассаБрутто"));
	ПараметрыПечати.Вставить("КоличествоМестПоТовару",    тзТовары.Итог("КоличествоМест"));
	ПараметрыПечати.Вставить("КоличествоПоТовару",   	тзТовары.Итог("Количество"));
	ПараметрыПечати.Вставить("СтоимостьБезНДСПоТовару",    тзТовары.Итог("СтоимостьБезНДС"));
	ПараметрыПечати.Вставить("СуммаНДСПоТовару",          тзТовары.Итог("СуммаНДС"));
	ПараметрыПечати.Вставить("СтоимостьСНДСПоТовару",    тзТовары.Итог("СтоимостьСНДС"));

	ПараметрыПечати.Вставить("МассаБруттоПоТаре",  тзТара.Итог("МассаБрутто"));
	ПараметрыПечати.Вставить("КоличествоМестПоТаре",    тзТара.Итог("КоличествоМест"));
	ПараметрыПечати.Вставить("КоличествоПоТаре",   	тзТара.Итог("Количество"));
	ПараметрыПечати.Вставить("СтоимостьБезНДСПоТаре",    тзТара.Итог("СтоимостьБезНДС"));
	ПараметрыПечати.Вставить("СуммаНДСПоТаре",          тзТара.Итог("СуммаНДС"));
	ПараметрыПечати.Вставить("СтоимостьСНДСПоТаре",    тзТара.Итог("СтоимостьСНДС"));
	
	Если ПараметрыПечати.МассаБрутто>0 Тогда
		ПараметрыПечати.Вставить("МассаГрузаПрописью",  ЧислоПрописью(ПараметрыПечати.МассаБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ПараметрыПечати.ЕдиницаИзмеренияВеса) + ".");
	КонецЕсли;
	
	Если ПараметрыПечати.КоличествоМест>0 Тогда
		ПараметрыПечати.Вставить("ВсегоМестПрописью",  ЧислоПрописью(ПараметрыПечати.КоличествоМест, ,",,,,,,,,0"));
	КонецЕсли;
	
	ПараметрыПечати.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью",  ЧислоПрописью(ПараметрыПечати.Позиции.Количество(), ,",,,,,,,,0"));
	ПараметрыПечати.Вставить("СуммаПрописью",  ОбщегоНазначения.СформироватьСуммуПрописью(ПараметрыПечати.СтоимостьСНДС, МодульВалютногоУчета.ПолучитьВалюту("Бух")));
	
	Возврат ПараметрыПечати;
КонецФункции

Функция Печать_ТОРГ12(СтруктураПараметров,ТабДокумент, БезУслуг=Ложь)
	
	ОбщиеПараметрыПечати=ПолучитьОбщиеДанныеДляПечати(СтруктураПараметров.СсылкаНаОбъект);
	ПараметрыПечати=ТОРГ12_ПараметрыПечати(ОбщиеПараметрыПечати, СтруктураПараметров.СсылкаНаОбъект,БезУслуг);
	
	Если СтруктураПараметров.Свойство("ПараметрыПечати") Тогда
		Возврат ПараметрыПечати;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ВыполняемыйМодуль") Тогда
		Если Не ПустаяСтрока(СтруктураПараметров.ВыполняемыйМодуль) Тогда
			Выполнить(СтруктураПараметров.ВыполняемыйМодуль);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТабДокумент=Неопределено Тогда
		ТабДокумент=Новый ТабличныйДокумент;	
	КонецЕсли;
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
//	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_ТОРГ12";

	Макет=ИнициализацияМакета(СтруктураПараметров, "ТОРГ12");

	ОбластьМакета=Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	НомерСтраницы   = 1;
	
	КоличествоСтрок = ПараметрыПечати.Позиции.Количество();
	
	// инициализация итогов по странице
	ИтогоМассаБруттоНаСтранице = 0;
	ИтогоМестНаСтранице        = 0;
	ИтогоКоличествоНаСтранице  = 0;
	ИтогоСуммаНаСтранице       = 0;
	ИтогоНДСНаСтранице         = 0;
	ИтогоСуммаСНДСНаСтранице   = 0;
	
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	// Выводим многострочную часть докмента
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
	Ном=0;
	Для Каждого ВыборкаСтрок Из ПараметрыПечати.Позиции Цикл
		Если ВыборкаСтрок.ТабличнаяЧасть = "ВозвратнаяТара" Тогда Продолжить; КонецЕсли;
		Ном = Ном + 1;
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		Если Ном = 1 Тогда // первая срока
			ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
		Иначе
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;		
			
			Если Ном <> 1 И НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;
				
				ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
				
				// очистим итоги по странице
				ИтогоМассаБруттоНаСтранице = 0;
				ИтогоМестНаСтранице        = 0;
				ИтогоКоличествоНаСтранице  = 0;
				ИтогоСуммаНаСтранице       = 0;
				ИтогоНДСНаСтранице         = 0;
				ИтогоСуммаСНДСНаСтранице   = 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
			КонецЕсли;
		КонецЕсли;		
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// увеличим итоги по странице
		ИтогоМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице + ВыборкаСтрок.МассаБрутто;
		ИтогоМестНаСтранице        = ИтогоМестНаСтранице        + ВыборкаСтрок.КоличествоМест;
		ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице  + ВыборкаСтрок.Количество;
		ИтогоСуммаНаСтранице       = ИтогоСуммаНаСтранице       + ВыборкаСтрок.СтоимостьБезНДС;
		ИтогоНДСНаСтранице         = ИтогоНДСНаСтранице         + ВыборкаСтрок.СуммаНДС;
		ИтогоСуммаСНДСНаСтранице   = ИтогоСуммаСНДСНаСтранице   + ВыборкаСтрок.СтоимостьСНДС;
	КонецЦикла;
	
	Если НЕ Ном =0 Тогда
		// Выводим итоги по последней странице
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;
		ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
		
		ОбластьМакетаВсегоТовар= Макет.ПолучитьОбласть("ВсегоТовар");
		ОбластьМакетаВсегоТовар.Параметры.Заполнить(ПараметрыПечати);
		ТабДокумент.Вывести(ОбластьМакетаВсегоТовар);
	КонецЕсли;
	
		
	ИтогоМассаБруттоНаСтранице = 0;
	ИтогоМестНаСтранице        = 0;
	ИтогоКоличествоНаСтранице  = 0;
	ИтогоСуммаНаСтранице       = 0;
	ИтогоНДСНаСтранице         = 0;
	ИтогоСуммаСНДСНаСтранице   = 0;

	ВыводитьПодвал=Ложь;
	НомТары=0;
	Для Каждого ВыборкаСтрок Из ПараметрыПечати.Позиции Цикл
		Если НЕ ВыборкаСтрок.ТабличнаяЧасть = "ВозвратнаяТара" Тогда Продолжить; КонецЕсли;
			ВыводитьПодвал=Истина;	
			Ном = Ном + 1;
			НомТары=НомТары+1;
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
			Если Ном = 1 Тогда // первая срока
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
			Иначе
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
				Если Ном = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
				КонецЕсли;		
				
				Если НомТары <> 1 И НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;
					
					ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					// очистим итоги по странице
					ИтогоМассаБруттоНаСтранице = 0;
					ИтогоМестНаСтранице        = 0;
					ИтогоКоличествоНаСтранице  = 0;
					ИтогоСуммаНаСтранице       = 0;
					ИтогоНДСНаСтранице         = 0;
					ИтогоСуммаСНДСНаСтранице   = 0;
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
				КонецЕсли;
			КонецЕсли;		
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			// увеличим итоги по странице
			ИтогоМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице + ВыборкаСтрок.МассаБрутто;
			ИтогоМестНаСтранице        = ИтогоМестНаСтранице        + ВыборкаСтрок.КоличествоМест;
			ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице  + ВыборкаСтрок.Количество;
			ИтогоСуммаНаСтранице       = ИтогоСуммаНаСтранице       + ВыборкаСтрок.СтоимостьБезНДС;
			ИтогоНДСНаСтранице         = ИтогоНДСНаСтранице         + ВыборкаСтрок.СуммаНДС;
			ИтогоСуммаСНДСНаСтранице   = ИтогоСуммаСНДСНаСтранице   + ВыборкаСтрок.СтоимостьСНДС;
			
	КонецЦикла;
	
	Если ВыводитьПодвал=Истина Тогда
		// Выводим итоги по последней странице
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;
		
		ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
		
		ОбластьМакетаВсегоТара = Макет.ПолучитьОбласть("ВсегоТара");
		ОбластьМакетаВсегоТара.Параметры.Заполнить(ПараметрыПечати);
		ТабДокумент.Вывести(ОбластьМакетаВсегоТара);
	КонецЕсли;
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим подвал документа
	ОбластьМакета=Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции

Функция ПоступлениеТоваров_ПараметрыПечати(ПараметрыПечати, СсылкаНаОбъект)
	
	Колонка=Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	ПараметрыПечати.Вставить("ВыводитьКоды",Не ПустаяСтрока(Колонка));
	ПараметрыПечати.Вставить("ТекстЗаголовка", ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, "Накладная"));
	ПараметрыПечати.Вставить("ПредставлениеПоставщика",ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Контрагент, ПараметрыПечати.ДатаДокумента), "ПолноеНаименование,"));
	ПараметрыПечати.Вставить("Поставщик", ПараметрыПечати.Контрагент);
	ПараметрыПечати.Вставить("ПредставлениеПолучателя", ПечатныеФормыСервер.ОписаниеОрганизации(КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ПараметрыПечати.Организация, ПараметрыПечати.ДатаДокумента), "ПолноеНаименование,"));
	ПараметрыПечати.Вставить("Получатель", ПараметрыПечати.Организация);
	Если ПараметрыПечати.ВыводитьКоды Тогда
		ПараметрыПечати.Вставить("Колонка", Колонка);
	КонецЕсли;
	ПараметрыПечати.Позиции.Колонки.НоменклатураНаименование.Имя="Товар";
	ПараметрыПечати.Позиции.Колонки.СтоимостьБезНДС.Имя="СуммаБезНДС";
	ПараметрыПечати.Позиции.Колонки.СтоимостьСНДС.Имя="Сумма";
	ПараметрыПечати.Позиции.Колонки.НоменклатураКод.Имя="КодАртикул";
	
	Для Каждого СтрокаТз ИЗ ПараметрыПечати.Позиции Цикл
		Если НЕ ПараметрыПечати.СуммаВключаетНДС Тогда
			СтрокаТз.Цена=СтрокаТз.Сумма/?(СтрокаТз.Количество=0,1,СтрокаТз.Количество); 
		Конецесли;	
		СтрокаТз.Товар= СокрЛП(СтрокаТз.Товар)+ ПечатныеФормыСервер.ПредставлениеСерий(СтрокаТз)+ ?(СтрокаТз.ТабличнаяЧасть = "ВозвратнаяТара", " (возвратная тара)", "");
		Если НЕ ПараметрыПечати.ВыводитьКоды Тогда
			СтрокаТз.КодАртикул = "";
		КонецЕсли;
	КонецЦикла;
	ПараметрыПечати.Вставить("Всего",ОбщегоНазначения.ФорматСумм(ПараметрыПечати.Позиции.Итог("Сумма")));
	ПараметрыПечати.Вставить("ВсегоНДС",ОбщегоНазначения.ФорматСумм(ПараметрыПечати.Позиции.Итог("СуммаНДС")));
	ПараметрыПечати.Вставить("НДС","В том числе НДС:");
	ПараметрыПечати.Вставить("ИтоговаяСтрока","Всего наименований " + ПараметрыПечати.Позиции.Количество()+ ", на сумму "+ОбщегоНазначения.ФорматСумм(ПараметрыПечати.Позиции.Итог("Сумма"), ПараметрыПечати.ВалютаДокумента));
	ПараметрыПечати.Вставить("СуммаПрописью", ОбщегоНазначения.СформироватьСуммуПрописью(ПараметрыПечати.Позиции.Итог("Сумма"), ПараметрыПечати.ВалютаДокумента));

	Возврат ПараметрыПечати;
КонецФункции	
	
Функция Печать_ПоступлениеТоваров(СтруктураПараметров,ТабДокумент)
	ОбщиеПараметрыПечати=ПолучитьОбщиеДанныеДляПечати(СтруктураПараметров.СсылкаНаОбъект);
	ПараметрыПечати=ПоступлениеТоваров_ПараметрыПечати(ОбщиеПараметрыПечати, СтруктураПараметров.СсылкаНаОбъект);
	
	Если СтруктураПараметров.Свойство("ПараметрыПечати") Тогда
		Возврат ПараметрыПечати;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("МодульПечати") Тогда
		стрТекстМодуля=СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
		Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ВыполняемыйМодуль") Тогда
		Если Не ПустаяСтрока(СтруктураПараметров.ВыполняемыйМодуль) Тогда
			Выполнить(СтруктураПараметров.ВыполняемыйМодуль);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыПечати.Свойство("Отказ") И ПараметрыПечати.Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТабДокумент=Неопределено Тогда
		ТабДокумент=Новый ТабличныйДокумент;	
	КонецЕсли;

//	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_Накладная";

	Макет=ИнициализацияМакета(СтруктураПараметров, "Накладная");

	Если ПараметрыПечати.ВыводитьКоды Тогда
		ОбластьШапки  = "ШапкаСКодом";
		ОбластьСтроки = "СтрокаСКодом";
	Иначе
		ОбластьШапки  = "ШапкаТаблицы";
		ОбластьСтроки = "Строка";
	Конецесли;

	// Выводим шапку накладной
	ОбластьМакета=Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести табличную часть
	ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
	Для Каждого ВыборкаСтрокТовары Из ПараметрыПечати.Позиции Цикл
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ТабДокумент.Вывести(ОбластьМакета);	
	КонецЦикла;

	// Вывести Итого
	ОбластьМакета=Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести ИтогоНДС
	Если ПараметрыПечати.УчитыватьНДС Тогда
		ОбластьМакета=Макет.ПолучитьОбласть("ИтогоНДС");
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;

	// Вывести Сумму прописью
	ОбластьМакета= Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести подписи
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	//если места в документе не заполнены,
	МестВсего = ПараметрыПечати.Позиции.Итог("КоличествоМест");
	Если МестВсего = 0 Тогда
		СкрытьКолонкиВТабличномДокументе(ТабДокумент, "Мест", 5,ОбластьШапки);
	КонецЕсли;

	Возврат ТабДокумент;
КонецФункции

Процедура СкрытьКолонкиВТабличномДокументе(ТабДокумент, ТекстКолонки, ШиринаКолонки=1, ИмяОбластиШапки="") Экспорт
	Попытка
		Если ИмяОбластиШапки="" Тогда
			ОбластьШапкиМест = ТабДокумент.НайтиТекст(ТекстКолонки,,,истина);
		Иначе	
			ОбластьШапкиМест = ТабДокумент.НайтиТекст(ТекстКолонки,,ТабДокумент.Области[ИмяОбластиШапки],истина);
		КонецЕсли;
	Исключение
		Возврат;
	КонецПопытки;
	
	Если ОбластьШапкиМест <> неопределено Тогда
		ОбластьМест = ТабДокумент.Область(,ОбластьШапкиМест.Лево,,ОбластьШапкиМест.Лево + ШиринаКолонки-1);
		ОбластьМест.Видимость = ложь;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка таблиц для проведения

Функция КоэффициентПересчета(СтруктураШД)
	Если Не СтруктураШД.ВалютаДокумента=МодульВалютногоУчета.ПолучитьВалюту("Бух") Тогда
		Если Число(СтруктураШД.КурсДокумента)=0 Или Число(СтруктураШД.КратностьДокумента)=0 Тогда
			Возврат 1;
		КонецЕсли;
		Возврат СтруктураШД.КурсДокумента/СтруктураШД.КратностьДокумента;
	КонецЕсли;
	Возврат 1; 
КонецФункции

Функция ПодготовитьТаблицыДокумента(СтруктураШД) Экспорт
	СтруктураТД=Новый Структура;
	СтруктураТД.Вставить("Товары", СформироватьТаблицу_Товары(СтруктураШД));
	СтруктураТД.Вставить("Услуги", СформироватьТаблицу_Услуги(СтруктураШД));
	СтруктураТД.Вставить("Тара"  , СформироватьТаблицу_ТараВТ(СтруктураШД));
	СтруктураТД.Вставить("ОбъектыСтроительства", СформироватьТаблицу_ОбъектыСтроительства(СтруктураШД));
	СтруктураТД.Вставить("НМА", СформироватьТаблицу_НематериальныеАктивы(СтруктураШД));
	СтруктураТД.Вставить("ТоварыНДС", СтруктураТД.Товары.Скопировать()); //Для движения по регистрам "НДС"
	СтруктураТД.Вставить("УслугиНДС", СтруктураТД.Услуги.Скопировать()); //Для движения по регистрам "НДС"
	СтруктураТД.Вставить("Сделки", СформироватьТаблицу_Сделки(СтруктураШД));

	//--------------- Проверяем на способ распределения услуги --------------------------
	МассивСтрок=СтруктураТД.Услуги.НайтиСтроки(Новый Структура("СпособРаспределения", Перечисления.СпособыРаспределенияДопРасходов.ПустаяСсылка()));
	Если НЕ МассивСтрок.Количество()=СтруктураТД.Услуги.Количество() Тогда
		СтруктураТД.Услуги=СтруктураТД.Услуги.Скопировать(МассивСтрок);

		СтруктураПоиска=Новый Структура("СпособРаспределения", Перечисления.СпособыРаспределенияДопРасходов.ПоСумме);
		РезультатПоиска=СтруктураТД.УслугиНДС.НайтиСтроки(СтруктураПоиска);
		Если РезультатПоиска.Количество()>0 Тогда
			тзУслугиДляРаспределения=СтруктураТД.УслугиНДС.Скопировать(РезультатПоиска);
			УправлениеКоллекциямиЗначенийСервер.РаспределитьПоТаблицеЗначений(СтруктураТД.Товары, тзУслугиДляРаспределения.Итог("Стоимость"), "Стоимость");
			УправлениеКоллекциямиЗначенийСервер.РаспределитьПоТаблицеЗначений(СтруктураТД.Товары, тзУслугиДляРаспределения.Итог("СтоимостьНУ"), "СтоимостьНУ");
			УправлениеКоллекциямиЗначенийСервер.РаспределитьПоТаблицеЗначений(СтруктураТД.Товары, тзУслугиДляРаспределения.Итог("Сумма"), "Сумма");
			//*** УправлениеКоллекциямиЗначенийСервер.РаспределитьПоТаблицеЗначений(СтруктураТД.Товары, тзУслугиДляРаспределения.Итог("НДС"), "НДС");
			УправлениеКоллекциямиЗначенийСервер.РаспределитьПоТаблицеЗначений(СтруктураТД.Товары, тзУслугиДляРаспределения.Итог("СуммаНДС"), "СуммаНДС");
		КонецЕсли;
	КонецЕсли;
	//--------------- Проверяем на способ распределения услуги --------------------------	

	Возврат СтруктураТД;
КонецФункции

Функция СформироватьТаблицу_Товары(СтруктураШД)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШД.Ссылка);
	Запрос.УстановитьПараметр("ВидТабличнойЧасти", "Товары");
	Запрос.Текст="
	|ВЫБРАТЬ
	|	*,
	|	ИсточникДанных.Ссылка.Организация Как Организация,
	|	ИсточникДанных.Ссылка.Контрагент Как Контрагент,
	|	ИсточникДанных.Ссылка.ДоговорКонтрагента Как ДоговорКонтрагента,
	|	ИсточникДанных.Ссылка.Подразделение Как Подразделение,
	|	ИсточникДанных.Ссылка.Дата Как Период,
	|	ИсточникДанных.Ссылка.КодВидаОперации Как КодВидаОперации,
	|	Истина Как Активность,
	|	&ВидТабличнойЧасти,
	|
	|	Неопределено Как СчетУчетаНДС,
	|	Неопределено Как ВидЦенности,
	|	0 Как СуммаБезНДС,
	|	0 Как СуммаСНДС,
	|	0 Как Стоимость,
	|	0 Как СтоимостьНУ,
	|	0 Как НДС,
	|	ИсточникДанных.НомерСтроки Как НомерСтрокиТабличнойЧасти,
	|
	|	ИсточникДанных.Номенклатура Как Ценность,
	|	ИсточникДанных.Номенклатура.Услуга Как Услуга,
	|	ИсточникДанных.Номенклатура.Набор Как Набор,
	|	ИсточникДанных.Номенклатура.Комплект Как Комплект,	
	|	ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков Как ЕдиницаИзмерения,
	|	ИсточникДанных.Номенклатура.ВестиУчетПоХарактеристикам Как ВестиУчетПоХарактеристикам,
	|	ИсточникДанных.Номенклатура.ВестиПартионныйУчетПоСериям Как ВестиПартионныйУчетПоСериям,
	|	ИсточникДанных.Номенклатура.ВестиУчетПоСериям Как УчетПоСериям,
	|	ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент Как ЕдиницаХраненияОстатковКоэффициент,
	|	ИсточникДанных.Количество*ИсточникДанных.Коэффициент/ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент Как Количество,
	|
	|	ИсточникДанных.СерияНоменклатуры.СтранаПроисхождения Как СтранаПроисхождения,
	|	ИсточникДанных.СерияНоменклатуры.НомерГТД Как НомерГТД,
	|
	|	ИсточникДанных.Склад.ВидСклада КАК ВидСклада,
	|	ИсточникДанных.Склад.Ячеистый КАК ЯчеистыйСклад,
    |
	|	ИсточникДанных.ПриходныйОрдер Как ДокументПолучения,	
	|	ИсточникДанных.ПриходныйОрдер.Организация Как ОрганизацияДокументаПолучения,
	|	ИсточникДанных.ПриходныйОрдер.Склад Как ПриходныйОрдерСклад,
	|	ИсточникДанных.ПриходныйОрдер.БезПраваПродажи Как БезПраваПродажи,
	|	ИсточникДанных.Количество Как КоличествоДок
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ДокументСсылка
	|";
	Возврат тзДанные_Обработать(Запрос, СтруктураШД);
КонецФункции

Функция СформироватьТаблицу_Услуги(СтруктураШД)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШД.Ссылка);
	Запрос.УстановитьПараметр("ВидТабличнойЧасти", "Услуги");
	Запрос.Текст="
	|ВЫБРАТЬ
	|	*,
	|	ИсточникДанных.Ссылка.Организация Как Организация,
	|	ИсточникДанных.Ссылка.Контрагент Как Контрагент,
	|	ИсточникДанных.Ссылка.ДоговорКонтрагента Как ДоговорКонтрагента,
	|	ИсточникДанных.Ссылка.Подразделение Как Подразделение,
	|	ИсточникДанных.Ссылка.Дата Как Период,
	|	ИсточникДанных.Ссылка.КодВидаОперации Как КодВидаОперации,
	|	Истина Как Активность,
	|	&ВидТабличнойЧасти,
	|
	|	Неопределено Как СчетУчетаНДС,
	|	Неопределено Как ВидЦенности,
	|	0 Как СуммаБезНДС,
	|	0 Как СуммаСНДС,
	|	0 Как Стоимость,
	|	0 Как СтоимостьНУ,
	|	0 Как НДС,
	|	ИсточникДанных.НомерСтроки Как НомерСтрокиТабличнойЧасти,
	|
	|	ИсточникДанных.СтатьяЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат Как ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	ИсточникДанных.ХарактеристикаИзделия Как ХарактеристикаНоменклатурыНовая,
	|	ИсточникДанных.Изделие Как НоменклатураНовая,
	|	ИсточникДанных.Номенклатура.Услуга Как Услуга	
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ДокументСсылка
	|";
	Возврат тзДанные_Обработать(Запрос, СтруктураШД);
КонецФункции

Функция СформироватьТаблицу_ТараВТ(СтруктураШД)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШД.Ссылка);
	Запрос.УстановитьПараметр("ВидТабличнойЧасти", "ВозвратнаяТара");
	Запрос.Текст="
	|ВЫБРАТЬ
	|	*,	
	|	ИсточникДанных.Ссылка.Организация Как Организация,
	|	ИсточникДанных.Ссылка.Контрагент Как Контрагент,
	|	ИсточникДанных.Ссылка.ДоговорКонтрагента Как ДоговорКонтрагента,
	|	ИсточникДанных.Ссылка.Подразделение Как Подразделение,
	|	ИсточникДанных.Ссылка.Дата Как Период,
	|	ИсточникДанных.Ссылка.КодВидаОперации Как КодВидаОперации,
	|	Истина Как Активность,
	|	&ВидТабличнойЧасти,
	|
	|	Неопределено Как СчетУчетаНДС,
	|	Неопределено Как ВидЦенности,
	|	0 Как СуммаБезНДС,
	|	0 Как СуммаСНДС,
	|	0 Как Стоимость,
	|	0 Как СтоимостьНУ,
	|	0 Как НДС,
	|	ИсточникДанных.НомерСтроки Как НомерСтрокиТабличнойЧасти,
	|
	|	ИсточникДанных.Склад.ВидСклада КАК ВидСклада,
	|	ИсточникДанных.Склад.Ячеистый КАК ЯчеистыйСклад,
    |
	|	ИсточникДанных.ПриходныйОрдер Как ДокументПолучения,	
	|	ИсточникДанных.ПриходныйОрдер.БезПраваПродажи Как БезПраваПродажи,
	|	ИсточникДанных.ПриходныйОрдер.Склад Как ПриходныйОрдерСклад
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ДокументСсылка
	|";
	тзДанные=Запрос.Выполнить().Выгрузить();	
	Для каждого СтрокаКоллекции Из тзДанные Цикл
		СтрокаКоллекции.Сумма=Окр(СтрокаКоллекции.Сумма*СтруктураШД.КоэффициентПересчета, 2);
		СтрокаКоллекции.СуммаБезНДС=СтрокаКоллекции.Сумма; // Сумма по таре всегда с НДС
		СтрокаКоллекции.Стоимость=СтрокаКоллекции.Сумма;
		СтрокаКоллекции.СтоимостьНУ=СтрокаКоллекции.Сумма;
	КонецЦикла;
	
	Возврат тзДанные;
КонецФункции

Функция СформироватьТаблицу_ОбъектыСтроительства(СтруктураШД)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШД.Ссылка);
	Запрос.УстановитьПараметр("ВидТабличнойЧасти", "ОбъектыСтроительсва");
	Запрос.УстановитьПараметр("ВидЦенности", Перечисления.ВидыЦенностей.ОС);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	*,
	|	&ВидЦенности Как ВидЦенности,
	|	ИсточникДанных.Ссылка.Организация Как Организация,
	|	ИсточникДанных.Ссылка.Контрагент Как Контрагент,
	|	ИсточникДанных.Ссылка.ДоговорКонтрагента Как ДоговорКонтрагента,
	|	ИсточникДанных.Ссылка.Подразделение Как Подразделение,
	|	ИсточникДанных.Ссылка.Дата Как Период,
	|	ИсточникДанных.Ссылка.КодВидаОперации Как КодВидаОперации,
	|	Истина Как Активность,
	|	&ВидТабличнойЧасти,
	|
	|	Неопределено Как СчетУчетаНДС,
	//*** |	Неопределено Как ВидЦенности,
	|	0 Как СуммаБезНДС,
	|	0 Как СуммаСНДС,
	|	0 Как Стоимость,
	|	0 Как СтоимостьНУ,
	|	0 Как НДС,
	|	ИсточникДанных.НомерСтроки Как НомерСтрокиТабличнойЧасти	
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ДокументСсылка
	|";
	Возврат тзДанные_Обработать(Запрос, СтруктураШД);
КонецФункции

Функция СформироватьТаблицу_НематериальныеАктивы(СтруктураШД)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШД.Ссылка);
	Запрос.УстановитьПараметр("ВидТабличнойЧасти", "НМА");
	Запрос.УстановитьПараметр("ВидЦенности", Перечисления.ВидыЦенностей.НМА);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	*,
	|	&ВидЦенности Как ВидЦенности,
	|	ИсточникДанных.Ссылка.Организация Как Организация,
	|	ИсточникДанных.Ссылка.Контрагент Как Контрагент,
	|	ИсточникДанных.Ссылка.ДоговорКонтрагента Как ДоговорКонтрагента,
	|	ИсточникДанных.Ссылка.Подразделение Как Подразделение,
	|	ИсточникДанных.Ссылка.Дата Как Период,
	|	ИсточникДанных.Ссылка.КодВидаОперации Как КодВидаОперации,
	|	Истина Как Активность,
	|	&ВидТабличнойЧасти,
	|
	|	Неопределено Как СчетУчетаНДС,
	//*** |	Неопределено Как ВидЦенности,
	|	0 Как СуммаБезНДС,
	|	0 Как СуммаСНДС,
	|	0 Как Стоимость,
	|	0 Как СтоимостьНУ,
	|	0 Как НДС,
	|	ИсточникДанных.НомерСтроки Как НомерСтрокиТабличнойЧасти	
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.НематериальныеАктивы КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ДокументСсылка
	|";
	Возврат тзДанные_Обработать(Запрос, СтруктураШД);
КонецФункции

Функция тзДанные_Обработать(Запрос, СтруктураШД)
	тзСсылка=Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаКоллекции Из тзСсылка Цикл
		СтрокаКоллекции.Сумма=Окр(СтрокаКоллекции.Сумма*СтруктураШД.КоэффициентПересчета, 2);
		СтрокаКоллекции.СуммаНДС=Окр(СтрокаКоллекции.СуммаНДС*СтруктураШД.КоэффициентПересчета, 2);		
		СтрокаКоллекции.НДС=СтрокаКоллекции.СуммаНДС;
		СтрокаКоллекции.СуммаБезНДС=СтрокаКоллекции.Сумма-?(СтруктураШД.УчитыватьНДС И СтруктураШД.СуммаВключаетНДС, СтрокаКоллекции.СуммаНДС, 0);
		СтоимостьСНДС=СтрокаКоллекции.Сумма+?(СтруктураШД.УчитыватьНДС И Не СтруктураШД.СуммаВключаетНДС, СтрокаКоллекции.СуммаНДС, 0);
		Если СтруктураШД.УчетнаяПолитика.НеВключатьНДСВСтоимостьПартий И НЕ (СтруктураШД.НДСВключенВСтоимость) И НЕ СтруктураШД.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			СтрокаКоллекции.Стоимость=СтрокаКоллекции.Сумма-?(СтруктураШД.УчитыватьНДС И СтруктураШД.СуммаВключаетНДС, СтрокаКоллекции.СуммаНДС, 0);
		Иначе
			СтрокаКоллекции.Стоимость=СтоимостьСНДС;
		КонецЕсли;
		СтрокаКоллекции.СтоимостьНУ=СтрокаКоллекции.Стоимость;
		СтрокаКоллекции.СуммаСНДС=СтоимостьСНДС;
		СтрокаКоллекции.СчетУчетаНДС=УчетНалоговСервер.СчетУчета(СтрокаКоллекции.ТОП);
		Если СтруктураШД.УчетАгентскогоНДС Тогда // Это агентский НДС - для него применяется специальный вид ценности.
			СтрокаКоллекции.ВидЦенности=?(СтруктураШД.ВидАгентскогоДоговора=Перечисления.ВидыАгентскихДоговоров.Аренда, Перечисления.ВидыЦенностей.НалоговыйАгентАренда, Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
		Иначе
			Если НЕ ЗначениеЗаполнено(СтрокаКоллекции.ВидЦенности) Тогда
				СтрокаКоллекции.ВидЦенности=?(СтрокаКоллекции.Услуга, Перечисления.ВидыЦенностей.ПрочиеРаботыИУслуги, Перечисления.ВидыЦенностей.Товары);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если Запрос.Параметры.ВидТабличнойЧасти="Товары" Тогда
		Если Не Константы.ИспользоватьСерииНоменклатуры.Получить() Тогда
			тзСсылка.ЗаполнитьЗначения(Неопределено, "СерияНоменклатуры");
		КонецЕсли;	
	КонецЕсли;
	Возврат тзСсылка;
КонецФункции

Функция СформироватьТаблицу_Сделки(СтруктураШД)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШД.Ссылка);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Сделки КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ДокументСсылка
	|";
	Возврат Запрос.Выполнить().Выгрузить();	
КонецФункции

Функция СформироватьСтруктуруШД(ДокументСсылка) Экспорт
	мдОбъект=ДокументСсылка.Метаданные();

	СтруктураШД=Новый Структура;
	СтруктураШД.Вставить("Ссылка", ДокументСсылка);
	СтруктураШД.Вставить("ВидДокумента", мдОбъект.Имя);

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ВалютаБухУчета", МодульВалютногоУчета.ПолучитьВалюту("Бух"));
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.Дата Как Дата,
	|	ИсточникДанных.Номер Как Номер,
	|	ИсточникДанных.ВидОперации Как ВидОперации,
	|	ИсточникДанных.ВалютаДокумента Как ВалютаДокумента,
	|	ИсточникДанных.ВидПоступления Как ВидПоступления,
	|	ИсточникДанных.БанковскийСчетКонтрагента Как БанковскийСчетКонтрагента,
	|	ИсточникДанных.Контрагент Как Контрагент,
	|	ИсточникДанных.НДСВключенВСтоимость Как НДСВключенВСтоимость,
	|	ИсточникДанных.Организация Как Организация,
	|	ИсточникДанных.Грузоотправитель Как Грузоотправитель,
	|	ИсточникДанных.Грузополучатель Как Грузополучатель,
	|	ИсточникДанных.ДоговорГрузополучателя Как ДоговорГрузополучателя,	
	|	ИсточникДанных.РегистрироватьЦеныПоставщика Как РегистрироватьЦеныПоставщика,
	|	ИсточникДанных.Сделка Как Сделка,
	|	ИсточникДанных.СуммаВключаетНДС Как СуммаВключаетНДС,
	|	ИсточникДанных.СуммаДокумента Как СуммаДокумента,
	|	ИсточникДанных.СуммаНДС Как СуммаНДС,
	|	ИсточникДанных.УчитыватьНДС Как УчитыватьНДС,
	|	ИсточникДанных.Проект Как Проект,
	|	ИсточникДанных.Подвид Как Подвид,
	|	ИсточникДанных.КорректируемыйПериод Как КорректируемыйПериод,
	|	ИсточникДанных.НеПринимаетсяУСН Как НеПринимаетсяУСН,
	|	ИсточникДанных.КодВидаОперации Как КодВидаОперации,
	|	ИсточникДанных.Водитель Как Водитель,
	|	ИсточникДанных.Подразделение Как Подразделение,
	|
	|	ИсточникДанных.КурсВзаиморасчетов Как КурсВзаиморасчетов,
	|	ИсточникДанных.КратностьВзаиморасчетов Как КратностьВзаиморасчетов,

	|	ИсточникДанных.ДоговорКонтрагента Как ДоговорКонтрагента,	
	|	ИсточникДанных.ДоговорКонтрагента.ДопУсловияДоговора Как ДопУсловияДоговора,
	|	ИсточникДанных.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ИсточникДанных.ДоговорКонтрагента.Организация КАК ДоговорОрганизация,
	|	ИсточникДанных.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	ИсточникДанных.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ИсточникДанных.ДоговорКонтрагента.ВидАгентскогоДоговора КАК ВидАгентскогоДоговора,
	|	ИсточникДанных.ДоговорКонтрагента.НалоговыйАгентПоОплате КАК НалоговыйАгентПоОплате,
	|	
	|	ИсточникДанных.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ИсточникДанных.Организация.Префикс КАК Префикс,
	|
	|	ИсточникДанных.Склад Как Склад,
	////|	ИсточникДанных.Склад.ВидСклада КАК ВидСклада,
	////|	ИсточникДанных.Склад.Ячеистый КАК ЯчеистыйСклад,
	|	ИсточникДанных.Склад.Склад КАК СкладПриходногоОрдера,
	|	ИсточникДанных.Склад.БезПраваПродажи КАК БезПраваПродажи,
	| 
	|	ВЫБОР КОГДА ИсточникДанных.ВалютаДокумента = &ВалютаБухУчета
	|	Тогда 1
	|	Иначе ИсточникДанных.КурсВзаиморасчетов
	|	Конец КАК КурсДокумента,
	|
	|	ВЫБОР КОГДА ИсточникДанных.ВалютаДокумента = &ВалютаБухУчета
	|	Тогда 1
	|	Иначе ИсточникДанных.КратностьВзаиморасчетов
	|	Конец КАК КратностьДокумента
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ДокументСсылка
	|";
	тзДанныеДокумента=Запрос.Выполнить().Выгрузить();
	Для каждого Колонка Из тзДанныеДокумента.Колонки Цикл
		СтруктураШД.Вставить(Колонка.Имя, тзДанныеДокумента[0][Колонка.Имя]);	
	КонецЦикла;
	СтруктураШД.Вставить("УчетнаяПолитика", ОбщегоНазначенияСервер.ПараметрыУчетнойПолитики(СтруктураШД.Организация, СтруктураШД.Дата));

	//Определям необходимость проведения по регистру "Взаиморасчеты с контрагентами"
	ПроводитьПоВзаиморасчетам=Истина;	
	Если СтруктураШД.ВидОперации=Перечисления.ВидыОперацийПоступленияТоваров["Покупка"] Тогда
		ПроводитьПоВзаиморасчетам=СтруктураШД.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
	ИначеЕсли СтруктураШД.ВидОперации=Перечисления.ВидыОперацийПоступленияТоваров["ПриемВПереработку"] Тогда
		ПроводитьПоВзаиморасчетам=Ложь;				
	КонецЕсли; 
	СтруктураШД.Вставить("ПроводитьПоВзаиморасчетам", ПроводитьПоВзаиморасчетам);
	СтруктураШД.Вставить("КоэффициентПересчета", КоэффициентПересчета(СтруктураШД));
	
	Возврат СтруктураШД;
КонецФункции