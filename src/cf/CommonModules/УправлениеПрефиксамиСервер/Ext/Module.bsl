Функция Сформировать(Объект, Префикс) Экспорт
	СтруктураПрефикса=СтруктураПрефикса(Объект);
	Если СтруктураПрефикса=Неопределено Тогда Возврат Префикс; КонецЕсли; 

	МетаданныеДокумента=Объект.Метаданные();

	стрПрефиксРИБ=?(СтруктураПрефикса.ПрефиксРИБ, ПараметрыСеанса.ПрефиксУзлаРИБ , "");	
	стрШаблон=?(ПустаяСтрока(СтруктураПрефикса.ПрефиксШаблон), "[РИБ][ПРЕФИКС][ПЕРИОД]-", СтруктураПрефикса.ПрефиксШаблон);
	Если УправлениеМетаданными.ЕстьРеквизит("Организация", МетаданныеДокумента) И НЕ ЗначениеЗаполнено(Объект.Организация.Префикс) Тогда
		Если Найти(стрШаблон, "[ОРГАНИЗАЦИЯ]")=0 Тогда
			стрШаблон="[ОРГАНИЗАЦИЯ]"+стрШаблон;
		КонецЕсли;
		стрШаблон=СтрЗаменить(стрШаблон, "[ОРГАНИЗАЦИЯ]", Объект.Организация.Префикс);
	КонецЕсли;
	стрШаблон=СтрЗаменить(стрШаблон, "[РИБ]", стрПрефиксРИБ);
	стрШаблон=СтрЗаменить(стрШаблон, "[ПЕРИОД]", СтруктураПрефикса.ПрефиксПериод);
	стрШаблон=СтрЗаменить(стрШаблон, "[ПРЕФИКС]", СтруктураПрефикса.Префикс);

	Если МетаданныеДокумента.ПолноеИмя()="Документ.СчетФактураВыданный" Тогда
		стрШаблон=?(Объект.ВидСчетаФактуры=Перечисления.НДСВидСчетаФактуры.НаАванс, "А", "")+стрШаблон;
	КонецЕсли;
	
	Префикс=стрШаблон;
	
	Возврат Префикс; 
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Дополнительные функции

Функция СтруктураПрефикса(Объект) Экспорт
	ОбъектМетаданныхСсылка=Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("ПолноеИмя", Объект.Метаданные().ПолноеИмя());
	Если ОбъектМетаданныхСсылка.Пустая() Тогда Возврат Неопределено; КонецЕсли; //Ошибка (такого быть не должно)

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ИсточникДанных", ОбъектМетаданныхСсылка);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	НастройкаПрефиксов.Правила,
	|	НастройкаПрефиксов.Элементы
	|ИЗ
	|	РегистрСведений.НастройкаПрефиксов КАК НастройкаПрефиксов
	|ГДЕ
	|	НастройкаПрефиксов.ИсточникДанных = &ИсточникДанных
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Если НЕ Выборка.Следующий() Тогда Возврат Неопределено; КонецЕсли;
	
	тзПравила=Выборка.Правила.Получить();
	Если НЕ ТипЗнч(тзПравила)=Тип("ТаблицаЗначений") Тогда Возврат Неопределено; КонецЕсли;
	
	тзЭлементы=Выборка.Элементы.Получить();
	Если НЕ ТипЗнч(тзЭлементы)=Тип("ТаблицаЗначений") Тогда Возврат Неопределено; КонецЕсли;

	тзСоответствия=ТаблицаСоответствий(Объект, тзЭлементы, тзПравила, Объект.Ссылка.Пустая());
	Если тзСоответствия.Количество()=0 Тогда Возврат Неопределено; КонецЕсли;

	СтруктураПрефикса=Новый Структура;
	СтруктураПрефикса.Вставить("Префикс", тзСоответствия[0].Префикс);
	СтруктураПрефикса.Вставить("ПрефиксРИБ", тзСоответствия[0].ПрефиксРИБ);
	СтруктураПрефикса.Вставить("ПрефиксПериод", тзСоответствия[0].ПрефиксПериод);
	СтруктураПрефикса.Вставить("ПрефиксШаблон", тзСоответствия[0].ПрефиксШаблон);
	Если ЗначениеЗаполнено(СтруктураПрефикса.ПрефиксПериод) Тогда
		СтруктураПрефикса.ПрефиксПериод=СформироватьПредставлениеПериода(СтруктураПрефикса.ПрефиксПериод, Объект.Дата);
	КонецЕсли;

	Возврат СтруктураПрефикса;
КонецФункции

Функция ЗначениеРеквизитаПоСсылке(Ссылка, Путь)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст="
	|ВЫБРАТЬ
	|"+Путь+" Как Реквизит
	|ИЗ
	|	"+Ссылка.Метаданные().ПолноеИмя()+" КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &Ссылка
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Реквизит, Неопределено); 
КонецФункции

Функция ЗначениеРеквизитаПоОбъекту(Объект, Путь)
	стрВыражение="Объект";
	Массив=СтрРазделить(Путь, ".");
	Для каждого ИмяРеквизита Из Массив Цикл
		стрВыражение=стрВыражение+"["""+ИмяРеквизита+"""]";
	КонецЦикла;	 
	Возврат Вычислить(стрВыражение);
КонецФункции

Функция СформироватьПредставлениеПериода(стрПрефикс, Дата)
	Если Дата=Неопределено Тогда Возврат ""; КонецЕсли;

	Если стрПрефикс="НомерДняГода" Тогда
		Возврат Формат(ДеньГода(Дата),"ЧЦ=3; ЧВН=");
	ИначеЕсли стрПрефикс="НомерДняМесяца" Тогда
		Возврат Формат(Месяц(Дата), "ЧЦ=2; ЧВН=")+"-"+Формат(День(Дата),"ЧЦ=2; ЧВН=");
	ИначеЕсли стрПрефикс="НомерНедели" Тогда
		Возврат Формат(ДеньНедели(Дата),"ЧЦ=2; ЧВН=");
	ИначеЕсли стрПрефикс="НомерМесяца" Тогда
		Возврат Формат(Месяц(Дата),"ЧЦ=2; ЧВН=");
	ИначеЕсли стрПрефикс="НомерКвартала" Тогда
		Возврат Формат(Цел((Месяц(Дата)-1)/3)+1,"ЧЦ=2; ЧВН=");
	ИначеЕсли стрПрефикс="НомерГода" Тогда
		Возврат Прав(Строка(Год(Дата)),2);
	ИначеЕсли стрПрефикс="НомерГодаМесяца" Тогда
		Возврат Прав(Строка(Год(Дата)),2)+Формат(Месяц(Дата),"ЧЦ=2; ЧВН=");
	ИначеЕсли стрПрефикс="НомерГодаМесяцаДня" Тогда
		Возврат Прав(Строка(Год(Дата)), 2)+Формат(Месяц(Дата),"ЧЦ=2; ЧВН=")+Формат(День(Дата),"ЧЦ=2; ЧВН=");
	КонецЕсли;
	
	Возврат "";
КонецФункции

Функция ТаблицаСоответствий(Объект, тзЭлементы, тзПравила, ЭтоНовыйОбъект)
	ОбъектЯвляетсяСсылкой=ОбщегоНазначенияСервер.ЭтоСсылка(ТипЗнч(Объект));
	
	тзСоответствия=Новый ТаблицаЗначений;

	//Добавим колонки "измерения" в таблицу соответствий
	Для Каждого СтрокаКоллекции Из тзЭлементы Цикл
		стрКолонка=СтрЗаменить(СтрокаКоллекции.Идентификатор, ".", "_");
		тзСоответствия.Колонки.Добавить(стрКолонка, Новый ОписаниеТипов("Число"));
	КонецЦикла;

	//Добавим колонки "ресурсы" в таблицу соответствий
	тзСоответствия.Колонки.Добавить("Префикс", Новый ОписаниеТипов("Строка"));
	тзСоответствия.Колонки.Добавить("ПрефиксРИБ", Новый ОписаниеТипов("Булево"));
	тзСоответствия.Колонки.Добавить("ПрефиксПериод", Новый ОписаниеТипов("Строка"));
	тзСоответствия.Колонки.Добавить("ПрефиксШаблон", Новый ОписаниеТипов("Строка"));
	
	//Заполняем таблицу соответствий
	УровеньСоответствияПоУмолчанию=1000;
	Для Каждого СтрокаПравила Из тзПравила Цикл
		фСоответствие=0; ОбъектСтрокаСоответствия=тзСоответствия.Добавить();
		//ОбъектСтрокаСоответствия=Неопределено;
		//Если НЕ ПустаяСтрока(СтрокаПравила.ПрефиксПериод) Тогда
		//	стрПериод1=СформироватьПредставлениеПериода(СтрокаПравила.ПрефиксПериод, Объект.Дата);
		//	стрПериод2=СформироватьПредставлениеПериода(СтрокаПравила.ПрефиксПериод, ЗначениеРеквизитаПоСсылке(Объект.Ссылка, "Дата"));
		//	Если НЕ стрПериод1=стрПериод2 Тогда
		//		ОбъектСтрокаСоответствия=тзСоответствия.Добавить();
		//	КонецЕсли;
		//	Если ОбъектСтрокаСоответствия=Неопределено Тогда Продолжить; КонецЕсли;
		//КонецЕсли; //**************

		Для Каждого СтрокаАтрибута Из тзЭлементы Цикл
			стрПуть=СокрЛП(СтрокаАтрибута.Идентификатор);
			Если ОбъектЯвляетсяСсылкой Тогда
				ЗначениеИзмерения=ЗначениеРеквизитаПоСсылке(Объект.Ссылка, стрПуть);
			Иначе
				ЗначениеИзмерения=ЗначениеРеквизитаПоОбъекту(Объект, стрПуть);
				Если НЕ ЭтоНовыйОбъект И ЗначениеИзмерения=ЗначениеРеквизитаПоСсылке(Объект.Ссылка, стрПуть) Тогда
					Продолжить; // Значения не изменились
				КонецЕсли;
			КонецЕсли;

			ЗначениеКолонки=СтрокаПравила[СтрЗаменить(стрПуть, ".", "_")];

			// TODO продумать для разных типов соответствий -
			//как они должны себя вести при пустых значениях измерений в правилах и/или пустых значений переданных измерений
			//пока использую правило: Если входное значение неопределено, то нет однозначных правил (кроме правила "для всех"):
			//Необходимо ввести понятие ЮНИВЕРСУМ

			Если Не ЗначениеЗаполнено(ЗначениеКолонки) Тогда //Подходит любое значение измерения
				Продолжить;
			ИначеЕсли Не ЗначениеЗаполнено(ЗначениеИзмерения) Тогда
				фСоответствие=-1; Прервать;
			КонецЕсли;

			Если ТипЗнч(ЗначениеКолонки)=Тип("Строка")Тогда ЗначениеКолонки=СокрЛП(ЗначениеКолонки); КонецЕсли;

			фСоответствие=?(ЗначениеИзмерения=ЗначениеКолонки, УровеньСоответствияПоУмолчанию, -1);
			Если фСоответствие=-1 Тогда
				стрТипВид=ТипОбъекта(ЗначениеКолонки, 1, Символы.ПС);
				стрТип=стрПолучитьСтроку(стрТипВид, 1);
				стрВид=стрПолучитьСтроку(стрТипВид, 2);
				Если стрТип="Справочник"  Тогда
					стрВидИерархии=Строка(Метаданные.Справочники[стрВид].ВидИерархии);
					Если стрВидИерархии="ИерархияЭлементов" Тогда
						фСоответствие=?(ЗначениеИзмерения.ПринадлежитЭлементу(ЗначениеКолонки)=1, ЗначениеКолонки.Уровень()+1, -1);
					ИначеЕсли стрВидИерархии="ИерархияГруппИЭлементов" Тогда
						Если ЗначениеКолонки.ЭтоГруппа Тогда //Если ЗначениеРеквизитаОбъекта(ЗначениеКолонки, "ЭтоГруппа") Тогда
							фСоответствие=?(ЗначениеИзмерения.ПринадлежитЭлементу(ЗначениеКолонки)=1, ЗначениеКолонки.Уровень()+1, -1);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если фСоответствие=-1 Тогда Прервать; КонецЕсли;

			Если ОбъектСтрокаСоответствия=Неопределено Тогда
				ОбъектСтрокаСоответствия=тзСоответствия.Добавить();
			КонецЕсли;			
			ОбъектСтрокаСоответствия[СтрЗаменить(стрПуть, ".", "_")]=фСоответствие;
		КонецЦикла;
		Если ОбъектСтрокаСоответствия=Неопределено Тогда Продолжить; КонецЕсли;

		Если фСоответствие=-1 Тогда
			тзСоответствия.Удалить(ОбъектСтрокаСоответствия);
			Продолжить;
		КонецЕсли;

		//Заполним ресурсы таблицы соответствия текущей строки
		ОбъектСтрокаСоответствия["Префикс"]=СтрокаПравила["Префикс"];
		ОбъектСтрокаСоответствия["ПрефиксРИБ"]=СтрокаПравила["ПрефиксРИБ"];
		ОбъектСтрокаСоответствия["ПрефиксПериод"]=СтрокаПравила["ПрефиксПериод"];
		ОбъектСтрокаСоответствия["ПрефиксШаблон"]=СтрокаПравила["ПрефиксШаблон"];
	КонецЦикла;

	Возврат тзСоответствия;
КонецФункции

Функция ТипОбъекта(Объект, Режим=0, Разделитель=".") Экспорт
	// Режим: 0 - тип объекта, 1 - тип+вид объекта
	Попытка мдОбъект=Объект.Метаданные();
	Исключение Возврат Строка(ТипЗнч(Объект));
	КонецПопытки;

	Если Режим=0 Тогда Возврат СтрЗаменить(мдОбъект.ПолноеИмя(), "."+мдОбъект.Имя, ""); КонецЕсли; 
	
	стрТипВид=мдОбъект.ПолноеИмя();
	Если Разделитель<>"." Тогда стрТипВид=стрЗаменить(стрТипВид, ".", Разделитель); КонецЕсли;

	Возврат стрТипВид;	
КонецФункции