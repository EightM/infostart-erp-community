Процедура ДобавитьЗначениеМассива(Массив, Значение, ИсключитьПустыеЗначения=Ложь) Экспорт
	Если ИсключитьПустыеЗначения И НЕ ЗначениеЗаполнено(Значение) Тогда Возврат; КонецЕсли; 
	Если Массив.Найти(Значение)=Неопределено Тогда Массив.Добавить(Значение); КонецЕсли;
КонецПроцедуры

// РаспределениеПоТаблицеЗначений(тзИсточник, стрКолонка1, СуммаКРаспределению)
//
// Варианты
//	0 - Пропорционально с увеличением значения ячейки
//	1 - Пропорционально с изменением  значения ячейки
//	2 - Равномерно
Процедура РаспределитьПоТаблицеЗначений(тзИсточник, Знач ОстатокКРаспределению, стрКолонкаИсточник="Сумма", Вариант=0, стрКолонкаПриемник=Неопределено, ВариантОкругления=2) Экспорт
	// Проверим корректность переданных параметров
	Если ОстатокКРаспределению=0 Или тзИсточник.Количество()=0 Тогда Возврат; КонецЕсли;
	Если стрКолонкаПриемник=Неопределено Тогда стрКолонкаПриемник=стрКолонкаИсточник; КонецЕсли; 
		
	Если ТипЗнч(тзИсточник)=Тип("ТаблицаЗначений") Тогда
		БазаРаспределения=тзИсточник.Итог(стрКолонкаИсточник);
	Иначе
		БазаРаспределения=0;
		Для каждого СтрокаМассива Из тзИсточник Цикл
			БазаРаспределения=БазаРаспределения+СтрокаМассива[стрКолонкаИсточник];
		КонецЦикла;
	КонецЕсли;

	Если Вариант<2 Тогда
		Если БазаРаспределения=0 Тогда Возврат; КонецЕсли;
		Коэффициент=ОстатокКРаспределению/БазаРаспределения; // Распределение по коэффициенту

	ИначеЕсли Вариант=2 Тогда //Равномерное распределение
		ЗначениеЯчейки=Окр(ОстатокКРаспределению/тзИсточник.Количество(), 3);
	КонецЕсли;
	
	РаспределеноВсего=0;
	Для Каждого СтрокаТаблицыЗначений Из тзИсточник Цикл
		Если Вариант=0 Тогда
			ЗначениеЯчейки=Окр(СтрокаТаблицыЗначений[стрКолонкаИсточник]*Коэффициент, ВариантОкругления);
			СтрокаТаблицыЗначений[стрКолонкаПриемник]=СтрокаТаблицыЗначений[стрКолонкаИсточник]+ЗначениеЯчейки;
		ИначеЕсли Вариант=1 Тогда
			ЗначениеЯчейки=Окр(СтрокаТаблицыЗначений[стрКолонкаИсточник]*Коэффициент, ВариантОкругления);
			СтрокаТаблицыЗначений[стрКолонкаПриемник]=ЗначениеЯчейки;
		ИначеЕсли Вариант=2 Тогда
			СтрокаТаблицыЗначений[стрКолонкаПриемник]=ЗначениеЯчейки;
		КонецЕсли;
		РаспределеноВсего=РаспределеноВсего+ЗначениеЯчейки;
	КонецЦикла;

	ОстатокКРаспределению=ОстатокКРаспределению-РаспределеноВсего;
	Если ОстатокКРаспределению Тогда
		СтрокаТаблицыЗначений=тзИсточник[тзИсточник.Количество()-1];
		СтрокаТаблицыЗначений[стрКолонкаПриемник]=СтрокаТаблицыЗначений[стрКолонкаПриемник]+ОстатокКРаспределению;
	КонецЕсли;
КонецПроцедуры

Функция НайтиСтроки(Источник, СтруктураОтбора) Экспорт
	Если ТипЗнч(Источник)=Тип("ПостроительЗапроса") Тогда
		ПостроительЗапроса=Источник;
	Иначе
		ПостроительЗапроса=Новый ПостроительЗапроса;
		ПостроительЗапроса.ИсточникДанных=Новый ОписаниеИсточникаДанных(Источник);
	КонецЕсли;

	Для Каждого КритерийОтбора Из СтруктураОтбора Цикл
		стрКритерийОтбора=стрЗаменить(КритерийОтбора.Ключ, "_", Символы.ПС);
		стрИмяОтбора=СтрПолучитьСтроку(стрКритерийОтбора, 1);
		стрВидСравнения=СтрПолучитьСтроку(стрКритерийОтбора, 2);
				
		НовыйОтбор=ПостроительЗапроса.Отбор.Добавить(стрИмяОтбора);
		НовыйОтбор.Использование=Истина;
		Если Не ПустаяСтрока(стрВидСравнения) Тогда
			НовыйОтбор.ВидСравнения=ВидСравнения[стрВидСравнения];
		КонецЕсли;
		НовыйОтбор.Значение=КритерийОтбора.Значение;
	КонецЦикла;
	
	ПостроительЗапроса.Выполнить();

	Возврат ПостроительЗапроса.Результат.Выгрузить();
КонецФункции

Функция Скопировать(КоллекцияИсходная) Экспорт
	Если ТипЗнч(КоллекцияИсходная)=Тип("Массив") Тогда
		КоллекцияКопия=Новый Массив;
		Для Каждого Элемент Из КоллекцияИсходная Цикл
			КоллекцияКопия.Добавить(Элемент);
		КонецЦикла;
		Возврат КоллекцияКопия;

	ИначеЕсли ТипЗнч(КоллекцияИсходная)=Тип("Структура") Тогда
		КоллекцияКопия=Новый Структура;
		Для Каждого Элемент Из КоллекцияИсходная Цикл
			КоллекцияКопия.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
		Возврат КоллекцияКопия; 

	ИначеЕсли ТипЗнч(КоллекцияИсходная)=Тип("Соответствие") Тогда
		КоллекцияКопия=Новый Соответствие;
		Для Каждого Элемент Из КоллекцияИсходная Цикл
			КоллекцияКопия.Вставить(Элемент.Ключ ,Элемент.Значение);
		КонецЦикла;
		Возврат КоллекцияКопия;
	КонецЕсли;

	Сообщить("Неверный тип универсальной коллекции для копирования");
	Возврат Неопределено	
КонецФункции

Функция МассивыИдентичны(ПервыйМассив, ВторойМассив) Экспорт
    ЭлементовМассива = ПервыйМассив.Количество();
	МассивыСовпадают = (ЭлементовМассива = ВторойМассив.Количество()); 
	  
	Если МассивыСовпадают Тогда
		Для Сч = 1 По ЭлементовМассива Цикл
			Если ПервыйМассив[Сч-1] <> ВторойМассив[Сч-1] Тогда
				Возврат Ложь
			КонецЕсли;
		КонецЦикла; 		
	КонецЕсли;

	Возврат МассивыСовпадают
КонецФункции

Функция СвойствоСтруктуры(Структура, Ключ, ЗначениеПоУмолчанию=Неопределено) Экспорт
	Значение=Неопределено;;
	Если Не Структура.Свойство(Ключ, Значение) Тогда
		Значение=ЗначениеПоУмолчанию;
		Структура.Вставить(Ключ, Значение);
	КонецЕсли;
	Возврат Значение;
КонецФункции