Процедура УстановитьЗначениеРеквизита(ДокументСсылка, Имя, Значение) Экспорт
	ДокументОбъект=ДокументСсылка.ПолучитьОбъект();
	ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьРегистрыПравил");
	ДокументОбъект[Имя]=Значение;
	ДокументОбъект.Записать();
КонецПроцедуры

Функция ИмяПредопределенногоПодвида(Подвид) Экспорт
	Возврат ?(ЗначениеЗаполнено(Подвид), СокрЛП(Подвид.ИмяПредопределеного), "");
КонецФункции

// Функция определяет конрагента, соответствующего указанной организации
//
// Параметры
//  Организация - организация, по которой определяется конрагент
//
// Возвращаемое значение:
//  Контрагент - контрагент, соответствующий указанной организации
//
Функция КонтрагентПоОрганизации(Организация) Экспорт
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ВидСвязи", Перечисления.ВидыСобственныхКонтрагентов.Организация);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст="
	|ВЫБРАТЬ
	|   Контрагент
	|ИЗ
	|   РегистрСведений.СобственныеКонтрагенты 
	|ГДЕ 
	|	Объект = &Организация И ВидСвязи = &ВидСвязи
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Контрагент;
	КонецЕсли;

	Возврат Справочники.Контрагенты.ПустаяСсылка();
КонецФункции

Функция ПараметрыУчетнойПолитики(Объект, Переписать=Ложь) Экспорт

	Если Переписать=Ложь Тогда
		Переписать=?(Объект.ДополнительныеСвойства.УчетнаяПолитика=Неопределено, Истина, Ложь);
	КонецЕсли;

	Если Переписать Тогда
		Объект.ДополнительныеСвойства.УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(Объект.ЭтоНовый(), ТекущаяДата(), Объект.Дата), Ложь, Объект.Организация);
	КонецЕсли;

	Возврат Объект.ДополнительныеСвойства.УчетнаяПолитика;

КонецФункции

Процедура ИнициализацияМодуля(ДополнительныеСвойства, ТипОперации="") Экспорт
	ДополнительныеСвойства.Вставить("УчетнаяПолитика", Неопределено);
	ДополнительныеСвойства.Вставить("ВалютаБухУчета", МодульВалютногоУчета.ПолучитьВалюту("Бух"));
	ДополнительныеСвойства.Вставить("ВалютаУпрУчета", МодульВалютногоУчета.ПолучитьВалюту("Упр"));
	ДополнительныеСвойства.Вставить("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	ДополнительныеСвойства.Вставить("ДополнительныеАтрибуты", Новый Структура);
	ДополнительныеСвойства.Вставить("ТипОбъекта", "Документ");
	ДополнительныеСвойства.Вставить("ИнтерактивноеПроведение", Ложь);
	ДополнительныеСвойства.Вставить("ТипОперации", ТипОперации);
КонецПроцедуры

Процедура ПередПроведением(Отказ, РежимПроведения, ДокументОбъект) Экспорт
	Если НЕ ПараметрыСеанса.ОрганизацияГрупповогоПроведения.Пустая() Тогда
		Если УправлениеМетаданными.ЕстьРеквизит("Организация", ДокументОбъект.Метаданные()) Тогда
			Если НЕ ДокументОбъект.Организация=ПараметрыСеанса.ОрганизацияГрупповогоПроведения Тогда
				Отказ=Истина; Возврат;
			КонецЕсли
		КонецЕсли;
	КонецЕсли;

	ДополнительныеСвойства=ДокументОбъект.ДополнительныеСвойства;
	Если ДополнительныеСвойства.УдалятьДвижения Тогда
		//ОбщегоНазначения.УдалитьДвиженияРегистратора(ДокументОбъект, Отказ);
		УдалитьДвиженияРегистратора(ДокументОбъект, Отказ);
		Если Отказ Тогда Возврат; КонецЕсли;		
	КонецЕсли;
	
	//УдалитьДвиженияРегистратора(ДокументОбъект, Отказ);
	//Если Отказ Тогда Возврат; КонецЕсли;

	Заголовок=ЗаполнениеДокументов.ПредставлениеДокументаПриПроведении(ДокументОбъект);
	ДатаДокумента=ДокументОбъект.Дата;

	ДополнительныеСвойства=ДокументОбъект.ДополнительныеСвойства;
	ДополнительныеСвойства.Вставить("РежимПроведения", РежимПроведения); //Для совместимости
	ДополнительныеСвойства.Вставить("Заголовок", Заголовок); //Для совместимости

	//*****************************************************
	Если Не ДополнительныеСвойства.Свойство("СтруктураШД") Тогда
		Если Не ДокументОбъект.ПроверитьЗаполнение() Тогда
			Отказ=Истина; Возврат;
		КонецЕсли;
	КонецЕсли;

	//Дополним структуру шапки документа
	СтруктураШД=Неопределено;
	Если ДополнительныеСвойства.Свойство("СтруктураШД", СтруктураШД) Тогда
		СтруктураШД.Вставить("Ссылка", ДокументОбъект.Ссылка);
		СтруктураШД.Вставить("Дата", ДатаДокумента);
		СтруктураШД.Вставить("МоментВремени", ДокументОбъект.МоментВремени());
		//23.12.2015 СтруктураШД.Вставить("РежимПроведения", РежимПроведения);
    	СтруктураШД.Вставить("Заголовок", Заголовок);
	КонецЕсли;

	//Дополним структуру табличных частей документа
	СтруктураТД=Неопределено;
	Если ДополнительныеСвойства.Свойство("СтруктураТД", СтруктураТД) Тогда
		Для каждого СтрокаКоллекции Из СтруктураТД Цикл
			тзДанные=СтрокаКоллекции.Значение;
			Если НЕ тзДанные.Колонки.Найти("Период")=Неопределено Тогда
				тзДанные.ЗаполнитьЗначения(ДатаДокумента, "Период");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
 
Процедура УдалитьДвиженияРегистратора(Объект, Отказ) Экспорт
	ОбщегоНазначения.УдалитьДвиженияРегистратора(Объект, Отказ);
КонецПроцедуры

Функция РазрешитьДвиженияПоРегистру(СтруктураШД, стрРегистр) Экспорт
	Если Не ЗначениеЗаполнено(СтруктураШД) Тогда Возврат Истина; КонецЕсли;
	Если стрРегистр="УчетПотребностей" Тогда
		Если НЕ Константы.УчетПотребностей.Получить() Тогда Возврат Ложь; КонецЕсли;
	ИначеЕсли стрРегистр="ТоварыНаСкладах" Тогда
		Если СтруктураШД.Свойство("ЯчеистыйСклад") И НЕ СтруктураШД.ЯчеистыйСклад=Истина Тогда Возврат Ложь; КонецЕсли;
	КонецЕсли;
	Возврат Истина;
КонецФункции
 
Функция СформироватьСтруктуруШД(ДокументОбъект) Экспорт
	СтруктураШД=Новый Структура;
	СтруктураШД.Вставить("Ссылка", ДокументОбъект.Ссылка);
	СтруктураШД.Вставить("Дата", ДокументОбъект.Дата);
	СтруктураШД.Вставить("Номер", ДокументОбъект.Номер);
	СтруктураШД.Вставить("ВидДокумента", ДокументОбъект.Метаданные().Имя);
	СтруктураШД.Вставить("МоментВремени", ДокументОбъект.МоментВремени());
	СтруктураШД.Вставить("ВалютаРегламентированногоУчета", ДокументОбъект.ДополнительныеСвойства.ВалютаБухУчета);
	СтруктураШД.Вставить("ВалютаУправленческогоУчета", ДокументОбъект.ДополнительныеСвойства.ВалютаУпрУчета);
	СтруктураШД.Вставить("УчетнаяПолитика", ДокументОбъект.ПараметрыУчетнойПолитики(Истина));
	Если УправлениеМетаданными.ЕстьРеквизит("ВалютаДокумента", ДокументОбъект.Метаданные()) Тогда
		СтруктураШД.Вставить("КурсВалютыРегламентированногоУчета", ЗаполнениеДокументов.КурсДокумента(ДокументОбъект, СтруктураШД.ВалютаРегламентированногоУчета));
		СтруктураШД.Вставить("КратностьВалютыРегламентированногоУчета", ЗаполнениеДокументов.КратностьДокумента(ДокументОбъект, СтруктураШД.ВалютаРегламентированногоУчета));
		СтруктураШД.Вставить("КурсВалютыУправленческогоУчета", ЗаполнениеДокументов.КурсДокумента(ДокументОбъект, СтруктураШД.ВалютаУправленческогоУчета));
		СтруктураШД.Вставить("КратностьВалютыУправленческогоУчета", ЗаполнениеДокументов.КратностьДокумента(ДокументОбъект, СтруктураШД.ВалютаУправленческогоУчета));		
	КонецЕсли;

	мдДокумент=Метаданные.Документы[СтруктураШД.ВидДокумента];	
	Для Каждого мдРеквизит Из мдДокумент.Реквизиты Цикл
		Если СокрЛП(мдРеквизит.Тип)="Хранилище значения" Тогда Продолжить; КонецЕсли; 
		стрРеквизит=мдРеквизит.Имя;

		СтруктураШД.Вставить(стрРеквизит, ДокументОбъект[стрРеквизит]);
		
		Если стрРеквизит="ДоговорКонтрагента" Тогда
			Запрос=Новый Запрос;
			Запрос.УстановитьПараметр("ДоговорКонтрагента", СтруктураШД.ДоговорКонтрагента);
			Запрос.Текст="
			|Выбрать
			|	ИсточникДанных1.ДопУсловияДоговора Как ДопУсловияДоговора,
			|	ИсточникДанных1.ВестиПлатежныйКалендарь Как ВестиПлатежныйКалендарь,
			|	ИсточникДанных1.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
			|	ИсточникДанных1.Организация КАК ДоговорОрганизация,
			|	ИсточникДанных1.ВидДоговора КАК ВидДоговора,
			|	ИсточникДанных1.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
			|	ИсточникДанных1.ВидАгентскогоДоговора КАК ВидАгентскогоДоговора
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ИсточникДанных1
			|ГДЕ
			|	ИсточникДанных1.Ссылка = &ДоговорКонтрагента
			|";
			тзДанные=Запрос.Выполнить().Выгрузить();
			Если НЕ тзДанные.Количество()=0 Тогда
				Для каждого Колонка Из тзДанные.Колонки Цикл
					СтруктураШД.Вставить(Колонка.Имя, тзДанные[0][Колонка.Имя]);
				КонецЦикла;
			КонецЕсли;

		ИначеЕсли стрРеквизит="ВалютаДокумента" Тогда
			СтруктураШД.Вставить("КурсДокумента", ЗаполнениеДокументов.КурсДокумента(ДокументОбъект, СтруктураШД.ВалютаРегламентированногоУчета));
			СтруктураШД.Вставить("КратностьДокумента", ЗаполнениеДокументов.КратностьДокумента(ДокументОбъект, СтруктураШД.ВалютаРегламентированногоУчета));

		ИначеЕсли стрРеквизит="Организация" Тогда
			СтруктураШД.Вставить("ГоловнаяОрганизация", ДокументОбъект.Организация.ГоловнаяОрганизация);
			СтруктураШД.Вставить("Префикс", ДокументОбъект.Организация.Префикс);

		ИначеЕсли стрРеквизит="Склад" Тогда
			СтруктураШД.Вставить("ВидСклада", ДокументОбъект.Склад.ВидСклада);
			СтруктураШД.Вставить("ЯчеистыйСклад", ДокументОбъект.Склад.Ячеистый);
		КонецЕсли;
	КонецЦикла;

	Возврат СтруктураШД;
КонецФункции

Функция ПолучитьСтруктуруРеквизитовШапки(ДокументОбъект, РежимПроведения=Неопределено, стрТекстЗапросаДоп="") Экспорт
	
	ИнтерактивноеПроведение=Истина; //ДокументОбъект.ДополнительныеСвойства.ИнтерактивноеПроведение; //***
	Если ИнтерактивноеПроведение Тогда тзРеквизиты=Новый ТаблицаЗначений; КонецЕсли;

	СтруктураШД=Новый Структура;
	СтруктураШД.Вставить("Ссылка", ДокументОбъект.Ссылка);
	СтруктураШД.Вставить("Дата", ДокументОбъект.Дата);
	СтруктураШД.Вставить("Номер", ДокументОбъект.Номер);
	СтруктураШД.Вставить("ВидДокумента", ДокументОбъект.Метаданные().Имя);
	СтруктураШД.Вставить("МоментВремени", ДокументОбъект.МоментВремени());
	СтруктураШД.Вставить("ВалютаРегламентированногоУчета", ДокументОбъект.ДополнительныеСвойства.ВалютаБухУчета);
	СтруктураШД.Вставить("ВалютаУправленческогоУчета", ДокументОбъект.ДополнительныеСвойства.ВалютаУпрУчета);
	
	ТекстЗапроса=стрТекстЗапросаДоп; Организация=Неопределено;
	мдДокумент=Метаданные.Документы[СтруктураШД.ВидДокумента];	
	Для Каждого мдРеквизит Из мдДокумент.Реквизиты Цикл
		Если СокрЛП(мдРеквизит.Тип)="Хранилище значения" Тогда Продолжить; КонецЕсли; 
		стрРеквизит=мдРеквизит.Имя;
		Если ИнтерактивноеПроведение Тогда
			тзРеквизиты.Колонки.Добавить(стрРеквизит, мдРеквизит.Тип);
		КонецЕсли; //***
		СтруктураШД.Вставить(стрРеквизит, ДокументОбъект[стрРеквизит]);
		Если стрРеквизит="ДоговорКонтрагента" Тогда
			ТекстЗапроса=ТекстЗапроса+"
			|Док.ДоговорКонтрагента.ВестиПлатежныйКалендарь Как ВестиПлатежныйКалендарь,
			|Док.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
			|Док.ДоговорКонтрагента.Организация КАК ДоговорОрганизация,
			|Док.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
			|Док.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
			|Док.ДоговорКонтрагента.ВидАгентскогоДоговора КАК ВидАгентскогоДоговора,
			|";

		ИначеЕсли стрРеквизит="ВалютаДокумента" Тогда
			СтруктураШД.Вставить("КурсДокумента", ЗаполнениеДокументов.КурсДокумента(ДокументОбъект, СтруктураШД.ВалютаРегламентированногоУчета));
			СтруктураШД.Вставить("КратностьДокумента", ЗаполнениеДокументов.КратностьДокумента(ДокументОбъект, СтруктураШД.ВалютаРегламентированногоУчета));

		ИначеЕсли стрРеквизит="Организация" Тогда
			Организация=ДокументОбъект.Организация;
			СтруктураШД.Вставить("Префикс", Организация.Префикс);

		ИначеЕсли стрРеквизит="Склад" Тогда
			ТекстЗапроса=ТекстЗапроса+"
			|Док.Склад.ВидСклада КАК ВидСклада,
			|Док.Склад.Ячеистый КАК ЯчеистыйСклад,
			|";

		ИначеЕсли стрРеквизит="Сделка" Тогда
			СделкаМетаданные=Неопределено;
			Если ЗначениеЗаполнено(ДокументОбъект.Сделка) Тогда
				СделкаМетаданные=ДокументОбъект.Сделка.Метаданные();
			КонецЕсли;
			ТекстЗапроса=ТекстЗапроса+"
			|"+?(СделкаМетаданные=Неопределено ИЛИ СделкаМетаданные.Реквизиты.Найти("ВидОперации")=Неопределено,
				"NULL",
				"ВЫРАЗИТЬ(Док.Сделка КАК Документ." + СделкаМетаданные.Имя + ").ВидОперации ")+" КАК СделкаВидОперации, "; 

		//ИначеЕсли стрРеквизит="Склад" Тогда
		//	ТекстЗапроса=ТекстЗапроса+"
		//	|Док.Склад.ВидСклада КАК ВидСклада, ";
		КонецЕсли;
	КонецЦикла;

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка" , СтруктураШД.Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента" , СтруктураШД.Дата);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета" , СтруктураШД.ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета" , СтруктураШД.ВалютаУправленческогоУчета);

	Если ИнтерактивноеПроведение Тогда
		ЗаполнитьЗначенияСвойств(тзРеквизиты.Добавить(), ДокументОбъект);
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ИсточникДанных", тзРеквизиты);
		Запрос.Текст="
		|Выбрать *
		|ПОМЕСТИТЬ ИсточникДанных
		|ИЗ &ИсточникДанных Как ИсточникДанных
		|;
		|";
	КонецЕсли; //***

	Запрос.Текст=Запрос.Текст+"
	|ВЫБРАТЬ 
	|	"+ТекстЗапроса+"
	|	КурсыВалютУпрУчета.Курс КАК КурсВалютыУправленческогоУчета,
	|	КурсыВалютУпрУчета.Кратность КАК КратностьВалютыУправленческогоУчета,
	|	КурсыВалютБухУчета.Курс КАК КурсВалютыРегламентированногоУчета,
	|	КурсыВалютБухУчета.Кратность КАК КратностьВалютыРегламентированногоУчета	
	|ИЗ
	|	"+?(ИнтерактивноеПроведение, "ИсточникДанных", "Документ."+мдДокумент.Имя)+" Как Док
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента) КАК КурсыВалютУпрУчета
	|	ПО &ВалютаРегламентированногоУчета = КурсыВалютУпрУчета.Валюта
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента) КАК КурсыВалютБухУчета
	|	ПО &ВалютаУправленческогоУчета = КурсыВалютБухУчета.Валюта
	|";
	Если Не ИнтерактивноеПроведение Тогда
		Запрос.Текст=Запрос.Текст+" ГДЕ Док.Ссылка=&ДокументСсылка";
	КонецЕсли;
	
	РезультатЗапроса=Запрос.Выполнить();
	РеквизитыШД=РезультатЗапроса.Выбрать();
	РеквизитыШД.Следующий();

	Для каждого Колонка Из РезультатЗапроса.Колонки Цикл
		СтруктураШД.Вставить(Колонка.Имя, РеквизитыШД[Колонка.Имя]);
	КонецЦикла; 

	//Закрываем временные таблицы
	Если ИнтерактивноеПроведение Тогда
		Запрос.МенеджерВременныхТаблиц.Закрыть();
	КонецЕсли;

	//Добавляем данные учетной политики в общую структуру шапки документа
	УчетнаяПолитика=ДокументОбъект.ПараметрыУчетнойПолитики(Истина);
	СтруктураШД.Вставить("УчетнаяПолитика", УчетнаяПолитика);

	Возврат СтруктураШД;
КонецФункции

Функция ПолучитьСтруктуруТЧ(ДокументОбъект, стрТабличнаяЧасть, стрТекстЗапросаДоп="") Экспорт
	мдОбъект=ДокументОбъект.Метаданные();
	мдТабличнаяЧасть=мдОбъект.ТабличныеЧасти[стрТабличнаяЧасть];

	Запрос=Новый Запрос; стрИсточникДанных="ИсточникДанных"; стрУсловие="";
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Активность", Истина);
	Запрос.УстановитьПараметр("ВидТабличнойЧасти", стрТабличнаяЧасть);

	ИнтерактивноеПроведение=Истина; //ДокументОбъект.ДополнительныеСвойства.ИнтерактивноеПроведение;
	Если ИнтерактивноеПроведение Тогда
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Период", ДокументОбъект.Дата);

		стрВыбрать="
		|&Активность,
		|&ВидТабличнойЧасти,
		|&Период,
		|&ДокументСсылка Как Регистратор,
		|";
		Для каждого мдРеквизит Из мдОбъект.Реквизиты Цикл
			Если СокрЛП(мдРеквизит.Тип)="Хранилище значения" Тогда
				Продолжить;
			КонецЕсли;
			стрРеквизит=мдРеквизит.Имя; ЗначениеРеквизита=ДокументОбъект[стрРеквизит];
			Запрос.УстановитьПараметр(стрРеквизит, ЗначениеРеквизита);
			мдРеквизит=мдТабличнаяЧасть.Реквизиты.Найти(стрРеквизит);
			Если мдРеквизит=Неопределено Тогда				
				стрВыбрать=стрВыбрать+"&"+стрРеквизит+","+Символы.ПС;
			КонецЕсли;
		КонецЦикла;

		Запрос.УстановитьПараметр("ИсточникДанных", ДокументОбъект[стрТабличнаяЧасть].Выгрузить());
		Запрос.Текст="
		|Выбрать *
		|ПОМЕСТИТЬ ИсточникДанных
		|ИЗ &ИсточникДанных Как ИсточникДанных
		|;
		|";		
	Иначе //програмное проведение
		стрВыбрать="
		|&Активность,
		|&ВидТабличнойЧасти,
		|Ссылка.Дата Как Период,
		|Ссылка Как Регистратор,
		|";
		Для каждого мдРеквизит Из мдОбъект.Реквизиты Цикл
			стрРеквизит=мдРеквизит.Имя;
			мдРеквизит=мдТабличнаяЧасть.Реквизиты.Найти(стрРеквизит);
			Если мдРеквизит=Неопределено Тогда
				стрВыбрать=стрВыбрать+"Ссылка."+стрРеквизит+","+Символы.ПС;
			КонецЕсли;
		КонецЦикла;
		стрИсточникДанных="Документ."+мдОбъект.Имя+"."+СокрЛП(стрТабличнаяЧасть);
		стрУсловие="ГДЕ Док.Ссылка = &ДокументСсылка";
	КонецЕсли;	
	
	Если Не ПустаяСтрока(стрТекстЗапросаДоп) Тогда
		стрВыбрать=стрВыбрать+Символы.ПС+стрТекстЗапросаДоп;
	КонецЕсли;
	
	//Формируем текст запроса по табличной части
	МассивРеквизитовИсключения=Новый Массив;
	Если стрТабличнаяЧасть="Товары" Или стрТабличнаяЧасть="Комплектующие" Тогда
		МассивРеквизитовИсключения.Добавить("Количество");
		Если Не мдТабличнаяЧасть.Реквизиты.Найти("Количество")=Неопределено Тогда
			Если Не мдТабличнаяЧасть.Реквизиты.Найти("Коэффициент")=Неопределено Тогда
				стрВыбрать=стрВыбрать+"
				|Док.Количество * Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент Как Количество,
				|";
			Иначе
				стрВыбрать=стрВыбрать+"
				|Док.Количество Как Количество,
				|";
			КонецЕсли;			
			стрВыбрать=стрВыбрать+"
			//*** |Док.Количество * Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент Как Количество,
			|Док.Количество Как КоличествоВЕдиницахДокумента,
			|Док.Количество Как КоличествоДок,
			|";
		КонецЕсли;	
		Если Не мдТабличнаяЧасть.Реквизиты.Найти("СуммаНДС")=Неопределено Тогда
			стрВыбрать=стрВыбрать+"
			|Док.Сумма Как СуммаДок,
			|Док.СуммаНДС Как НДСДок,
			|";
		КонецЕсли;
	ИначеЕсли стрТабличнаяЧасть="Услуги" Тогда

	ИначеЕсли стрТабличнаяЧасть="ОС" Или стрТабличнаяЧасть="НМА" Тогда
		МассивРеквизитовИсключения.Добавить("Цена");
		Если Не мдТабличнаяЧасть.Реквизиты.Найти("СуммаНДС")=Неопределено Тогда
			стрВыбрать=стрВыбрать+"
			|Док.Сумма/Док.Количество Как Цена,
			|Док.Сумма Как СуммаДок,
			|Док.СуммаНДС Как НДСДок,
			|";
		КонецЕсли;
	КонецЕсли;
	
	Для каждого мдРеквизит Из мдТабличнаяЧасть.Реквизиты Цикл
		Результат=МассивРеквизитовИсключения.Найти(мдРеквизит.Имя);
		Если Не Результат=Неопределено Тогда Продолжить; КонецЕсли;
		стрАтрибут=мдРеквизит.Имя;
		
		Если стрАтрибут="Номенклатура" Тогда
			стрВыбрать=стрВыбрать+"
			|Док.Номенклатура.Услуга Как Услуга,
			|Док.Номенклатура.Набор Как Набор,
			|Док.Номенклатура.Комплект Как Комплект,
			|Док.Номенклатура.ЕдиницаХраненияОстатков Как ЕдиницаИзмерения,
			|Док.Номенклатура.ВестиУчетПоХарактеристикам Как ВестиУчетПоХарактеристикам,
			|Док.Номенклатура.ВестиПартионныйУчетПоСериям Как ВестиПартионныйУчетПоСериям,
			|";
		ИначеЕсли стрАтрибут="Склад" Тогда
			стрВыбрать=стрВыбрать+"
			|Док.Склад.Ячеистый Как ЯчеистыйСклад,
			|Док.Склад.ВидСклада Как ВидСклада,
			|";
		ИначеЕсли стрАтрибут="Сумма" Тогда
			стрВыбрать=стрВыбрать+"
			|Док.Сумма Как Стоимость,
			|Док.Сумма Как СтоимостьНУ,
			|"; //****
		ИначеЕсли стрАтрибут="СуммаНДС" Тогда
			стрВыбрать=стрВыбрать+"
			|Док.СуммаНДС Как НДС,
			|";
		КонецЕсли;
		стрВыбрать=стрВыбрать+"Док."+стрАтрибут+","+Символы.ПС;
	КонецЦикла;
	
	Запрос.Текст=Запрос.Текст+"
	|ВЫБРАТЬ
	|	"+стрВыбрать+"
	|	Док.НомерСтроки Как НомерСтрокиТабличнойЧасти,
	|	Док.НомерСтроки
	|ИЗ
	|	"+стрИсточникДанных+" КАК Док
	|	"+стрУсловие+"
	|УПОРЯДОЧИТЬ ПО НомерСтроки
	|";

	тзДанные=Запрос.Выполнить().Выгрузить();

	Если ИнтерактивноеПроведение Тогда
		Запрос.МенеджерВременныхТаблиц.Закрыть();
		//Запрос.Текст="УНИЧТОЖИТЬ ИсточникДанных";
		//Запрос.Выполнить();
	КонецЕсли; 
	
	Возврат тзДанные;
КонецФункции