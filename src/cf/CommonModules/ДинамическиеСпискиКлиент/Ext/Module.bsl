Процедура ВыполнитьДействие(стрДействие, ЭтаФорма) Экспорт
	Если НЕ Найти(стрДействие, "_ВыполнитьКоманду_")=0 Тогда
		МассивСтрок=СтрРазделить(стрЗаменить(стрДействие, "_ВыполнитьКоманду_", Символы.ПС), Символы.ПС);
		МодульКлиент=ОбщегоНазначенияКлиент.ОбщийМодуль(МассивСтрок[0]);
		МодульКлиент.ВыполнитьКоманду(МассивСтрок[1], ЭтаФорма, Неопределено);
	КонецЕсли;
КонецПроцедуры

Процедура ОтборПоПодвиду(ДинамическийСписок, стрПодвид="СтраницаВсе") Экспорт
	ПолеОтбора=Новый ПолеКомпоновкиДанных("Подвид");
	Для каждого СтрокаКоллекции Из ДинамическийСписок.Отбор.Элементы Цикл
		Если СтрокаКоллекции.ЛевоеЗначение=ПолеОтбора Тогда
			ЭлементОтбора=СтрокаКоллекции; Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ЭлементОтбора=Неопределено Тогда
		ЭлементОтбора=ДинамическийСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.РежимОтображения=РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		ЭлементОтбора.ЛевоеЗначение=ПолеОтбора;
	КонецЕсли; 
	ЭлементОтбора.Использование=НЕ стрПодвид="СтраницаВсе";
	ЭлементОтбора.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
	Если ЭлементОтбора.Использование Тогда
		ЭлементОтбора.ПравоеЗначение=МетаконфигураторСервер.АтрибутИзСтроки(стрПодвид);
	КонецЕсли;
	ЭлементОтбора.РежимОтображения=РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
КонецПроцедуры

Процедура Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, Форма) Экспорт
	//Если ТипЗнч=Тип("СправочникСсылка.Подвиды") Тогда //когда все ссылки будут заменены на справочник.подвиды (вместо справочник.метаконфигуратор)
	Если Найти(Поле.Имя, "Подвид") > 0 Тогда
		спМеню=ДинамическиеСпискиСервер.СписокПодвидов(ВыбраннаяСтрока[0]);
		Если спМеню.Количество()=1 Тогда Возврат; КонецЕсли;

		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборПодвида", ЭтотОбъект, Новый Структура("МассивДокументов,Форма", ВыбраннаяСтрока, Форма));
		СтандартнаяОбработка=Ложь; Форма.ПоказатьВыборИзМеню(ОписаниеОповещения, спМеню, Элемент);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработчикОповещения_ВыборПодвида(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;

	Для каждого ДокументСсылка Из Параметр2.МассивДокументов Цикл
		УправлениеДокументамиСервер.УстановитьЗначениеРеквизита(ДокументСсылка, "Подвид", Параметр1.Значение);
	КонецЦикла;

	Параметр2.Форма.Элементы.ДинамическийСписок.Обновить();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

Процедура ПриОткрытии(Отказ, ДинамическийСписок, Форма) Экспорт
	ЭлементФормы=Форма.Элементы.Найти("ДинамическийСписок");
	Если НЕ ЭлементФормы=Неопределено И ЭлементФормы.ПодчиненныеЭлементы.Количество()=0 Тогда
		ПоказатьПредупреждение(, "Форма не настроена, обратитесь к администратору!", 20, "Внимание");
		Отказ=Истина; Возврат; 
	КонецЕсли;

	ЭлементОтбора=ОтборыСписковКлиентСервер.НайтиЭлементОтбораПоПолю(ДинамическийСписок.Отбор.Элементы, "Владелец");
	Если НЕ ЭлементОтбора=Неопределено Тогда
		Если ТипЗнч(ЭлементОтбора.ПравоеЗначение)=Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизиты") Тогда
			ДинамическийСписок.Отбор.Элементы.Удалить(ЭлементОтбора);
		КонецЕсли;
	КонецЕсли;

	Элемент=Форма.Элементы.Найти("ФормаСоздатьНаОсновании");
	Если НЕ Элемент=Неопределено Тогда
		Элемент.Картинка=БиблиотекаКартинок.ВводНаОсновании;
		Элемент.Отображение=ОтображениеКнопки.Картинка;
	КонецЕсли;

	//При подборе значений отбора (из формы настройки отчетов), устанавливаем отбор по владелеьцам (если они есть)
	Если НЕ Форма.ВладелецФормы=Неопределено Тогда
		МассивВладельцев=УправлениеМетаданными.ВладельцыОбъекта(Форма.ИмяФормы);
		Если НЕ МассивВладельцев.Количество()=0 Тогда
			МассивТиповВладельцев=Новый Массив;
			Для каждого ПолноеИмя Из МассивВладельцев Цикл
				МассивТиповВладельцев.Добавить(Тип(стрЗаменить(ПолноеИмя, ".", "Ссылка.")));
			КонецЦикла;
			
			Если Форма.ВладелецФормы.Имя="КомпоновщикНастроекНастройкиОтборПравоеЗначение" Тогда
				СписокЗначенийВладельцев=Новый СписокЗначений;

				МассивВидовСравнения=Новый Массив;
				МассивВидовСравнения.Добавить(ВидСравненияКомпоновкиДанных.ВСписке);
				МассивВидовСравнения.Добавить(ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии);
				МассивВидовСравнения.Добавить(ВидСравненияКомпоновкиДанных.НеВСписке);
				МассивВидовСравнения.Добавить(ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии);
				
				ФормаНастройкиОтчета=ОбщегоНазначенияКлиент.ОбъектФормыПоЭлементу(Форма.ВладелецФормы, "ФормаКлиентскогоПриложения");			
				Для каждого СтрокаКоллекции Из ФормаНастройкиОтчета.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
					Если НЕ ЗначениеЗаполнено(СтрокаКоллекции.ПравоеЗначение) Тогда Продолжить; КонецЕсли;
					//Если МассивВидовСравнения.Найти(СтрокаКоллекции.ВидСравнения)=Неопределено Тогда Продолжить; КонецЕсли; 

					Если МассивВидовСравнения.Найти(СтрокаКоллекции.ВидСравнения)=Неопределено Тогда
						Тип=ТипЗнч(СтрокаКоллекции.ПравоеЗначение);
					Иначе
						Тип=СтрокаКоллекции.ПравоеЗначение.ТипЗначения.Типы()[0];
					КонецЕсли; 

					Если МассивТиповВладельцев.Найти(Тип)=Неопределено Тогда Продолжить; КонецЕсли;

					СписокЗначенийВладельцев.Добавить(СтрокаКоллекции.ПравоеЗначение);
				КонецЦикла;

				Если НЕ СписокЗначенийВладельцев.Количество()=0 Тогда
					ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(ДинамическийСписок, "Владелец", СписокЗначенийВладельцев, ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии);
				КонецЕсли;				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры