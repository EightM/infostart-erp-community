Функция ТекущийПользователь() Экспорт
	Возврат ПараметрыСеанса.ТекущийПользователь;
КонецФункции

////////////////////////////////////////////////////////////////
//Управление дополнительными настройками пользователя

Функция ЗначениеПраваПользователя(стрПраво, ЗначениеПоУмолчанию=Неопределено) Экспорт
	Возврат ПараметрыСеанса.ДопПраваПользователя[стрПраво];	
КонецФункции

Функция ЗначениеПоУмолчанию(стрНастройка, Значение=Неопределено) Экспорт
	Если Значение=Неопределено Тогда
		//Получим значение пользователя
		Возврат ПараметрыСеанса.НастройкиПользователя[стрНастройка];
	КонецЕсли;	
	//Установим значение пользователя
	МенеджерЗаписи=РегистрыСведений.НастройкиПользователей.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	МенеджерЗаписи.Настройка = ПланыВидовХарактеристик.НастройкиПользователей[стрНастройка];
	МенеджерЗаписи.Значение = Значение;
	МенеджерЗаписи.Записать(Истина);	
КонецФункции

// Процедура проверяет цены товаров (услуг) на допустимость для данного пользователя
//
// Параметры:
//  ДокументОбъект     - документ; 
//  ИмяТабличнойЧасти  - строка, имя табличной части, которую надо проверять, 
//  Отказ              - признак отказа от проведения документа
//
Процедура ПроверитьДопустимостьЦенОтпуска(ДокументСсылка, ИмяТабличнойЧасти, Отказ) Экспорт
	ТипЦены=ЗначениеПраваПользователя("НеОтпускатьТоварСЦенойНижеОпределенногоТипа", Неопределено);
	Если НЕ ЗначениеЗаполнено(ТипЦены) Тогда Возврат; КонецЕсли;

	МетаданныеДокумента=ДокументСсылка.Метаданные();
	
	ДанныеДокумента=Новый Структура;
	ДанныеДокумента.Вставить("Дата", ДокументСсылка.Дата);
	ДанныеДокумента.Вставить("УчитыватьНДС", ?(УправлениеМетаданными.ЕстьРеквизит("УчитыватьНДС", МетаданныеДокумента), ДокументСсылка.УчитыватьНДС, Ложь));
	ДанныеДокумента.Вставить("СуммаВключаетНДС", ?(УправлениеМетаданными.ЕстьРеквизит("СуммаВключаетНДС", МетаданныеДокумента), ДокументСсылка.СуммаВключаетНДС, Ложь));

	Запрос=Новый Запрос;
	
	ИмяДокумента = МетаданныеДокумента.Имя;
	ЕстьХарактеристикаНоменклатуры = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти);

	ДополнительныеПоля         = "";
	ЛевоеСоединение            = "";
	ПоляДляОбъединенияЗапросов = "";
	
	//СписокФильтров=Новый СписокЗначений;
	//СписокФильтров.Добавить(текТипЦен);

	НомерТипаЦен = 0;
	//Для Каждого ТипЦены Из СписокФильтров Цикл
		// Если хотя бы для одного набора прав не задан тип цен, ниже которого нельзя продавать,
		// то значит можно продавать по любой цене.
		//Если НЕ ЗначениеЗаполнено(ТипЦены.Значение) Тогда Возврат; КонецЕсли;

		НомерТипаЦен = НомерТипаЦен + 1;

		Запрос.УстановитьПараметр("ДатаСреза", ДанныеДокумента.Дата);
		Запрос.УстановитьПараметр("ЦенаВключаетНДС" + НомерТипаЦен, ТипЦены.ЦенаВключаетНДС);

		Если ТипЦены.Рассчитывается Тогда
			Запрос.УстановитьПараметр("ТипЦен" + НомерТипаЦен, ТипЦены.БазовыйТипЦен);
			Запрос.УстановитьПараметр("ТипЦенДинамический" + НомерТипаЦен, ТипЦены);
			Запрос.УстановитьПараметр("Коэффициент" + НомерТипаЦен, ТипЦены.ПроцентСкидкиНаценки);
		Иначе
			Запрос.УстановитьПараметр("ТипЦен" + НомерТипаЦен, ТипЦены);
			Запрос.УстановитьПараметр("Коэффициент" + НомерТипаЦен, 0);
		КонецЕсли;

		ЛевоеСоединение = ЛевоеСоединение + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза, ТипЦен = &ТипЦен" + НомерТипаЦен + ") КАК ЦеныКомпании" + НомерТипаЦен + "
		|	ПО ЦеныКомпании" + НомерТипаЦен + ".Номенклатура = Док.Номенклатура";
		Если ЕстьХарактеристикаНоменклатуры Тогда
			Запрос.УстановитьПараметр("ПустаяХарактеристикаНоменклатуры" , Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
			ЛевоеСоединение = ЛевоеСоединение + "
			|	И
			|	ЦеныКомпании" + НомерТипаЦен + ".ХарактеристикаНоменклатуры = Док.ХарактеристикаНоменклатуры
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза, ТипЦен = &ТипЦен" + НомерТипаЦен + ") КАК ЦеныКомпанииБезХарактеристики" + НомерТипаЦен + "
			|	ПО ЦеныКомпанииБезХарактеристики" + НомерТипаЦен + ".Номенклатура = Док.Номенклатура
			|	И
			|	ЦеныКомпанииБезХарактеристики" + НомерТипаЦен + ".ХарактеристикаНоменклатуры = &ПустаяХарактеристикаНоменклатуры
			|";

			ДополнительныеПоля = ДополнительныеПоля + "," + "
			|	&ЦенаВключаетНДС" + НомерТипаЦен +" КАК ЦенаВключаетНДС" + НомерТипаЦен +",
			|	&Коэффициент" + НомерТипаЦен +" КАК ПроцентСкидкиНаценкиИзСправочника" + НомерТипаЦен +",
			|	ВЫБОР КОГДА ЦеныКомпании" + НомерТипаЦен + ".Цена ЕСТЬ NULL ТОГДА
			|		ЦеныКомпанииБезХарактеристики" + НомерТипаЦен + ".Цена 
			|	ИНАЧЕ ЦеныКомпании" + НомерТипаЦен + ".Цена КОНЕЦ  КАК Цена" + НомерТипаЦен;
			Если ТипЦены.Рассчитывается Тогда
				ДополнительныеПоля = ДополнительныеПоля + "," + "
				|	ВЫБОР КОГДА ЦеныКомпании" + НомерТипаЦен + ".Цена ЕСТЬ NULL ТОГДА
				|		ВложенныйЗапросБезХарактеристики" + НомерТипаЦен +".ПроцентСкидкиНаценкиБезХарактеристики
				|	ИНАЧЕ ВложенныйЗапрос" + НомерТипаЦен +".ПроцентСкидкиНаценки КОНЕЦ  КАК ПроцентСкидкиНаценки" + НомерТипаЦен;
			КонецЕсли;
			ДополнительныеПоля = ДополнительныеПоля + "," + "
			|	ВЫБОР КОГДА ЦеныКомпании" + НомерТипаЦен + ".Цена ЕСТЬ NULL ТОГДА
			|		ЦеныКомпанииБезХарактеристики" + НомерТипаЦен + ".Валюта 
			|	ИНАЧЕ ЦеныКомпании" + НомерТипаЦен + ".Валюта КОНЕЦ КАК Цена" + НомерТипаЦен + "Валюта,
			|	ВЫБОР КОГДА ЦеныКомпании" + НомерТипаЦен + ".Цена ЕСТЬ NULL ТОГДА
			|		ЦеныКомпанииБезХарактеристики" + НомерТипаЦен + ".ЕдиницаИзмерения 
			|	ИНАЧЕ ЦеныКомпании" + НомерТипаЦен + ".ЕдиницаИзмерения КОНЕЦ КАК Цена" + НомерТипаЦен + "Единица
			|";

		Иначе
			ДополнительныеПоля = ДополнительныеПоля + "," + "
			|	&ЦенаВключаетНДС" + НомерТипаЦен +" КАК ЦенаВключаетНДС" + НомерТипаЦен;

			Если ТипЦены.Рассчитывается Тогда
				ДополнительныеПоля = ДополнительныеПоля + "," + "
				|	ЦеныКомпании" + НомерТипаЦен + ".Цена * (1 + ВложенныйЗапрос" + НомерТипаЦен +".ПроцентСкидкиНаценки / 100) КАК Цена"   + НомерТипаЦен + ",
				|	ЦеныКомпании" + НомерТипаЦен + ".Валюта КАК Цена" + НомерТипаЦен + "Валюта,
				|	ЦеныКомпании" + НомерТипаЦен + ".ЕдиницаИзмерения КАК Цена" + НомерТипаЦен + "Единица";
			Иначе
				ДополнительныеПоля = ДополнительныеПоля + "," + "
				|	ЦеныКомпании" + НомерТипаЦен + ".Цена КАК Цена"   + НомерТипаЦен + ",
				|	ЦеныКомпании" + НомерТипаЦен + ".Валюта КАК Цена" + НомерТипаЦен + "Валюта,
				|	ЦеныКомпании" + НомерТипаЦен + ".ЕдиницаИзмерения КАК Цена" + НомерТипаЦен + "Единица";
			КонецЕсли;

		КонецЕсли;
		Если ТипЦены.Рассчитывается Тогда
			ЛевоеСоединение = ЛевоеСоединение + "
			|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|		ДинамическиеЦеныКомпании" + НомерТипаЦен + ".ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
			|		ДинамическиеЦеныКомпании" + НомерТипаЦен + ".Номенклатура КАК Номенклатура";
			Если ЕстьХарактеристикаНоменклатуры Тогда
				ЛевоеСоединение = ЛевоеСоединение + ",
				|		ДинамическиеЦеныКомпании" + НомерТипаЦен + ".ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры";
			КонецЕсли;
			ЛевоеСоединение = ЛевоеСоединение + "
			|		ИЗ
			|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза, ТипЦен = &ТипЦенДинамический" + НомерТипаЦен + "
			|		) КАК ДинамическиеЦеныКомпании" + НомерТипаЦен;

			ЛевоеСоединение = ЛевоеСоединение + "
			|	)КАК ВложенныйЗапрос" + НомерТипаЦен +"
			|	ПО ЦеныКомпании" + НомерТипаЦен + ".Номенклатура = ВложенныйЗапрос" + НомерТипаЦен +".Номенклатура";
			Если ЕстьХарактеристикаНоменклатуры Тогда
				ЛевоеСоединение = ЛевоеСоединение + "
				|	И ЦеныКомпании" + НомерТипаЦен + ".ХарактеристикаНоменклатуры = ВложенныйЗапрос" + НомерТипаЦен +".ХарактеристикаНоменклатуры";
			КонецЕсли;
			Если ЕстьХарактеристикаНоменклатуры Тогда
				ЛевоеСоединение = ЛевоеСоединение + "
				|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|		ДинамическиеЦеныКомпанииБезХарактеристики" + НомерТипаЦен + ".Номенклатура КАК Номенклатура,
				|		ДинамическиеЦеныКомпанииБезХарактеристики" + НомерТипаЦен + ".ПроцентСкидкиНаценки
				|		КАК ПроцентСкидкиНаценкиБезХарактеристики
				|		ИЗ
				|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза, ТипЦен = &ТипЦенДинамический" + НомерТипаЦен + "
				|		) КАК ДинамическиеЦеныКомпанииБезХарактеристики" + НомерТипаЦен;

				ЛевоеСоединение = ЛевоеСоединение + "
				|	)КАК ВложенныйЗапросБезХарактеристики" + НомерТипаЦен +"
				|	ПО ЦеныКомпании" + НомерТипаЦен + ".Номенклатура = ВложенныйЗапрос" + НомерТипаЦен +".Номенклатура";
			КонецЕсли;
		КонецЕсли;

	//КонецЦикла;

	Запрос.УстановитьПараметр("ВалютаРеглУчета", МодульВалютногоУчета.ПолучитьВалюту("Бух"));
	Запрос.УстановитьПараметр("ДокументСсылка" , ДокументСсылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Док.Номенклатура,
	|	"+?(ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("ЕдиницаИзмерения", МетаданныеДокумента, ИмяТабличнойЧасти),"Док.ЕдиницаИзмерения", "Док.Номенклатура.ЕдиницаХраненияОстатков")+" КАК ЕдиницаИзмерения,
	|	"+?(ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", МетаданныеДокумента, ИмяТабличнойЧасти),"Док.СтавкаНДС,", "")+"
	|	ВЫБОР КОГДА Количество = 0 ТОГДА Док.Цена ИНАЧЕ Док.Сумма/Док.Количество КОНЕЦ КАК Цена,
	|	"+?(УправлениеМетаданными.ЕстьРеквизит("ВалютаДокумента", МетаданныеДокумента),"Док.Ссылка.ВалютаДокумента", "&ВалютаРеглУчета")
	+" КАК ВалютаДокумента,
	|	Док.НомерСтроки
	|" + ДополнительныеПоля + "
	|
	|ИЗ 
	|	Документ." + ИмяДокумента + "."+ИмяТабличнойЧасти+" КАК Док
	|" + ЛевоеСоединение + "
	|ГДЕ
	|	Док.Ссылка = &ДокументСсылка
	|";
	РезультатЗапроса = Запрос.Выполнить();

	ПроверилиНаличиеЦенВЗапросе = Ложь;

	СоответствиеКурсыВалют = Новый Соответствие;

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		Если НЕ ПроверилиНаличиеЦенВЗапросе Тогда
			Если РезультатЗапроса.Колонки.Найти("Цена")=Неопределено Тогда
				Возврат;
			КонецЕсли;
			ПроверилиНаличиеЦенВЗапросе = Истина;
		КонецЕсли;

		НомерТипаЦен = 1;

		ЦенаТовара   = ?(НЕ ЗначениеЗаполнено(Выборка.Цена), 0, Окр(Выборка.Цена,2));
		ВалютаТовара = Выборка.ВалютаДокумента;

		Если СоответствиеКурсыВалют[ВалютаТовара] = Неопределено Тогда
			СтруктураКурсаЦеныТовара             = МодульВалютногоУчета.КурсВалюты(ВалютаТовара, ДанныеДокумента.Дата);
			КурсЦеныТовара                       = СтруктураКурсаЦеныТовара.Курс;
			КратностьЦеныТовара                  = СтруктураКурсаЦеныТовара.Кратность;
			СоответствиеКурсыВалют[ВалютаТовара] = СтруктураКурсаЦеныТовара;
		Иначе
			СтруктураКурсаЦеныТовара = СоответствиеКурсыВалют[ВалютаТовара];
			КурсЦеныТовара           = СтруктураКурсаЦеныТовара.Курс;
			КратностьЦеныТовара      = СтруктураКурсаЦеныТовара.Кратность;
		КонецЕсли;

		МинимальнаяЦена = 0;

		Пока НомерТипаЦен <> 0 Цикл

			Если РезультатЗапроса.Колонки.Найти("Цена" + НомерТипаЦен) <> Неопределено
			   И РезультатЗапроса.Колонки.Найти("Цена" + НомерТипаЦен + "Валюта") <> Неопределено
			   И РезультатЗапроса.Колонки.Найти("Цена" + НомерТипаЦен + "Единица") <> Неопределено Тогда

				ЦенаПроверки    = Выборка["Цена" + НомерТипаЦен];
				ВалютаПроверки  = Выборка["Цена" + НомерТипаЦен + "Валюта"];
				ЕдиницаПроверки = Выборка["Цена" + НомерТипаЦен + "Единица"];
				ЦенаВключаетНДС = Выборка["ЦенаВключаетНДС" + НомерТипаЦен];

				// Считаем, что если не задана цена или валюта цены
				// (нет цены данного типа для данной номенклатуры), то проверка прошла
				Если НЕ ЗначениеЗаполнено(ВалютаПроверки) Или НЕ ЗначениеЗаполнено(ЦенаПроверки) Тогда
					МинимальнаяЦена = 0; Прервать; 
				КонецЕсли;

				Если РезультатЗапроса.Колонки.Найти("ПроцентСкидкиНаценки" + НомерТипаЦен) <> Неопределено Тогда
					ПроцентСкидкиНаценки = Выборка["ПроцентСкидкиНаценки" + НомерТипаЦен];
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ПроцентСкидкиНаценки) И РезультатЗапроса.Колонки.Найти("ПроцентСкидкиНаценкиИзСправочника" + НомерТипаЦен) <> Неопределено Тогда
					ПроцентСкидкиНаценки = Выборка["ПроцентСкидкиНаценкиИзСправочника" + НомерТипаЦен];
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ПроцентСкидкиНаценки) Тогда
					ПроцентСкидкиНаценки = 0;
				КонецЕсли;

				ЦенаПроверки = Окр(ЦенаПроверки * (1 + ПроцентСкидкиНаценки / 100), 2);

				Если СоответствиеКурсыВалют[ВалютаПроверки] = Неопределено Тогда
					СтруктураКурсаЦеныПроверки             = МодульВалютногоУчета.КурсВалюты(ВалютаПроверки, ДанныеДокумента.Дата);
					КурсЦеныПроверки                       = СтруктураКурсаЦеныПроверки.Курс;
					КратностьЦеныПроверки                  = СтруктураКурсаЦеныПроверки.Кратность;
					СоответствиеКурсыВалют[ВалютаПроверки] = СтруктураКурсаЦеныПроверки;
				Иначе
					СтруктураКурсаЦеныПроверки = СоответствиеКурсыВалют[ВалютаПроверки];
					КурсЦеныПроверки           = СтруктураКурсаЦеныПроверки.Курс;
					КратностьЦеныПроверки      = СтруктураКурсаЦеныПроверки.Кратность;
				КонецЕсли;

				ЦенаПроверки = ЦенообразованиеСервер.ПересчитатьЦенуПриИзмененииЕдиницы(ЦенаПроверки, ЕдиницаПроверки, Выборка.ЕдиницаИзмерения);

				ПересчитаннаяЦенаПроверки = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(ЦенаПроверки,
																	   ВалютаПроверки,        ВалютаТовара,
																	   КурсЦеныПроверки,      КурсЦеныТовара,
																	   КратностьЦеныПроверки, КратностьЦеныТовара);

				ПересчитаннаяЦенаПроверки = ЦенообразованиеСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(ПересчитаннаяЦенаПроверки,
																					 Перечисления.СпособыЗаполненияЦен.ПоЦенамНоменклатуры, 
																					// ДанныеДокумента.ТипЦен.ЦенаВключаетНДС,
																					 ЦенаВключаетНДС,
																					 УправлениеМетаданными.ЕстьРеквизит("УчитыватьНДС",МетаданныеДокумента) 
																					 И ДанныеДокумента.УчитыватьНДС, 
																					 УправлениеМетаданными.ЕстьРеквизит("СуммаВключаетНДС",МетаданныеДокумента) 
																					 И ДанныеДокумента.СуммаВключаетНДС, 
																					 ?(ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС",МетаданныеДокумента, ИмяТабличнойЧасти),
																					 УчетНалоговСервер.СтавкаНДС(Выборка.СтавкаНДС),0));

				ПересчитаннаяЦенаПроверки = Окр(ПересчитаннаяЦенаПроверки, 2);

				МинимальнаяЦена = ?(НомерТипаЦен = 1, ПересчитаннаяЦенаПроверки, Мин(МинимальнаяЦена, ПересчитаннаяЦенаПроверки));

				НомерТипаЦен=?(МинимальнаяЦена=0, 0, НомерТипаЦен+1);
			Иначе
				НомерТипаЦен = 0;
			КонецЕсли;

		КонецЦикла;

		Если МинимальнаяЦена > ЦенаТовара Тогда
			ТекстСообщения = "Строка "      + Выборка.НомерСтроки + ": "
					+ "Для товара " + Выборка.Номенклатура
					+ Символы.ПС + "    цена за единицу ниже порогового значения (цена: "
					+ Формат(ЦенаТовара, "ЧДЦ=2; ЧН=0") + " " + ВалютаТовара
					+ ", минимальное значение: "
					+ Формат(МинимальнаяЦена, "ЧДЦ=2; ЧН=0") + " " + ВалютаТовара
					+ ")";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры