Функция ЕстьРеквизит(стрРеквизит, мдОбъект, стрТабличнаяЧасть=Неопределено) Экспорт
	Если стрТабличнаяЧасть=Неопределено Тогда
		Возврат НЕ мдОбъект.Реквизиты.Найти(стрРеквизит)=Неопределено;
	КонецЕсли;

	ТабличнаяЧасть=мдОбъект.ТабличныеЧасти.Найти(стрТабличнаяЧасть);
	Если ТабличнаяЧасть=Неопределено Тогда Возврат Ложь; КонецЕсли;

	Возврат НЕ ТабличнаяЧасть.Реквизиты.Найти(стрРеквизит)=Неопределено;
КонецФункции

Функция ЕстьРеквизитТипа(стрТип, мдОбъект, стрТабличнаяЧасть=Неопределено) Экспорт
	СтруктураВозврата=Новый Структура;
	Если стрТабличнаяЧасть=Неопределено Тогда
		Для Каждого мдРеквизит Из мдОбъект.Реквизиты Цикл
			Если мдРеквизит.Тип.СодержитТип(стрТип) Тогда
				СтруктураВозврата.Вставить(мдРеквизит.Имя, мдРеквизит.Представление());
			КонецЕсли
		КонецЦикла;
	КонецЕсли;
	
	ТабЧасть=мдОбъект.ТабличныеЧасти.Найти(стрТабличнаяЧасть);
	Если ТабЧасть=Неопределено Тогда Возврат СтруктураВозврата; КонецЕсли;
	Для Каждого мдРеквизит Из ТабЧасть.Реквизиты Цикл
		Если мдРеквизит.Тип.СодержитТип(стрТип) Тогда
			СтруктураВозврата.Вставить(мдРеквизит.Имя, мдРеквизит.Представление());
		КонецЕсли
	КонецЦикла;
	Возврат СтруктураВозврата;
КонецФункции

Функция ЕстьТабличнаяЧасть(стрТабличнаяЧасть, мдОбъект) Экспорт
	Возврат ?(мдОбъект.ТабличныеЧасти.Найти(стрТабличнаяЧасть)=Неопределено, Ложь, Истина);
КонецФункции

Функция ИмяТабличнойЧастиПоСсылкеНаСтроку(СтрокаТабличнойЧасти) Экспорт
	мдТабличнаяЧасть=Метаданные.НайтиПоТипу(ТипЗнч(СтрокаТабличнойЧасти));
	Возврат ?(мдТабличнаяЧасть=Неопределено, "Корзина", мдТабличнаяЧасть.Имя);
КонецФункции

Функция МетаданныеПоСсылкеНаСтроку(СтрокаТабличнойЧасти) Экспорт
	Возврат Метаданные.НайтиПоТипу(ТипЗнч(СтрокаТабличнойЧасти)).Родитель();
КонецФункции

Функция ОбъектМетаданных(стрПолноеИмя) Экспорт
	стрОбъект=СтрЗаменить(стрПолноеИмя, ".", Символы.ПС);
	стрТип=СтрПолучитьСтроку(стрОбъект, 1);
	стрВид=СтрПолучитьСтроку(стрОбъект, 2);
	Если стрТип="РегистрНакопления" Тогда
		Возврат Метаданные.РегистрыНакопления[стрВид];
	ИначеЕсли стрТип="РегистрСведений" Тогда
		Возврат Метаданные.РегистрыСведений[стрВид];
	ИначеЕсли стрТип="РегистрБухгалтерии" Тогда
		Возврат Метаданные.РегистрыБухгалтерии[стрВид];
	ИначеЕсли стрТип="Справочник" Тогда
		Возврат Метаданные.Справочники[стрВид];
	ИначеЕсли стрТип="Документ" Тогда
		Возврат Метаданные.Документы[стрВид];
	КонецЕсли;
	Возврат Неопределено; 
КонецФункции

Функция ИмяБазовогоТипа(ОбъектМетаданных) Экспорт
	
	Если Метаданные.Документы.Содержит(ОбъектМетаданных) Тогда
		Возврат "Документы";
		
	ИначеЕсли Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
		Возврат "Справочники";
		
	ИначеЕсли Метаданные.Перечисления.Содержит(ОбъектМетаданных) Тогда
		Возврат "Перечисления";
		
	ИначеЕсли Метаданные.РегистрыСведений.Содержит(ОбъектМетаданных) Тогда
		Возврат "РегистрыСведений";
		
	ИначеЕсли Метаданные.РегистрыНакопления.Содержит(ОбъектМетаданных) Тогда
		Возврат "РегистрыНакопления";
		
	ИначеЕсли Метаданные.РегистрыБухгалтерии.Содержит(ОбъектМетаданных) Тогда
		Возврат "РегистрыБухгалтерии";
		
	ИначеЕсли Метаданные.РегистрыРасчета.Содержит(ОбъектМетаданных) Тогда
		Возврат "РегистрыРасчета";
		
	ИначеЕсли Метаданные.ПланыОбмена.Содержит(ОбъектМетаданных) Тогда
		Возврат "ПланыОбмена";
		
	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(ОбъектМетаданных) Тогда
		Возврат "ПланыОбмена";
		
	ИначеЕсли Метаданные.БизнесПроцессы.Содержит(ОбъектМетаданных) Тогда
		Возврат "БизнесПроцессы";
		
	ИначеЕсли Метаданные.Задачи.Содержит(ОбъектМетаданных) Тогда
		Возврат "Задачи";
		
	ИначеЕсли Метаданные.ПланыСчетов.Содержит(ОбъектМетаданных) Тогда
		Возврат "ПланыСчетов";
		
	ИначеЕсли Метаданные.ПланыВидовРасчета.Содержит(ОбъектМетаданных) Тогда
		Возврат "ПланыВидовРасчета";
		
	ИначеЕсли Метаданные.Константы.Содержит(ОбъектМетаданных) Тогда
		Возврат "Константы";
		
	ИначеЕсли Метаданные.ЖурналыДокументов.Содержит(ОбъектМетаданных) Тогда
		Возврат "ЖурналыДокументов";
		
	ИначеЕсли Метаданные.Последовательности.Содержит(ОбъектМетаданных) Тогда
		Возврат "Последовательности";
		
	ИначеЕсли Метаданные.РегламентныеЗадания.Содержит(ОбъектМетаданных) Тогда
		Возврат "РегламентныеЗадания";
	КонецЕсли;
	
	Возврат "";
КонецФункции

Функция ОписаниеСсылки(Ссылка, ПолноеИмя=Истина) Экспорт
	Возврат ?(ПолноеИмя, Ссылка.Метаданные().ПолноеИмя(), Ссылка.Метаданные().Имя);
КонецФункции

Функция ВладельцыОбъекта(ПолноеИмя) Экспорт
	МассивСтрок=СтрРазделить(ПолноеИмя, ".");
	Тип=МассивСтрок[0]; Вид=МассивСтрок[1];
	
	Массив=Новый Массив;
	
	Если Тип="Справочник" Тогда
		Для каждого мдОбъект Из Метаданные.Справочники[Вид].Владельцы Цикл
			Массив.Добавить(мдОбъект.ПолноеИмя());
		КонецЦикла;
	КонецЕсли;

	Возврат Массив;
КонецФункции 