Процедура УстановитьКартинкуСостоянияОбъекта(Форма, Объект, стрТип="Документ") Экспорт
	Элемент=Форма.Элементы.Найти(стрТип);
	Если Элемент=Неопределено Тогда Возврат; КонецЕсли;

	Если стрТип="Документ" Тогда
		Если Объект.Проведен Тогда
			Элемент.Картинка=БиблиотекаКартинок.ДокументПроведен;
		ИначеЕсли Объект.ПометкаУдаления Тогда
			Элемент.Картинка=БиблиотекаКартинок.ДокументПометкаУдаления;
		Иначе
			Элемент.Картинка=БиблиотекаКартинок.Документ;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// События формы

Процедура ПриОткрытии(Отказ, Форма, Объект=Неопределено) Экспорт
	Если ОбщегоНазначенияСервер.ПроверкаРасширения("БиблиотекаПодключаемогоОборудования") Тогда
		ПоддерживаемыеТипыВО=Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
		ПоддерживаемыеТипыВО.Добавить("ДисплейПокупателя");

		МодульМенеджерОборудованияКлиент=ОбщегоНазначенияКлиент.ОбщийМодуль("МенеджерОборудованияКлиент");
		МодульМенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(, Форма.УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;

	Если НЕ Объект=Неопределено Тогда
		Если НЕ Форма.Элементы.Найти("ИнфНадписьДолга")=Неопределено Тогда
			УправлениеДиалогамиКлиент.ОбновитьНадписиДолга(Форма, Истина);
		КонецЕсли; 

		СтруктураПараметров=УправлениеКонфигурациейСервер.СтруктураОбъекта(Форма.ИмяФормы);
		СтруктураПараметров.Вставить("Форма", Форма);
		СтруктураПараметров.Вставить("Объект", Объект);
		СтруктураПараметров.Вставить("Отказ", Отказ);

		МетаконфигураторКлиент.ПриОткрытии(Отказ, СтруктураПараметров);
	КонецЕсли;
	
	Элемент=Форма.Элементы.Найти("ФормаСоздатьНаОсновании");
	Если НЕ Элемент=Неопределено Тогда
		Элемент.Картинка=БиблиотекаКартинок.ВводНаОсновании;
		Элемент.Отображение=ОтображениеКнопки.Картинка;
	КонецЕсли;	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Форма, Объект=Неопределено) Экспорт
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Форма", Форма);
	СтруктураПараметров.Вставить("Объект", Объект);
	СтруктураПараметров.Вставить("Отказ", Отказ);
	
	МетаконфигураторКлиент.ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, СтруктураПараметров);
КонецПроцедуры

Процедура ПриЗакрытии(ЗавершениеРаботы, Форма, Объект=Неопределено) Экспорт
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Форма", Форма);
	СтруктураПараметров.Вставить("Объект", Объект);

	МетаконфигураторКлиент.ПриЗакрытии(ЗавершениеРаботы, СтруктураПараметров);
КонецПроцедуры

Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора, Форма, Объект=Неопределено) Экспорт
	Если ТипЗнч(ВыбранноеЗначение)=Тип("Структура") Тогда
		Если ВыбранноеЗначение.Свойство("ПодборТовара") Тогда
			Форма.тпТабличноеПоле_Изменить(ВыбранноеЗначение);
		КонецЕсли; 
	КонецЕсли; //2.07.19

	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Форма", Форма);
	СтруктураПараметров.Вставить("Объект", Объект);

	МетаконфигураторКлиент.ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора, СтруктураПараметров);
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник, Форма, Объект=Неопределено) Экспорт
	//Если Источник="ПодключаемоеОборудование" И Форма.ВводДоступен() Тогда
	//	Если ИмяСобытия="ScanData" Тогда
	//		ШтрихКод=?(Параметр[1]=Неопределено, Параметр[0], Параметр[1][1]);
	//		СтруктураВозврата=ПодключаемоеОборудованиеСервер.ОбработатьВведенныйШтрихкод(ШтрихКод);
	//		Если НЕ ЗначениеЗаполнено(СтруктураВозврата.Номенклатура) Тогда
	//			СтруктураВозврата.Вставить("Ошибка", "штрих код не найден");				
	//		КонецЕсли;
	//		Форма.тпТабличноеПоле_Изменить(СтруктураВозврата);

	//	ИначеЕсли ИмяСобытия="TracksData" Тогда
	//		
	//	КонецЕсли;
	//КонецЕсли;
	
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Форма", Форма);
	СтруктураПараметров.Вставить("Объект", Объект);

	МетаконфигураторКлиент.ОбработкаОповещения(ИмяСобытия, Параметр, Источник, СтруктураПараметров);	
КонецПроцедуры

Процедура ОбработкаАктивизации(АктивныйОбъект, Источник, Форма, Объект) Экспорт
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Форма", Форма);
	СтруктураПараметров.Вставить("Объект", Объект);

	МетаконфигураторКлиент.ОбработкаАктивизации(АктивныйОбъект, Источник, СтруктураПараметров);
КонецПроцедуры

Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка, Форма, Объект=Неопределено) Экспорт
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Форма", Форма);
	СтруктураПараметров.Вставить("Объект", Объект);

	МетаконфигураторКлиент.ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка, СтруктураПараметров);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, ПараметрыЗаписи, Форма, Объект=Неопределено) Экспорт
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Форма", Форма);
	СтруктураПараметров.Вставить("Объект", Объект);

	МетаконфигураторКлиент.ПередЗаписью(Отказ, ПараметрыЗаписи, СтруктураПараметров);
КонецПроцедуры

Процедура ПослеЗаписи(ПараметрыЗаписи, Форма, Объект=Неопределено) Экспорт
	Если НЕ Форма.Элементы.Найти("ИнфНадписьДолга")=Неопределено Тогда
		УправлениеДиалогамиКлиент.ОбновитьНадписиДолга(Форма);
	КонецЕсли; //***
		
	СтруктураПараметров=УправлениеКонфигурациейСервер.СтруктураОбъекта(Форма.ИмяФормы);	
	СтруктураПараметров.Вставить("Форма", Форма);
	СтруктураПараметров.Вставить("Объект", Объект);

	УстановитьКартинкуСостоянияОбъекта(Форма, Объект, СтруктураПараметров.Тип);

	МетаконфигураторКлиент.ПослеЗаписи(ПараметрыЗаписи, СтруктураПараметров);
КонецПроцедуры
 
Процедура ВнешнееСобытие(Источник, Событие, Данные, Форма, Объект=Неопределено) Экспорт
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Форма", Форма);
	СтруктураПараметров.Вставить("Объект", Объект);

	МетаконфигураторКлиент.ВнешнееСобытие(Источник, Событие, Данные, СтруктураПараметров);	
КонецПроцедуры
 
Процедура ВыборЗначения(СтандартнаяОбработка, Форма, Объект=Неопределено) Экспорт
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Форма", Форма);
	СтруктураПараметров.Вставить("Объект", Объект);

	МетаконфигураторКлиент.ВыборЗначения(СтандартнаяОбработка, СтруктураПараметров);	
КонецПроцедуры
 