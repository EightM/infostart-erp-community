Процедура ВыполнитьДействие(стрДействие, Форма, Объект) Экспорт
	Если НЕ Найти(стрДействие, "_ВыполнитьКоманду_")=0 Тогда
		МассивСтрок=СтрРазделить(стрЗаменить(стрДействие, "_ВыполнитьКоманду_", Символы.ПС), Символы.ПС);
		МодульКлиент=ОбщегоНазначенияКлиент.ОбщийМодуль(МассивСтрок[0]);
		МодульКлиент.ВыполнитьКоманду(МассивСтрок[1], Форма, Объект);
	КонецЕсли;
КонецПроцедуры

Функция РасшифровкаСрокаПолезногоИспользования(СрокПолезногоИспользования) Экспорт
	
	РасшифровкаСрокаПолезногоИспользования = "";
	
	Если ЗначениеЗаполнено(СрокПолезногоИспользования) Тогда
	
		ЧислоЛет     = Цел(СрокПолезногоИспользования / 12);
		ЧислоМесяцев = (СрокПолезногоИспользования % 12);
		
		Если НЕ (ЧислоЛет = 0) Тогда
			
			// Построим строку с числом лет
			Если (СтрДлина(ЧислоЛет) > 1) И (Число(Сред(ЧислоЛет, СтрДлина(ЧислоЛет) - 1, 1)) = 1) Тогда
				СтрокаГод = " лет";
			ИначеЕсли Число(Прав(ЧислоЛет, 1)) = 1 Тогда
				СтрокаГод = " год";
			ИначеЕсли (Число(Прав(ЧислоЛет, 1)) > 1) И (Число(Прав(ЧислоЛет, 1)) < 5) Тогда
				СтрокаГод = " года";
			Иначе
				СтрокаГод = " лет";
			КонецЕсли;
			
			РасшифровкаСрокаПолезногоИспользования = РасшифровкаСрокаПолезногоИспользования + Строка(ЧислоЛет) + СтрокаГод;
			
		КонецЕсли;
		
		Если НЕ (ЧислоМесяцев = 0) Тогда
			
			// Построим строку с числом месяцев
			Если (СтрДлина(ЧислоМесяцев) > 1) И (Число(Сред(ЧислоМесяцев, СтрДлина(ЧислоМесяцев) - 1, 1)) = 1) Тогда
				СтрокаМесяц = " месяцев";
			ИначеЕсли Число(Прав(ЧислоМесяцев, 1)) = 1 Тогда
				СтрокаМесяц = " месяц";
			ИначеЕсли (Число(Прав(ЧислоМесяцев, 1)) > 1) И (Число(Прав(ЧислоМесяцев, 1)) < 5) Тогда
				СтрокаМесяц = " месяца";
			Иначе
				СтрокаМесяц = " месяцев";
			КонецЕсли;
			
			РасшифровкаСрокаПолезногоИспользования = РасшифровкаСрокаПолезногоИспользования + ?(НЕ ЗначениеЗаполнено(РасшифровкаСрокаПолезногоИспользования), "", " ") + Строка(ЧислоМесяцев) + СтрокаМесяц;		
		КонецЕсли;		
		РасшифровкаСрокаПолезногоИспользования = "(" + РасшифровкаСрокаПолезногоИспользования + ")";		
	КонецЕсли;	
	Возврат РасшифровкаСрокаПолезногоИспользования;	                                        	
КонецФункции

Функция ТекстСчетаФактуры(СчетФактура) Экспорт
	Если НЕ ЗначениеЗаполнено(СчетФактура) Тогда Возврат "Ввести счет-фактуру"; КонецЕсли; 
	ЭтоСчетФактураПолученный=ТипЗнч(СчетФактура)=Тип("ДокументСсылка.СчетФактураПолученный");
	
	ДанныеДокумента=ОбщегоНазначенияСервер.ЗначенияРеквизитовОбъекта(СчетФактура, "Дата,Номер,ПометкаУдаления"+?(ЭтоСчетФактураПолученный, ",ДатаВходящегоДокумента", ""));
	Если ЭтоСчетФактураПолученный Тогда
		СтрокаСФ="№ "+СокрЛП(ДанныеДокумента.Номер)+" от "+?(ЗначениеЗаполнено(ДанныеДокумента.ДатаВходящегоДокумента), Формат(ДанныеДокумента.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy"), " ... ")+" дата рег."+Формат(ДанныеДокумента.Дата, "ДФ=dd.MM.yyyy")+" г.";
	Иначе
		СтрокаСФ=ОбщегоНазначенияСервер.НомерНаПечать(СчетФактура);
		СтрокаСФ="№ "+?(ПустаяСтрока(СтрокаСФ), " ... ", СтрокаСФ) +" от "+ Формат(ДанныеДокумента.Дата, "ДФ=dd.MM.yyyy")+" г.";
	КонецЕсли; 

	Возврат СтрокаСФ+?(ДанныеДокумента.ПометкаУдаления, " (помечен на удаление)", "");
КонецФункции

Процедура ВвестиСчетФактуру(ДокументСсылка, ФормаДокумента, ВидСчетаФактуры="СчетФактураВыданный", РазрешитьВыборСФнаАванс = Истина) Экспорт
	ДанныеДокумента=ОбщегоНазначенияСервер.ЗначенияРеквизитовОбъекта(ДокументСсылка, "ПометкаУдаления");
	Если ДанныеДокумента.ПометкаУдаления Тогда
		ПоказатьПредупреждение(, "На основании документов, помеченных на удаление, ввод счетов-фактур не предусмотрен.");
		Возврат;
	КонецЕсли;

	СчетФактура=УчетНалоговСервер.НайтиПодчиненныйДокумент(ДокументСсылка, ВидСчетаФактуры, РазрешитьВыборСФнаАванс);
	Если ЗначениеЗаполнено(СчетФактура) Тогда
		ОткрытьФорму("Документ."+ВидСчетаФактуры+".Форма.ФормаДокумента", Новый Структура("Ключ", СчетФактура), ФормаДокумента);
		Возврат;
	КонецЕсли;
		
	ПараметрыФорма=Новый Структура;
	ПараметрыФорма.Вставить("ДокументОснование", ДокументСсылка);
	
	ОткрытьФорму("Документ."+ВидСчетаФактуры+".Форма.ФормаДокумента", ПараметрыФорма, ФормаДокумента);		
КонецПроцедуры

Функция СписокВидовДоговоров(ВидДоговора) Экспорт
	спВидыДоговоров=Новый Массив;

	МассивСтрок=СтрРазделить(ВидДоговора, ",");	
	Для каждого ИмяПеречисления Из МассивСтрок Цикл
		спВидыДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов."+ИмяПеречисления));
	КонецЦикла;

	Возврат спВидыДоговоров;
КонецФункции

Процедура ОбновитьНадписиДолга(Форма, РежимОткрытия=Ложь) Экспорт
	СтруктураДанных=ВзаиморасчетыСервер.СформироватьНадписьДолга(Форма.Объект.Организация, Форма.Объект.ДоговорКонтрагента, РежимОткрытия);
	Форма.Элементы.ИнфНадписьДолга.Заголовок=СтруктураДанных.Заголовок;
	Форма.Элементы.ИнфНадписьДолга.ЦветТекста=Новый Цвет(СтруктураДанных.ЦветТекста, 0, 0);
КонецПроцедуры

Процедура ПроверкаИНН(Форма) Экспорт
	ОткрытьФорму("Обработка.ПроверкаИНН.Форма.Форма",,Форма);	
КонецПроцедуры 
