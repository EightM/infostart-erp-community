Функция СоединениеHTTP(СтруктураПодключения) Экспорт
	Если СтруктураПодключения=Неопределено Тогда
		Сообщить("Переданы неверные параметры подключения к серверу CouchDB"); Возврат Неопределено;
	КонецЕсли; 

	Если ПустаяСтрока(СтруктураПодключения.Сервер) Или СтруктураПодключения.Порт=0 Тогда
		Сообщить("Заполните параметры подключения к серверу CouchDB"); Возврат Неопределено;
	КонецЕсли;

	ЗащищенноеСоединениеOpenSSL=Неопределено;
	Если СтруктураПодключения.ЗащищенноеСоединение Тогда
		ЗащищенноеСоединениеOpenSSL=Новый ЗащищенноеСоединениеOpenSSL;
	КонецЕсли;

	Возврат Новый HTTPСоединение(СокрЛП(СтруктураПодключения.Сервер), СтруктураПодключения.Порт, СокрЛП(СтруктураПодключения.Имя), СтруктураПодключения.Пароль,,20, ЗащищенноеСоединениеOpenSSL);
КонецФункции

Функция БазаСуществует(ИмяБазы, Соединение) Экспорт
	Запрос=Новый HTTPЗапрос(ИмяБазы);
	Запрос.Заголовки.Вставить("Content-type", "application/json");

	Попытка Ответ=Соединение.ВызватьHTTPМетод("GET", Запрос);	
	Исключение ВызватьИсключение "Ошибка вызова HTTP метода, проверьте параметры подключения к серверу CouchDB";
	КонецПопытки;
	
	Если Ответ.КодСостояния=404 Тогда //база не существует
		//Запрос.УстановитьТелоИзСтроки("",,ИспользованиеByteOrderMark.НеИспользовать);
		Запрос.УстановитьТелоИзСтроки("");
		Ответ=Соединение.Записать(Запрос); //Создадим базу
		Если Ответ.КодСостояния > 201 Тогда //Ошибка при создании базы
			CouchDB_Сервер.ЗаписатьОшибку(ИмяБазы, "Создание базы ", Ответ);
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	Возврат Истина;
КонецФункции

Функция ContentType(Расширение) Экспорт
	Расширения=Новый Соответствие;
	Расширения.Вставить(".mp3",  "audio/mp3");

	Расширения.Вставить(".jpg",  "image/jpg");
	Расширения.Вставить(".jpeg", "image/jpeg");
	Расширения.Вставить(".bmp",  "image/bmp");
	Расширения.Вставить(".png",  "image/png");
	Расширения.Вставить(".gif",  "image/gif");
	Расширения.Вставить(".tif",  "image/tif");
	Расширения.Вставить(".tiff", "image/tiff");
	
	Расширения.Вставить(".pdf",  "application/pdf");
	Расширения.Вставить(".doc",  "application/msword");
	Расширения.Вставить(".docx", "application/msword");
	Расширения.Вставить(".xls",  "application/msexcel");
	Расширения.Вставить(".xlsx", "application/msexcel");
	Расширения.Вставить(".ods",  "application/ods");
	Расширения.Вставить(".odf",  "application/odf");
	Расширения.Вставить(".rtf",  "application/rtf");
	Расширения.Вставить(".zip",  "application/zip");
	Расширения.Вставить(".rar",  "application/rar");
	
	Расширения.Вставить(".txt",  "text/plain");
	Расширения.Вставить(".htm",  "text/html");
	Расширения.Вставить(".html", "text/html");
	Расширения.Вставить(".xml",  "text/xml");
	Расширения.Вставить(".css",  "text/css");

	Значение=Расширения.Получить(НРег(СокрЛП(Расширение)));
	Возврат ?(Значение=Неопределено, "application/octet-stream", Значение);
КонецФункции

Функция СтрокаБезКавычек(стр) Экспорт
	Возврат стрЗаменить(стр, """", "");
КонецФункции

Функция REV(Ответ) Экспорт
	REV=СокрЛП(Ответ.Заголовки.Получить("ETag")); //на какой то версии не работала
	Если ПустаяСтрока(REV) Тогда
		Данные=ПрочитатьОтвет(Ответ); //Получение списка всех вложений (может когда понадобиться)
		Если НЕ ТипЗнч(Данные)=Тип("Соответствие") Тогда Возврат ""; КонецЕсли;	
		REV=Данные.Получить("rev");
	КонецЕсли;	
	Возврат СтрокаБезКавычек(REV);
КонецФункции

Функция ПрочитатьОтвет(Ответ) Экспорт
	#Если ВебКлиент Тогда
		Возврат CouchDB_Сервер.ПрочитатьОтвет(Ответ);
	#Иначе
		ЧтениеJSON=Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(?(ТипЗнч(Ответ)=Тип("HTTPОтвет"), Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8), Ответ));
		Данные=ПрочитатьJSON(ЧтениеJSON, Истина);
		ЧтениеJSON.Закрыть();
		Возврат Данные;
	#КонецЕсли
КонецФункции
