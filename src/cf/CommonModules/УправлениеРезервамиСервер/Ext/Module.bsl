Процедура СформироватьДвиженияРасход(СтруктураШД, СтруктураТД, Отказ) Экспорт
	Если НЕ Константы.УчетРезервов.Получить() Тогда Возврат; КонецЕсли;
	//*** 2018 Если СтруктураТД.Сделки.Количество()=0 Тогда Возврат; КонецЕсли;
	
	УчетПоСериям=Константы.ИспользоватьСерииНоменклатуры.Получить();
	УчетПоХарактеристикам=Константы.ИспользоватьХарактеристикиНоменклатуры.Получить();

	Если СтруктураТД.Свойство("СоставНабора") Тогда
		тзТовары=СтруктураТД.СоставНабора;
		Если тзТовары.Количество()=0 Тогда
			тзТовары=СтруктураТД.Товары;
		Иначе
			Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
				Если СтрокаКоллекции.Комплект Тогда Продолжить; КонецЕсли;
				ЗаполнитьЗначенияСвойств(тзТовары.Добавить(), СтрокаКоллекции);
			КонецЦикла;
		КонецЕсли;	
	ИначеЕсли СтруктураТД.Свойство("Комплектующие") Тогда
		тзТовары=СтруктураТД.Комплектующие;
	ИначеЕсли СтруктураТД.Свойство("Товары") Тогда
		тзТовары=СтруктураТД.Товары;
	ИначеЕсли СтруктураТД.Свойство("Материалы") Тогда
		тзТовары=СтруктураТД.Материалы;
	КонецЕсли;
	Если УчетПоСериям Тогда
		УчетПоСериям=НЕ тзТовары.Колонки.Найти("СерияНоменклатуры")=Неопределено;
	КонецЕсли;
	
	ЕстьКолонкаСклад=НЕ тзТовары.Колонки.Найти("Склад")=Неопределено;

	стрГруппировки="
	|	ИсточникДанных1.Номенклатура,
	|	ИсточникДанных1.Склад
	|	"+?(УчетПоХарактеристикам, ",ИсточникДанных1.ХарактеристикаНоменклатуры", "")+"
	|	"+?(УчетПоСериям, ",ИсточникДанных1.СерияНоменклатуры", "")+"
	|";

	стрКолонки="Номенклатура,Склад"+?(УчетПоХарактеристикам, ",ХарактеристикаНоменклатуры", "")+?(УчетПоСериям, ",СерияНоменклатуры", "");

	тзТовары.Свернуть(стрКолонки, "Количество"); //19.06.19

	стрУсловие="Номенклатура В (&Номенклатура) И Организация=&Организация";	
	Если УчетПоХарактеристикам Тогда
		стрУсловие=стрУсловие+" И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)";
	КонецЕсли;
	Если УчетПоСериям Тогда
		стрУсловие=стрУсловие+" И СерияНоменклатуры В (&СерияНоменклатуры)";
	КонецЕсли;
	Организация=СтруктураШД.Организация;

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("МоментВремени", СтруктураШД.МоментВремени);
	Запрос.УстановитьПараметр("Номенклатура", тзТовары.ВыгрузитьКолонку("Номенклатура"));
	Если ЕстьКолонкаСклад Тогда
		Запрос.УстановитьПараметр("Склад", тзТовары.ВыгрузитьКолонку("Склад"));
		стрУсловие=стрУсловие+" И Склад В (&Склад)";
	КонецЕсли;
	Запрос.УстановитьПараметр("Организация", Организация);
	Если УчетПоХарактеристикам Тогда
		Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", тзТовары.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
	КонецЕсли;	
	Если УчетПоСериям Тогда
		Запрос.УстановитьПараметр("СерияНоменклатуры", тзТовары.ВыгрузитьКолонку("СерияНоменклатуры"));
	КонецЕсли;
	Запрос.УстановитьПараметр("Заказ", СтруктураТД.Сделки.ВыгрузитьКолонку("Сделка"));

	//Резервы ТМЦ
	Запрос.Текст="
	|ВЫБРАТЬ
	|	"+стрГруппировки+",
	|	ИсточникДанных1.Заказ,
	|	СУММА(ИсточникДанных1.КоличествоОстаток) КАК Количество
	|ИЗ
	|	РегистрНакопления.УчетРезервовТМЦ.Остатки(&МоментВремени, "+стрУсловие+" И Заказ В (&Заказ)) КАК ИсточникДанных1
	|
	|СГРУППИРОВАТЬ ПО
	|	"+стрГруппировки+",
	|	ИсточникДанных1.Заказ
	|";
	тзТекущиеРезервыТМЦ=Запрос.Выполнить().Выгрузить();
	тзТекущиеРезервыТМЦ.Индексы.Добавить(стрКолонки);

	//Остатки ТМЦ	
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных1.Номенклатура,
	|	"+стрГруппировки+",
	|	СУММА(ИсточникДанных1.КоличествоПартия)  КАК КоличествоПартия,
	|	СУММА(ИсточникДанных1.КоличествоРезерв)  КАК КоличествоРезерв,
	|	СУММА(ИсточникДанных1.КоличествоОстаток) КАК Количество
	|	ИЗ
	|		(ВЫБРАТЬ
	|			"+стрГруппировки+",
	|			ИсточникДанных1.КоличествоОстаток КАК КоличествоПартия,
	|			0  КАК КоличествоРезерв,	
	|			ИсточникДанных1.КоличествоОстаток КАК КоличествоОстаток
	|		ИЗ
	|			РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&МоментВремени, "+стрУсловие+") КАК ИсточникДанных1
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|		ВЫБРАТЬ
	|			"+стрГруппировки+",
	|			0 КАК КоличествоПартия,
	|			ИсточникДанных1.КоличествоОстаток  КАК КоличествоРезерв,
	|			-ИсточникДанных1.КоличествоОстаток КАК КоличествоОстаток
	|		ИЗ
	|			РегистрНакопления.УчетРезервовТМЦ.Остатки(&МоментВремени, "+стрУсловие+" И Заказ Не В (&Заказ)) КАК ИсточникДанных1) 
	|КАК ИсточникДанных1
	|
	|СГРУППИРОВАТЬ ПО
	|	"+стрГруппировки+"
	|";	
	тзТекущиеОстаткиТМЦ=Запрос.Выполнить().Выгрузить();
	тзТекущиеОстаткиТМЦ.Индексы.Добавить(стрКолонки);

	//Движения по учету резервов
	тзДанные=СтруктураШД.тзУчетРезервовТМЦ;

	СтруктураОтбора=Новый Структура(стрКолонки);
	Для каждого СтрокаКоллекции Из тзТовары Цикл
		КоличествоСписания=СтрокаКоллекции.Количество;
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаКоллекции);
		Если НЕ ЕстьКолонкаСклад Тогда
			СтруктураОтбора.Склад=Запрос.Параметры.Склад;
		КонецЕсли;		
		МассивСтрокОстаткиТМЦ=тзТекущиеОстаткиТМЦ.НайтиСтроки(СтруктураОтбора);
		ВсегоСтрок=МассивСтрокОстаткиТМЦ.Количество();
		
		КоличествоСвободныйОстаток=?(ВсегоСтрок=0, 0, МассивСтрокОстаткиТМЦ[0].Количество);
		ЗарезервированноПодДругиеЗаказы=?(ВсегоСтрок=0, 0, МассивСтрокОстаткиТМЦ[0].КоличествоРезерв); //Позволяем списывать в минус при условии отсутствия резервов по другим заказам... спорное решение конечно, но дятлам не объяснить.
		Если КоличествоСвободныйОстаток < КоличествоСписания И ЗарезервированноПодДругиеЗаказы > 0 Тогда
			Сообщить("Строка №"+Строка(тзТовары.Индекс(СтрокаКоллекции)+1)+": Номенклатура: "+СокрЛП(СтрокаКоллекции.Номенклатура)+", требуется:"+СокрЛП(КоличествоСписания)+" , в наличии:"+КоличествоСвободныйОстаток);
			Отказ=Истина; Продолжить;
		КонецЕсли;

		МассивСтрокРезервыТМЦ=тзТекущиеРезервыТМЦ.НайтиСтроки(СтруктураОтбора);
		Если НЕ МассивСтрокРезервыТМЦ.Количество()=0 Тогда
			Если МассивСтрокРезервыТМЦ[0].Количество <= 0 Тогда
				тзТекущиеРезервыТМЦ.Удалить(МассивСтрокРезервыТМЦ[0]);
			Иначе
				НоваяСтрока=тзДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
				НоваяСтрока.Количество=Мин(МассивСтрокРезервыТМЦ[0].Количество, КоличествоСписания);
				НоваяСтрока.Заказ=МассивСтрокРезервыТМЦ[0].Заказ;
				
				Если НЕ МассивСтрокОстаткиТМЦ.Количество()=0 Тогда
					МассивСтрокОстаткиТМЦ[0].Количество=МассивСтрокОстаткиТМЦ[0].Количество-НоваяСтрока.Количество;
				КонецЕсли; //Уменшим свободный остаток
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Если Не тзДанные.Количество()=0 Тогда
		тзДанные.ЗаполнитьЗначения(СтруктураШД.Ссылка, "Регистратор");
		тзДанные.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
		тзДанные.ЗаполнитьЗначения(СтруктураШД.Дата, "Период");
		тзДанные.ЗаполнитьЗначения(Истина, "Активность");
		тзДанные.ЗаполнитьЗначения(Организация, "Организация");
	КонецЕсли;
КонецПроцедуры

Процедура СформироватьДвиженияПриход(СтруктураШД, СтруктураТД, Отказ) Экспорт
	тзУчетРезервовТМЦ=СтруктураШД.тзУчетРезервовТМЦ;
	тзУчетПотребностей=?(СтруктураШД.Свойство("тзУчетПотребностей"), СтруктураШД.тзУчетПотребностей, Неопределено);
	
	Если СтруктураТД.Свойство("СоставНабора") Тогда
		тзТовары=СтруктураТД.СоставНабора;
		Если тзТовары.Количество()=0 Тогда
			тзТовары=СтруктураТД.Товары;
		Иначе
			Для каждого СтрокаКоллекции Из СтруктураТД.Товары Цикл
				Если СтрокаКоллекции.Комплект Тогда Продолжить; КонецЕсли;
				НоваяСтрока=тзТовары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
				//*** НоваяСтрока.Склад=СтрокаКоллекции.Размещение;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли СтруктураТД.Свойство("Комплектующие") Тогда
		тзТовары=СтруктураТД.Комплектующие;
	ИначеЕсли СтруктураТД.Свойство("Товары") Тогда
		тзТовары=СтруктураТД.Товары;
	ИначеЕсли СтруктураТД.Свойство("Материалы") Тогда
		тзТовары=СтруктураТД.Материалы;
	КонецЕсли;

	ИмяКолонкиСклад="Склад";
	Если НЕ тзТовары.Колонки.Найти("Размещение")=Неопределено Тогда
		ИмяКолонкиСклад="Размещение";
	КонецЕсли; 

	УчетПоХарактеристикам=Константы.ИспользоватьХарактеристикиНоменклатуры.Получить();
	Если УчетПоХарактеристикам Тогда
		УчетПоХарактеристикам=НЕ тзТовары.Колонки.Найти("ХарактеристикаНоменклатуры")=Неопределено;
	КонецЕсли;

	УчетПоСериям=Константы.ИспользоватьСерииНоменклатуры.Получить();
	Если УчетПоСериям Тогда
		УчетПоСериям=НЕ тзТовары.Колонки.Найти("СерияНоменклатуры")=Неопределено;
	КонецЕсли;
	
	МассивСклады=Новый Массив;
	МассивНоменклатура=Новый Массив;
	МассивХарактеристикаНоменклатуры=Новый Массив;
	//МассивХарактеристикаНоменклатуры.Добавить(Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка()); //2019

	МассивСерияНоменклатуры=Новый Массив;
	Для каждого СтрокаКоллекции Из тзТовары Цикл
		текСклад=СтрокаКоллекции[ИмяКолонкиСклад];
		Если текСклад.Пустая() Тогда Продолжить; КонецЕсли;		
		МассивСклады.Добавить(текСклад);

		МассивНоменклатура.Добавить(СтрокаКоллекции.Номенклатура);
		Если УчетПоСериям И НЕ СтрокаКоллекции.СерияНоменклатуры.Пустая() Тогда
			МассивСерияНоменклатуры.Добавить(СтрокаКоллекции.СерияНоменклатуры);
		КонецЕсли;
		Если УчетПоХарактеристикам И НЕ СтрокаКоллекции.ХарактеристикаНоменклатуры.Пустая() Тогда
			МассивХарактеристикаНоменклатуры.Добавить(СтрокаКоллекции.ХарактеристикаНоменклатуры);
		КонецЕсли;
	КонецЦикла; 

	//Если склады (размещение) не указаны, то ничего не делаем.
	Если МассивСклады.Количество()=0 Тогда Возврат; КонецЕсли;

	Если УчетПоСериям Тогда
		УчетПоСериям=НЕ МассивСерияНоменклатуры.Количество()=0;
		Если УчетПоСериям Тогда
			МассивСерияНоменклатуры.Добавить(Справочники.СерииНоменклатуры.ПустаяСсылка());
		КонецЕсли;
	КонецЕсли;

	Если УчетПоХарактеристикам Тогда
		УчетПоХарактеристикам=НЕ МассивХарактеристикаНоменклатуры.Количество()=0;
		Если УчетПоХарактеристикам Тогда
			МассивХарактеристикаНоменклатуры.Добавить(Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		КонецЕсли; 
	КонецЕсли;

	стрГруппировки="
	|	ИсточникДанных1.Номенклатура,
	|	ИсточникДанных1.Склад,
	|	ИсточникДанных1.ХарактеристикаНоменклатуры
	//|	"+?(УчетПоХарактеристикам, ",ИсточникДанных1.ХарактеристикаНоменклатуры", "")+"
	|	"+?(УчетПоСериям, ",ИсточникДанных1.СерияНоменклатуры", "")+"
	|";
	стрКолонки="Номенклатура,Склад"+?(УчетПоХарактеристикам, ",ХарактеристикаНоменклатуры", "")+?(УчетПоСериям, ",СерияНоменклатуры", "");

	стрУсловие="Номенклатура В (&Номенклатура) И Склад В (&Склад) И Организация=&Организация";	
	Если УчетПоХарактеристикам Тогда
		стрУсловие=стрУсловие+" И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)";
	КонецЕсли;
	Если УчетПоСериям Тогда
		стрУсловие=стрУсловие+" И СерияНоменклатуры В (&СерияНоменклатуры)";
	КонецЕсли; 
	Организация=СтруктураШД.Организация;
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("МоментВремени", СтруктураШД.МоментВремени);
	Запрос.УстановитьПараметр("Номенклатура", МассивНоменклатура);
	Запрос.УстановитьПараметр("Склад", МассивСклады);
	Запрос.УстановитьПараметр("Организация", Организация);
	Если УчетПоХарактеристикам Тогда
		Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", МассивХарактеристикаНоменклатуры);
	КонецЕсли;	
	Если УчетПоСериям Тогда
		Запрос.УстановитьПараметр("СерияНоменклатуры", МассивСерияНоменклатуры);
	КонецЕсли;

	//Остатки ТМЦ	
	Запрос.Текст="
	|ВЫБРАТЬ
	|	"+стрГруппировки+",
	|	СУММА(ИсточникДанных1.КоличествоОстаток) КАК Количество
	|	ИЗ
	|		(ВЫБРАТЬ
	|			"+стрГруппировки+",
	|			ИсточникДанных1.КоличествоОстаток КАК КоличествоОстаток
	|		ИЗ
	|			РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&МоментВремени, "+стрУсловие+") КАК ИсточникДанных1
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|		ВЫБРАТЬ
	|			"+стрГруппировки+",
	|			-ИсточникДанных1.КоличествоОстаток КАК КоличествоОстаток
	|		ИЗ
	|			РегистрНакопления.УчетРезервовТМЦ.Остатки(&МоментВремени, "+стрУсловие+") КАК ИсточникДанных1) 
	|КАК ИсточникДанных1
	|
	|СГРУППИРОВАТЬ ПО
	|	"+стрГруппировки+"
	|";	
	тзТекущиеОстаткиТМЦ=Запрос.Выполнить().Выгрузить();
	тзТекущиеОстаткиТМЦ.Индексы.Добавить(стрКолонки);	

	СтруктураОтбора=Новый Структура;
	//*** СтруктураОтбора.Вставить("Организация", СтруктураШД.Организация);
	Для каждого СтрокаКоллекции Из тзТовары Цикл
		Склад=СтрокаКоллекции[ИмяКолонкиСклад];		
		Если Склад.Пустая() Тогда Продолжить; КонецЕсли;			

		СтруктураОтбора.Вставить("Номенклатура", СтрокаКоллекции.Номенклатура);
		СтруктураОтбора.Вставить("Склад", Склад);
		//СтруктураОтбора.Вставить("Склад", ?(Склад.Пустая(), СтруктураШД.Склад, Склад));
		Если УчетПоХарактеристикам Тогда
			СтруктураОтбора.Вставить("ХарактеристикаНоменклатуры", СтрокаКоллекции.ХарактеристикаНоменклатуры);
		КонецЕсли;		
		Если УчетПоСериям Тогда
			СтруктураОтбора.Вставить("СерияНоменклатуры", СтрокаКоллекции.СерияНоменклатуры);		
		КонецЕсли; 

		КоличествоВозможноЗарезервировать=0; Количество=СтрокаКоллекции.Количество; //***
		МассивСтрок=тзТекущиеОстаткиТМЦ.НайтиСтроки(СтруктураОтбора);
		Для Каждого СтрокаМассива Из МассивСтрок Цикл
			Если СтрокаМассива.Количество<=0 ИЛИ Количество<=0 Тогда Продолжить; КонецЕсли; //***
			
			//Резервы
			КоличествоВозможноЗарезервировать=КоличествоВозможноЗарезервировать+СтрокаМассива.Количество;			
			НоваяСтрока=тзУчетРезервовТМЦ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураОтбора);
			НоваяСтрока.Количество=Мин(СтрокаКоллекции.Количество, СтрокаМассива.Количество);
			НоваяСтрока.ХарактеристикаНоменклатуры=СтрокаМассива.ХарактеристикаНоменклатуры;
			
			СтрокаМассива.Количество=СтрокаМассива.Количество-НоваяСтрока.Количество; //Уменьшим количество свободного остатка
			Количество=Количество-НоваяСтрока.Количество;  //***
			
			//КоличествоВозможноЗарезервировать=МассивСтрок[0].Количество;
			//Если КоличествоВозможноЗарезервировать > 0 Тогда
			//	НоваяСтрока=тзУчетРезервовТМЦ.Добавить();
			//	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураОтбора);
			//	НоваяСтрока.Количество=Мин(СтрокаКоллекции.Количество, КоличествоВозможноЗарезервировать);
			//	НоваяСтрока.ХарактеристикаНоменклатуры=МассивСтрок[0].ХарактеристикаНоменклатуры;
			//	
			//	МассивСтрок[0].Количество=МассивСтрок[0].Количество-НоваяСтрока.Количество; //Уменьшим количество свободного остатка
			//КонецЕсли;
		КонецЦикла;
		
		//Потребности
		Если НЕ тзУчетПотребностей=Неопределено Тогда
			Если КоличествоВозможноЗарезервировать < 0 Тогда
				КоличествоВозможноЗарезервировать=0;
			КонецЕсли;	
			Если СтрокаКоллекции.Количество > КоличествоВозможноЗарезервировать Тогда
				НоваяСтрока=тзУчетПотребностей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураОтбора);
				НоваяСтрока.Количество=СтрокаКоллекции.Количество-КоличествоВозможноЗарезервировать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	тзУчетРезервовТМЦ.ЗаполнитьЗначения(Истина, "Активность");
	тзУчетРезервовТМЦ.ЗаполнитьЗначения(СтруктураШД.Дата, "Период");	
	тзУчетРезервовТМЦ.ЗаполнитьЗначения(СтруктураШД.Ссылка, "Регистратор");
	тзУчетРезервовТМЦ.ЗаполнитьЗначения(СтруктураШД.Ссылка, "Заказ");
	тзУчетРезервовТМЦ.ЗаполнитьЗначения(Организация, "Организация");	
	тзУчетРезервовТМЦ.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");
	
	Если НЕ тзУчетПотребностей=Неопределено Тогда
		тзУчетПотребностей.ЗаполнитьЗначения(Истина, "Активность");
		тзУчетПотребностей.ЗаполнитьЗначения(СтруктураШД.Дата, "Период");		
		тзУчетПотребностей.ЗаполнитьЗначения(СтруктураШД.Ссылка, "Регистратор");
		тзУчетПотребностей.ЗаполнитьЗначения(СтруктураШД.Ссылка, "ДокументРезерва");
		тзУчетПотребностей.ЗаполнитьЗначения(Организация, "Организация");		
		тзУчетПотребностей.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");
	КонецЕсли;	
КонецПроцедуры
