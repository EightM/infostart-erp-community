// Процедура устанавливает в проводке суммы НУ,ПР,ВР в зависимости от признака ведения налогового учета на счете
//
Процедура ЗаполнитьНалоговыеСуммыПроводки(СуммаНУДт = 0, СуммаНУКт = 0, СуммаПРДт = 0, СуммаПРКт = 0, СуммаВРДт = 0, СуммаВРКт = 0, Проводка, ПрименениеПБУ18 = Истина) Экспорт
		
	Если Проводка.СчетДт.НалоговыйУчет Тогда
		Проводка.СуммаНУДт=СуммаНУДт;
		Проводка.СуммаПРДт=?(ПрименениеПБУ18, СуммаПРДт, 0);
		Проводка.СуммаВРДт=?(ПрименениеПБУ18, СуммаВРДт, 0);
	КонецЕсли;
	
	Если Проводка.СчетКт.НалоговыйУчет Тогда
		Проводка.СуммаНУКт=СуммаНУКт;
		Проводка.СуммаПРКт=?(ПрименениеПБУ18, СуммаПРКт, 0);
		Проводка.СуммаВРКт=?(ПрименениеПБУ18, СуммаВРКт, 0);
	КонецЕсли;
	
КонецПроцедуры
	
Функция ПолучитьСтавкуНалогаНаПрибыль(СтруктураШапкиДокумента, СтавкаФБ = 0, СтавкаРФ = 0, СтавкаМестный = 0) Экспорт

	Отбор = Новый Структура("Организация", СтруктураШапкиДокумента.Организация);
	СтавкиНалога = РегистрыСведений.СтавкиНалогаНаПрибыль.ПолучитьПоследнее(СтруктураШапкиДокумента.Дата, Отбор);
	
	СтавкаНалога = (СтавкиНалога.СтавкаФБ + СтавкиНалога.СтавкаСубъектРФ + СтавкиНалога.СтавкаМестный) / 100;
	
	СтавкаФБ      = СтавкиНалога.СтавкаФБ / 100;
	СтавкаРФ      = СтавкиНалога.СтавкаСубъектРФ / 100;
	СтавкаМестный = СтавкиНалога.СтавкаМестный / 100;
	
	Возврат СтавкаНалога;

КонецФункции

Функция СписокПрямыхРасходовНУ(Организация, Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодДействия", НачалоГода(Дата));
	Запрос.УстановитьПараметр("НачДата",НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонДата",КонецМесяца (Дата));
	Запрос.УстановитьПараметр("Организация",  Организация);
	Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	Запрос.УстановитьПараметр("СписокСчетов",  Массив);
	Массив = Новый Массив;
	Массив.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("ВидСубконто",  Массив);
	Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ОсновныеСредства);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.НематериальныеАктивы);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.Материалы);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.Полуфабрикаты);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.Товары);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукция);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ТоварыОтгруженные);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами_);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоПрочимОперациям);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	Запрос.УстановитьПараметр("СписокКорСчетов",  Массив);
	Запрос.УстановитьПараметр("ПустойВидРасходовНУ", Перечисления.ВидыРасходовНУ.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСчет", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеПодразделение", Справочники.Подразделения.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат", Справочники.СтатьиЗатрат.ПустаяСсылка());
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	//Ищем дату действующих правил
	Запрос.Текст="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Периоды.ПериодДействия КАК ПериодДействия
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК Периоды
	|ГДЕ
	|	Периоды.Организация = &Организация
	|	И Периоды.ПериодДействия >= &ПериодДействия
	|	И Периоды.ПериодДействия <= &КонДата
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.ПериодДействия
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодДействия УБЫВ
	|";
	Периоды = Запрос.Выполнить().Выгрузить();
	Если Периоды.Количество()>0 Тогда
		ДатаДействующихПравил = Периоды[0].ПериодДействия;
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	Правила.ВидРасходовНУ КАК ВидЗатратНУ,
		|	Правила.Подразделение КАК Подразделение,
		|	Правила.Счет КАК СчетЗатрат,
		|	Правила.КорСчет КАК КорСчетЗатрат,
		|	Правила.СтатьяЗатрат КАК СтатьяЗатрат
		|ПОМЕСТИТЬ СписокПрямыхРасходовНУ
		|ИЗ
		|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК Правила
		|ГДЕ
		|	Правила.Организация = &Организация
		|	И Правила.ПериодДействия = &ПериодДействия";
		
		Результат = Запрос.Выполнить();
		Возврат Запрос.МенеджерВременныхТаблиц;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПериодДействия", ДатаДействующихПравил);
	
	//Определяем какие колонки будут выводиться
	Запрос.Текст="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА Правила.Подразделение = &ПустоеПодразделение
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Поле1,
	|	СУММА(ВЫБОР
	|			КОГДА Правила.Счет = &ПустойСчет
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Поле2,
	|	СУММА(ВЫБОР
	|			КОГДА Правила.КорСчет = &ПустойСчет
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Поле3,
	|	СУММА(ВЫБОР
	|			КОГДА Правила.СтатьяЗатрат = &ПустаяСтатьяЗатрат
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Поле4
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК Правила
	|ГДЕ
	|	Правила.Организация = &Организация
	|	И Правила.ПериодДействия = &ПериодДействия
	|";
	ВидимыеКолонки = Запрос.Выполнить().Выгрузить();
	ЕстьПодразделение = ВидимыеКолонки[0].Поле1>0;
	ЕстьСчет = ВидимыеКолонки[0].Поле2>0;
	ЕстьКорСчет = ВидимыеКолонки[0].Поле3>0;
	ЕстьСтатьяЗатрат = ВидимыеКолонки[0].Поле4>0;
	
	//Собственно сам список прямых расходов
	Запрос.Текст = 
	 "ВЫБРАТЬ"
	 +?(ЕстьПодразделение,	Символы.ПС+"	Правила.Подразделение,","")
	 +?(ЕстьСчет,			Символы.ПС+"	Правила.Счет,","")
	 +?(ЕстьКорСчет,		Символы.ПС+"	Правила.КорСчет,","")
	 +?(ЕстьСтатьяЗатрат,	Символы.ПС+"	Правила.СтатьяЗатрат,","")
	 +Символы.ПС+"	Правила.ВидРасходовНУ
	 |ПОМЕСТИТЬ СписокПравил
	 |ИЗ
	 |	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК Правила
	 |ГДЕ
	 |	Правила.Организация = &Организация
	 |	И Правила.ПериодДействия = &ПериодДействия
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ"
	 +Символы.ПС+?(ЕстьПодразделение,	"	ХозрасчетныйОбороты.Подразделение КАК Подразделение,","НЕОПРЕДЕЛЕНО КАК Подразделение,")
	 +Символы.ПС+?(ЕстьСчет,			"	ХозрасчетныйОбороты.Счет КАК СчетЗатрат,","НЕОПРЕДЕЛЕНО КАК СчетЗатрат,")
	 +Символы.ПС+?(ЕстьКорСчет,			"	ХозрасчетныйОбороты.КорСчет КАК КорСчетЗатрат,","НЕОПРЕДЕЛЕНО КАК КорСчетЗатрат,")
	 +Символы.ПС+?(ЕстьСтатьяЗатрат,	"	ХозрасчетныйОбороты.Субконто1 КАК СтатьяЗатрат,","НЕОПРЕДЕЛЕНО КАК СтатьяЗатрат,")
	 +Символы.ПС+"	ХозрасчетныйОбороты.Субконто1.ВидРасходовНУ КАК ВидЗатратНУ
	 |ПОМЕСТИТЬ СписокПрямыхРасходовНУ
	 |ИЗ
	 |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	 |			&НачДата,
	 |			&КонДата,
	 |			,
	 |			Счет В ИЕРАРХИИ (&СписокСчетов),
	 |			&ВидСубконто,
	 |			Организация = &Организация
	 |				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокПравил.ВидРасходовНУ ИЗ СписокПравил) ИЛИ ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ ЕСТЬ NULL,
	 |			,
	 |			) КАК ХозрасчетныйОбороты
	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокПравил КАК Правила
	 |		ПО Выбор Когда ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтатьиЗатрат).ВидРасходовНУ ЕСТЬ NULL ТОГДА ИСТИНА ИНАЧЕ
	 |		   (Правила.ВидРасходовНУ = ХозрасчетныйОбороты.Субконто1.ВидРасходовНУ)"
	 +?(ЕстьПодразделение,	Символы.ПС+"			И (ВЫБОР КОГДА Правила.Подразделение <> &ПустоеПодразделение ТОГДА Правила.Подразделение = ХозрасчетныйОбороты.Подразделение ИНАЧЕ ИСТИНА КОНЕЦ)","")
	 +?(ЕстьСчет,			Символы.ПС+"			И (ВЫБОР КОГДА Правила.Счет          <> &ПустойСчет          ТОГДА Правила.Счет = ХозрасчетныйОбороты.Счет                   ИНАЧЕ ИСТИНА КОНЕЦ)","")
	 +?(ЕстьКорСчет,		Символы.ПС+"			И (ВЫБОР КОГДА Правила.КорСчет       <> &ПустойСчет          ТОГДА Правила.КорСчет = ХозрасчетныйОбороты.КорСчет             ИНАЧЕ ИСТИНА КОНЕЦ)","")
	 +?(ЕстьСтатьяЗатрат,	Символы.ПС+"			И (ВЫБОР КОГДА Правила.СтатьяЗатрат  <> &ПустаяСтатьяЗатрат  ТОГДА Правила.СтатьяЗатрат = ХозрасчетныйОбороты.Субконто1      ИНАЧЕ ИСТИНА КОНЕЦ)","")
	 +" КОНЕЦ
	 |СГРУППИРОВАТЬ ПО"
	 +?(ЕстьПодразделение,	Символы.ПС+"	ХозрасчетныйОбороты.Подразделение,","")
	 +?(ЕстьСчет,			Символы.ПС+"	ХозрасчетныйОбороты.Счет,","")
	 +?(ЕстьКорСчет,		Символы.ПС+"	ХозрасчетныйОбороты.КорСчет,","")
	 +?(ЕстьСтатьяЗатрат,	Символы.ПС+"	ХозрасчетныйОбороты.Субконто1,","")
	 +Символы.ПС+"	ХозрасчетныйОбороты.Субконто1.ВидРасходовНУ";
	 
	Результат = Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
 КонецФункции
 
// Определяет, установлена ли поддержка ПБУ 18/02.
//
// Параметры:
//  Организация  - Справочник.Ссылка - Организация, по которой
//                 определяется поддержка ПБУ 18/02
//  Дата         - Дата - Дата, на которую получаются сведения
//
// Возвращаемое значение:
//  Булево.
//
Функция ПрименениеПБУ18(Организация, Знач Дата, УчетнаяПолитика=Неопределено) Экспорт

	Если УчетнаяПолитика=Неопределено Тогда
		Если НЕ ЗначениеЗаполнено(Организация) Тогда Возврат Ложь; КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Дата) Тогда Дата=ТекущаяДата(); КонецЕсли;
		УчетнаяПолитика=ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(Дата, Ложь, Организация,,Ложь);
	КонецЕсли;

	Возврат ?(УчетнаяПолитика.Количество()=0, Ложь, УчетнаяПолитика.ПоддержкаПБУ18);
КонецФункции

//*********************** УСН *************************

//Избавится от параметра "СтруктураШапкиДокумента" //
Процедура ДвиженияДенежныхСредствКУДиР(ДокументСсылка, ДополнительныеСвойства, СтруктураШапкиДокумента, тзДанныеСсылка, Направление="Доходы") Экспорт
	УчетнаяПолитика=ДополнительныеСвойства.УчетнаяПолитика;
	ВключитьДвиженияУСН=Ложь;
	Если ДополнительныеСвойства.Свойство("ВключитьДвиженияУСН") Тогда
		ВключитьДвиженияУСН=ДополнительныеСвойства.ВключитьДвиженияУСН;
	КонецЕсли;

	Если УчетнаяПолитика.СистемаНалогообложения <> Перечисления.СистемыНалогообложения.Упрощенная И
		 УчетнаяПолитика.СистемаНалогообложения <> Перечисления.СистемыНалогообложения.Упрощенная_ЕНВД И НЕ ВключитьДвиженияУСН Тогда
		 Возврат;
	КонецЕсли;
	Если УчетнаяПолитика.ОбъектНалогообложенияУСН=Перечисления.ОбъектыНалогообложенияПоУСН.Доходы И Направление="Расходы" Тогда
		Возврат;
	КонецЕсли;	
	ЭтоАвансовыйОтчет=ТипЗнч(ДокументСсылка)=Тип("ДокументСсылка.АвансовыйОтчет");
	тзДанные=тзДанныеСсылка.Скопировать();
	стрПатент=?(тзДанные.Колонки.Найти("СуммаПатент")=Неопределено, "", ",СуммаПатент");
	тзДанные.Свернуть("", "СуммаБух"+?(ЭтоАвансовыйОтчет, "", ",СуммаУСН")+стрПатент);

	НаборЗаписей=РегистрыНакопления.КнигаУчетаДоходовИРасходов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
	НаборЗаписей.Прочитать();

	тзДвижения=НаборЗаписей.ВыгрузитьКолонки();

	Если Направление="Доходы" Тогда
		Для Каждого СтрокаТаблицы из тзДанные Цикл
			НоваяСтрока=тзДвижения.Добавить();
			НоваяСтрока.Дата=ДокументСсылка.Дата;
			НомерДокумента=Строка(ДокументСсылка.Номер);
			ДатаДокумента=Формат(ДокументСсылка.Дата,"ДФ=dd.MM.yyyy");
			Если ТипЗнч(ДокументСсылка)=Тип("ДокументСсылка.ПлатежноеПоручениеВходящее") ИЛИ ТипЗнч(ДокументСсылка)=Тип("ДокументСсылка.ПлатежныйОрдерПоступлениеДенежныхСредств") Тогда
				Если ЗначениеЗаполнено(ДокументСсылка.НомерВходящегоДокумента) Тогда
					НомерДокумента=Строка(ДокументСсылка.НомерВходящегоДокумента);
				КонецЕсли;	
				Если ЗначениеЗаполнено(ДокументСсылка.ДатаВходящегоДокумента) Тогда
					ДатаДокумента=Формат(ДокументСсылка.ДатаВходящегоДокумента,"ДФ=dd.MM.yyyy");
				КонецЕсли;	
			КонецЕсли;	
			НоваяСтрока.Графа2="№ "+НомерДокумента+" от "+ДатаДокумента;
			НоваяСтрока.Графа4=СтрокаТаблицы.СуммаБух;
			НоваяСтрока.Графа5=СтрокаТаблицы.СуммаУСН;
			Если Не ПустаяСтрока(стрПатент) Тогда
				НоваяСтрока.Патент=СтрокаТаблицы.СуммаПатент;
				Если НоваяСтрока.Патент<>0 Тогда
					НоваяСтрока.Графа4=0;
					НоваяСтрока.Графа5=0;
				КонецЕсли;
			КонецЕсли;
			НоваяСтрока.Содержание=СодержаниеКУДиР(ДокументСсылка);
			НоваяСтрока.СтрокаДокумента=1; //СтрокаТаблицы.НомерСтроки;
		КонецЦикла;

	ИначеЕсли Направление="Расходы" Тогда
		Для Каждого СтрокаТаблицы из тзДанные Цикл
			НоваяСтрока=тзДвижения.Добавить();
			НоваяСтрока.Дата=ДокументСсылка.Дата;
			НоваяСтрока.Графа2="№"+Строка(ДокументСсылка.Номер)+" от "+Формат(ДокументСсылка.Дата,"ДФ=dd.MM.yyyy");
			Если ЭтоАвансовыйОтчет Тогда
				НоваяСтрока.Графа7=СтрокаТаблицы.СуммаБух;
			Иначе
				НоваяСтрока.Графа6=СтрокаТаблицы.СуммаБух;
				НоваяСтрока.Графа7=СтрокаТаблицы.СуммаУСН;
			КонецЕсли;
			НоваяСтрока.Содержание=СодержаниеКУДиР(ДокументСсылка);
			НоваяСтрока.СтрокаДокумента=1; //СтрокаТаблицы.НомерСтроки;
		КонецЦикла;
	ИначеЕсли Направление="ДоходыРасходы" Тогда	 /// Это акт взаимозачета
		Для Каждого СтрокаТаблицы из тзДанные Цикл
			НоваяСтрока=тзДвижения.Добавить();
			НоваяСтрока.Дата=ДокументСсылка.Дата;
			НомерДокумента=Строка(ДокументСсылка.Номер);
			ДатаДокумента=Формат(ДокументСсылка.Дата,"ДФ=dd.MM.yyyy");
			НоваяСтрока.Графа2="№ "+НомерДокумента+" от "+ДатаДокумента;
			НоваяСтрока.Графа4=СтрокаТаблицы.СуммаБух;
			НоваяСтрока.Графа5=СтрокаТаблицы.СуммаУСН;
			Если Не ПустаяСтрока(стрПатент) Тогда
				НоваяСтрока.Патент=СтрокаТаблицы.СуммаПатент;
				Если НоваяСтрока.Патент<>0 Тогда
					НоваяСтрока.Графа4=0;
					НоваяСтрока.Графа5=0;
				КонецЕсли;
			КонецЕсли;
			НоваяСтрока.Содержание=СодержаниеКУДиР(ДокументСсылка);
			НоваяСтрока.СтрокаДокумента=1; //СтрокаТаблицы.НомерСтроки;
			
			НоваяСтрока=тзДвижения.Добавить();
			НоваяСтрока.Дата=ДокументСсылка.Дата;
			НоваяСтрока.Графа2="№"+Строка(ДокументСсылка.Номер)+" от "+Формат(ДокументСсылка.Дата,"ДФ=dd.MM.yyyy");
			НоваяСтрока.Графа6=СтрокаТаблицы.СуммаБух;
			НоваяСтрока.Содержание=СодержаниеКУДиР(ДокументСсылка);
			НоваяСтрока.СтрокаДокумента=1; //СтрокаТаблицы.НомерСтроки;
		КонецЦикла;
	КонецЕсли;

	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	Если СтруктураШапкиДокумента.Свойство("Контрагент") Тогда
		тзДвижения.ЗаполнитьЗначения(СтруктураШапкиДокумента.Контрагент, "Контрагент");
	КонецЕсли;
	тзДвижения.ЗаполнитьЗначения(СтруктураШапкиДокумента.Организация, "Организация");
	тзДвижения.ЗаполнитьЗначения(СтруктураШапкиДокумента.Дата, "Период");
	Если Направление="Расходы" Тогда
		Если ТипЗнч(ДокументСсылка)=Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее") ИЛИ ТипЗнч(ДокументСсылка)=Тип("ДокументСсылка.ПлатежныйОрдерСписаниеДенежныхСредств") Тогда
			тзДвижения.ЗаполнитьЗначения(ДокументСсылка.ДатаОплаты, "Период");
		КонецЕсли;
	КонецЕсли;
	тзДвижения.ЗаполнитьЗначения(ДокументСсылка, "Регистратор");

	НаборЗаписей.Загрузить(тзДвижения);
	НаборЗаписей.Записать(Истина);	
КонецПроцедуры

Функция ПолучитьОписаниеСодержанияКУДиР(Док) Экспорт
	Если Не ЗначениеЗаполнено(Док) Тогда Возврат ""; КонецЕсли; 
	мдОбъект=Док.Метаданные(); стрСодержание=мдОбъект.Представление();
	Если Не мдОбъект.Реквизиты.Найти("ВидОперации")=Неопределено Тогда
		стрСодержание=стрСодержание+" "+СокрЛП(Док.ВидОперации);
	КонецЕсли;
	Если Не мдОбъект.Реквизиты.Найти("Контрагент")=Неопределено Тогда
		стрСодержание=стрСодержание+" "+СокрЛП(Док.Контрагент);
	КонецЕсли;
	Если Не мдОбъект.Реквизиты.Найти("ДоговорКонтрагента")=Неопределено Тогда
		стрСодержание=стрСодержание+" "+СокрЛП(Док.ДоговорКонтрагента);
	КонецЕсли;
	Возврат стрСодержание;
КонецФункции

Функция СодержаниеКУДиР(ДокументСсылка, ВидОперации=Неопределено) Экспорт
	
	МетаданныеДокумента=ДокументСсылка.Метаданные();
	стрВидДкумента=МетаданныеДокумента.Имя;
	СтрокаСодержание="";

	Если ВидОперации=Неопределено Тогда
		Если Не МетаданныеДокумента.Реквизиты.Найти("ВидОперации")=Неопределено Тогда
			ВидОперации=ДокументСсылка.ВидОперации;
		КонецЕсли;		
	КонецЕсли; 

	Если стрВидДкумента="РасходныйКассовыйОрдер" Тогда
		стрДоговоры="";
		Для Каждого СтрокаКоллекции ИЗ ДокументСсылка.РасшифровкаПлатежа Цикл
			стрДоговоры=стрДоговоры+" "+СтрокаКоллекции.ДоговорКонтрагента;
		КонецЦикла;	
		Если ВидОперации=Перечисления.ВидыОперацийРКО.РасчетыПоЗаработнойПлате Тогда
			СтрокаСодержание="Выдача из кассы: выплата заработной платы по ведомости. ";
		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийРКО.ПрочиеРасчетыСПерсоналом Тогда
			СтрокаСодержание="Выдача из кассы: прочие расчеты с персоналом. ";
		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствПодотчетнику Тогда
			СтрокаСодержание="Выдача из кассы: перечислено под отчет сотруднику "+ДокументСсылка.Контрагент+". ";
		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийРКО.ВозвратДенежныхСредствПокупателю Тогда
			СтрокаСодержание="Выдача из кассы: возврат денежных средств покупателю "+ДокументСсылка.Контрагент+" по договору "+стрДоговоры+".";
		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствКассеККМ Тогда
			СтрокаСодержание="Выдача из кассы: выдача в кассу ККМ "+ДокументСсылка.Контрагент+". ";
		Иначе
			Если ЗначениеЗаполнено(ДокументСсылка.Контрагент) И ТипЗнч(ДокументСсылка.Контрагент)=Тип("СправочникСсылка.Контрагенты") Тогда
				СтрокаСодержание="Выдача из кассы: оплата поставщику "+ДокументСсылка.Контрагент.НаименованиеПолное+" по договору "+стрДоговоры+".";
			Иначе
				СтрокаСодержание="Выдача из кассы: оплата поставщику "+ДокументСсылка.Контрагент+" по договору "+стрДоговоры+".";
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли стрВидДкумента="ПлатежноеПоручениеИсходящее" Тогда
		стрДоговоры="";
		Для Каждого СтрокаКоллекции ИЗ ДокументСсылка.РасшифровкаПлатежа Цикл
			стрДоговоры=стрДоговоры+" "+СтрокаКоллекции.ДоговорКонтрагента;
		КонецЦикла;	
		Если ВидОперации=Перечисления.ВидыОперацийППИсходящее.РасчетыПоЗаработнойПлате Тогда
			СтрокаСодержание="Выдача из р/с: выплата заработной платы по ведомости. ";
		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийППИсходящее.ВыдачаДенежныхСредствПодотчетнику Тогда
			СтрокаСодержание="Списание с р/с: перечислено под отчет сотруднику "+ДокументСсылка.Контрагент+". ";
		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийППИсходящее.ВозвратДенежныхСредствПокупателю Тогда
			СтрокаСодержание="Списание с р/с: возврат денежных средств покупателю "+ДокументСсылка.Контрагент+" по договору "+стрДоговоры+".";
		Иначе
			Если ЗначениеЗаполнено(ДокументСсылка.Контрагент) Тогда
				СтрокаСодержание="Списание с р/с: оплата поставщику "+ДокументСсылка.Контрагент.НаименованиеПолное+" по договору "+стрДоговоры+".";
			Иначе	
				СтрокаСодержание="Списание с р/с: оплата поставщику "+ДокументСсылка.Контрагент+" по договору "+стрДоговоры+".";
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли стрВидДкумента="ПриходныйКассовыйОрдер" Тогда
		стрДоговоры="";
		Для Каждого СтрокаКоллекции ИЗ ДокументСсылка.РасшифровкаПлатежа Цикл
			стрДоговоры=стрДоговоры+" "+СтрокаКоллекции.ДоговорКонтрагента;
		КонецЦикла;	
		Если ВидОперации=Перечисления.ВидыОперацийПКО.РасчетыПоЗаработнойПлате Тогда
			СтрокаСодержание="Поступление в кассу: возврат выплаты заработной платы по ведомости. ";
		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийПКО.ПрочиеРасчетыСПерсоналом Тогда
			СтрокаСодержание="Поступление в кассу: прочие расчеты с персоналом. ";
		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствПрочее Тогда
			СтрокаСодержание="Поступление в кассу: прочее";
		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийПКО.ВозвратДенежныхСредствПоставщиком Тогда
			СтрокаСодержание="Поступление в кассу: возврат денежных средств поставщиком "+ДокументСсылка.Контрагент+" по договору "+стрДоговоры+".";
		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийПКО.ВозвратДенежныхСредствПодотчетником Тогда
			СтрокаСодержание="Поступление в кассу: возврат денежных средств подотчетником "+ДокументСсылка.Контрагент+".";
		ИначеЕсли ВидОперации=Перечисления.ВидыОперацийПКО.ПолучениеНаличныхДенежныхСредствВБанке Тогда
			СтрокаСодержание="Поступление в кассу: получение наличных денежных средств в банке.";
		Иначе
			Если ЗначениеЗаполнено(ДокументСсылка.Контрагент) И ТипЗнч(ДокументСсылка.Контрагент)=Тип("СправочникСсылка.Контрагенты") Тогда
				СтрокаСодержание="Поступление в кассу: оплата от покупателя "+ДокументСсылка.Контрагент.НаименованиеПолное+" по договору "+стрДоговоры+".";
			Иначе	
				СтрокаСодержание="Поступление в кассу: оплата от покупателя "+ДокументСсылка.Контрагент+" по договору "+стрДоговоры+".";
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли стрВидДкумента="ПлатежноеПоручениеВходящее" Тогда
		стрДоговоры="";
		Для Каждого СтрокаКоллекции ИЗ ДокументСсылка.РасшифровкаПлатежа Цикл
			стрДоговоры=стрДоговоры+" "+СтрокаКоллекции.ДоговорКонтрагента;
		КонецЦикла;	
		Если ВидОперации=Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ВозвратДенежныхСредствПоставщиком Тогда
			СтрокаСодержание="Поступление на р\с: возврат денежных средств поставщиком "+ДокументСсылка.Контрагент+" по договору "+стрДоговоры+".";
		Иначе
			Если ЗначениеЗаполнено(ДокументСсылка.Контрагент) Тогда
				СтрокаСодержание="Поступление на р\с: оплата от покупателя "+ДокументСсылка.Контрагент.НаименованиеПолное+" по договору "+стрДоговоры+".";
			Иначе
				СтрокаСодержание="Поступление на р\с: оплата от покупателя "+ДокументСсылка.Контрагент+" по договору "+стрДоговоры+".";
			КонецЕсли;	
		КонецЕсли;
		
	ИначеЕсли стрВидДкумента="АвансовыйОтчет" Тогда
		СтрокаСодержание="Представлен авансовый отчет: "+ДокументСсылка.ФизЛицо+ 
			", назначение аванса """+СокрЛП(ДокументСсылка.НазначениеАванса)+""". ";

	ИначеЕсли стрВидДкумента="ПоступлениеТоваровУслуг" Тогда
		Если ЗначениеЗаполнено(ДокументСсылка.Контрагент) Тогда	
			Если ДокументСсылка.Услуги.Количество()=0 Тогда
				СтрокаСодержание="Поступление ТМЦ от """+ПН(ДокументСсылка.Контрагент.НаименованиеПолное)+""" по договору """+ДокументСсылка.ДоговорКонтрагента+""". ";
			ИначеЕсли ДокументСсылка.Товары.Количество()=0 Тогда
				СтрокаСодержание="Контрагентом """+ПН(ДокументСсылка.Контрагент.НаименованиеПолное)+""" оказаны услуги по договору """+ДокументСсылка.ДоговорКонтрагента+""". ";
			Иначе
				СтрокаСодержание="Поступление ТМЦ и услуг от """ + ПН(ДокументСсылка.Контрагент.НаименованиеПолное)+""" по договору """+ДокументСсылка.ДоговорКонтрагента+""". ";
			КонецЕсли;
		Иначе
			Если ДокументСсылка.Услуги.Количество()=0 Тогда
				СтрокаСодержание="Поступление ТМЦ от """+ПН(ДокументСсылка.Контрагент)+""" по договору """+ДокументСсылка.ДоговорКонтрагента+""". ";
			ИначеЕсли ДокументСсылка.Товары.Количество()=0 Тогда
				СтрокаСодержание="Контрагентом """+ПН(ДокументСсылка.Контрагент)+""" оказаны услуги по договору """+ДокументСсылка.ДоговорКонтрагента+""". ";
			Иначе
				СтрокаСодержание="Поступление ТМЦ и услуг от """ + ПН(ДокументСсылка.Контрагент)+""" по договору """+ДокументСсылка.ДоговорКонтрагента+""". ";
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли стрВидДкумента="РеализацияТоваровУслуг" Тогда
		Если ЗначениеЗаполнено(ДокументСсылка.Контрагент) Тогда	
			Если ДокументСсылка.Услуги.Количество() = 0 Тогда
				СтрокаСодержание = "Реализация товаров покупателю """ + ПН(ДокументСсылка.Контрагент.НаименованиеПолное) + """ по договору """ +
				ДокументСсылка.ДоговорКонтрагента +	""". ";
			ИначеЕсли ДокументСсылка.Товары.Количество() = 0 Тогда
				СтрокаСодержание = "Реализация услуг покупателю """ + ПН(ДокументСсылка.Контрагент.НаименованиеПолное) + """ по договору """ +
				ДокументСсылка.ДоговорКонтрагента +	""". ";
			Иначе
				СтрокаСодержание = "Реализация товаров и услуг покупателю """ + ПН(ДокументСсылка.Контрагент.НаименованиеПолное) + """ по договору """ +
				ДокументСсылка.ДоговорКонтрагента +	""". ";
			КонецЕсли;
		Иначе	
			Если ДокументСсылка.Услуги.Количество() = 0 Тогда
				СтрокаСодержание = "Реализация товаров покупателю """ + ПН(ДокументСсылка.Контрагент) + """ по договору """ +
				ДокументСсылка.ДоговорКонтрагента +	""". ";
			ИначеЕсли ДокументСсылка.Товары.Количество() = 0 Тогда
				СтрокаСодержание = "Реализация услуг покупателю """ + ПН(ДокументСсылка.Контрагент) + """ по договору """ +
				ДокументСсылка.ДоговорКонтрагента +	""". ";
			Иначе
				СтрокаСодержание = "Реализация товаров и услуг покупателю """ + ПН(ДокументСсылка.Контрагент) + """ по договору """ +
				ДокументСсылка.ДоговорКонтрагента +	""". ";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(СтрокаСодержание) Тогда
		СтрокаСодержание = МетаданныеДокумента.Представление()+". ";
	КонецЕсли;

	Возврат СтрокаСодержание;
КонецФункции 

Функция ПН(Контрагент) //Полное наименование контрагента
	Если ТипЗнч(Контрагент)=Тип("СправочникСсылка.Контрагенты") Тогда
		Возврат ?(ЗначениеЗаполнено(Контрагент.НаименованиеПолное), Контрагент.НаименованиеПолное, Контрагент.Наименование);
	КонецЕсли; 
	Возврат СокрЛП(Контрагент);
КонецФункции