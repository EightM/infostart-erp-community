Процедура ПроверитьСоответствиеОрганизацииДоговоруВзаиморасчетов(Организация, ДоговорКонтрагента, ДоговорОрганизация, Отказ, Заголовок) Экспорт
	Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(ДоговорКонтрагента) И Организация<>ДоговорОрганизация Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Выбран договор контрагента, не соответствующий организации, указанной в документе!", Отказ, Заголовок);
	КонецЕсли;
КонецПроцедуры

Функция ________ПолучитьСписокВидовДоговоровКонтрагента(стрТипКонтрагента="Прочее", ИсключитьПрочее=Истина) Экспорт
	СписокПеречисления=Новый СписокЗначений;
	Если стрТипКонтрагента="Поставщик" Тогда
		СписокПеречисления.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком"));
		СписокПеречисления.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом"));

	ИначеЕсли стрТипКонтрагента="Покупатель" Тогда
		СписокПеречисления.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"));
		СписокПеречисления.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером"));

	ИначеЕсли стрТипКонтрагента="Прочее" Тогда
		СписокПеречисления.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.Прочее"));
	КонецЕсли;

	Если Не ИсключитьПрочее И НЕ стрТипКонтрагента="Прочее" Тогда
		СписокПеречисления.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.Прочее"));
	КонецЕсли; 

	Возврат СписокПеречисления;
КонецФункции

Функция СформироватьТаблицуОплаты(СтруктураШД, СтруктураТД, ВидДвижения, тзДвижения, Отказ, Заголовок) Экспорт
	МетаданныеДокумента=СтруктураШД.Ссылка.Метаданные();
    ЕстьРеквизитСотрудник=ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Сотрудник", МетаданныеДокумента, "РасшифровкаПлатежа");
	ЕстьРеквизитПодразделение=ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Подразделение", МетаданныеДокумента, "РасшифровкаПлатежа");
	
	тзДвижения.Колонки.Добавить("Проект");
	тзДвижения.Колонки.Добавить("Подразделение"); //ЕстьРеквизитПодразделение
	тзДвижения.Колонки.Добавить("Сотрудник"); //ЕстьРеквизитСотрудник
	тзДвижения.Колонки.Добавить("СтатьяДвиженияДенежныхСредств");

	ДатаДвижений=УправлениеКоллекциямиЗначенийСервер.СвойствоСтруктуры(СтруктураШД, "ДатаДвижений", СтруктураШД.Дата);

	Запрос=Новый Запрос();
	Запрос.УстановитьПараметр("Организация", СтруктураШД.Организация);
	Запрос.УстановитьПараметр("Ссылка", СтруктураШД.Ссылка);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	&Организация Как Организация,
	|	ТаблицаПлатежей.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	ТаблицаПлатежей.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТаблицаПлатежей.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаПлатежей.Проект КАК Проект,
	|	"+?(ЕстьРеквизитПодразделение, "ТаблицаПлатежей.Подразделение,", "")+"
	|	"+?(ЕстьРеквизитСотрудник, "ТаблицаПлатежей.Сотрудник,", "")+"
	|	ТаблицаПлатежей."+?(ТипЗнч(СтруктураШД.Ссылка)=Тип("ДокументСсылка.АвансовыйОтчет"), "Сумма", "СуммаПлатежа")+" Как СуммаБух,
	|	ТаблицаПлатежей.СуммаВал КАК СуммаВал,
	|	ТаблицаПлатежей.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ."+МетаданныеДокумента.Имя+".РасшифровкаПлатежа КАК ТаблицаПлатежей
	|ГДЕ
	|	ТаблицаПлатежей.Ссылка = &Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";	
	дзДанные=Запрос.Выполнить().Выгрузить();
	Если дзДанные.Количество()=0 Тогда Возврат тзДвижения; КонецЕсли;
	
	Для каждого СтрокаКоллекции Из дзДанные Цикл
		НоваяСтрока=тзДвижения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.Активность=Истина;
		НоваяСтрока.ВидДвижения=ВидДвижения;
		НоваяСтрока.Период=ДатаДвижений;
	КонецЦикла;
	
	Возврат тзДвижения;
КонецФункции

Процедура ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаЗначений, СтруктураШД, ВключитьНДСВОсновнуюСумму) Экспорт
Перем СуммаВключаетНДС;

	ВалютаРегламентированногоУчета = СтруктураШД.ВалютаРегламентированногоУчета;
	ЕстьНДС    = Не(ТаблицаЗначений.Колонки.Найти("НДС")=Неопределено);
	ЕстьВалюта = СтруктураШД.Свойство("ВалютаДокумента");

	СтруктураШД.Свойство("СуммаВключаетНДС", СуммаВключаетНДС);
	СуммаВключаетНДС = (СуммаВключаетНДС = Истина);
	
	//Дополним колонки ТЗ при необходимости
	СтруктураОбязательныхКолонок = Новый Структура("Сумма"+?(ЕстьНДС,",НДС,СуммаБезНДС","")+?(ЕстьВалюта,",СуммаВал"+?(ЕстьНДС,",НДСВал,СуммаБезНДСВал",""),""));

	Для каждого Колонка Из СтруктураОбязательныхКолонок Цикл
		Если ТаблицаЗначений.Колонки.Найти(Колонка.Ключ) = Неопределено тогда
			ТаблицаЗначений.Колонки.Добавить(Колонка.Ключ, ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		КонецЕсли;
	КонецЦикла;

	//Дополним колонки ТЗ при необходимости нечисловыми полями

	Если ТаблицаЗначений.Колонки.Найти("ВидЦенности") = Неопределено тогда
		ТаблицаЗначений.Колонки.Добавить("ВидЦенности");
	КонецЕсли;

	Если ТаблицаЗначений.Колонки.Найти("Ценность") = Неопределено тогда
		ТаблицаЗначений.Колонки.Добавить("Ценность");
	КонецЕсли;

	//Определим суммы по документу (Сумму без НДС и корректную основную сумму)
	Если ЕстьНДС тогда
		Для каждого СтрокаТаблицы из ТаблицаЗначений цикл
			СтрокаТаблицы.СуммаБезНДС = СтрокаТаблицы.Сумма       - ?(СуммаВключаетНДС, СтрокаТаблицы.НДС, 0);
			СтрокаТаблицы.Сумма       = СтрокаТаблицы.СуммаБезНДС + ?(ВключитьНДСВОсновнуюСумму, СтрокаТаблицы.НДС, 0);
		КонецЦикла;
	КонецЕсли;

	Если ЕстьВалюта тогда
		Если Не(СтруктураШД.ВалютаДокумента = ВалютаРегламентированногоУчета) Тогда //10.2015
		 	// Заполним валютные колонки суммами документа
		 	Для каждого Колонка Из СтруктураОбязательныхКолонок Цикл
				Если Прав(Колонка.Ключ, 3) = "Вал" Тогда
					ТаблицаЗначений.ЗагрузитьКолонку(ТаблицаЗначений.ВыгрузитьКолонку(Лев(Колонка.Ключ, СтрДлина(Колонка.Ключ) - 3)), Колонка.Ключ);
				КонецЕсли;
			КонецЦикла;
		
		//***Если Не(СтруктураШД.ВалютаДокумента = ВалютаРегламентированногоУчета) Тогда
			
			Если не СтруктураШД.Свойство("КурсДокумента") или не СтруктураШД.Свойство("КратностьДокумента") тогда
				КоэффициентПересчета=1;
			ИначеЕсли Число(СтруктураШД.КурсДокумента) = 0 или Число(СтруктураШД.КратностьДокумента)=0 тогда
				КоэффициентПересчета=1;
			Иначе
				КоэффициентПересчета = СтруктураШД.КурсДокумента/СтруктураШД.КратностьДокумента;
			КонецЕсли;
			
			СуммаРег = Окр(ТаблицаЗначений.Итог("СуммаВал")* КоэффициентПересчета,2);
			//Распределение суммы по таблице
			РаспределениеРег = ОбщегоНазначения.РаспределитьПропорционально(СуммаРег,ТаблицаЗначений.выгрузитьКолонку("Сумма"));
			Если Не РаспределениеРег = Неопределено Тогда
				ТаблицаЗначений.ЗагрузитьКолонку(РаспределениеРег,"Сумма");
			КонецЕсли; 
			
			Если ЕстьНДС тогда
				НДСРег=Окр(ТаблицаЗначений.Итог("НДСВал") * КоэффициентПересчета,2);
				//Распределение суммы по таблице
				РаспределениеРег = ОбщегоНазначения.РаспределитьПропорционально(НДСРег,ТаблицаЗначений.выгрузитьКолонку("НДС"));
				Если Не РаспределениеРег = Неопределено Тогда
					ТаблицаЗначений.ЗагрузитьКолонку(РаспределениеРег,"НДС");
				КонецЕсли; 
				
				//Расчет суммы без НДС
				Для каждого СтрокаТаблицы из ТаблицаЗначений Цикл
					СтрокаТаблицы.СуммаБезНДС = СтрокаТаблицы.Сумма - ?(ВключитьНДСВОсновнуюСумму, СтрокаТаблицы.НДС, 0);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	УчетНДС.ОпределениеДополнительныхПараметровТаблицыПартийДляПодсистемыУчетаНДС(СтруктураШД, ТаблицаЗначений);

КонецПроцедуры

Функция ТекущийДолг(ДоговорКонтрагента, Организация) Экспорт
	Если Не ЗначениеЗаполнено(ДоговорКонтрагента) Тогда Возврат 0; КонецЕсли; 

	СтруктураОтбора=Новый Структура();
	СтруктураОтбора.Вставить("ДоговорКонтрагента", ДоговорКонтрагента);
	СтруктураОтбора.Вставить("Организация", Организация);

	стрСуммы="СуммаБух";
	Если НЕ ДоговорКонтрагента.ВалютаВзаиморасчетов=МодульВалютногоУчета.ПолучитьВалюту("Бух") Тогда
		стрСуммы="СуммаВал";
	КонецЕсли;

	Возврат РегистрыНакопления.ВзаиморасчетыСКонтрагентами.Остатки(,СтруктураОтбора,,стрСуммы).Итог(стрСуммы);
КонецФункции

Процедура ОтражениеЗадолженности(СтруктураШД, СтруктураТД, ВидДвижения, тзДвижения, Отказ, Заголовок, ЭтоВозврат=Ложь) Экспорт
	Если НЕ УправлениеКоллекциямиЗначенийСервер.СвойствоСтруктуры(СтруктураШД, "ПроводитьПоВзаиморасчетам", Истина) Тогда Возврат; КонецЕсли; 

	НоваяСтрока=тзДвижения.Добавить();
	МодульВалютногоУчета.ПересчитатьСуммыВалюты(СтруктураШД, СтруктураШД.СуммаДокумента, НоваяСтрока.СуммаБух, НоваяСтрока.СуммаВал);
	Если ЭтоВозврат Тогда
		НоваяСтрока.СуммаБух=-НоваяСтрока.СуммаБух;
		НоваяСтрока.СуммаВал=-НоваяСтрока.СуммаВал;
	КонецЕсли;

    тзДвижения.ЗаполнитьЗначения(СтруктураШД.Организация, "Организация");
    тзДвижения.ЗаполнитьЗначения(СтруктураШД.Контрагент, "Контрагент");
	тзДвижения.ЗаполнитьЗначения(СтруктураШД.ДоговорКонтрагента, "ДоговорКонтрагента");	
    тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления[ВидДвижения], "ВидДвижения");	

    Если УправлениеМетаданными.ЕстьРеквизит("ВидОперации", СтруктураШД.Ссылка.Метаданные()) Тогда
        Если СтруктураШД.ВидОперации=Перечисления.ВидыОперацийПоступленияТоваров.Перепредъявление Тогда
            тзБуфер=тзДвижения.Скопировать();
            Для каждого СтрокаКоллекции Из тзБуфер Цикл
                НоваяСтрока=тзДвижения.Добавить();
                НоваяСтрока.Контрагент=СтруктураШД.Грузополучатель;
                НоваяСтрока.ДоговорКонтрагента=СтруктураШД.ДоговорГрузополучателя;
                НоваяСтрока.ВидДвижения=ВидДвиженияНакопления.Приход;
                ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции,,"ВидДвижения,Контрагент,ДоговорКонтрагента");
            КонецЦикла;
        КонецЕсли;
    КонецЕсли;

	тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
	тзДвижения.ЗаполнитьЗначения(СтруктураШД.Дата, "Период");
КонецПроцедуры

Функция СформироватьНадписьДолга(Организация, ДоговорКонтрагента, РежимОткрытия=Истина) Экспорт
	СтруктураВозврата=Новый Структура("Заголовок,ЦветТекста", "Долг не рассчитан", 0);
	Если НЕ ЗначениеЗаполнено(Организация) Или НЕ ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.ВидДоговора КАК ВидДоговора,
	|	ИсточникДанных.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &ДоговорКонтрагента
	|";
	ПараметрыДоговора=Запрос.Выполнить().Выбрать();
	ПараметрыДоговора.Следующий();
	
	СтруктураВозврата.Заголовок="По договору "+Нрег(ПараметрыДоговора.ВидДоговора);

	Если РежимОткрытия И НЕ УправлениеПользователямиСервер.РассчитыватьДолгПриОткрытииФорм() Тогда
		СтруктураВозврата.Заголовок=СтруктураВозврата.Заголовок+" долг не рассчитан";
	Иначе	
		Запрос=Новый Запрос;
		Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.Текст="
		|ВЫБРАТЬ
		|	ИсточникДанных.Сумма"+?(ПараметрыДоговора.ВалютаВзаиморасчетов=МодульВалютногоУчета.ПолучитьВалюту("Бух"), "Бух", "Вал")+"Остаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(, Организация = &Организация И ДоговорКонтрагента = &ДоговорКонтрагента) КАК ИсточникДанных
		|";
		Выборка=Запрос.Выполнить().Выбрать();
		СуммаДолга=?(Выборка.Следующий(), Выборка.Сумма, 0);
		
		Если СуммаДолга=0 Тогда
			СтруктураВозврата.Заголовок=СтруктураВозврата.Заголовок+" нет долга";
		Иначе
			Если СуммаДолга > 0 Тогда
				СтруктураВозврата.ЦветТекста=255; //Новый Цвет(255,0,0);
				СтруктураВозврата.Заголовок=СтруктураВозврата.Заголовок+" долг контрагента";
			Иначе
				СтруктураВозврата.Заголовок=СтруктураВозврата.Заголовок+" долг компании";
				СуммаДолга = (-1) * СуммаДолга;
			КонецЕсли;
			СтруктураВозврата.Заголовок=СтруктураВозврата.Заголовок+" "+ОбщегоНазначения.ФорматСумм(СуммаДолга, ПараметрыДоговора.ВалютаВзаиморасчетов);
		КонецЕсли;
	КонецЕсли;

	Возврат СтруктураВозврата; 
КонецФункции