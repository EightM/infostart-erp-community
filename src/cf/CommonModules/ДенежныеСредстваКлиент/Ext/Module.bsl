Процедура ПриИзмененииКонтрагента(Объект, Форма) Экспорт
	ВидимостьКолонки=Истина; текКонтрагент=Объект.Контрагент;
	Если ЗначениеЗаполнено(текКонтрагент) И ТипЗнч(текКонтрагент)=Тип("СправочникСсылка.Контрагенты") Тогда
		ВидимостьКолонки=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(текКонтрагент, "ВалютныйУчет");
	КонецЕсли;
	УчетБезНДС=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "УчетБезНДС");
	
	//Если УправлениеМетаданными.ЕстьРеквизит("СуммаНДС", Объект.Метаданные(), "РасшифровкаПлатежа") Тогда
	//Если НЕ УправлениеМетаданными.ЕстьРеквизит("СчетОрганизации", Объект.Метаданные()) Тогда
	
	ВалютаБух=МодульВалютногоУчета.ПолучитьВалюту("Бух");
	
	ДатаОплаты=Объект.Дата;
		////Если УправлениеМетаданными.ЕстьРеквизит("ДатаОплаты", Объект.Метаданные()) Тогда
		//Если ЕстьДатаОплаты Тогда
		//	НаДату=?(Объект.ДатаОплаты='00010101', НаДату, КонецДня(Объект.ДатаОплаты));	
		//КонецЕсли;

	Форма.Элементы.РасшифровкаПлатежа.СуммаВал.Видимость=ВидимостьКолонки;
	Форма.Элементы.РасшифровкаПлатежа.Валюта.Видимость=ВидимостьКолонки;
	Форма.Элементы.РасшифровкаПлатежа.Курс.Видимость=ВидимостьКолонки;
	Форма.Элементы.РасшифровкаПлатежа.Кратность.Видимость=ВидимостьКолонки;

	ДоговорКонтрагента=ДенежныеСредстваСервер.ДоговорКонтрагентаПоУмолчанию(Объект.Контрагент, Объект.Организация, Объект.ВидОперации);
	Для каждого СтрокаКоллекции Из Объект.РасшифровкаПлатежа Цикл
		Если ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.Контрагенты") Тогда
			СтрокаКоллекции.ДоговорКонтрагента=ДоговорКонтрагента;
			Если УчетБезНДС Тогда
				СтрокаКоллекции.СтавкаНДС=ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС");				
			КонецЕсли;
			СтрокаКоллекции.СуммаНДС=ЦенообразованиеСервер.РассчитатьСуммуНДС(СтрокаКоллекции.СуммаПлатежа, СтрокаКоллекции.СтавкаНДС);

			ДанныеДоговора=ОбщегоНазначенияСервер.ЗначенияРеквизитовОбъекта(СтрокаКоллекции.ДоговорКонтрагента, "ОсновнаяСтатьяДвиженияДенежныхСредств,ОсновнойПроект,ВалютаВзаиморасчетов");
			Если ЗначениеЗаполнено(ДанныеДоговора.ОсновнаяСтатьяДвиженияДенежныхСредств) Тогда
				СтрокаКоллекции.СтатьяДвиженияДенежныхСредств=ДанныеДоговора.ОсновнаяСтатьяДвиженияДенежныхСредств;
			КонецЕсли;	

			Если ЗначениеЗаполнено(ДанныеДоговора.ОсновнойПроект) Тогда
				СтрокаКоллекции.Проект=ДанныеДоговора.ОсновнойПроект;
			КонецЕсли;
			
			//РассчитатьСуммуПлатежаВал(СтрокаКоллекции, ДатаОплаты, ЕстьСтавкаНДС, СчетОрганизации);
		КонецЕсли;
		ОбработкаТабличныхЧастей.УстановитьТиповуюОперацию(СтрокаКоллекции, Объект, Форма, "РасшифровкаПлатежа");
	КонецЦикла;
КонецПроцедуры

Процедура РассчитатьСуммуПлатежаВал(СтрокаПлатеж, ДатаОплаты, СчетОрганизации=Неопределено) Экспорт
	ВалютаБух=МодульВалютногоУчета.ПолучитьВалюту("Бух");
	ВалютаВал=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СтрокаПлатеж.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
	Если ВалютаВал.Пустая() Тогда		
		Если СчетОрганизации=Неопределено Тогда СтрокаПлатеж.СуммаВал=0; Возврат; КонецЕсли;
		ВалютаВал=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СчетОрганизации, "ВалютаДенежныхСредств");
	КонецЕсли;
	Если НЕ ВалютаВал=ВалютаБух И НЕ ВалютаВал.Пустая() Тогда
		ЗаполнитьЗначенияСвойств(СтрокаПлатеж, МодульВалютногоУчета.КурсВалюты(ВалютаВал, ДатаОплаты));
		Если НЕ СтрокаПлатеж.Курс=0 И НЕ СтрокаПлатеж.Кратность=0 Тогда
			СтрокаПлатеж.СуммаВал=Окр(СтрокаПлатеж.СуммаПлатежа*СтрокаПлатеж.Кратность/СтрокаПлатеж.Курс, 2);	
		КонецЕсли;
	Иначе
		СтрокаПлатеж.СуммаВал=0;
	КонецЕсли;
КонецПроцедуры

Процедура ПриВыбореВидаОперации(Форма) Экспорт
	спВидыОпераций=ОпределитьВидДоговора(Форма.Объект.ВидОперации);
	Для каждого СтрокаКоллекции Из Форма.Объект.РасшифровкаПлатежа Цикл
		ВидДоговора=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СтрокаКоллекции.ДоговорКонтрагента, "ВидДоговора");
		Если СтрокаКоллекции.ДоговорКонтрагента.Пустая() Или спВидыОпераций.НайтиПоЗначению(ВидДоговора)=Неопределено Тогда
			СтрокаКоллекции.ДоговорКонтрагента=ДенежныеСредстваСервер.ДоговорКонтрагентаПоУмолчанию(Форма.Объект.Контрагент, Форма.Объект.Организация, спВидыОпераций);
			Форма.тпРасшифровкаПлатежа_Колонка_ПриИзменении(Форма.Элементы.РасшифровкаПлатежаДоговорКонтрагента, СтрокаКоллекции);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ВыборВидаОперации(Форма, стрКоманда, стрОперация) Экспорт
	Форма.Объект.ВидОперации=ПредопределенноеЗначение("Перечисление."+стрОперация+"."+стрЗаменить(стрКоманда, "Операция_", ""));

	спВидыОпераций=ОпределитьВидДоговора(Форма.Объект.ВидОперации);
	Для каждого СтрокаКоллекции Из Форма.Объект.РасшифровкаПлатежа Цикл
		ВидДоговора=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СтрокаКоллекции.ДоговорКонтрагента, "ВидДоговора");
		Если СтрокаКоллекции.ДоговорКонтрагента.Пустая() Или спВидыОпераций.НайтиПоЗначению(ВидДоговора)=Неопределено Тогда
			СтрокаКоллекции.ДоговорКонтрагента=ДенежныеСредстваСервер.ДоговорКонтрагентаПоУмолчанию(Форма.Объект.Контрагент, Форма.Объект.Организация, спВидыОпераций);
			Форма.тпРасшифровкаПлатежа_Колонка_ПриИзменении(Форма.Элементы.РасшифровкаПлатежаДоговорКонтрагента, СтрокаКоллекции);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Управление видимостью элементов формы

Процедура ВидимостьЭлементовФормы(Объект, Элементы) Экспорт
	////////Валютный учет (в валюте договора)
	//////Видимость=Истина; текКонтрагент=Объект.Контрагент;
	//////Если ЗначениеЗаполнено(текКонтрагент) И ТипЗнч(текКонтрагент)=Тип("СправочникСсылка.Контрагенты") Тогда
	//////	Видимость=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(текКонтрагент, "ВалютныйУчет");
	//////КонецЕсли;
	//////Элементы.РасшифровкаПлатежаСуммаВал.Видимость=Видимость;
	//////Элементы.РасшифровкаПлатежаВалюта.Видимость=Видимость;
	//////Элементы.РасшифровкаПлатежаКурс.Видимость=Видимость;
	//////Элементы.РасшифровкаПлатежаКратность.Видимость=Видимость;

	////Видмость колонок взаиморасчетов
	//Видимость=ДенежныеСредстваСервер.ЕстьВзаиморасчеты(Объект.ВидОперации);
	//
	//Элементы.РасшифровкаПлатежаДоговорКонтрагента.Видимость=Видимость;
	//Элементы.РасшифровкаПлатежаСтавкаНДС.Видимость=Видимость;
	//Элементы.РасшифровкаПлатежаСуммаНДС.Видимость=Видимость;
	//Элементы.РасшифровкаПлатежаОплачиваемыеДокументы.Видимость=Видимость;
	//
	////УСН
	//Видимость=Ложь;
	//Если Объект.УчетнаяПолитика.СистемаНалогообложения=ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.Упрощенная") Или
	//	 Объект.УчетнаяПолитика.СистемаНалогообложения=ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.Упрощенная_ЕНВД") Тогда
	//	 Видимость=Истина;
	//КонецЕсли;	
	//Элементы.РасшифровкаПлатежаСуммаУСН.Видимость=Видимость;
	//Если НЕ Элементы.Найти("РасшифровкаПлатежаСуммаПатент")=Неопределено Тогда
	//	Элементы.РасшифровкаПлатежаСуммаПатент.Видимость=Видимость;
	//КонецЕсли;
КонецПроцедуры

Функция ОпределитьВидДоговора(ВидОперации=Неопределено) Экспорт
	СПоставщиком=Новый СписокЗначений;
	СПоставщиком.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком"));
	СПоставщиком.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом"));
	СПоставщиком.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером"));
	
	СПокупателем=Новый СписокЗначений;
	СПокупателем.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"));
	СПокупателем.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером"));
	СПокупателем.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомитентом"));
	
	Прочее=Новый СписокЗначений;
	Прочее.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.Прочее"));
	Прочее.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком"));
	Прочее.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"));

	Если ЗначениеЗаполнено(ВидОперации) тогда
		//Определение вида операции
		ВидДоговораПоВидуОпераций=Новый Соответствие();

		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ОплатаПоставщику"),СПоставщиком);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.РасчетыПоКредитамИЗаймамСКонтрагентами"),Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ПрочиеРасчетыСКонтрагентами"),Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ВозвратДенежныхСредствПокупателю"),СПокупателем);
			
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ОплатаПокупателя"),СПокупателем);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.РасчетыПоКредитамИЗаймамСКонтрагентами"),Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ПрочиеРасчетыСКонтрагентами"),Прочее);
        ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПКО.ВозвратДенежныхСредствПоставщиком"),СПоставщиком);
		
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ОплатаПоставщику"),СПоставщиком);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.РасчетыПоКредитамИЗаймам"),Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПрочиеРасчетыСКонтрагентами"),Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ВозвратДенежныхСредствПокупателю"),СПокупателем);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПрочееСписаниеБезналичныхДенежныхСредств"),Прочее);
			
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ОплатаПокупателя"),СПокупателем);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.РасчетыПоКредитамИЗаймам"),Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПрочиеРасчетыСКонтрагентами"),Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ВозвратДенежныхСредствПоставщиком"),СПоставщиком);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПоступленияОтПродажиИностраннойВалюты"),Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПриобретениеИностраннойВалюты"),Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПоступлениеОплатыПоБанковскимКредитам"),Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПоступлениеОплатыПоПлатежнымКартам"),Прочее);

		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийППИсходящее.ОплатаПоставщику"),СПоставщиком);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийППИсходящее.РасчетыПоКредитамИЗаймамСКонтрагентами"),Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийППИсходящее.ПрочиеРасчетыСКонтрагентами"),Прочее);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийППИсходящее.ВозвратДенежныхСредствПокупателю"),СПокупателем);

		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийОплатаОтПокупателяПлатежнойКартой.ОплатаПокупателя"),СПокупателем);
		ВидДоговораПоВидуОпераций.Вставить(ПредопределенноеЗначение("Перечисление.ВидыОперацийОплатаОтПокупателяПлатежнойКартой.ВозвратДенежныхСредствПокупателю"),СПокупателем);

		ВидДоговора=ВидДоговораПоВидуОпераций[ВидОперации];

		Возврат ?(ВидДоговора = Неопределено, Новый СписокЗначений, ВидДоговора);
	Конецесли;
	
	Возврат Новый СписокЗначений;	

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличной части "Расшифровка платежа"

Процедура РасшифровкаПлатежа_НачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	Если Элемент.Имя="РасшифровкаПлатежаДоговорКонтрагента" Тогда
		МассивПараметров=Новый Массив();
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ВидДоговора", ОпределитьВидДоговора(Форма.Объект.ВидОперации)));
		Форма.Элементы.РасшифровкаПлатежаДоговорКонтрагента.ПараметрыВыбора=Новый ФиксированныйМассив(МассивПараметров);
	КонецЕсли;
КонецПроцедуры

Процедура РасшифровкаПлатежа_Выбор(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	//Для перехвата в расширение "Платежный календарь"
КонецПроцедуры

Процедура РасшифровкаПлатежа_Колонка_ПриИзменении(Форма, Элемент, ТекущиеДанные=Неопределено) Экспорт
	стрКолонка=стрЗаменить(Элемент.Имя, "РасшифровкаПлатежа", ""); Объект=Форма.Объект;
	Если ТекущиеДанные=Неопределено Тогда
		ТекущиеДанные=Форма.Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	КонецЕсли;
	
	Если стрКолонка="ДоговорКонтрагента" Тогда
		ТекущиеДанные.ОплачиваемыеДокументы="X";
		Если ТекущиеДанные.ДоговорКонтрагента.Пустая() Тогда
			ТекущиеДанные.СуммаВал=0; ТекущиеДанные.Кратность=0; ТекущиеДанные.Курс=0; Возврат; 
		КонецЕсли;

		ДанныеДоговора=ОбщегоНазначенияСервер.ЗначенияРеквизитовОбъекта(ТекущиеДанные.ДоговорКонтрагента, "ОсновнаяСтатьяДвиженияДенежныхСредств,ОсновнойПроект,ВалютаВзаиморасчетов,ВестиПлатежныйКалендарь");
		Если ЗначениеЗаполнено(ДанныеДоговора.ОсновнаяСтатьяДвиженияДенежныхСредств) Тогда
			ТекущиеДанные.СтатьяДвиженияДенежныхСредств=ДанныеДоговора.ОсновнаяСтатьяДвиженияДенежныхСредств;
		КонецЕсли;		
		Если ЗначениеЗаполнено(ДанныеДоговора.ОсновнойПроект) Тогда
			ТекущиеДанные.Проект=ДанныеДоговора.ОсновнойПроект;
		КонецЕсли;

		//Валюта
		ВалютаБух=МодульВалютногоУчета.ПолучитьВалюту("Бух");
		ВалютаВал=ДанныеДоговора.ВалютаВзаиморасчетов;
		Если НЕ ВалютаВал=ВалютаБух И НЕ ВалютаВал.Пустая() Тогда
			ЗаполнитьЗначенияСвойств(ТекущиеДанные, МодульВалютногоУчета.КурсВалюты(ВалютаВал, Объект.Дата));
			Если НЕ ТекущиеДанные.Курс=0 И НЕ ТекущиеДанные.Кратность=0 Тогда
				ТекущиеДанные.СуммаВал=Окр(ТекущиеДанные.СуммаПлатежа*ТекущиеДанные.Кратность/ТекущиеДанные.Курс, 2);
			КонецЕсли;
		Иначе
			ТекущиеДанные.СуммаВал=0;
		КонецЕсли;
		
		//Оплачиваемые документы		
		Если ДанныеДоговора.ВестиПлатежныйКалендарь Тогда
			КолвоДок=Объект.ОплачиваемыеДокументы.НайтиСтроки(Новый Структура("ID_РасшифровкаПлатежа", ТекущиеДанные.ID)).Количество();
			ТекущиеДанные.ОплачиваемыеДокументы=?(КолвоДок=0, "FIFO", Строка(КолвоДок)+" док.");
		КонецЕсли;

	ИначеЕсли стрКолонка="Кратность" Или стрКолонка="Курс" Тогда
		Если ТекущиеДанные.СуммаВал=0 Тогда Возврат; КонецЕсли;
		ТекущиеДанные.СуммаПлатежа=ДенежныеСредстваСервер.РассчитатьСуммуПлатежа(ТекущиеДанные.СуммаПлатежаВал, ТекущиеДанные.Курс, ТекущиеДанные.Кратность);
		ТекущиеДанные.СуммаНДС=ДенежныеСредстваСервер.РассчитатьСуммуНДС(ТекущиеДанные.СуммаПлатежа, ТекущиеДанные.СтавкаНДС);
		Объект.СуммаДокумента=Объект.РасшифровкаПлатежа.Итог("СуммаПлатежа");
		
	ИначеЕсли стрКолонка="СуммаПлатежа" Тогда
		Если НЕ ТекущиеДанные.Курс=0 И НЕ ТекущиеДанные.Кратность=0 Тогда
			ТекущиеДанные.СуммаВал=Окр(ТекущиеДанные.СуммаПлатежа*ТекущиеДанные.Кратность/ТекущиеДанные.Курс, 2);
		КонецЕсли;
		ТекущиеДанные.СуммаНДС=ДенежныеСредстваСервер.РассчитатьСуммуНДС(ТекущиеДанные.СуммаПлатежа, ТекущиеДанные.СтавкаНДС);

	ИначеЕсли стрКолонка="СтавкаНДС" Тогда
		ТекущиеДанные.СуммаНДС=ДенежныеСредстваСервер.РассчитатьСуммуНДС(ТекущиеДанные.СуммаПлатежа, ТекущиеДанные.СтавкаНДС);
	КонецЕсли;
КонецПроцедуры

Процедура РасшифровкаПлатежа_ОбновитьПредставлениеДанных(Форма) Экспорт
	СтруктураПоиска=Новый Структура("ID_РасшифровкаПлатежа");
	Для каждого СтрокаКоллекции Из Форма.Объект.РасшифровкаПлатежа Цикл
		СтрокаКоллекции.ОплачиваемыеДокументы="X";
		Если ЗначениеЗаполнено(СтрокаКоллекции.ДоговорКонтрагента) И ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СтрокаКоллекции.ДоговорКонтрагента, "ВестиПлатежныйКалендарь") Тогда
			СтруктураПоиска.ID_РасшифровкаПлатежа=СтрокаКоллекции.ID;
			КолвоДок=Форма.Объект.ОплачиваемыеДокументы.НайтиСтроки(СтруктураПоиска).Количество();
			СтрокаКоллекции.ОплачиваемыеДокументы=?(КолвоДок=0, "FIFO", Строка(КолвоДок)+" док.");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличной части "Товары ККТ"

Процедура ПечатьЧекККТ(Форма) Экспорт
	Если Форма.Модифицированность Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо записать документ!"); Возврат;
	КонецЕсли; 

	Если НЕ ОбщегоНазначенияСервер.ПроверкаРасширения("БиблиотекаПодключаемогоОборудования") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Расширение: ""Библиотека подключаемого оборудования"" не подключена!");
		Возврат;
	КонецЕсли;

	Если Не Форма.Объект.Проведен Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Перед пробитием чека на ККТ документ необходимо провести!");
		Возврат;
	КонецЕсли;

	ПараметрыФормы=Новый Структура("Основание", Форма.Объект.Ссылка);
	ОткрытьФорму("Документ.ЧекККТ.Форма.ФормаДокумента", ПараметрыФормы, Форма, Форма.УникальныйИдентификатор);
КонецПроцедуры