Функция ДанныеТабличныхЧастейПоДокументуОснования(ДокументОснование, Дата, Организация, ДоговорКонтрагента) Экспорт
	СтруктураВозврата=Новый Структура;
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НаДату", Дата);
	Запрос.УстановитьПараметр("Заказ", ДокументОснование);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	
	Запрос.Текст="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсточникДанных1.ЕдиницаИзмерения,
	|	ИсточникДанных1.ЕдиницаИзмеренияМест,
	|	ИсточникДанных2.КоличествоОстаток Как Количество,
	|	ИсточникДанных1.КоличествоМест,
	|	ИсточникДанных1.Коэффициент,
	|	ИсточникДанных1.Номенклатура,
	|	ИсточникДанных1.ХарактеристикаНоменклатуры,
	|	ИсточникДанных1.СтавкаНДС,
	|	ИсточникДанных1.Сумма,
	|	ИсточникДанных1.СуммаНДС,
	|	ИсточникДанных1.Цена
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ИсточникДанных1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(&НаДату, ЗаказПоставщику = &Заказ И Организация = &Организация И ДоговорКонтрагента = &ДоговорКонтрагента) КАК ИсточникДанных2
	|		ПО ИсточникДанных1.Номенклатура = ИсточникДанных2.Номенклатура
	|		И ИсточникДанных1.ХарактеристикаНоменклатуры = ИсточникДанных2.ХарактеристикаНоменклатуры
	|ГДЕ
	|	ИсточникДанных1.Ссылка=&Заказ	
	|";
	СтруктураВозврата.Вставить("Товары", Запрос.Выполнить().Выгрузить());

	Запрос.Текст="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсточникДанных2.КоличествоОстаток Как Количество,
	|	ИсточникДанных1.Номенклатура,
	|	ИсточникДанных1.Содержание,
	|	ИсточникДанных1.СтавкаНДС,
	|	ИсточникДанных1.Сумма,
	|	ИсточникДанных1.СуммаНДС,
	|	ИсточникДанных1.Цена
	|ИЗ
	|	Документ.ЗаказПоставщику.Услуги КАК ИсточникДанных1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(&НаДату, ЗаказПоставщику = &Заказ И Организация = &Организация И ДоговорКонтрагента = &ДоговорКонтрагента) КАК ИсточникДанных2
	|		ПО ИсточникДанных1.Номенклатура = ИсточникДанных2.Номенклатура
	|ГДЕ
	|	ИсточникДанных1.Ссылка=&Заказ	
	|";
	СтруктураВозврата.Вставить("Услуги", Запрос.Выполнить().Выгрузить());

	Запрос.Текст="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсточникДанных2.КоличествоОстаток Как Количество,
	|	ИсточникДанных1.Номенклатура,
	|	ИсточникДанных1.Сумма,
	|	ИсточникДанных1.Цена
	|ИЗ
	|	Документ.ЗаказПоставщику.ВозвратнаяТара КАК ИсточникДанных1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(&НаДату, ЗаказПоставщику = &Заказ И Организация = &Организация И ДоговорКонтрагента = &ДоговорКонтрагента) КАК ИсточникДанных2
	|		ПО ИсточникДанных1.Номенклатура = ИсточникДанных2.Номенклатура
	|ГДЕ
	|	ИсточникДанных1.Ссылка=&Заказ	
	|";
	СтруктураВозврата.Вставить("ВозвратнаяТара", Запрос.Выполнить().Выгрузить());

	Возврат СтруктураВозврата;	
КонецФункции

Процедура СформироватьДвиженияРегистров(СтруктураШД, СтруктураТД, Отказ) Экспорт
	ИспользоватьСклады=НЕ Константы.НеИспользоватьСкладаЗаказаПриСписании.Получить();
	
	//Массивы сделок
	МассивСделок1=Новый Массив; //Заказы покупателей
	МассивСделок2=Новый Массив; //Заказы внутренние
	МассивСделок3=Новый Массив; //Заказы на производство
	МассивСделок4=Новый Массив; //Заказы поставщикам
	Для каждого СтрокаКоллекции Из СтруктураТД.Сделки Цикл
		Если Не ЗначениеЗаполнено(СтрокаКоллекции.Сделка) Тогда Продолжить; КонецЕсли;
		Если ТипЗнч(СтрокаКоллекции.Сделка)=Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			МассивСделок1.Добавить(СтрокаКоллекции.Сделка);
		ИначеЕсли ТипЗнч(СтрокаКоллекции.Сделка)=Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
			МассивСделок2.Добавить(СтрокаКоллекции.Сделка);
		ИначеЕсли ТипЗнч(СтрокаКоллекции.Сделка)=Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
			МассивСделок3.Добавить(СтрокаКоллекции.Сделка);
		ИначеЕсли ТипЗнч(СтрокаКоллекции.Сделка)=Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			МассивСделок4.Добавить(СтрокаКоллекции.Сделка);
		КонецЕсли;
	КонецЦикла;

	РазрешитьДвижения1=НЕ МассивСделок1.Количество()=0 И УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ЗаказыПокупателей");
	РазрешитьДвижения2=НЕ МассивСделок2.Количество()=0 И УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ВнутренниеЗаказы");
	РазрешитьДвижения3=НЕ МассивСделок3.Количество()=0 И УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ЗаказыНаПроизводство");
	РазрешитьДвижения4=НЕ МассивСделок4.Количество()=0 И УправлениеДокументамиСервер.РазрешитьДвиженияПоРегистру(СтруктураШД, "ЗаказыПоставщикам");

	Если НЕ СтруктураШД.Свойство("ТаблицаДвижений1") Тогда РазрешитьДвижения1=Ложь; КонецЕсли;
	Если НЕ СтруктураШД.Свойство("ТаблицаДвижений2") Тогда РазрешитьДвижения2=Ложь; КонецЕсли;
	Если НЕ СтруктураШД.Свойство("ТаблицаДвижений3") Тогда РазрешитьДвижения3=Ложь; КонецЕсли;
	Если НЕ СтруктураШД.Свойство("ТаблицаДвижений4") Тогда РазрешитьДвижения4=Ложь; КонецЕсли;

	тзТМЦ=Новый ТаблицаЗначений;
	тзТМЦ.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	тзТМЦ.Колонки.Добавить("ХарактеристикаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	тзТМЦ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Если ИспользоватьСклады Тогда
	    тзТМЦ.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	КонецЕсли; 

	//Массив номенклатура, Массив характеристики номенклатуры
	МассивНоменклатуры=Новый Массив;
	МассивХарактеристикиНоменклатуры=Новый Массив;
	МассивСкладов=Новый Массив;

	МассивТЧ=Новый Массив;
	МассивТЧ.Добавить("Товары");
	МассивТЧ.Добавить("Услуги");
	МассивТЧ.Добавить("Тара");
	МассивТЧ.Добавить("Материалы");
	МассивТЧ.Добавить("Изделия");
	МассивТЧ.Добавить("ПобочныеПродукты");
	Для каждого СтрокаКоллекции1 Из СтруктураТД Цикл
		Если МассивТЧ.Найти(СтрокаКоллекции1.Ключ)=Неопределено Тогда Продолжить; КонецЕсли;
		Для каждого СтрокаКоллекции2 Из СтрокаКоллекции1.Значение Цикл
			МассивНоменклатуры.Добавить(СтрокаКоллекции2.Номенклатура);
			Если НЕ СтрокаКоллекции1.Ключ="Услуги" И НЕ СтрокаКоллекции1.Ключ="Тара" Тогда
				Если ЗначениеЗаполнено(СтрокаКоллекции2.ХарактеристикаНоменклатуры) Тогда
					МассивХарактеристикиНоменклатуры.Добавить(СтрокаКоллекции2.ХарактеристикаНоменклатуры);
				КонецЕсли;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(тзТМЦ.Добавить(), СтрокаКоллекции2);
		КонецЦикла;
	КонецЦикла;

	стрКолонки="Номенклатура,ХарактеристикаНоменклатуры"+?(ИспользоватьСклады, ",Склад", "");
	СтруктураОтбора=Новый Структура(стрКолонки);
	тзТМЦ.Свернуть(стрКолонки, "Количество");

	//Остатки по заказам
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НаДату", Новый Граница(СтруктураШД.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Номенклатура", МассивНоменклатуры);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", МассивХарактеристикиНоменклатуры);
	Запрос.УстановитьПараметр("Порядок", 10000);
	
	Если РазрешитьДвижения1 Тогда //Заказы покупателей
		тзДвижения=СтруктураШД["ТаблицаДвижений1"]; тзТМЦ1=тзТМЦ.Скопировать();
		
		стрУсловие="ЗаказПокупателя В (&Заказ) И Номенклатура В (&Номенклатура)";
		Если НЕ МассивХарактеристикиНоменклатуры.Количество()=0 Тогда
			стрУсловие=стрУсловие+" И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)";
		КонецЕсли;
		Если ИспользоватьСклады Тогда
			стрУсловие=стрУсловие+" И Склад В (&Склад)";
			Запрос.УстановитьПараметр("Склад", тзТМЦ1.ВыгрузитьКолонку("Склад"));
		КонецЕсли; 
		
		Запрос.УстановитьПараметр("Заказ", МассивСделок1);
		Запрос.Текст="
		|ВЫБРАТЬ
		|	&Порядок,
		|	ИсточникДанных1.ДоговорКонтрагента,
		|	ИсточникДанных1.ЗаказПокупателя,
		|	ИсточникДанных1.Номенклатура,
		|	ИсточникДанных1.ХарактеристикаНоменклатуры,
		|	ИсточникДанных1.Склад,
		|	СУММА(ИсточникДанных1.КоличествоОстаток) КАК Количество,
		|	СУММА(ИсточникДанных1.СуммаОстаток) КАК Сумма
		|ИЗ
		|	РегистрНакопления.ЗаказыПокупателей.Остатки(&НаДату, "+стрУсловие+") КАК ИсточникДанных1
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсточникДанных1.ДоговорКонтрагента,
		|	ИсточникДанных1.ЗаказПокупателя,
		|	ИсточникДанных1.Номенклатура,
		|	ИсточникДанных1.ХарактеристикаНоменклатуры,
		|	ИсточникДанных1.Склад
		|";	
		тзНезакрытыеЗаказы=Запрос.Выполнить().Выгрузить();
		Если НЕ СтруктураТД.Сделки.Количество()=0 Тогда
			Для каждого СтрокаКоллекции Из тзНезакрытыеЗаказы Цикл
				ДанныеПоиска=СтруктураТД.Сделки.Найти(СтрокаКоллекции.ЗаказПокупателя, "Сделка");
				Если НЕ ДанныеПоиска=Неопределено Тогда
					СтрокаКоллекции.Порядок=СтруктураТД.Сделки.Индекс(ДанныеПоиска);
				КонецЕсли;
			КонецЦикла;
			тзНезакрытыеЗаказы.Сортировать("Порядок Возр");			
		КонецЕсли;
		Для каждого СтрокаКоллекции Из тзНезакрытыеЗаказы Цикл
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаКоллекции);
			МассивСтрок=тзТМЦ1.НайтиСтроки(СтруктураОтбора);
			Для каждого СтрокаМассива Из МассивСтрок Цикл
				Если СтрокаМассива.Количество<=0 Тогда Продолжить; КонецЕсли;

				НоваяСтрока=тзДвижения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
				НоваяСтрока.Количество=Мин(СтрокаКоллекции.Количество, СтрокаМассива.Количество);
				НоваяСтрока.Сумма=СтрокаКоллекции.Сумма*НоваяСтрока.Количество/СтрокаКоллекции.Количество;
				
				СтрокаМассива.Количество=СтрокаМассива.Количество-НоваяСтрока.Количество;				
			КонецЦикла; 
		КонецЦикла;		
		тзДвижения.ЗаполнитьЗначения(СтруктураШД.Дата, "Период");
		тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
		тзДвижения.ЗаполнитьЗначения(СтруктураШД.Ссылка, "Регистратор");
		тзДвижения.ЗаполнитьЗначения(СтруктураШД.Организация, "Организация");
		тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	КонецЕсли;
	
	Если РазрешитьДвижения2 Тогда //Заказы внутренние
		тзДвижения=СтруктураШД["ТаблицаДвижений2"]; тзТМЦ2=тзТМЦ.Скопировать();

		стрУсловие="ВнутреннийЗаказ В (&Заказ) И Номенклатура В (&Номенклатура)";
		Если НЕ МассивХарактеристикиНоменклатуры.Количество()=0 Тогда
			стрУсловие=стрУсловие+" И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)";
		КонецЕсли;

		Запрос.УстановитьПараметр("Заказ", МассивСделок2);
		Запрос.Текст="
		|ВЫБРАТЬ
		|	&Порядок,
		|	ИсточникДанных1.Склад,
		|	ИсточникДанных1.ВнутреннийЗаказ,
		|	ИсточникДанных1.Номенклатура,
		|	ИсточникДанных1.ХарактеристикаНоменклатуры,
		|	ИсточникДанных1.Подразделение,
		|	СУММА(ИсточникДанных1.КоличествоОстаток) КАК Количество
		|ИЗ
		|	РегистрНакопления.ВнутренниеЗаказы.Остатки(&НаДату, "+стрУсловие+") КАК ИсточникДанных1
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсточникДанных1.Склад,
		|	ИсточникДанных1.ВнутреннийЗаказ,
		|	ИсточникДанных1.Номенклатура,
		|	ИсточникДанных1.ХарактеристикаНоменклатуры,
		|	ИсточникДанных1.Подразделение
		|";
		тзНезакрытыеЗаказы=Запрос.Выполнить().Выгрузить();
		Если НЕ СтруктураТД.Сделки.Количество()=0 Тогда
			Для каждого СтрокаКоллекции Из тзНезакрытыеЗаказы Цикл
				ДанныеПоиска=СтруктураТД.Сделки.Найти(СтрокаКоллекции.ВнутреннийЗаказ, "Сделка");
				Если НЕ ДанныеПоиска=Неопределено Тогда
					СтрокаКоллекции.Порядок=СтруктураТД.Сделки.Индекс(ДанныеПоиска);
				КонецЕсли;
			КонецЦикла;
			тзНезакрытыеЗаказы.Сортировать("Порядок Возр");			
		КонецЕсли;
		Для каждого СтрокаКоллекции Из тзНезакрытыеЗаказы Цикл
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаКоллекции);
			МассивСтрок=тзТМЦ2.НайтиСтроки(СтруктураОтбора);
			Для каждого СтрокаМассива Из МассивСтрок Цикл
				Если СтрокаМассива.Количество<=0 Тогда Продолжить; КонецЕсли;

				НоваяСтрока=тзДвижения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
				НоваяСтрока.Количество=Мин(СтрокаКоллекции.Количество, СтрокаМассива.Количество);

				СтрокаМассива.Количество=СтрокаМассива.Количество-НоваяСтрока.Количество;				
			КонецЦикла; 
		КонецЦикла;
		тзДвижения.ЗаполнитьЗначения(СтруктураШД.Дата, "Период");
		тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
		тзДвижения.ЗаполнитьЗначения(СтруктураШД.Ссылка, "Регистратор");
		тзДвижения.ЗаполнитьЗначения(СтруктураШД.Организация, "Организация");
		тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	КонецЕсли;
	
	Если РазрешитьДвижения3 Тогда //Заказы на производство
		тзДвижения=СтруктураШД["ТаблицаДвижений3"]; тзТМЦ3=тзТМЦ.Скопировать();

		стрУсловие="ЗаказНаряд В (&Заказ) И Номенклатура В (&Номенклатура)";
		Если НЕ МассивХарактеристикиНоменклатуры.Количество()=0 Тогда
			стрУсловие=стрУсловие+" И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)";
		КонецЕсли;

		Запрос.УстановитьПараметр("Заказ", МассивСделок3);
		Запрос.Текст="
		|ВЫБРАТЬ
		|	&Порядок,
		|	ИсточникДанных1.Контрагент,
		|	ИсточникДанных1.ДоговорКонтрагента,
		|	ИсточникДанных1.ЗаказНаряд,
		|	ИсточникДанных1.Номенклатура,
		|	ИсточникДанных1.ХарактеристикаНоменклатуры,
		|	СУММА(ИсточникДанных1.КоличествоОстаток) КАК Количество,
		|	СУММА(ИсточникДанных1.СтоимостьОстаток) КАК Стоимость
		|ИЗ
		|	РегистрНакопления.ЗаказыНаПроизводство.Остатки(&НаДату, "+стрУсловие+") КАК ИсточникДанных1
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсточникДанных1.Контрагент,
		|	ИсточникДанных1.ДоговорКонтрагента,
		|	ИсточникДанных1.ЗаказНаряд,
		|	ИсточникДанных1.Номенклатура,
		|	ИсточникДанных1.ХарактеристикаНоменклатуры
		|";
		тзНезакрытыеЗаказы=Запрос.Выполнить().Выгрузить();
		Если НЕ СтруктураТД.Сделки.Количество()=0 Тогда
			Для каждого СтрокаКоллекции Из тзНезакрытыеЗаказы Цикл
				ДанныеПоиска=СтруктураТД.Сделки.Найти(СтрокаКоллекции.ЗаказНаряд, "Сделка");
				Если НЕ ДанныеПоиска=Неопределено Тогда
					СтрокаКоллекции.Порядок=СтруктураТД.Сделки.Индекс(ДанныеПоиска);
				КонецЕсли;
			КонецЦикла;
			тзНезакрытыеЗаказы.Сортировать("Порядок Возр");			
		КонецЕсли;

		Если СтруктураОтбора.Свойство("Склад") Тогда
			СтруктураОтбора.Удалить("Склад");
		КонецЕсли; //6.12.2016

		Для каждого СтрокаКоллекции Из тзНезакрытыеЗаказы Цикл
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаКоллекции);
			МассивСтрок=тзТМЦ3.НайтиСтроки(СтруктураОтбора);
			Для каждого СтрокаМассива Из МассивСтрок Цикл
				Если СтрокаМассива.Количество<=0 Тогда Продолжить; КонецЕсли;

				НоваяСтрока=тзДвижения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
				НоваяСтрока.Количество=Мин(СтрокаКоллекции.Количество, СтрокаМассива.Количество);
				НоваяСтрока.Стоимость=СтрокаКоллекции.Стоимость*НоваяСтрока.Количество/СтрокаКоллекции.Количество;

				СтрокаМассива.Количество=СтрокаМассива.Количество-НоваяСтрока.Количество;
			КонецЦикла;
		КонецЦикла;
		тзДвижения.ЗаполнитьЗначения(СтруктураШД.Дата, "Период");
		тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
		тзДвижения.ЗаполнитьЗначения(СтруктураШД.Ссылка, "Регистратор");
		тзДвижения.ЗаполнитьЗначения(СтруктураШД.Организация, "Организация");
		тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	КонецЕсли;

	Если РазрешитьДвижения4 Тогда //Заказы поставщикам
		тзДвижения=СтруктураШД["ТаблицаДвижений4"]; тзТМЦ4=тзТМЦ.Скопировать();

		Если СтруктураОтбора.Свойство("Склад") Тогда
			СтруктураОтбора.Удалить("Склад");
		КонецЕсли;

		стрУсловие="ЗаказПоставщику В (&Заказ) И Номенклатура В (&Номенклатура)";
		Если НЕ МассивХарактеристикиНоменклатуры.Количество()=0 Тогда
			стрУсловие=стрУсловие+" И ХарактеристикаНоменклатуры В (&ХарактеристикаНоменклатуры)";
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Заказ", МассивСделок4);
		Запрос.Текст="
		|ВЫБРАТЬ
		|	&Порядок,
		|	ИсточникДанных1.ДоговорКонтрагента,
		|	ИсточникДанных1.ЗаказПоставщику,
		|	ИсточникДанных1.Номенклатура,
		|	ИсточникДанных1.ХарактеристикаНоменклатуры,
		|	ИсточникДанных1.ЗаказОснование,
		|	СУММА(ИсточникДанных1.КоличествоОстаток) КАК Количество,
		|	СУММА(ИсточникДанных1.СуммаОстаток) КАК Сумма
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&НаДату, "+стрУсловие+") КАК ИсточникДанных1
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсточникДанных1.ДоговорКонтрагента,
		|	ИсточникДанных1.ЗаказПоставщику,
		|	ИсточникДанных1.Номенклатура,
		|	ИсточникДанных1.ХарактеристикаНоменклатуры,
		|	ИсточникДанных1.ЗаказОснование
		|";	
		тзНезакрытыеЗаказы=Запрос.Выполнить().Выгрузить();
		Если НЕ СтруктураТД.Сделки.Количество()=0 Тогда
			Для каждого СтрокаКоллекции Из тзНезакрытыеЗаказы Цикл
				ДанныеПоиска=СтруктураТД.Сделки.Найти(СтрокаКоллекции.ЗаказПоставщику, "Сделка");
				Если НЕ ДанныеПоиска=Неопределено Тогда
					СтрокаКоллекции.Порядок=СтруктураТД.Сделки.Индекс(ДанныеПоиска);
				КонецЕсли;
			КонецЦикла;
			тзНезакрытыеЗаказы.Сортировать("Порядок Возр");			
		КонецЕсли;
		Для каждого СтрокаКоллекции Из тзНезакрытыеЗаказы Цикл
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаКоллекции);
			МассивСтрок=тзТМЦ4.НайтиСтроки(СтруктураОтбора);
			Для каждого СтрокаМассива Из МассивСтрок Цикл
				Если СтрокаМассива.Количество<=0 Тогда Продолжить; КонецЕсли;

				НоваяСтрока=тзДвижения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
				НоваяСтрока.Количество=Мин(СтрокаКоллекции.Количество, СтрокаМассива.Количество);
				НоваяСтрока.Сумма=СтрокаКоллекции.Сумма*НоваяСтрока.Количество/СтрокаКоллекции.Количество;
				
				СтрокаМассива.Количество=СтрокаМассива.Количество-НоваяСтрока.Количество;				
			КонецЦикла; 
		КонецЦикла;		
		тзДвижения.ЗаполнитьЗначения(СтруктураШД.Дата, "Период");
		тзДвижения.ЗаполнитьЗначения(Истина, "Активность");
		тзДвижения.ЗаполнитьЗначения(СтруктураШД.Ссылка, "Регистратор");
		тзДвижения.ЗаполнитьЗначения(СтруктураШД.Организация, "Организация");
		тзДвижения.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	КонецЕсли;	
КонецПроцедуры

