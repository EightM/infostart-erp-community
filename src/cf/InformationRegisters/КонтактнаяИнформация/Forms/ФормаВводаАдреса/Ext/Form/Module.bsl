&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	ИнострАдресФизЛица=Запись.Вид=ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ИнострАдресФизЛица");
	Если ИнострАдресФизЛица Тогда Переключатель=1; КонецЕсли; 

	Элементы.Переключатель.Доступность=НЕ ИнострАдресФизЛица;
	Элементы.Группа3.Видимость=НЕ ИнострАдресФизЛица ИЛИ Переключатель=1;
	Элементы.Группа4.Видимость=НЕ ИнострАдресФизЛица ИЛИ Переключатель=1;
	Элементы.Группа5.Видимость=НЕ ИнострАдресФизЛица ИЛИ Переключатель=1;
	Элементы.Группа6.Видимость=НЕ ИнострАдресФизЛица ИЛИ Переключатель=1;
	Элементы.Группа7.Видимость=НЕ ИнострАдресФизЛица ИЛИ Переключатель=1;
	Элементы.Группа8.Видимость=НЕ ИнострАдресФизЛица ИЛИ Переключатель=1;
	Элементы.Группа9.Видимость=НЕ ИнострАдресФизЛица ИЛИ Переключатель=1;
	Элементы.ИдентификаторФИАС.Видимость=НЕ ИнострАдресФизЛица ИЛИ Переключатель=1;
	Элементы.ФИАСДома.Видимость=НЕ ИнострАдресФизЛица ИЛИ Переключатель=1;
	Элементы.Представление.РедактированиеТекста=Переключатель=1;

	Элементы.ГруппаДанныеАдреса.Видимость=Переключатель=0;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ПослеВыбораАтрибута(СтруктураВозврата, ИмяПоляСокр) Экспорт
	Если СтруктураВозврата=Неопределено Тогда Возврат; КонецЕсли;
	Запись[ИмяПоляСокр.Имя]=СтруктураВозврата.Наименование;
	Запись[ИмяПоляСокр.Сокр]=СтруктураВозврата.Сокращение;
	Если ИмяПоляСокр.Имя="Поле6" Тогда
		Запись.КодКладр=СтруктураВозврата.Код;
	КонецЕсли;
	Атрибут_ПриИзменении(ИмяПоляСокр);
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтранаПоСправочнику(КодАльфа)
	Возврат Справочники.КлассификаторСтранМира.НайтиПоРеквизиту("КодАльфа2", КодАльфа);
КонецФункции

//&НаКлиенте
//Функция РазложитьАдрес(Знач СтрокаАдрес) Экспорт
//	
//	Страна          = "";
//	КодСтраны       = "";
//	Индекс          = "";
//	КодРег          = "";
//	Регион          = "";
//	РегионСокращение= "";
//	Район           = "";
//	РайонСокращение = "";
//	Город           = "";
//	ГородСокращение = "";
//	НаселенныйПункт = "";
//	НаселенныйПунктСокращение="";
//	Улица           = "";
//	УлицаСокращение = "";
//	Дом             = "";
//	Корпус          = "";
//	Квартира        = "";
//	ТипДома         = "";
//	ТипКорпуса      = "";
//	ТипКвартиры     = "";
//	ИдентификаторФИАС= "";
//	ФИАСРегиона		= "";
//	ФИАСРайона		= "";
//	ФИАСГорода		= "";
//	ФИАСНаселенныйПункт= "";
//	ФИАСУлицы		= "";
//	ФИАСДома		= "";

//	МассивАдрес=СтрРазделить(СтрокаАдрес, ",");
//	ЭлементовВМассиве = МассивАдрес.Количество();   

//	Если ЭлементовВМассиве > 0 Тогда
//		Страна=СтранаПоСправочнику(СокрЛП(МассивАдрес[1]));
//	КонецЕсли;
//	Если ЭлементовВМассиве > 1 Тогда
//		КодСтраны = СокрЛП(МассивАдрес[1]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 2 Тогда
//		Индекс = СокрЛП(МассивАдрес[2]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 3 Тогда
//		КодРег = СокрЛП(МассивАдрес[3]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 4 Тогда
//		Регион = СокрЛП(МассивАдрес[4]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 5 Тогда
//		РегионСокращение = СокрЛП(МассивАдрес[5]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 6 Тогда
//		Район = СокрЛП(МассивАдрес[6]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 7 Тогда
//		РайонСокращение = СокрЛП(МассивАдрес[7]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 8 Тогда
//		Город = СокрЛП(МассивАдрес[8]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 9 Тогда
//		ГородСокращение = СокрЛП(МассивАдрес[9]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 10 Тогда
//		НаселенныйПункт	= СокрЛП(МассивАдрес[10]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 11 Тогда
//		НаселенныйПунктСокращение=СокрЛП(МассивАдрес[11]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 12 Тогда
//		Улица = СокрЛП(МассивАдрес[12]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 13 Тогда
//		УлицаСокращение = СокрЛП(МассивАдрес[13]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 14 Тогда
//		Дом = СокрЛП(МассивАдрес[14]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 15 Тогда
//		ТипДома=ПредопределенноеЗначение("Перечисление.ТипыДомов."+СокрЛП(МассивАдрес[15]));
//	КонецЕсли;
//	Если ЭлементовВМассиве > 16 Тогда
//		Квартира = СокрЛП(МассивАдрес[16]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 17 Тогда
//		ТипКвартиры = ПредопределенноеЗначение("Перечисление.ТипыКвартир."+СокрЛП(МассивАдрес[17]));
//	КонецЕсли;
//	Если ЭлементовВМассиве > 18 Тогда
//		Корпус = СокрЛП(МассивАдрес[18]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 19 Тогда
//		ТипКорпуса = ПредопределенноеЗначение("Перечисление.ТипыКорпусов."+СокрЛП(МассивАдрес[19]));
//	КонецЕсли;
//	Если ЭлементовВМассиве > 20 Тогда
//		ИдентификаторФИАС = СокрЛП(МассивАдрес[20]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 21 Тогда
//		ФИАСРегиона = СокрЛП(МассивАдрес[21]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 22 Тогда
//		ФИАСРайона = СокрЛП(МассивАдрес[22]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 23 Тогда
//		ФИАСГорода = СокрЛП(МассивАдрес[23]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 24 Тогда
//		ФИАСНаселенныйПункт = СокрЛП(МассивАдрес[24]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 25 Тогда
//		ФИАСУлицы = СокрЛП(МассивАдрес[25]);
//	КонецЕсли;
//	Если ЭлементовВМассиве > 26 Тогда
//		ФИАСДома = СокрЛП(МассивАдрес[26]);
//	КонецЕсли;

//	СтруктураВозврата = Новый Структура;
//	СтруктураВозврата.Вставить("Страна",					Страна);
//	СтруктураВозврата.Вставить("КодСтраны",					КодСтраны);
//	СтруктураВозврата.Вставить("Поле1",           		   	Индекс);
//	СтруктураВозврата.Вставить("Поле2",						Регион);
//	СтруктураВозврата.Вставить("РегионСокращение",			РегионСокращение);
//	СтруктураВозврата.Вставить("Поле3",						Район);
//	СтруктураВозврата.Вставить("РайонСокращение",			РайонСокращение);
//	СтруктураВозврата.Вставить("Поле4",						Город);
//	СтруктураВозврата.Вставить("ГородСокращение",			ГородСокращение);
//	СтруктураВозврата.Вставить("Поле5",						НаселенныйПункт);
//	СтруктураВозврата.Вставить("НаселенныйПунктСокращение",	НаселенныйПунктСокращение);
//	СтруктураВозврата.Вставить("Поле6",						Улица);
//	СтруктураВозврата.Вставить("УлицаСокращение",			УлицаСокращение);
//	СтруктураВозврата.Вставить("Поле7",						Дом);
//	СтруктураВозврата.Вставить("ТипДома",					ТипДома);
//	СтруктураВозврата.Вставить("Поле8",						Корпус);
//	СтруктураВозврата.Вставить("ТипКорпуса",				ТипКорпуса);
//	СтруктураВозврата.Вставить("Поле9",						Квартира);
//	СтруктураВозврата.Вставить("ТипКвартиры",				ТипКвартиры);
//	СтруктураВозврата.Вставить("ИдентификаторФИАС",			ИдентификаторФИАС);
//	СтруктураВозврата.Вставить("ФИАСРегиона",				ФИАСРегиона);
//	СтруктураВозврата.Вставить("ФИАСРайона",				ФИАСРайона);
//	СтруктураВозврата.Вставить("ФИАСГорода",				ФИАСГорода);
//	СтруктураВозврата.Вставить("ФИАСНаселенныйПункт",		ФИАСНаселенныйПункт);
//	СтруктураВозврата.Вставить("ФИАСУлицы",					ФИАСУлицы);
//	СтруктураВозврата.Вставить("ФИАСДома",					ФИАСДома);
//	
//	Возврат СтруктураВозврата;
//КонецФункции

&НаКлиенте
Процедура РазложитьПоле(ИмяПоля, ИмяПоляСокращения) Экспорт
	МассивАдрес=СтрРазделить(Запись[ИмяПоля], ",");
	ЭлементовВМассиве=МассивАдрес.Количество();   

	Если ЭлементовВМассиве > 0 Тогда
		Запись[ИмяПоля]=СокрЛП(МассивАдрес[0]);
	КонецЕсли;
	Если ЭлементовВМассиве > 1 Тогда
		Запись[ИмяПоляСокращения]=СокрЛП(МассивАдрес[1]);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПредставлениеАдреса() Экспорт
	//Возврат СокрЛП(ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Запись.Страна, "Код"))+","+СокрЛП(Запись.Страна)+","
	//	+ СокрЛП(Запись.Поле1)+ ","
	//	+ СокрЛП(Запись.Поле2)+Символы.НПП+СокрЛП(Запись.РегионСокращение)+","
	//	+ СокрЛП(Запись.Поле3)+Символы.НПП+СокрЛП(Запись.РайонСокращение)+ ","
	//	+ СокрЛП(Запись.Поле4)+Символы.НПП+СокрЛП(Запись.ГородСокращение)+ ","
	//	+ СокрЛП(Запись.Поле5)+Символы.НПП+СокрЛП(Запись.НаселенныйПунктСокращение)+ ","
	//	+ СокрЛП(Запись.Поле6)+Символы.НПП+СокрЛП(Запись.УлицаСокращение)+ ","
	//	+ СокрЛП(Запись.Поле7) + ","
	//	+ СокрЛП(Запись.Поле8) + ","
	//	+ СокрЛП(Запись.Поле9);	
	
	ТекПредставление = "";
	Если СокрЛП(Запись.Поле1) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + СокрЛП(Запись.Поле1);
	КонецЕсли;
	Если СокрЛП(Запись.Страна) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + СокрЛП(Запись.Страна);
	КонецЕсли;
	Если СокрЛП(Запись.Поле2) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + СокрЛП(Запись.Поле2)+Символы.НПП+СокрЛП(Запись.РегионСокращение);
	КонецЕсли;
	Если СокрЛП(Запись.Поле3) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + СокрЛП(Запись.Поле3)+Символы.НПП+СокрЛП(Запись.РайонСокращение);
	КонецЕсли;
	Если СокрЛП(Запись.Поле4) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " +СокрЛП(Запись.ГородСокращение)+"."+Символы.НПП+СокрЛП(Запись.Поле4);
		//ТекПредставление = ТекПредставление + ", " + СокрЛП(Запись.Поле4)+Символы.НПП+СокрЛП(Запись.ГородСокращение);
	КонецЕсли;
	Если СокрЛП(Запись.Поле5) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + СокрЛП(Запись.Поле5)+Символы.НПП+СокрЛП(Запись.НаселенныйПунктСокращение);
	КонецЕсли;
	Если СокрЛП(Запись.Поле6) <> "" Тогда
		//ТекПредставление = ТекПредставление + ", ул. " + СокрЛП(Запись.Поле6);
		ТекПредставление = ТекПредставление + ", "+СокрЛП(Запись.УлицаСокращение)+"."+Символы.НПП+СокрЛП(Запись.Поле6);
	КонецЕсли;
	Если СокрЛП(Запись.Поле7) <> "" Тогда
		ТекПредставление = ТекПредставление + ", "+СокрЛП(Запись.ТипДома)+Символы.НПП+СокрЛП(Запись.Поле7);
		//ТекПредставление = ТекПредставление + ", д. " + СокрЛП(Запись.Поле7);
	КонецЕсли;
	Если СокрЛП(Запись.Поле8) <> "" Тогда
		ТекПредставление = ТекПредставление + ", кор. " + СокрЛП(Запись.Поле8);
	КонецЕсли;
	Если СокрЛП(Запись.Поле9) <> "" Тогда
		ТекПредставление = ТекПредставление + ", "+СокрЛП(Запись.ТипКвартиры)+Символы.НПП+СокрЛП(Запись.Поле9);
	КонецЕсли;
	Если СтрДлина(ТекПредставление) > 2 Тогда
		ТекПредставление = Сред(ТекПредставление, 3);
	КонецЕсли;
	Возврат ТекПредставление;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	СобытияЭлементовФормыКлиент.ПриИзменении(ЭтаФорма, Элемент);

	Если Элемент.Имя="Переключатель" Тогда
		УстановитьВидимостьДоступность();

	ИначеЕсли Элемент.Имя="Вид" Тогда
		УстановитьВидимостьДоступность();

	ИначеЕсли Элемент.Имя="Страна" Тогда
		Запись.Представление=ПолучитьПредставлениеАдреса();
		
	ИначеЕсли Элемент.Имя="ТипКвартиры" ИЛИ Элемент.Имя="ТипДома" Тогда
		Запись.Представление=ПолучитьПредставлениеАдреса();

	ИначеЕсли Элемент.Имя="Поле2" Тогда
		Если ПустаяСтрока(Запись.Поле2) Тогда
			Запись.ФИАСРегиона="";
		КонецЕсли;
		РазложитьПоле("Поле2", "РегионСокращение");
		Запись.Представление=ПолучитьПредставлениеАдреса();		
		
	ИначеЕсли Элемент.Имя="Поле3" Тогда
		Если ПустаяСтрока(Запись.Поле3) Тогда
			Запись.ФИАСРайона="";
		КонецЕсли;
		РазложитьПоле("Поле3", "РайонСокращение");
		Запись.Представление=ПолучитьПредставлениеАдреса();

	ИначеЕсли Элемент.Имя="Поле4" Тогда
		Если ПустаяСтрока(Запись.Поле4) Тогда
			Запись.ФИАСГорода="";
		КонецЕсли;
		РазложитьПоле("Поле4", "ГородСокращение");
		Запись.Представление=ПолучитьПредставлениеАдреса();

	ИначеЕсли Элемент.Имя="Поле5" Тогда
		Если ПустаяСтрока(Запись.Поле5) Тогда
			Запись.ФИАСНаселенныйПункт="";
		КонецЕсли;
		РазложитьПоле("Поле5", "НаселенныйПунктСокращение");
		Запись.Представление=ПолучитьПредставлениеАдреса();

	ИначеЕсли Элемент.Имя="Поле6" Тогда
		Если ПустаяСтрока(Запись.Поле6) Тогда
			Запись.ФИАСУлицы="";
		КонецЕсли;
		РазложитьПоле("Поле6", "УлицаСокращение");
		Запись.Представление=ПолучитьПредставлениеАдреса();
		
	ИначеЕсли Элемент.Имя="Поле7" Тогда
		Если ПустаяСтрока(Запись.Поле7) Тогда
			Запись.ФИАСДома="";
		КонецЕсли;
		Запись.Представление=ПолучитьПредставлениеАдреса();

	ИначеЕсли Элемент.Имя="Поле7" Тогда
		Запись.Представление=ПолучитьПредставлениеАдреса();

	ИначеЕсли Элемент.Имя="Поле9" Тогда
		Запись.Представление=ПолучитьПредставлениеАдреса();

	ИначеЕсли Элемент.Имя="Представление" Тогда
		//стАдрес=РазложитьАдрес(Запись.Представление);
		//ЗаполнитьЗначенияСвойств(Запись, стАдрес);
		//ЗаполнитьЗначенияСвойств(ЭтаФорма, стАдрес);
		//Запись.Представление=ПолучитьПредставлениеАдреса();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_Очистка(Элемент, СтандартнаяОбработка)
	Если Элемент.Имя="ЗаписьВид" И ТипЗнч(Запись.Вид)=Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
		Запись.Вид=ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ПустаяСсылка");
	КонецЕсли;

	Если Элемент.Имя="Поле2" Тогда
		Запись.ФИАСРегиона="";
	ИначеЕсли Элемент.Имя="Поле3" Тогда
		Запись.ФИАСРайона="";
	ИначеЕсли Элемент.Имя="Поле4" Тогда
		Запись.ФИАСГорода="";
	ИначеЕсли Элемент.Имя="Поле5" Тогда
		Запись.ФИАСНаселенныйПункт="";
	ИначеЕсли Элемент.Имя="Поле6" Тогда
		Запись.ФИАСУлицы="";
	ИначеЕсли Элемент.Имя="Поле7" Тогда
		Запись.ФИАСДома="";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элемент.Имя="Поле2" Тогда
		
	ИначеЕсли Элемент.Имя="Поле3" Тогда

	ИначеЕсли Элемент.Имя="Поле4" Тогда

	ИначеЕсли Элемент.Имя="Поле5" Тогда

	ИначеЕсли Элемент.Имя="Поле6" Тогда

	ИначеЕсли Элемент.Имя="Вид" Тогда

	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СобытияЭлементовФормыКлиент.АвтоПодбор(ЭтаФорма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СобытияЭлементовФормыКлиент.ОбработкаВыбора(ЭтаФорма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВидСервиса) Тогда
		СтруктураНастроек=ХранилищеОбщихНастроек.Загрузить("ВидСервиса", "КонтактнаяИнформация",,ПараметрыСеанса.ТекущийПользователь);
		Если ТипЗнч(СтруктураНастроек)=Тип("Структура") Тогда
			ВидСервиса=СтруктураНастроек.ВариантХранения;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СтруктураНастроек=Новый Структура;
	СтруктураНастроек.Вставить("ВариантХранения", ВидСервиса);
	ХранилищеОбщихНастроек.Сохранить("ВидСервиса", "КонтактнаяИнформация", СтруктураНастроек,,ПараметрыСеанса.ТекущийПользователь);
КонецПроцедуры
