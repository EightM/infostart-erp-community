#Область ОписаниеПеременных

&НаКлиенте
Перем СтруктураСохраняемыхРеквизитов;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустой() Тогда
		
		Запись.Период = ТекущаяДатаСеанса();
		
		Если Запись.ВидЗаписи = Перечисления.ВидЗаписиОРегистрации.Регистрация Тогда
			Запись.ВключатьВНалоговуюБазу = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Запись.ОсновноеСредство) Тогда
			ЗаполнитьПараметрыПоОсновномуСредству();
		КонецЕсли;
	
		НастроитьФормуПоОбъекту();
		
	КонецЕсли;
	
	УстановитьЗаголовокФормы(ЭтаФорма, Параметры.Ключ.Пустой());
	
	СтарыйГод = 0;
	ТекущаяНалоговаяЛьгота = Запись.НалоговаяЛьгота;
	ЦветТекстаИнформационнойНадписи = ЦветаСтиля.ТекстИнформационнойНадписи;
	
	ЗаполнитьСписокВыбораПовышающегоКоэффициента(
		Элементы.ПовышающийКоэффициент.СписокВыбора, 
		Запись.Период);
		
	УстановитьТекстПодсказкиСпискаПовышающихКоэффициентов(
		Элементы.ПовышающийКоэффициент.РасширеннаяПодсказка.Заголовок, 
		Запись.Период);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СтруктураСохраняемыхРеквизитов = Новый Структура;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	НастроитьФормуПоОбъекту();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Параметры.Ключ.Организация <> ТекущийОбъект.Организация
		ИЛИ Параметры.Ключ.ОсновноеСредство <> ТекущийОбъект.ОсновноеСредство
		ИЛИ Параметры.Ключ.Период <> ТекущийОбъект.Период Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",           ТекущийОбъект.Период);
		Запрос.УстановитьПараметр("Организация",      ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("ОсновноеСредство", ТекущийОбъект.ОсновноеСредство);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(РегистрацияТранспортныхСредств.ВидЗаписи) КАК ВидЗаписи
		|ИЗ
		|	РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
		|ГДЕ
		|	РегистрацияТранспортныхСредств.Период = &Период
		|	И РегистрацияТранспортныхСредств.Организация = &Организация
		|	И РегистрацияТранспортныхСредств.ОсновноеСредство = &ОсновноеСредство";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() > 0 Тогда
			Выборка.Следующий();

			ШаблонСообщения = НСтр("ru = '%1 по основному средству <%2> 
				|уже есть запись <%3> в организации <%4>!'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения,
				Формат(ТекущийОбъект.Период, "ДЛФ=D"), ТекущийОбъект.ОсновноеСредство, ТекущийОбъект.ВидЗаписи,
				ТекущийОбъект.Организация);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		КонецЕсли;
	КонецЕсли;

	Если Год(ТекущийОбъект.Период) >= 2014 Тогда
		ТекущийОбъект.КодПоОКАТО = "";
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Запись.ВидЗаписи = Перечисления.ВидЗаписиОРегистрации.Регистрация Тогда
		
		Если Запись.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		
			Если НЕ ЗначениеЗаполнено(Запись.НалоговыйОрган) Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(, , НСтр("ru = 'Налоговый орган'"));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.НалоговыйОрган", , Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Запись.КодПоОКТМО) Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(, , НСтр("ru = 'Код по ОКТМО'"));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.КодПоОКТМО", , Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Запись.КодПоОКАТО) И Год(Запись.Период) < 2014 Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(, , НСтр("ru = 'Код по ОКАТО'"));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.КодПоОКАТО", , Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
		Если Запись.ОбщаяСобственность Тогда
			
			Если НЕ ЗначениеЗаполнено(Запись.ДоляВПравеОбщейСобственностиЧислитель) Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(, , НСтр("ru = 'Доля в праве общей собственности (числитель)'"));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.ДоляВПравеОбщейСобственностиЧислитель", , Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Запись.ДоляВПравеОбщейСобственностиЗнаменатель) Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(, , НСтр("ru = 'Доля в праве общей собственности (знаменатель)'"));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.ДоляВПравеОбщейСобственностиЗнаменатель", , Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
		Ошибки = Новый Массив;
		
		Для Каждого Ошибка Из Ошибки Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка.ТекстСообщения, , Ошибка.Поле, ,Отказ);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьЗаголовокФормы(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ПериодПриИзмененииНаСервере();
		
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновноеСредствоПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.ОсновноеСредство)
		И ЗначениеЗаполнено(Запись.Организация) Тогда
		
		ЗаполнитьПараметрыПоОсновномуСредству();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодВидаТранспортногоСредстваПриИзменении(Элемент)
	
	СтруктураКодов = КодыВидовТС.Получить(Запись.КодВидаТранспортногоСредства);
	
	Если СтруктураКодов <> Неопределено Тогда
		
		КодЕдиницыИзмерения = Элементы.ЕдиницаИзмеренияНалоговойБазы.СписокВыбора.НайтиПоЗначению(СтруктураКодов.КодЕдиницыИзмерения);
		Если КодЕдиницыИзмерения <> Неопределено Тогда
			Запись.ЕдиницаИзмеренияНалоговойБазы = КодЕдиницыИзмерения.Значение;
		Иначе
			Запись.ЕдиницаИзмеренияНалоговойБазы = "";
		КонецЕсли;
			
		УстановитьЗаголовокНалоговойБазы(ЭтаФорма);
	КонецЕсли;
	
	ЗаполнитьНаименованиеВидаТС(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КодВидаТранспортногоСредстваНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если СписокВыбораКодовТС.Количество() = 0 Тогда
	
		СписокВыбораКодовТС = Новый СписокЗначений;
		СписокВыбораКодовТС.Добавить("51000", НСтр("ru = '51000 Автомобили легковые'"));
		СписокВыбораКодовТС.Добавить("51004", НСтр("ru = '51004 - прочие автомобили легковые (кроме включенных по кодам 56600, 56700)'"));
		СписокВыбораКодовТС.Добавить("52001", НСтр("ru = '52001 Автомобили грузовые (кроме включенных по коду 57000)'"));
		
	КонецЕсли;
	
	Если СписокВыбораКодовТС.НайтиПоЗначению("ФормаВыбораКодаТС") = Неопределено Тогда
		СписокВыбораКодовТС.Добавить("ФормаВыбораКодаТС", НСтр("ru = 'Другие коды видов ТС...'"));
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьИзСпискаКодВидаТранспортногоСредстваЗавершение", ЭтотОбъект, Элемент);
	ПоказатьВыборИзСписка(Оповещение, СписокВыбораКодовТС, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияНалоговойБазыПриИзменении(Элемент)
	
	УстановитьЗаголовокНалоговойБазы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭкологическийКлассНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъекта",		"РегистрСведений");
	ПараметрыФормы.Вставить("НазваниеОбъекта",	"РегистрацияТранспортныхСредств");
	ПараметрыФормы.Вставить("НазваниеМакета",	"КодыЭкологическихКлассов");
	ПараметрыФормы.Вставить("ТекущийПериод",	Запись.Период);

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ЭкологическийКлассНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораКода", ПараметрыФормы,,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ПостановкаНаУчетВНалоговомОрганеПриИзменении(Элемент)
	
	Если Запись.ПостановкаНаУчетВНалоговомОргане = ПредопределенноеЗначение("Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане") Тогда
		ВосстановитьРеквизиты(Запись, "НалоговыйОрган, КодПоОКТМО, КодПоОКАТО", СтруктураСохраняемыхРеквизитов);
	Иначе
		СохранитьРеквизиты(Запись, "НалоговыйОрган, КодПоОКТМО, КодПоОКАТО", СтруктураСохраняемыхРеквизитов);
	КонецЕсли;
	
	НастроитьНалоговыйОрган(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговаяЛьготаПриИзменении(Элемент)
	
	// Сохраним значения
	Если ТекущаяНалоговаяЛьгота = 
		ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения") Тогда
		
		КодНалоговойЛьготыОсвобождениеОтНалогообложения = Запись.КодНалоговойЛьготы;
		РегиональныйКодЛьготыОсвобождениеОтНалогообложения = Запись.РегиональныйКодЛьготы;
		
	ИначеЕсли ТекущаяНалоговаяЛьгота = 
		ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки") Тогда
		
		РегиональныйКодЛьготыСнижениеНалоговойСтавки = Запись.РегиональныйКодЛьготы;
		СохранитьРеквизиты(Запись, "ЛьготнаяСтавка", СтруктураСохраняемыхРеквизитов);
		Запись.ЛьготнаяСтавка = 0;
		
	ИначеЕсли ТекущаяНалоговаяЛьгота = 
		ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах") Тогда
		
		РегиональныйКодЛьготыУменьшениеСуммыНалогаВПроцентах = Запись.РегиональныйКодЛьготы;
		СохранитьРеквизиты(Запись, "ПроцентУменьшения", СтруктураСохраняемыхРеквизитов);
		Запись.ПроцентУменьшения = 0;
		
	ИначеЕсли ТекущаяНалоговаяЛьгота = 
		ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму") Тогда
		
		КодНалоговойЛьготыУменьшениеСуммыНалогаНаСумму = Запись.КодНалоговойЛьготы;
		СохранитьРеквизиты(Запись, "СуммаУменьшения", СтруктураСохраняемыхРеквизитов);
		Запись.СуммаУменьшения = 0;
		
	КонецЕсли;
	
	Запись.КодНалоговойЛьготы = "";
	Запись.РегиональныйКодЛьготы = "";
	
	// Восстановим значения
	Если Запись.НалоговаяЛьгота = 
		ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения") Тогда
		
		Запись.КодНалоговойЛьготы = КодНалоговойЛьготыОсвобождениеОтНалогообложения;
		Запись.РегиональныйКодЛьготы = РегиональныйКодЛьготыОсвобождениеОтНалогообложения;
		
	ИначеЕсли Запись.НалоговаяЛьгота = 
		ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки") Тогда
		
		Запись.КодНалоговойЛьготы = "20230";
		Запись.РегиональныйКодЛьготы = РегиональныйКодЛьготыСнижениеНалоговойСтавки;
		ВосстановитьРеквизиты(Запись, "ЛьготнаяСтавка", СтруктураСохраняемыхРеквизитов);
		
	ИначеЕсли Запись.НалоговаяЛьгота = 
		ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах") Тогда
		
		Запись.КодНалоговойЛьготы = "20220";
		Запись.РегиональныйКодЛьготы = РегиональныйКодЛьготыУменьшениеСуммыНалогаВПроцентах;
		ВосстановитьРеквизиты(Запись, "ПроцентУменьшения", СтруктураСохраняемыхРеквизитов);
		
	ИначеЕсли Запись.НалоговаяЛьгота = 
		ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму") Тогда
		
		Запись.КодНалоговойЛьготы = КодНалоговойЛьготыУменьшениеСуммыНалогаНаСумму;
		ВосстановитьРеквизиты(Запись, "СуммаУменьшения", СтруктураСохраняемыхРеквизитов);
		
	КонецЕсли;
	
	ТекущаяНалоговаяЛьгота = Запись.НалоговаяЛьгота;
	УстановитьДоступностьНалоговыхЛьгот(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура КодЛьготыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъекта",		"РегистрСведений");
	ПараметрыФормы.Вставить("НазваниеОбъекта",	"РегистрацияТранспортныхСредств");
	ПараметрыФормы.Вставить("НазваниеМакета",	"ЛьготыПоТранспортномуНалогу");
	Если Запись.НалоговаяЛьгота = 
			ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму") Тогда
		ПараметрыФормы.Вставить("ТекущийПериод",	'20070101');
	Иначе
		ПараметрыФормы.Вставить("ТекущийПериод",	ЭтаФорма.Запись.Период);
	КонецЕсли;

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("КодНалоговойЛьготыНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораКода", ПараметрыФормы,,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура РегиональныйКодЛьготыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОснованиеЛьготы", ЭтаФорма.Запись.РегиональныйКодЛьготы);
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьФормуРегиональныйКодЛьготыЗавершение", ЭтотОбъект);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВводаОснованияЛьготы", ПараметрыФормы, ЭтаФорма,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ОбщаяСобственностьПриИзменении(Элемент)
	
	УстановитьВидимостьДолиСобственности(ЭтаФорма);
	
	Если Запись.ОбщаяСобственность Тогда
		ВосстановитьРеквизиты(Запись, "ДоляВПравеОбщейСобственностиЧислитель, ДоляВПравеОбщейСобственностиЗнаменатель", СтруктураСохраняемыхРеквизитов);
	Иначе
		СохранитьРеквизиты(Запись, "ДоляВПравеОбщейСобственностиЧислитель, ДоляВПравеОбщейСобственностиЗнаменатель", СтруктураСохраняемыхРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговаяСтавкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	Если НавигационнаяСсылкаФорматированнойСтроки = "НалоговаяСтавкаСсылка" Тогда
		
		ОтборНабораЗаписей = Новый Структура("Период,ОКТМО");
		ЗаполнитьЗначенияСвойств(ОтборНабораЗаписей, ПараметрыСтавки);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", ОтборНабораЗаписей);
		ПараметрыФормы.Вставить("ПараметрыСтавки", ПараметрыСтавки);
		
		ОткрытьФорму("РегистрСведений.СтавкиТранспортногоНалога.ФормаСписка", ПараметрыФормы);
		
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПараметрыПоОсновномуСредству()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОсновноеСредство", Запись.ОсновноеСредство);
	Запрос.УстановитьПараметр("Организация",      Запись.Организация);
	Запрос.УстановитьПараметр("Период",           Запись.Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.Марка,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.ПостановкаНаУчетВНалоговомОргане,
	|	РегистрацияТранспортныхСредств.НалоговыйОрган,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодПоОКТМО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс,
	|	РегистрацияТранспортныхСредств.ОбщаяСобственность,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РегистрацияТранспортныхСредств.ПовышающийКоэффициент
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОсновноеСредство) КАК РегистрацияТранспортныхСредств";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		
		НастроитьФормуПоОбъекту();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОбъекту()
	
	ВыполнитьИнициализацию();
	
	УстановитьВидимость();
	УстановитьВидимостьДолиСобственности(ЭтаФорма);
	УстановитьЗаголовокНалоговойБазы(ЭтаФорма);
	ЗаполнитьНаименованиеВидаТС(ЭтаФорма);
	УстановитьДоступностьНалоговыхЛьгот(ЭтаФорма);
	НастроитьНалоговыйОрган(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьИнициализацию()
	
	Если ИнициализацияВыполнена Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализацияВыполнена = Истина;
	
	СписокКодовЕдиницИзмеренияТС = ПолучитьСписокКодовЕдиницИзмеренияТС();
	Для Каждого ЕдиницаИзмеренияТС Из СписокКодовЕдиницИзмеренияТС Цикл
		Элементы.ЕдиницаИзмеренияНалоговойБазы.СписокВыбора.Добавить(ЕдиницаИзмеренияТС.Значение, ЕдиницаИзмеренияТС.Представление);
	КонецЦикла;
	
	ЗаполнитьКодыВидовТС();
	
	Если Запись.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения Тогда
		КодНалоговойЛьготыОсвобождениеОтНалогообложения = Запись.КодНалоговойЛьготы;
		РегиональныйКодЛьготыОсвобождениеОтНалогообложения = Запись.РегиональныйКодЛьготы;
	ИначеЕсли Запись.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки Тогда
		КодНалоговойЛьготыСнижениеНалоговойСтавки = Запись.КодНалоговойЛьготы;
		РегиональныйКодЛьготыСнижениеНалоговойСтавки = Запись.РегиональныйКодЛьготы;
	ИначеЕсли Запись.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах Тогда
		КодНалоговойЛьготыУменьшениеСуммыНалогаВПроцентах = Запись.КодНалоговойЛьготы;
		РегиональныйКодЛьготыУменьшениеСуммыНалогаВПроцентах = Запись.РегиональныйКодЛьготы;
	ИначеЕсли Запись.НалоговаяЛьгота = Перечисления.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму Тогда
		КодНалоговойЛьготыУменьшениеСуммыНалогаНаСумму = Запись.КодНалоговойЛьготы;
		РегиональныйКодЛьготыУменьшениеСуммыНалогаНаСумму = Запись.РегиональныйКодЛьготы;
	КонецЕсли;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокКодовЕдиницИзмеренияТС()
	Список=Новый СписокЗначений;	
	Список.Добавить("251", НСтр("ru='л. с.'"));
	Список.Добавить("999", НСтр("ru='Кгс'"));
	Список.Добавить("181", НСтр("ru='БРТ'"));
	Список.Добавить("796", НСтр("ru='шт'"));
	
	Возврат Список;	
КонецФункции

&НаСервере
Процедура ЗаполнитьКодыВидовТС()
	
	ТекущийПоказательГод = Год(Запись.Период);
	
	Если СтарыйГод = 0
		ИЛИ (СтарыйГод >= 2012 И ТекущийПоказательГод < 2012)
		ИЛИ (СтарыйГод < 2012 И ТекущийПоказательГод >= 2012) Тогда 
		
		ТаблицаКодовВидовТС = ПолучитьКодыВидовТС(ТекущийПоказательГод);
		СтарыйГод = ТекущийПоказательГод;

		СтруктураКода = Новый Структура("Наименование, КодЕдиницыИзмерения");
		
		СоответствиеКодов = Новый Соответствие;
		Для каждого СтрокаКода Из ТаблицаКодовВидовТС Цикл
			ЗаполнитьЗначенияСвойств(СтруктураКода, СтрокаКода);
			СоответствиеКодов.Вставить(СтрокаКода.Код, Новый ФиксированнаяСтруктура(СтруктураКода));
		КонецЦикла;
		КодыВидовТС = Новый ФиксированноеСоответствие(СоответствиеКодов);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКодыВидовТС(Год)

	КодыВидовТС = Новый ТаблицаЗначений();
	КодыВидовТС.Колонки.Добавить("Код");
	КодыВидовТС.Колонки.Добавить("Наименование");
	КодыВидовТС.Колонки.Добавить("КодЕдиницыИзмерения");
	
	Макет = РегистрыСведений.РегистрацияТранспортныхСредств.ПолучитьМакет("ВидыТранспортныхСредств");
	
	Если Год < 2011 Тогда
		ТекущаяОбласть = Макет.Области.Найти("Область2007");
	ИначеЕсли Год < 2012 Тогда
		ТекущаяОбласть = Макет.Области.Найти("Область2011");
	ИначеЕсли Год < 2013 Тогда
		ТекущаяОбласть = Макет.Области.Найти("Область2012");
	Иначе
		ТекущаяОбласть = Макет.Области.Найти("Область2013");
	КонецЕсли;

	Если НЕ (ТекущаяОбласть = Неопределено) Тогда
	
		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			// Перебираем строки макета.
			КодПоказателя       = СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название            = СокрП(Макет.Область(НомерСтр, 2).Текст);
			КодЕдиницыИзмерения = СокрП(Макет.Область(НомерСтр, 3).Текст);
			
			Если КодПоказателя = "###" Тогда
				Прервать;
			ИначеЕсли ПустаяСтрока(КодПоказателя) Тогда
				Продолжить;
			Иначе
				НоваяСтрока = КодыВидовТС.Добавить();
				НоваяСтрока.Код                 = КодПоказателя;
				НоваяСтрока.Наименование        = Название;
				НоваяСтрока.КодЕдиницыИзмерения = КодЕдиницыИзмерения;
			КонецЕсли;

		КонецЦикла;
		
	КонецЕсли;
	
	Возврат КодыВидовТС;
КонецФункции

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ГруппаПараметрыРегистрации.Видимость = Запись.ВидЗаписи = Перечисления.ВидЗаписиОРегистрации.Регистрация;
	Элементы.КодПоОКАТО.Видимость                 = Год(Запись.Период) < 2014;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДолиСобственности(Форма)
	
	Форма.Элементы.ГруппаДоляВПравеНаТС.Видимость = Форма.Запись.ОбщаяСобственность;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьНалоговыхЛьгот(Форма)
	
	НалоговаяЛьгота = Форма.Запись.НалоговаяЛьгота;
	Элементы = Форма.Элементы;
	
	ОсвобождениеОтНалогообложения = 
		НалоговаяЛьгота = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения");
	
	СнижениеНалоговойСтавки = 
		НалоговаяЛьгота = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки");
	
	УменьшениеСуммыНалогаВПроцентах = 
		НалоговаяЛьгота = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах");
		
	УменьшениеСуммыНалогаНаСумму = 
		НалоговаяЛьгота = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму");
		
	Элементы.ГруппаКодНалоговойЛьготы.Видимость = 
		ОсвобождениеОтНалогообложения ИЛИ СнижениеНалоговойСтавки ИЛИ УменьшениеСуммыНалогаВПроцентах ИЛИ УменьшениеСуммыНалогаНаСумму;
	Элементы.ДекорацияКодЛьготы.Видимость = 
		ОсвобождениеОтНалогообложения ИЛИ СнижениеНалоговойСтавки ИЛИ УменьшениеСуммыНалогаВПроцентах;
	Элементы.РегиональныйКодЛьготы.Видимость = 
		ОсвобождениеОтНалогообложения ИЛИ СнижениеНалоговойСтавки ИЛИ УменьшениеСуммыНалогаВПроцентах;
	Элементы.ЛьготнаяСтавка.Видимость = СнижениеНалоговойСтавки;
	Элементы.ПроцентУменьшения.Видимость = УменьшениеСуммыНалогаВПроцентах;
	Элементы.СуммаУменьшения.Видимость = УменьшениеСуммыНалогаНаСумму;
	
	Элементы.КодНалоговойЛьготы.ТолькоПросмотр = СнижениеНалоговойСтавки ИЛИ УменьшениеСуммыНалогаВПроцентах;
	Элементы.КодНалоговойЛьготы.КнопкаВыбора = ОсвобождениеОтНалогообложения ИЛИ УменьшениеСуммыНалогаНаСумму;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокНалоговойБазы(Форма)
	
	ЕдиницаИзмеренияНалоговойБазы = Форма.Запись.ЕдиницаИзмеренияНалоговойБазы;
	
	Если ПустаяСтрока(ЕдиницаИзмеренияНалоговойБазы) Тогда
		Заголовок = НСтр("ru = 'Налоговая база'");
	ИначеЕсли ЕдиницаИзмеренияНалоговойБазы = "251" Тогда
		Заголовок = НСтр("ru = 'Мощность двигателя'");
	ИначеЕсли ЕдиницаИзмеренияНалоговойБазы = "999" Тогда
		Заголовок = НСтр("ru = 'Сила тяги'");
	ИначеЕсли ЕдиницаИзмеренияНалоговойБазы = "181" Тогда
		Заголовок = НСтр("ru = 'Валовая вместимость'");
	ИначеЕсли ЕдиницаИзмеренияНалоговойБазы = "796" Тогда
		Заголовок = НСтр("ru = 'Налоговая база'");
	Иначе
		Заголовок = НСтр("ru = 'Налоговая база'");
	КонецЕсли;
	
	Форма.Элементы.НалоговаяБаза.Заголовок = Заголовок;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьНаименованиеВидаТС(Форма)
	
	Если ПустаяСтрока(Форма.Запись.КодВидаТранспортногоСредства) Тогда
		Форма.Элементы.КодВидаТранспортногоСредства.РасширеннаяПодсказка.Заголовок = "";
	Иначе
		СтруктураКодов = Форма.КодыВидовТС.Получить(Форма.Запись.КодВидаТранспортногоСредства);
		Если СтруктураКодов = Неопределено Тогда
			Форма.Элементы.КодВидаТранспортногоСредства.РасширеннаяПодсказка.Заголовок = "";
		Иначе
			Форма.Элементы.КодВидаТранспортногоСредства.РасширеннаяПодсказка.Заголовок = СтруктураКодов.Наименование;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПериодПриИзмененииНаСервере()
	
	ЗаполнитьКодыВидовТС();
	Если ЗначениеЗаполнено(Запись.ОсновноеСредство)	И ЗначениеЗаполнено(Запись.Организация) Тогда
		ЗаполнитьПараметрыПоОсновномуСредству();
	КонецЕсли;
	
	УстановитьВидимость();
	
	ЗаполнитьСписокВыбораПовышающегоКоэффициента(Элементы.ПовышающийКоэффициент.СписокВыбора, Запись.Период);
	УстановитьТекстПодсказкиСпискаПовышающихКоэффициентов(Элементы.ПовышающийКоэффициент.РасширеннаяПодсказка.Заголовок, Запись.Период);	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Запись.ОсновноеСредство)
		И ЗначениеЗаполнено(Запись.Организация) Тогда
		
		ЗаполнитьПараметрыПоОсновномуСредству();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзСпискаКодВидаТранспортногоСредстваЗавершение(Результат, Элемент) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Если Результат.Значение <> "ФормаВыбораКодаТС" Тогда
			
			Запись.КодВидаТранспортногоСредства = Результат.Значение;
			Модифицированность = Истина;
			КодВидаТранспортногоСредстваПриИзменении(Элемент);
			
		Иначе
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ТекущийКод", Элемент.ТекстРедактирования);
			ПараметрыФормы.Вставить("Дата", Запись.Период);
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Элемент", Элемент);
			
			ОповещениеОЗакрытии = Новый ОписаниеОповещения("КодВидаТранспортногоСредстваНачалоВыбораЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			
			ОткрытьФорму("РегистрСведений.РегистрацияТранспортныхСредств.Форма.ФормаВыбораКодаВидаТранспортногоСредства", ПараметрыФормы,ЭтаФорма,,,,ОповещениеОЗакрытии);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодВидаТранспортногоСредстваНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;
	
	ВыбранноеЗначение = РезультатЗакрытия;
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		Модифицированность = Истина;
		
		Запись.КодВидаТранспортногоСредства = ВыбранноеЗначение.КодВидаТС;
		
		Если СписокВыбораКодовТС.НайтиПоЗначению(ВыбранноеЗначение.КодВидаТС) = Неопределено Тогда
			
			СписокВыбораКодовТС.Вставить(0, ВыбранноеЗначение.КодВидаТС, ВыбранноеЗначение.КодВидаТС + " " + ВыбранноеЗначение.Наименование); 
			
			ЗначениеДляОткрытияФормыВыбора = СписокВыбораКодовТС.НайтиПоЗначению("ФормаВыбораКодаТС");
			Если ЗначениеДляОткрытияФормыВыбора <> Неопределено Тогда
				СписокВыбораКодовТС.Удалить(ЗначениеДляОткрытияФормыВыбора);
			КонецЕсли;
			
			МаксимальноеКоличество = 6;
			КоличествоЗначений     = СписокВыбораКодовТС.Количество();
			
			Если КоличествоЗначений > МаксимальноеКоличество Тогда
				Для ОбратныйИндекс = 1 По КоличествоЗначений Цикл
					ЗначениеСписка = СписокВыбораКодовТС[КоличествоЗначений - ОбратныйИндекс];
					Если СписокВыбораКодовТС.Индекс(ЗначениеСписка) > (МаксимальноеКоличество - 1) Тогда
						СписокВыбораКодовТС.Удалить(ЗначениеСписка);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
		КодВидаТранспортногоСредстваПриИзменении(Элемент);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЭкологическийКлассНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	КодЭкологическогоКласса = РезультатЗакрытия;
	
	Если КодЭкологическогоКласса <> Неопределено Тогда
		Запись.ЭкологическийКласс = КодЭкологическогоКласса;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПустоеЗначениеТипа(ЗаданныйТип) Экспорт

	Если ЗаданныйТип = Тип("Число") Тогда
		Возврат 0;

	ИначеЕсли ЗаданныйТип = Тип("Строка") Тогда
		Возврат "";

	ИначеЕсли ЗаданныйТип = Тип("Дата") Тогда
		Возврат '00010101000000';

	ИначеЕсли ЗаданныйТип = Тип("Булево") Тогда
		Возврат Ложь;

	Иначе
		Возврат Новый (ЗаданныйТип);

	КонецЕсли;

КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Процедура СохранитьРеквизиты(Объект, СписокРеквизитов, СтруктураСохраняемыхРеквизитов)
	
	ВременнаяСтруктура = Новый Структура(СписокРеквизитов);
	Для каждого КлючИЗначение Из ВременнаяСтруктура Цикл
		СтруктураСохраняемыхРеквизитов.Вставить(КлючИЗначение.Ключ, Объект[КлючИЗначение.Ключ]);
		Объект[КлючИЗначение.Ключ] = ПустоеЗначениеТипа(ТипЗнч(Объект[КлючИЗначение.Ключ]));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВосстановитьРеквизиты(Объект, СписокРеквизитов, СтруктураСохраняемыхРеквизитов)
	
	ВременнаяСтруктура = Новый Структура(СписокРеквизитов);
	Для каждого КлючИЗначение Из ВременнаяСтруктура Цикл
		Если СтруктураСохраняемыхРеквизитов.Свойство(КлючИЗначение.Ключ) Тогда
			Объект[КлючИЗначение.Ключ] = СтруктураСохраняемыхРеквизитов[КлючИЗначение.Ключ]
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КодНалоговойЛьготыНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		Запись.КодНалоговойЛьготы = РезультатЗакрытия;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРегиональныйКодЛьготыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Запись.РегиональныйКодЛьготы = Результат;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьНалоговыйОрган(Форма)
	
	ПоМестуНахожденияОрганизации = Форма.Запись.ПостановкаНаУчетВНалоговомОргане = 
		ПредопределенноеЗначение("Перечисление.ПостановкаНаУчетВНалоговомОргане.ПоМестуНахожденияОрганизации");
		
	Форма.Элементы.ГруппаНалоговыйОрганПоМестуНахожденияОрганизации.Видимость = ПоМестуНахожденияОрганизации;
	Форма.Элементы.ГруппаДругойНалоговыйОрган.Видимость = НЕ ПоМестуНахожденияОрганизации;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокФормы(Форма, НоваяЗапись = Ложь)
	
	Форма.АвтоЗаголовок = Ложь;
	
	Создание = ?(НоваяЗапись, НСтр("ru = ' (создание)'"), "");
	
	Если Форма.Запись.ВидЗаписи = ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.Регистрация") Тогда
		Форма.Заголовок = СтрШаблон(НСтр("ru = 'Регистрация транспортного средства%1'"), Создание);
	Иначе
		Форма.Заголовок = СтрШаблон(НСтр("ru = 'Снятие с регистрационного учета%1'"), Создание);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбораПовышающегоКоэффициента(СписокВыбора, Период)
	
	СписокВыбора.Очистить();
	
	Если Год(Период) >= 2018 Тогда
		
		СписокВыбора.Добавить(0, "-");
		СписокВыбора.Добавить(1.1, "1,1");
		СписокВыбора.Добавить(2, "2");
		СписокВыбора.Добавить(3, "3");
		
	Иначе
				
		СписокВыбора.Добавить(0, "-");
		СписокВыбора.Добавить(1.1, "1,1");
		СписокВыбора.Добавить(1.3, "1,3");
		СписокВыбора.Добавить(1.5, "1,5");
		СписокВыбора.Добавить(2, "2");
		СписокВыбора.Добавить(3, "3");
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстПодсказкиСпискаПовышающихКоэффициентов(Подсказка, Период)
	
	ЖирныйШрифт = Новый Шрифт(,, Истина);
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
		НСтр("ru='Исчисление суммы налога производится с учетом повышающего коэффициента:
		|'")));
		
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока("1,1", ЖирныйШрифт));
	
	Если Год(Период) >= 2018 Тогда
		
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru=' - в отношении легковых автомобилей средней стоимостью от 3 миллионов до 5 миллионов рублей включительно, с года выпуска которых прошло не более 3 лет;
		|'")));
		
	Иначе
		
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр(
			"ru=' - в отношении легковых автомобилей средней стоимостью от 3 миллионов до 5 миллионов рублей включительно, с года выпуска которых прошло от 2 до 3 лет;
			|'")));
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока("1,3", ЖирныйШрифт));
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр(
			"ru=' - в отношении легковых автомобилей средней стоимостью от 3 миллионов до 5 миллионов рублей включительно, с года выпуска которых прошло от 1 года до 2 лет;
			|'")));
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока("1,5", ЖирныйШрифт));
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр(
			"ru=' - в отношении легковых автомобилей средней стоимостью от 3 миллионов до 5 миллионов рублей включительно, с года выпуска которых прошло не более 1 года;
			|'")));
		
	КонецЕсли;
	
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока("2", ЖирныйШрифт));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр(
		"ru=' - в отношении легковых автомобилей средней стоимостью от 5 миллионов до 10 миллионов рублей включительно, с года выпуска которых прошло не более 5 лет;
		|'")));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока("3", ЖирныйШрифт));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр(
		"ru=' - в отношении легковых автомобилей средней стоимостью от 10 миллионов до 15 миллионов рублей включительно, с года выпуска которых прошло не более 10 лет;
		|'")));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока("3", ЖирныйШрифт));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр(
		"ru=' - в отношении легковых автомобилей средней стоимостью от 15 миллионов рублей, с года выпуска которых прошло не более 20 лет.
		|'")));
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр(
		"ru='При этом исчисление сроков начинается с года выпуска соответствующего легкового автомобиля.
		|Порядок расчета средней стоимости легковых автомобилей определяется федеральным органом исполнительной власти, осуществляющим функции по выработке государственной политики и нормативно-правовому регулированию в сфере торговли. Перечень легковых автомобилей средней стоимостью от 3 миллионов рублей размещается ежегодно не позднее 1 марта на официальном сайте указанного органа в информационно-телекоммуникационной сети ""Интернет""'")));
	
	Подсказка = Новый ФорматированнаяСтрока(МассивСтрок);	
	
КонецПроцедуры	

#КонецОбласти
