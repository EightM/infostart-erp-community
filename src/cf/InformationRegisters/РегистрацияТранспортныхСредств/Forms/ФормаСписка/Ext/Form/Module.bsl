
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("ЕИ251", НСтр("ru = 'л. с'"));
	Список.Параметры.УстановитьЗначениеПараметра("ЕИ999", НСтр("ru = 'Кгс'"));
	Список.Параметры.УстановитьЗначениеПараметра("ЕИ181", НСтр("ru = 'БРТ'"));
	Список.Параметры.УстановитьЗначениеПараметра("ЕИ796", НСтр("ru = 'шт'"));
	
	//НастройкиУчетаФормаСписка.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	//
	//Если Параметры.Отбор.Свойство("ОсновноеСредство") И ЗначениеЗаполнено(Параметры.Отбор.ОсновноеСредство) Тогда
	//	Элементы.ОсновноеСредство.Видимость = Ложь;
	//КонецЕсли;
	
КонецПроцедуры

//&НаКлиенте
//Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
//	
//	НастройкиУчетаФормаСпискаКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
//	
//КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Отказ = Истина;

	Если Копирование Тогда
		Возврат;
	КонецЕсли;

	СписокЗначенийВидыЗаписей = Новый СписокЗначений;
	СписокЗначенийВидыЗаписей.Добавить(ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.Регистрация"), НСтр("ru = 'Регистрация'"));
	СписокЗначенийВидыЗаписей.Добавить(ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.СнятиеСРегистрационногоУчета"), НСтр("ru = 'Снятие с учета'"));

	ОповещениеОВыбореОперации = Новый ОписаниеОповещения("ВыборИзМенюЗавершение",ЭтотОбъект);

	ПоказатьВыборИзМеню(ОповещениеОВыбореОперации, СписокЗначенийВидыЗаписей);

КонецПроцедуры

//&НаСервере
//Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
//	
//	НастройкиУчетаФормаСписка.СписокПередЗагрузкойПользовательскихНастроекНаСервере(ЭтотОбъект, Элемент, Настройки);
//	
//КонецПроцедуры

&НаКлиенте
Процедура СписокПослеУдаления(Элемент)
	Оповестить("ИзмененаИнформацияОС");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьРегистрация(Команда)
	
	ОткрытьФормуРегистрации();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСнятиеСРегистрации(Команда)
	
	ОткрытьФормуСнятияСУчета();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыборИзМенюЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Если ВыбранныйЭлемент.Значение = ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.Регистрация") Тогда
			ОткрытьФормуРегистрации();			
		ИначеЕсли ВыбранныйЭлемент.Значение = ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.СнятиеСРегистрационногоУчета") Тогда
			ОткрытьФормуСнятияСУчета();	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЗначенияЗаполнения(КоллекцияОтборов, ЗначенияЗаполнения)

	Для каждого ЭлементОтбора Из КоллекцияОтборов Цикл
	
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") 
			И ЭлементОтбора.Использование 
			И ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			
			НаименованиеОтбора = Строка(ЭлементОтбора.ЛевоеЗначение);
			Если СтрНайти(НаименованиеОтбора, ".") = 0 Тогда
				ЗначенияЗаполнения.Вставить(НаименованиеОтбора, ЭлементОтбора.ПравоеЗначение);
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") 
			И ЭлементОтбора.Использование 
			И ЭлементОтбора.ТипГруппы <> ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе Тогда
			
			ДобавитьЗначенияЗаполнения(ЭлементОтбора.Элементы, ЗначенияЗаполнения);
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ЗначенияЗаполненияДинамическогоСписка(Знач КомпоновщикНастроек) Экспорт
	
	ЗначенияЗаполнения = Новый Структура;
	
	НастройкиСписка = КомпоновщикНастроек.ПолучитьНастройки();
	ДобавитьЗначенияЗаполнения(НастройкиСписка.Отбор.Элементы, ЗначенияЗаполнения);
	
	Возврат ЗначенияЗаполнения;

КонецФункции 

&НаКлиенте
Процедура ОткрытьФормуРегистрации()
	
	ЗначенияЗаполнения = ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	ЗначенияЗаполнения.Вставить("ВидЗаписи", ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.Регистрация"));	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("РегистрСведений.РегистрацияТранспортныхСредств.ФормаЗаписи", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСнятияСУчета()
	
	ЗначенияЗаполнения = ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	ЗначенияЗаполнения.Вставить("ВидЗаписи", ПредопределенноеЗначение("Перечисление.ВидЗаписиОРегистрации.СнятиеСРегистрационногоУчета"));
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("РегистрСведений.РегистрацияТранспортныхСредств.ФормаЗаписи", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти