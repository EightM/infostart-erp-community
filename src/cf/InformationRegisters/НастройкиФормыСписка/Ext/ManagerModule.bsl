Функция ИндексПользователя(ТекущийПользователь, ВыборкаПользователь)
	Если НЕ ЗначениеЗаполнено(ВыборкаПользователь) Тогда Возврат 0; КонецЕсли;
	Если ВыборкаПользователь.ЭтоГруппа И ТекущийПользователь.ПринадлежитЭлементу(ВыборкаПользователь) Тогда
		Возврат ВыборкаПользователь.Уровень()+1;
	ИначеЕсли ВыборкаПользователь=ТекущийПользователь Тогда
		Возврат 1000;
	КонецЕсли;
	Возврат Неопределено; 
КонецФункции

Функция НайтиНастройку(Знач ИсточникДанных) Экспорт
	Если ТипЗнч(ИсточникДанных)=Тип("Строка") Тогда //Например: Документ.ЗаказПокупателя
		ИсточникДанных=УправлениеКонфигурациейСервер.ИдентификаторОбъектовМетаданныхСсылка(ИсточникДанных);
	КонецЕсли;

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ИсточникДанных", ИсточникДанных);
	Запрос.Текст="
	|ВЫБРАТЬ 
	|Ложь Как ИсключитьСтроку,
	|500 Как ИндексПользователя,
	|*
	|ИЗ
	|	РегистрСведений.НастройкиФормыСписка КАК Настройки
	|ГДЕ
	|	Настройки.ИсточникДанных = &ИсточникДанных
	|";
	тзПравила=Запрос.Выполнить().Выгрузить();
	Если тзПравила.Количество()=0 Тогда Возврат Неопределено; КонецЕсли;

	Для Каждого СтрокаКоллекции Из тзПравила Цикл
		ИндексПользователя=ИндексПользователя(ПараметрыСеанса.ТекущийПользователь, СтрокаКоллекции.Пользователь);
		Если ИндексПользователя=Неопределено Тогда СтрокаКоллекции.ИсключитьСтроку=Истина; Продолжить; КонецЕсли; 
		СтрокаКоллекции.ИндексПользователя=ИндексПользователя;		
	КонецЦикла;

	МассивСтрок=тзПравила.НайтиСтроки(Новый Структура("ИсключитьСтроку", Ложь));
	Если МассивСтрок.Количество()=0 Тогда Возврат Неопределено; КонецЕсли;

	тзПравила=тзПравила.Скопировать(МассивСтрок);
	тзПравила.Сортировать("ИндексПользователя Убыв");

	СтруктураВозврата=Новый Структура;
	Для каждого мдРесурс Из Метаданные.РегистрыСведений["НастройкиФормыСписка"].Ресурсы Цикл
		СтруктураВозврата.Вставить(мдРесурс.Имя, тзПравила[0][мдРесурс.Имя]);
	КонецЦикла;

	Возврат СтруктураВозврата;
КонецФункции

Процедура ВыполнитьНастройку(ДинамическийСписок, ЭтаФорма, Знач ИсточникДанных="", ИмяДинамическогоСписка="ДинамическийСписок") Экспорт
	Если ПустаяСтрока(ИсточникДанных) Тогда
		ИсточникДанных=ДинамическийСписок.ОсновнаяТаблица;
	КонецЕсли;

	//Управление закладками (добавляем подвиды)
	Если НЕ ЭтаФорма.Элементы.Найти("Страницы")=Неопределено И (Найти(ЭтаФорма.ИмяФормы, "Документ.") > 0 ИЛИ Найти(ЭтаФорма.ИмяФормы, "БизнесПроцесс.") > 0 ИЛИ Найти(ЭтаФорма.ИмяФормы, "Зачада.") > 0 ) Тогда
	//Если НЕ ЭтаФорма.Элементы.Найти("Реквизит_СтраницаВсе")=Неопределено Тогда
		Запрос=Новый Запрос;
		Запрос.УстановитьПараметр("Владелец", УправлениеКонфигурациейСервер.ИдентификаторОбъектовМетаданныхСсылка(ИсточникДанных));
		Запрос.Текст="
		|ВЫБРАТЬ
		|	ИсточникДанных.Ссылка КАК Подвид,
		|	ИсточникДанных.Наименование 
		|ИЗ
		|	Справочник.Подвиды КАК ИсточникДанных
		|ГДЕ
		|	ИсточникДанных.Владелец = &Владелец
		|УПОРЯДОЧИТЬ ПО
		|	ИсточникДанных.Порядок
		|";
		Выборка=Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			стрИмя=МетаконфигураторСервер.АтрибутВСтроку(Выборка.Подвид, "Подвиды");

			Страница=ЭтаФорма.Элементы.Добавить(стрИмя, Тип("ГруппаФормы"), ЭтаФорма.Элементы.Страницы);
			Страница.Заголовок=СокрЛП(Выборка.Наименование);
			Страница.РазрешитьИзменениеСостава=Истина;

			А=ЭтаФорма.Элементы.Добавить("Реквизит_"+стрИмя, Тип("ПолеФормы"), ЭтаФорма.Элементы[стрИмя]);
			А.ПутьКДанным="РеквизитВидимость";
			А.Заголовок=СокрЛП(Выборка.Подвид);
		КонецЦикла;				
	КонецЕсли; 
	
	ДинамическийСписок.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("ТекстЗапроса", ДинамическийСписок.ТекстЗапроса); //**

	//Настройки=МетаконфигураторСервер.НастройкиПоПравилам(ИсточникДанных, "НастройкиФормыСписка");
	Настройки=НайтиНастройку(ИсточникДанных);
	Если Настройки=Неопределено Тогда Возврат; КонецЕсли;

	СтруктураНастроек=Настройки.Настройка.Получить();
	Если НЕ ТипЗнч(СтруктураНастроек)=Тип("Структура") Тогда Возврат; КонецЕсли; 

	ТекстЗапроса=Настройки.ТекстЗапроса;
	Если Не ПустаяСтрока(ТекстЗапроса) Тогда
		ДинамическийСписок.ПроизвольныйЗапрос=Истина;
		ДинамическийСписок.ТекстЗапроса=ТекстЗапроса;

		СтруктураПараметровЗапроса=Настройки.Параметры.Получить();
		Если ТипЗнч(СтруктураПараметровЗапроса)=Тип("Структура") Тогда
			Для каждого СтрокаКоллекции Из СтруктураПараметровЗапроса Цикл
				Значение=СтрокаКоллекции.Значение;
				Если СтрокаКоллекции.Ключ="ТекущийПользователь" И НЕ ЗначениеЗаполнено(Значение) Тогда
					Значение=ПараметрыСеанса.ТекущийПользователь;
				КонецЕсли; 
				ДинамическийСписок.Параметры.УстановитьЗначениеПараметра(СтрокаКоллекции.Ключ, Значение);
			КонецЦикла;
		КонецЕсли;
	Иначе
		ДинамическийСписок.ПроизвольныйЗапрос=Ложь;
        ДинамическийСписок.ТекстЗапроса="
		|ВЫБРАТЬ
		|	*
		|ИЗ
		|	"+ИсточникДанных+" КАК ИсточникДанных
		|";		
	КонецЕсли;
	ДинамическийСписок.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("ТекстЗапроса", ДинамическийСписок.ТекстЗапроса);
	ДинамическийСписок.ОсновнаяТаблица=ИсточникДанных;

	тзЭлементы=Настройки.Элементы.Получить();
	Если ТипЗнч(тзЭлементы)=Тип("ТаблицаЗначений") Тогда
		Для каждого СтрокаКоллекции Из тзЭлементы Цикл
			стрАтрибут=ИмяДинамическогоСписка+СтрЗаменить(СтрокаКоллекции.Идентификатор, ".", "_");
			//Если НЕ ЭтаФорма.Элементы.Найти(стрАтрибут)=Неопределено Тогда Продолжить; КонецЕсли;
			Если НЕ ЭтаФорма.Элементы[ИмяДинамическогоСписка].ПодчиненныеЭлементы.Найти(стрАтрибут)=Неопределено Тогда Продолжить; КонецЕсли;
			Если Найти(стрАтрибут, "_[") > 0 Тогда
				стрАтрибут=стрЗаменить(стрАтрибут, "_[", "");
				стрАтрибут=стрЗаменить(стрАтрибут, "]", "");
				стрАтрибут=стрЗаменить(стрАтрибут, " ", "");
			КонецЕсли;
			Элемент=ЭтаФорма.Элементы.Добавить(стрАтрибут, Тип("ПолеФормы"), ЭтаФорма.Элементы[ИмяДинамическогоСписка]);
    		Элемент.Вид=ВидПоляФормы.ПолеВвода; 
    		Элемент.ПутьКДанным=ИмяДинамическогоСписка+"."+СтрокаКоллекции.Идентификатор;
			Элемент.Заголовок=СтрокаКоллекции.Представление;
		КонецЦикла;
	КонецЕсли;

	ДинамическийСписок.ДинамическоеСчитываниеДанных=Настройки.ДинамическоеСчитываниеДанных;

	//Настройки динамического списка (по умолчанию)
	Попытка
		//Список.КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураНастроек.Настройки);
		Для каждого СтрокаКоллекции Из СтруктураНастроек.Настройки.Отбор.Элементы Цикл
			ДинамическиеСпискиСервер.СоздатьЭлементОтбора(ДинамическийСписок.Отбор.Элементы, СтрокаКоллекции)
		КонецЦикла;
		
		Для каждого СтрокаКоллекции Из СтруктураНастроек.Настройки.УсловноеОформление.Элементы Цикл
			//НовыйЭлемент=ДинамическийСписок.УсловноеОформление.Элементы.Добавить(); //Не работает...
			НовыйЭлемент=ДинамическийСписок.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйЭлемент, СтрокаКоллекции);
			Для каждого СтрокаКоллекции1 Из СтрокаКоллекции.Оформление.Элементы Цикл
				ЗаполнитьЗначенияСвойств(НовыйЭлемент.Оформление.Элементы.Найти(СтрокаКоллекции1.Параметр), СтрокаКоллекции1);
			КонецЦикла;
			Для каждого СтрокаКоллекции1 Из СтрокаКоллекции.Отбор.Элементы Цикл
				ЗаполнитьЗначенияСвойств(НовыйЭлемент.Отбор.Элементы.Добавить(Тип(СтрокаКоллекции1)), СтрокаКоллекции1);
			КонецЦикла;
			Для каждого СтрокаКоллекции1 Из СтрокаКоллекции.Поля.Элементы Цикл
				ЗаполнитьЗначенияСвойств(НовыйЭлемент.Поля.Элементы.Добавить(), СтрокаКоллекции1);
			КонецЦикла;
		КонецЦикла;
		
		Для каждого СтрокаКоллекции Из СтруктураНастроек.Настройки.Порядок.Элементы Цикл
			ЗаполнитьЗначенияСвойств(ДинамическийСписок.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных")), СтрокаКоллекции);
		КонецЦикла;
		
		Для каждого СтрокаКоллекции Из СтруктураНастроек.Настройки.Выбор.Элементы Цикл
			ЗаполнитьЗначенияСвойств(ДинамическийСписок.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных")), СтрокаКоллекции);
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	//Агоритм (выполняемый модуль)
	стрВыполняемыйМодуль=СокрЛП(Настройки.ВыполняемыйМодуль);
	Если НЕ ПустаяСтрока(стрВыполняемыйМодуль) Тогда
		СтруктураПараметров=Настройки.Параметры.Получить();
		Если ТипЗнч(СтруктураПараметров)=Тип("Структура") Тогда
			Для каждого СтрокаКоллекции Из СтруктураПараметров Цикл
				стрВыполняемыйМодуль=СтрЗаменить(стрВыполняемыйМодуль, "{"+СтрокаКоллекции.Ключ+"}", "СтруктураПараметров["""+СтрокаКоллекции.Ключ+"""]");
			КонецЦикла;
		КонецЕсли;
		Выполнить(стрВыполняемыйМодуль);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Заполнение по умолчанию

Функция НастройкаДинамическогоСписка(ИмяОсновнойТаблицы)
	СхемаКомпоновкиДанных=Новый СхемаКомпоновкиДанных;
	ИсточникДанных=СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя="ИсточникДанных1";
	ИсточникДанных.ТипИсточникаДанных="Local";
	
	НаборДанныхЗапрос=СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанныхЗапрос.Имя="НаборДанных";
	НаборДанныхЗапрос.ИсточникДанных="ИсточникДанных1";	
	НаборДанныхЗапрос.Запрос="
	|ВЫБРАТЬ
	| *
	|ИЗ
	|	"+ИмяОсновнойТаблицы+" КАК ИсточникДанных
	|";

	КомпоновщикНастроек=Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	Возврат КомпоновщикНастроек.ПолучитьНастройки();
КонецФункции

Процедура ЗаполнитьПоУмолчанию(стрТип="Документ") Экспорт
	Таб=РегистрыСведений.НастройкиФормыСписка.ПолучитьМакет("Макет"+стрТип);	
	Для ъ=1 По Таб.ВысотаТаблицы Цикл
		стрВид=СокрЛП(Таб.Область(ъ, 1, ъ, 1).Текст);
		стрИсточникДанных=стрТип+"_"+стрВид;

		Попытка ИсточникДанных=УправлениеКонфигурациейСервер.ИдентификаторОбъектовМетаданныхСсылка(стрИсточникДанных);
		Исключение Продолжить;
		КонецПопытки;

		Попытка
			Если стрТип="Документ" Тогда
				мдОбъект=Метаданные.Документы[стрВид];
			ИначеЕсли стрТип="Справочник" Тогда
				мдОбъект=Метаданные.Справочники[стрВид];
			ИначеЕсли стрТип="ЖурналДокументов" Тогда
				мдОбъект=Метаданные.ЖурналыДокументов[стрВид];
			ИначеЕсли стрТип="ПланСчетов" Тогда
				мдОбъект=Метаданные.ПланыСчетов[стрВид];
			ИначеЕсли стрТип="Задача" Тогда
				мдОбъект=Метаданные.Задачи[стрВид];
			КонецЕсли;
		Исключение
			Продолжить;
		КонецПопытки; 

		МенеджерЗаписи=РегистрыСведений.НастройкиФормыСписка.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ИсточникДанных=ИсточникДанных;
		МенеджерЗаписи.Пользователь=Справочники.Пользователи.ПустаяСсылка();
		МенеджерЗаписи.Прочитать();
		Если МенеджерЗаписи.Выбран() Тогда Продолжить; КонецЕсли;

		тзЭлементы=Новый ТаблицаЗначений;
		тзЭлементы.Колонки.Добавить("Идентификатор");
		тзЭлементы.Колонки.Добавить("Представление");

		стрРеквизиты=стрЗаменить(СокрЛП(Таб.Область(ъ, 2, ъ, 2).Текст), " ", "");
		
		МассвСтрок=СтрРазделить(стрРеквизиты, ",");
		Для каждого ИмяРеквизита Из МассвСтрок Цикл
			НоваяСтрока=тзЭлементы.Добавить();
			НоваяСтрока.Идентификатор=СокрЛП(ИмяРеквизита);
			Если НоваяСтрока.Идентификатор="ВалютаДокумента" Тогда
				НоваяСтрока.Представление="Валюта"; Продолжить;
			КонецЕсли;
			
			Если стрТип="ЖурналДокументов" Тогда
				Если мдОбъект.Графы.Найти(СокрЛП(ИмяРеквизита))=Неопределено Тогда
					НоваяСтрока.Представление=СокрЛП(ИмяРеквизита);
				Иначе
					НоваяСтрока.Представление=мдОбъект.Графы[ИмяРеквизита].Представление();
				КонецЕсли;
			ИначеЕсли стрТип="ПланСчетов" Тогда
				Если НЕ мдОбъект.ПризнакиУчета.Найти(СокрЛП(ИмяРеквизита))=Неопределено Тогда
					НоваяСтрока.Представление=мдОбъект.ПризнакиУчета[ИмяРеквизита].Представление();
				ИначеЕсли НЕ мдОбъект.ПризнакиУчетаСубконто.Найти(СокрЛП(ИмяРеквизита))=Неопределено Тогда
					НоваяСтрока.Представление=мдОбъект.ПризнакиУчетаСубконто[ИмяРеквизита].Представление();
				ИначеЕсли мдОбъект.Реквизиты.Найти(СокрЛП(ИмяРеквизита))=Неопределено Тогда
					НоваяСтрока.Представление=СокрЛП(ИмяРеквизита);					
				Иначе
					НоваяСтрока.Представление=мдОбъект.Реквизиты[ИмяРеквизита].Представление();
				КонецЕсли;				
			//***ИначеЕсли стрТип="Задача" Тогда
			Иначе
				//ПризнакиУчетаСубконто
				Если мдОбъект.Реквизиты.Найти(СокрЛП(ИмяРеквизита))=Неопределено Тогда
					НоваяСтрока.Представление=СокрЛП(ИмяРеквизита);
				Иначе
					НоваяСтрока.Представление=мдОбъект.Реквизиты[ИмяРеквизита].Представление();
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;

		СтруктураНастроек=Новый Структура;
		СтруктураНастроек.Вставить("Настройки", НастройкаДинамическогоСписка(СтрЗаменить(стрИсточникДанных, "_", ".")));

		МенеджерЗаписи.ИсточникДанных=ИсточникДанных;
		МенеджерЗаписи.Пользователь=Справочники.Пользователи.ПустаяСсылка();
		МенеджерЗаписи.Настройка=Новый ХранилищеЗначения(СтруктураНастроек);
		МенеджерЗаписи.ДинамическоеСчитываниеДанных=Истина;
		МенеджерЗаписи.Элементы=Новый ХранилищеЗначения(тзЭлементы);
		МенеджерЗаписи.ТекстЗапроса=СокрЛП(Таб.Область(ъ, 3, ъ, 3).Текст);
		МенеджерЗаписи.Записать();
	КонецЦикла;
КонецПроцедуры