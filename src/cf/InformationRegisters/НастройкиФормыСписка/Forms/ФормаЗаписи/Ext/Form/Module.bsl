&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="КонструкторЗапроса" Тогда
		КонструкторЗапроса=Новый КонструкторЗапроса;
		Если НЕ ПустаяСтрока(Запись.ТекстЗапроса) Тогда
			КонструкторЗапроса.Текст=Запись.ТекстЗапроса;
		Иначе
			КонструкторЗапроса.Текст="
			|ВЫБРАТЬ
			|	*
			|ИЗ
			|	"+ИмяОсновнойТаблицы()+" КАК ИсточникДанных
			|";
		КонецЕсли;
		КонструкторЗапроса.Показать(Новый ОписаниеОповещения("КонструкторЗапроса_Окончание", ЭтотОбъект));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КонструкторЗапроса_Окончание(Параметр1, Параметр2) Экспорт
	Если Не ЗначениеЗаполнено(Параметр1) Тогда Возврат; КонецЕсли; 
	Запись.ТекстЗапроса=Параметр1;
	ДинамическийСписок_ИнициализацияНастроек();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя="ГруппаРезультат" Тогда
		ДинамическийСписок_ОбновитьЭлементы();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ИмяОсновнойТаблицы()
	Если ПустаяСтрока(Запись.ИсточникДанных.ПолноеИмя) Тогда
		Возврат стрЗаменить(Справочники.ИдентификаторыОбъектовМетаданных.ПолучитьИмяПредопределенного(Запись.ИсточникДанных), "_", ".");
	КонецЕсли;
	Возврат СокрЛП(Запись.ИсточникДанных.ПолноеИмя); 
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура АтрибутФормы_ПриИзменении(Элемент)
	АтрибутФормы_ПриИзмененииНаСервере(Элемент.Имя);	
КонецПроцедуры

&НаСервере
Процедура АтрибутФормы_ПриИзмененииНаСервере(стрИмя)
	Если стрИмя="ИсточникДанных" Тогда		
		ДинамическийСписок_ИнициализацияНастроек();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов таблицы формы "Динамический список"

&НаСервере
Процедура ДинамическийСписок_ОбновитьЭлементы()
	//Удалим все элементы из динамического списка
	МассивЭлементов=Новый Массив;
	Для каждого СтрокаКоллекции Из Элементы.ДинамическийСписок.ПодчиненныеЭлементы Цикл
		МассивЭлементов.Добавить(СтрокаКоллекции);		
	КонецЦикла;
	Для каждого СтрокаКоллекции Из МассивЭлементов Цикл
		Элементы.Удалить(СтрокаКоллекции);
	КонецЦикла;

	Для каждого СтрокаКоллекции Из тзПараметры Цикл
		ДинамическийСписок.Параметры.УстановитьЗначениеПараметра(СтрокаКоллекции.Ключ, СтрокаКоллекции.Значение);
	КонецЦикла;

	//Добавим выбранные элементы в динамический список
	Для каждого СтрокаКоллекции Из тзЭлементы Цикл
		Элемент=Элементы.Добавить(СтрЗаменить(СтрокаКоллекции.Идентификатор, ".", "_"), Тип("ПолеФормы"), ЭтаФорма.Элементы.ДинамическийСписок); 
		Элемент.Вид=ВидПоляФормы.ПолеВвода; 
		Элемент.ПутьКДанным="ДинамическийСписок."+СтрокаКоллекции.Идентификатор;
		Элемент.Заголовок=СтрокаКоллекции.Представление;
	КонецЦикла;		
КонецПроцедуры
 
&НаСервере
Процедура ДинамическийСписок_ИнициализацияНастроек()
	Попытка
		СхемаКомпоновкиДанных=Новый СхемаКомпоновкиДанных;
		ИсточникДанных=СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
		ИсточникДанных.Имя="ИсточникДанных1";
		ИсточникДанных.ТипИсточникаДанных="Local";
		
		НаборДанныхЗапрос=СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
		НаборДанныхЗапрос.Имя="НаборДанных";
		НаборДанныхЗапрос.ИсточникДанных="ИсточникДанных1";

		Если НЕ ПустаяСтрока(Запись.ТекстЗапроса) Тогда
			НаборДанныхЗапрос.Запрос=Запись.ТекстЗапроса;
		Иначе
			НаборДанныхЗапрос.Запрос="
			|ВЫБРАТЬ
			| *
			|ИЗ
			|	"+ИмяОсновнойТаблицы()+" КАК ИсточникДанных
			|";
		КонецЕсли;

		ДинамическийСписок.ПроизвольныйЗапрос=Истина;
		ДинамическийСписок.ОсновнаяТаблица=ИмяОсновнойТаблицы();
		ДинамическийСписок.ТекстЗапроса=НаборДанныхЗапрос.Запрос;
		ДинамическийСписок.КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
		ДинамическийСписок.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));

		//*** ДинамическийСписок.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("ТекстЗапроса", ДинамическийСписок.ТекстЗапроса);
		ДинамическийСписок_ОбновитьЭлементы();
	Исключение
	КонецПопытки;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов таблицы формы "Элементы"

&НаКлиенте
Процедура тзЭлементы_Перетаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	Если Не ТипЗнч(ПараметрыПеретаскивания.Значение)=Тип("Массив") Тогда Возврат; КонецЕсли;

	Для каждого СтрокаКоллекции Из ПараметрыПеретаскивания.Значение Цикл
		НоваяСтрока=тзЭлементы.Добавить();
		НоваяСтрока.Идентификатор=СокрЛП(СтрокаКоллекции.Поле);
		НоваяСтрока.Представление=СокрЛП(СтрокаКоллекции.Заголовок);
	КонецЦикла; 
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗаписьСуществует И НЕ Запись.ИсточникДанных.Пустая() Тогда
		ДинамическийСписок_ИнициализацияНастроек();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	тзБуфер=ТекущийОбъект.Элементы.Получить();
	Если ТипЗнч(тзБуфер)=Тип("ТаблицаЗначений") Тогда
		тзЭлементы.Загрузить(тзБуфер);
	КонецЕсли;

	ДинамическийСписок_ИнициализацияНастроек();

	СтруктураНастроек=ТекущийОбъект.Настройка.Получить();
	Если ТипЗнч(СтруктураНастроек)=Тип("Структура") Тогда
		Попытка ДинамическийСписок.КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураНастроек.Настройки);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	СтруктураПараметров=ТекущийОбъект.Параметры.Получить();
	Если ТипЗнч(СтруктураПараметров)=Тип("Структура") Тогда
		Для каждого СтрокаКоллекции Из СтруктураПараметров Цикл
			ЗаполнитьЗначенияСвойств(тзПараметры.Добавить(), СтрокаКоллекции);
		КонецЦикла;
	КонецЕсли;

	ЗаписьСуществует=Истина;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СтруктураНастроек=Новый Структура;
	СтруктураНастроек.Вставить("Настройки", ДинамическийСписок.КомпоновщикНастроек.ПолучитьНастройки());

	ТекущийОбъект.Настройка=Новый ХранилищеЗначения(СтруктураНастроек);
	
	//Параметры
	СтруктураПараметров=Новый Структура;
	Для каждого СтрокаКоллекции Из тзПараметры Цикл
		СтруктураПараметров.Вставить(СтрокаКоллекции.Ключ, СтрокаКоллекции.Значение);
	КонецЦикла;
	ТекущийОбъект.Параметры=?(СтруктураПараметров.Количество()=0, Неопределено, Новый ХранилищеЗначения(СтруктураПараметров));

	//Элементы
	Если тзЭлементы.Количество()=0 Тогда
		ТекущийОбъект.Элементы=Неопределено
	Иначе
		ТекущийОбъект.Элементы=Новый ХранилищеЗначения(РеквизитФормыВЗначение("тзЭлементы", Тип("ТаблицаЗначений")));	
	КонецЕсли; 	
КонецПроцедуры