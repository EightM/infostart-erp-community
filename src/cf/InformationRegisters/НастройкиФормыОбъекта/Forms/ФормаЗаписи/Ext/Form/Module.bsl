&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="КонструкторЗапроса" Тогда
		КонструкторЗапроса=Новый КонструкторЗапроса;
		Если НЕ ПустаяСтрока(Запись.ТекстЗапроса) Тогда
			КонструкторЗапроса.Текст=Запись.ТекстЗапроса;
		Иначе
			КонструкторЗапроса.Текст="
			|ВЫБРАТЬ
			|	*
			|ИЗ
			|	"+ИмяОсновнойТаблицы()+" КАК ИсточникДанных
			|";
		КонецЕсли;
		КонструкторЗапроса.Показать(Новый ОписаниеОповещения("КонструкторЗапроса_Окончание", ЭтотОбъект));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьРеквизитовФормы()
	Элементы.СтраницаПроверкаЗаполненияДействия.Видимость=Запись.Действие="ПроверкаЗаполнения";	
	Элементы.СтраницаПараметры.Видимость=НЕ Запись.Действие="УсловноеОформление";
	Элементы.СтраницаВыполняемыйМодуль.Видимость=Запись.Действие="ВыполняемыйМодуль";
	Элементы.СтраницаУсловноеОформление.Видимость=Запись.Действие="УсловноеОформление";
	Элементы.СтраницаПроверкаЗаполнения.Видимость=Запись.Действие="ПроверкаЗаполнения";
	Элементы.СтраницаЗаполнениеРеквизитов.Видимость=Запись.Действие="ЗаполнениеРеквизитов";
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементОтбора(ЭлементыОтбора, ЭлементОтбораИсточник, РежимОтображения="Недоступный") Экспорт
    НовыйЭлементОтбора=ЭлементыОтбора.Добавить(Тип(ЭлементОтбораИсточник));
    ЗаполнитьЗначенияСвойств(НовыйЭлементОтбора, ЭлементОтбораИсточник);
	НовыйЭлементОтбора.РежимОтображения=РежимОтображенияЭлементаНастройкиКомпоновкиДанных[РежимОтображения];
	Если Тип(ЭлементОтбораИсточник)=Тип("ГруппаЭлементовОтбораКомпоновкиДанных") И ЭлементОтбораИсточник.Элементы.Количество() > 0 Тогда
        Для Каждого ЭлементОтбора Из ЭлементОтбораИсточник.Элементы Цикл
            СоздатьЭлементОтбора(НовыйЭлементОтбора.Элементы, ЭлементОтбора)
        КонецЦикла;
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КонструкторЗапроса_Окончание(Параметр1, Параметр2) Экспорт
	Если Не ЗначениеЗаполнено(Параметр1) Тогда Возврат; КонецЕсли; 
	Запись.ТекстЗапроса=Параметр1;
	ДинамическийСписок_ИнициализацияНастроек();
КонецПроцедуры
 
&НаКлиенте
Процедура НастройкаПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя="" Тогда
		
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ИмяОсновнойТаблицы()
	Если Запись.ИсточникДанных.Пустая() Тогда Возврат ""; КонецЕсли;
	//Возврат стрЗаменить(Справочники.ИдентификаторыОбъектовМетаданных.ПолучитьИмяПредопределенного(Запись.ИсточникДанных), "_", ".");
	Если ПустаяСтрока(Запись.ИсточникДанных.ПолноеИмя) Тогда
		Возврат стрЗаменить(Справочники.ИдентификаторыОбъектовМетаданных.ПолучитьИмяПредопределенного(Запись.ИсточникДанных), "_", ".");
	КонецЕсли;
	Возврат СокрЛП(Запись.ИсточникДанных.ПолноеИмя); 	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуВыбораРеквизита(ОписаниеОповещения, ТолькоПервыйУровень)
	стрТип=ИмяОсновнойТаблицы();
	стрТип=СтрЗаменить(стрТип, "Документ.", "ДокументСсылка.");
	стрТип=СтрЗаменить(стрТип, "Справочник.", "СправочникСсылка.");
	стрТип=СтрЗаменить(стрТип, "РегистрНакопления.", "РегистрНакопленияКлючЗаписи.");
	стрТип=СтрЗаменить(стрТип, "РегистрБухгалтерии.", "РегистрБухгалтерииКлючЗаписи.");
	стрТип=СтрЗаменить(стрТип, "РегистрСведений.", "РегистрСведенийКлючЗаписи.");

	ПараметрыВыбора=Новый Структура();	
	ПараметрыВыбора.Вставить("Заголовок", "Выберите реквизит");
	ПараметрыВыбора.Вставить("ТолькоПервыйУровень", ТолькоПервыйУровень);
	ПараметрыВыбора.Вставить("НачальныеТаблицы", Новый Массив());
	ПараметрыВыбора.НачальныеТаблицы.Добавить(Новый Структура("ТипСтроки, Имя, Представление, ТипЗначения",	"", "Ссылка", Запись.ИсточникДанных, Новый ОписаниеТипов(стрТип)));
	
	ПараметрыВыбора.Вставить("НаборНастроек", Новый Структура());	
	ПараметрыВыбора.НаборНастроек.Вставить("Реквизит", Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Истина));
	ПараметрыВыбора.НаборНастроек.Вставить("Таблица" , Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Ложь));
	ПараметрыВыбора.НаборНастроек.Вставить("КорневыеЭлементы", Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Ложь));
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораРеквизита", ПараметрыВыбора,,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// Обработчики оповещений

&НаКлиенте
Процедура ОбработчикОповещения_ВыборТипыУсловия(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	ТекущиеДанные=Элементы.дзЗаполнениеРеквизитов.ТекущиеДанные;
	ТекущиеДанные.ТипУсловия=Параметр1;
	Если ТекущиеДанные.ТипУсловия="Путь" Тогда
		ТекущиеДанные.Значение="";
	ИначеЕсли ТекущиеДанные.ТипУсловия="Алгоритм" Тогда
		ТекущиеДанные.Значение="";
	Иначе
		ТекущиеДанные.Значение=Неопределено;
	КонецЕсли;	
КонецПроцедуры
 
&НаКлиенте
Процедура ОбработчикОповещения_ВыборРеквизита_Клиент(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	ОбработчикОповещения_ВыборРеквизита_Сервер(Параметр1, Параметр2);
КонецПроцедуры

&НаСервере
Процедура ОбработчикОповещения_ВыборРеквизита_Сервер(стрПуть, Параметр2)
	СтруктураМетаданныхОбъекта=Новый Структура("СтандартныеРеквизиты,Реквизиты");
	
	стрТипВид=?(ПустаяСтрока(Запись.ИсточникДанных.ПолноеИмя), Запись.ИсточникДанных.ИмяПредопределенныхДанных, Запись.ИсточникДанных.ПолноеИмя);
	СтруктураОбъекта=РегистрыСведений.НастройкиФормыОбъекта.СтруктураОбъекта(стрТипВид);
	Если СтруктураОбъекта.Тип="Документ" Тогда
	    мдОбъект=Метаданные.Документы[СтруктураОбъекта.Вид];
		СтруктураМетаданныхОбъекта.Вставить("ТабличныеЧасти");

	ИначеЕсли СтруктураОбъекта.Тип="Справочник" Тогда
		мдОбъект=Метаданные.Справочники[СтруктураОбъекта.Вид];
		СтруктураМетаданныхОбъекта.Вставить("ТабличныеЧасти");

	ИначеЕсли СтруктураОбъекта.Тип="РегистрНакопления" Тогда
		мдОбъект=Метаданные.РегистрыНакопления[СтруктураОбъекта.Вид];
		СтруктураМетаданныхОбъекта.Вставить("Измерения");
		СтруктураМетаданныхОбъекта.Вставить("Ресурсы");
		
	ИначеЕсли СтруктураОбъекта.Тип="РегистрБухгалтерии" Тогда
		мдОбъект=Метаданные.РегистрыБухгалтерии[СтруктураОбъекта.Вид];
		СтруктураМетаданныхОбъекта.Вставить("Измерения");
		СтруктураМетаданныхОбъекта.Вставить("Ресурсы");

	ИначеЕсли СтруктураОбъекта.Тип="РегистрСведений" Тогда
		мдОбъект=Метаданные.РегистрыСведений[СтруктураОбъекта.Вид];
		СтруктураМетаданныхОбъекта.Вставить("Измерения");
		СтруктураМетаданныхОбъекта.Вставить("Ресурсы");
	КонецЕсли;
	
	ТекущаяСтрока=Элементы.дзЗаполнениеРеквизитов.ТекущаяСтрока; стрРодитель="";
	Если Не ТекущаяСтрока=Неопределено Тогда
		ТекущиеДанные=дзЗаполнениеРеквизитов.НайтиПоИдентификатору(ТекущаяСтрока);
		Если НЕ ТекущиеДанные=Неопределено Тогда
			стрРодитель=ТекущиеДанные.Идентификатор;
		КонецЕсли;
	КонецЕсли;

	МассивСтрок=СтрРазделить(стрПуть, ".");
	
	мдРеквизит=Неопределено;
	мдТабличнаяЧасть=?(СтруктураМетаданныхОбъекта.Свойство("ТабличныеЧасти"), мдОбъект.ТабличныеЧасти.Найти(МассивСтрок[1]), Неопределено);

	Если НЕ мдТабличнаяЧасть=Неопределено Тогда
		Попытка мдРеквизит=мдТабличнаяЧасть.СтандартныеРеквизиты[МассивСтрок[1]];
		Исключение мдРеквизит=мдТабличнаяЧасть.Реквизиты[МассивСтрок[2]];
		КонецПопытки;
		Если мдРеквизит=Неопределено Тогда Возврат; КонецЕсли; 
		Если Параметр2.Действие="Добавить" Тогда
			ТекущиеДанные=?(стрРодитель="_Условия_", ТекущиеДанные, дзЗаполнениеРеквизитов);
			НоваяСтрока=ТекущиеДанные.ПолучитьЭлементы().Добавить();
		Иначе //Если Параметр2.Действие="Изменить" Тогда
			НоваяСтрока=дзЗаполнениеРеквизитов.НайтиПоИдентификатору(Элементы.дзЗаполнениеРеквизитов.ТекущаяСтрока);
		КонецЕсли;
		Если Параметр2.Действие="Путь" Тогда
			НоваяСтрока.Значение=стрПуть;
		Иначе
			НоваяСтрока.Идентификатор=мдТабличнаяЧасть.Имя+"."+мдРеквизит.Имя; //***стрПуть;
			НоваяСтрока.Представление=мдТабличнаяЧасть.Имя+"."+мдРеквизит.Представление();
			НоваяСтрока.Значение=мдРеквизит.Тип.ПривестиЗначение();
		КонецЕсли;
	Иначе
		Для каждого СтрокаКоллекции Из СтруктураМетаданныхОбъекта Цикл
			Попытка мдРеквизит=мдОбъект[СтрокаКоллекции.Ключ][МассивСтрок[1]]; Прервать;
			Исключение
			КонецПопытки;
		КонецЦикла;
		Если мдРеквизит=Неопределено Тогда Возврат; КонецЕсли;
		Если Параметр2.Действие="Добавить" Тогда
			ТекущиеДанные=?(стрРодитель="_Условия_", ТекущиеДанные, дзЗаполнениеРеквизитов);
			НоваяСтрока=ТекущиеДанные.ПолучитьЭлементы().Добавить();
		Иначе //Если Параметр2.Действие="Изменить" Тогда
			НоваяСтрока=дзЗаполнениеРеквизитов.НайтиПоИдентификатору(Элементы.дзЗаполнениеРеквизитов.ТекущаяСтрока);
		КонецЕсли;
		Если Параметр2.Действие="Путь" Тогда
			НоваяСтрока.Значение=стрПуть;
		Иначе	
			НоваяСтрока.Идентификатор=мдРеквизит.Имя; //***стрПуть;
			НоваяСтрока.Представление=мдРеквизит.Представление();
			НоваяСтрока.Значение=мдРеквизит.Тип.ПривестиЗначение();
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(НоваяСтрока.ТипУсловия) Тогда
		НоваяСтрока.ТипУсловия=?(стрРодитель="_Условия_", ВидСравнения.Равно, "Значение");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ВыборИсточникДанных(Параметр1, Параметр2) Экспорт 
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	Запись.ИсточникДанных=Параметр1;
	ДинамическийСписок_ИнициализацияНастроек();
КонецПроцедуры 

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="Событие" Тогда
		тзПроверкаЗаполненияДействия_Заполнить();

	ИначеЕсли Элемент.Имя="Действие" Тогда
		ВидимостьРеквизитовФормы();
		тзПроверкаЗаполненияДействия_Заполнить();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элемент.Имя="ИсточникДанных" Тогда
		спМетаданные=Новый СписокЗначений; СтандартнаяОбработка=Ложь;
		спМетаданные.Добавить("Справочники", "Справочники",,БиблиотекаКартинок.Справочник);
		спМетаданные.Добавить("Документы", "Документы",,БиблиотекаКартинок.Документ);

		ПараметрыФормы=Новый Структура("ОбъектыМетаданных", спМетаданные);
		ОткрытьФорму("ОбщаяФорма.ФормаВыбораОбъектаМетаданных", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, Новый ОписаниеОповещения("ОбработчикОповещения_ВыборИсточникДанных", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов таблицы формы "Динамический список"
 
&НаСервере
Процедура ДинамическийСписок_ИнициализацияНастроек()
	Попытка
		СхемаКомпоновкиДанных=Новый СхемаКомпоновкиДанных;
		ИсточникДанных=СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
		ИсточникДанных.Имя="ИсточникДанных1";
		ИсточникДанных.ТипИсточникаДанных="Local";
		
		НаборДанныхЗапрос=СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
		НаборДанныхЗапрос.Имя="НаборДанных";
		НаборДанныхЗапрос.ИсточникДанных="ИсточникДанных1";
		НаборДанныхЗапрос.Запрос="
		|ВЫБРАТЬ
		| *
		|ИЗ
		|	"+ИмяОсновнойТаблицы()+" КАК ИсточникДанных
		|";
		ДинамическийСписок.ПроизвольныйЗапрос=Истина;
		ДинамическийСписок.ОсновнаяТаблица=ИмяОсновнойТаблицы();
		ДинамическийСписок.ТекстЗапроса=НаборДанныхЗапрос.Запрос;
		ДинамическийСписок.КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
		ДинамическийСписок.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	Исключение
	КонецПопытки;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов таблицы формы "Проверка заполнения действия"

&НаКлиенте
Процедура тзПроверкаЗаполненияДействия_Заполнить()
	тзПроверкаЗаполненияДействия.Очистить();
	
	тзПроверкаЗаполненияДействия_Добавить("Отказ", Ложь);
	тзПроверкаЗаполненияДействия_Добавить("СтандартнаяОбработка", Истина);
	Если Запись.Событие=ПредопределенноеЗначение("Перечисление.СобытияСистемы.ПриСозданииНаСервере") Тогда
		тзПроверкаЗаполненияДействия_Добавить("ТолькоПросмотр", Ложь);
	КонецЕсли;

	//Если Запись.Событие=ПредопределенноеЗначение("Перечисление.СобытияСистемы.ПриСозданииНаСервере") Или Запись.Событие="ПриОткрытии" Или Запись.Событие="ПередЗакрытием" Тогда
	//	тзПроверкаЗаполненияДействия_Добавить("Отказ", Ложь);
	//	Если Запись.Событие="ПриСозданииНаСервере" Тогда
	//		тзПроверкаЗаполненияДействия_Добавить("СтандартнаяОбработка", Истина);
	//		тзПроверкаЗаполненияДействия_Добавить("ТолькоПросмотр", Ложь);
	//	КонецЕсли;	

	//ИначеЕсли Запись.Событие="ПередЗаписьюНаСервере" Или Запись.Событие="ПередЗаписью" Или Запись.Событие="ПриЗаписиНаСервере" Тогда
	//	тзПроверкаЗаполненияДействия_Добавить("Отказ", Ложь);
	//КонецЕсли;
	тзПроверкаЗаполненияДействия_Добавить("Алгоритм", "");
	тзПроверкаЗаполненияДействия_Добавить("Сообщение", "Выполнено событие <"+СокрЛП(Запись.Событие)+">!");
КонецПроцедуры

&НаКлиенте
Процедура тзПроверкаЗаполненияДействия_Добавить(Имя, Значение)
	НоваяСтрока=тзПроверкаЗаполненияДействия.Добавить();
	НоваяСтрока.Имя=Имя;
	НоваяСтрока.Значение=Значение;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов таблицы формы "Заполнения реквизитов"

&НаКлиенте
Процедура дзЗаполнениеРеквизитов_ВыполнитьДействие(Команда)
	стрКоманда=СтрЗаменить(Команда.Имя, "ЗаполнениеРеквизитов_", "");
	Если стрКоманда="СоздатьГруппуУсловия" ИЛИ стрКоманда="СоздатьГруппуПараметры" Тогда
		стрИмя=стрЗаменить(стрКоманда, "СоздатьГруппу", "");

		ТекущиеДанные=Элементы.дзЗаполнениеРеквизитов.ТекущиеДанные;
		Если НЕ ТекущиеДанные.ПолучитьРодителя()=Неопределено Тогда
			Сообщить("Добавлять ветку <"+стрИмя+"> можно только к реквизитам!");
			Возврат;
		КонецЕсли;

		ЭлементыТаблицы=ТекущиеДанные.ПолучитьЭлементы();
		Для каждого СтрокаКоллекции Из ЭлементыТаблицы Цикл
			Если СтрокаКоллекции.Идентификатор="_"+стрИмя+"_" Тогда
				Возврат;
			КонецЕсли; 
		КонецЦикла; 
		НоваяСтрока=ЭлементыТаблицы.Добавить();
		НоваяСтрока.Идентификатор="_"+стрИмя+"_";
		НоваяСтрока.Представление=стрИмя;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура дзЗаполнениеРеквизитов_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	ТекущиеДанные=Элементы.дзЗаполнениеРеквизитов.ТекущиеДанные; Отказ=Истина;
	Если ТекущиеДанные=Неопределено Или ТекущиеДанные.ПолучитьРодителя()=Неопределено Или ТекущиеДанные.Идентификатор="_Условия_" Тогда
		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборРеквизита_Клиент", ЭтотОбъект, Новый Структура("Действие", "Добавить"));
		ОткрытьФормуВыбораРеквизита(ОписаниеОповещения, Истина);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура дзЗаполнениеРеквизитов_ПередНачаломИзменения(Элемент, Отказ)
	ТекущиеДанные=дзЗаполнениеРеквизитов.НайтиПоИдентификатору(Элементы.дзЗаполнениеРеквизитов.ТекущаяСтрока);
	Если Элемент.ТекущийЭлемент.Имя="дзЗаполнениеРеквизитовПредставление" Тогда
		Отказ=Истина;
		Если НЕ ТекущиеДанные.Идентификатор="_Условия_" Тогда
			ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборРеквизита_Клиент", ЭтотОбъект, Новый Структура("Действие", "Изменить"));
			ОткрытьФормуВыбораРеквизита(ОписаниеОповещения, Истина);
		КонецЕсли;

	ИначеЕсли Элемент.ТекущийЭлемент.Имя="дзЗаполнениеРеквизитовТипУсловия" Тогда
		ТекущийРодитель=ТекущиеДанные.ПолучитьРодителя();
		Если ТекущийРодитель=Неопределено Тогда //Это реквизит
			спМеню=Новый СписокЗначений; Отказ=Истина;
			спМеню.Добавить("Путь", "Путь");
			спМеню.Добавить("Значение", "Значение");
			спМеню.Добавить("Алгоритм", "Алгоритм");
			ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ОбработчикОповещения_ВыборТипыУсловия", ЭтотОбъект), спМеню, Элементы.дзЗаполнениеРеквизитовТипУсловия);
		Иначе
			Отказ=ТекущийРодитель.ПолучитьРодителя()=Неопределено; //Условия
		КонецЕсли;

	ИначеЕсли Элемент.ТекущийЭлемент.Имя="дзЗаполнениеРеквизитовЗначение" Тогда
		Если СокрЛП(ТекущиеДанные.ТипУсловия)="Путь" Тогда
			ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборРеквизита_Клиент", ЭтотОбъект, Новый Структура("Действие", "Путь"));
			ОткрытьФормуВыбораРеквизита(ОписаниеОповещения, Ложь); Отказ=Истина; Возврат ;
		КонецЕсли;
		Если НЕ ТекущиеДанные.ПолучитьРодителя()=Неопределено Тогда
			Отказ=ТекущиеДанные.ПолучитьРодителя().ПолучитьРодителя()=Неопределено; //Условия
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура дзЗаполнениеРеквизитов_Колонка_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекущиеДанные=Элементы.дзЗаполнениеРеквизитов.ТекущиеДанные;
	стрИмя=стрЗаменить(Элемент.Имя, "дзЗаполнениеРеквизитов", "");
	Если стрИмя="ТипУсловия" Тогда		
		СтандартнаяОбработка=НЕ ТекущиеДанные.ПолучитьРодителя()=Неопределено;
	////ИначеЕсли стрИмя="Значение" Тогда
	////	Если ТипЗнч(ТекущиеДанные.ТипУсловия)=Тип("Строка") Тогда
	////		Если ТекущиеДанные.ТипУсловия="Путь" Тогда
	////			ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборРеквизита_Клиент", ЭтотОбъект, Новый Структура("Действие", "Путь"));
	////			ПараметрыФормы=Новый Структура("ИсточникДанных,Действие", Запись.ИсточникДанных, "Путь");
	////			ОткрытьФорму("РегистрСведений.НастройкиФормыОбъекта.Форма.ВыборРеквизита", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	////		КонецЕсли;
	////		СтандартнаяОбработка=ТекущиеДанные.ТипУсловия="Значение";
	////	КонецЕсли;		
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Функция дзЗаполнениеРеквизитов_ЭтоСпецВетка(стрИмя="_Условия_")
	ТекущиеДанные=Элементы.дзЗаполнениеРеквизитов.ТекущиеДанные;
	Если ТекущиеДанные=Неопределено Тогда Возврат Ложь; КонецЕсли; 
	Если ТекущиеДанные.Идентификатор=стрИмя Тогда Возврат Истина; КонецЕсли;

	ТекущиеДанные=ТекущиеДанные.ПолучитьРодителя();
	Если ТекущиеДанные=Неопределено Тогда Возврат Ложь; КонецЕсли; 
	Если ТекущиеДанные.Идентификатор=стрИмя Тогда Возврат Истина; КонецЕсли;
	Возврат Ложь;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ИсточникДанных") Тогда
		Запись.ИсточникДанных=Параметры.ИсточникДанных;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗаписьСуществует Тогда
		ДинамическийСписок_ИнициализацияНастроек();
	КонецЕсли;
	ВидимостьРеквизитовФормы();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ДинамическийСписок_ИнициализацияНастроек(); ЗаписьСуществует=Истина;

	СтруктураНастройки=ТекущийОбъект.Настройка.Получить();
	Если ТипЗнч(СтруктураНастройки)=Тип("Структура") Тогда
		стрДействие=СокрЛП(Запись.Действие);
		Если стрДействие="ВыполняемыйМодуль" Тогда
			ВыполняемыйМодуль=СтруктураНастройки.ВыполняемыйМодуль;
			//ЗначениеВРеквизитФормы(СтруктураНастройки.Параметры, "тзПараметры");

		ИначеЕсли стрДействие="УсловноеОформление" Тогда
			Для каждого СтрокаКоллекции Из СтруктураНастройки.УсловноеОформление.Элементы Цикл
				//НовыйЭлемент=ДинамическийСписок.УсловноеОформление.Элементы.Добавить(); //Не работает...
				НовыйЭлемент=ДинамическийСписок.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы.Добавить();
				ЗаполнитьЗначенияСвойств(НовыйЭлемент, СтрокаКоллекции);
				Для каждого СтрокаКоллекции1 Из СтрокаКоллекции.Оформление.Элементы Цикл
					ЗаполнитьЗначенияСвойств(НовыйЭлемент.Оформление.Элементы.Найти(СтрокаКоллекции1.Параметр), СтрокаКоллекции1);
				КонецЦикла;
				Для каждого СтрокаКоллекции1 Из СтрокаКоллекции.Отбор.Элементы Цикл
					ЗаполнитьЗначенияСвойств(НовыйЭлемент.Отбор.Элементы.Добавить(Тип(СтрокаКоллекции1)), СтрокаКоллекции1);
				КонецЦикла;
				Для каждого СтрокаКоллекции1 Из СтрокаКоллекции.Поля.Элементы Цикл
					ЗаполнитьЗначенияСвойств(НовыйЭлемент.Поля.Элементы.Добавить(), СтрокаКоллекции1);
				КонецЦикла;
			КонецЦикла;

		ИначеЕсли стрДействие="ПроверкаЗаполнения" Тогда
			Для каждого СтрокаКоллекции Из СтруктураНастройки.ПроверкаЗаполнения.Элементы Цикл
				СоздатьЭлементОтбора(ДинамическийСписок.КомпоновщикНастроек.Настройки.Отбор.Элементы, СтрокаКоллекции)
			КонецЦикла;
			ЗначениеВРеквизитФормы(СтруктураНастройки.Действия, "тзПроверкаЗаполненияДействия");
			//ЗначениеВРеквизитФормы(СтруктураНастройки.Параметры, "тзПараметры");

		ИначеЕсли стрДействие="ЗаполнениеРеквизитов" Тогда
			ЗначениеВРеквизитФормы(СтруктураНастройки.ЗаполнениеРеквизитов, "дзЗаполнениеРеквизитов");
			//ЗначениеВРеквизитФормы(СтруктураНастройки.Параметры, "тзПараметры");
		КонецЕсли;

		Если СтруктураНастройки.Свойство("Параметры") Тогда
			Для каждого СтрокаКоллекции Из СтруктураНастройки.Параметры Цикл
				ЗаполнитьЗначенияСвойств(тзПараметры.Добавить(), СтрокаКоллекции);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СтруктураНастройки=Новый Структура;

	СтруктураПараметров=Новый Структура;
	Для каждого СтрокаКоллекции Из тзПараметры Цикл
		СтруктураПараметров.Вставить(СтрокаКоллекции.Ключ, СтрокаКоллекции.Значение);
	КонецЦикла;
	
	стрДействие=СокрЛП(Запись.Действие);
	Если стрДействие="ВыполняемыйМодуль" Тогда
		СтруктураНастройки.Вставить("ВыполняемыйМодуль", СокрЛП(ВыполняемыйМодуль));
		СтруктураНастройки.Вставить("Параметры", СтруктураПараметров);
		//СтруктураНастройки.Вставить("Параметры", РеквизитФормыВЗначение("тзПараметры"));

	ИначеЕсли стрДействие="УсловноеОформление" Тогда
		СтруктураНастройки.Вставить("УсловноеОформление", ДинамическийСписок.КомпоновщикНастроек.ПолучитьНастройки().УсловноеОформление);

	ИначеЕсли стрДействие="ПроверкаЗаполнения" Тогда
		СтруктураНастройки.Вставить("ПроверкаЗаполнения", ДинамическийСписок.КомпоновщикНастроек.ПолучитьНастройки().Отбор);
		СтруктураНастройки.Вставить("Действия", РеквизитФормыВЗначение("тзПроверкаЗаполненияДействия"));
		СтруктураНастройки.Вставить("Параметры", СтруктураПараметров);
		//СтруктураНастройки.Вставить("Параметры", РеквизитФормыВЗначение("тзПараметры"));
	
	ИначеЕсли стрДействие="ЗаполнениеРеквизитов" Тогда
		СтруктураНастройки.Вставить("ЗаполнениеРеквизитов", РеквизитФормыВЗначение("дзЗаполнениеРеквизитов"));
		СтруктураНастройки.Вставить("Параметры", СтруктураПараметров);
		//СтруктураНастройки.Вставить("Параметры", РеквизитФормыВЗначение("тзПараметры"));
	КонецЕсли;

	ТекущийОбъект.Настройка=Новый ХранилищеЗначения(СтруктураНастройки, Новый СжатиеДанных(9));
КонецПроцедуры