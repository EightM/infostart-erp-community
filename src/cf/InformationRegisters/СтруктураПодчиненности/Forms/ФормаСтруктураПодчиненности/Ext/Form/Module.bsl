&НаКлиенте
Процедура ВыполнитьКоманду(Команда)
	Если Команда.Имя="Развернуть" Тогда
		тзДеревоДокументов_Развернуть();

	ИначеЕсли Команда.Имя="Свернуть" Тогда
		тзДеревоДокументов_Свернуть();

	ИначеЕсли Команда.Имя="Обновить" Тогда
		тзДеревоДокументов_Обновить();
		тзДеревоДокументов_Развернуть();
		
	ИначеЕсли Команда.Имя="ОткрытьВНовомОкне" Тогда
		ОткрытьФорму("РегистрСведений.СтруктураПодчиненности.Форма.ФормаСтруктураПодчиненности", Новый Структура("Ссылка", Элементы.тзДеревоДокументов.ТекущиеДанные.Ссылка),, Новый УникальныйИдентификатор,,,, РежимОткрытияОкнаФормы.Независимый);

	ИначеЕсли Команда.Имя="Провести" ИЛИ Команда.Имя="ОтменитьПроведение" ИЛИ Команда.Имя="ПометкаУдаления" Тогда
		ИндексСтроки=Элементы.тзДеревоДокументов.ТекущаяСтрока;
		Если ИндексСтроки=Неопределено Тогда Возврат; КонецЕсли;
		
		стрПредставлениеОбъекта=СокрЛП(Элементы.тзДеревоДокументов.ТекущиеДанные.Документ);
		
		СтруктураСообщений=Новый Структура;
		СтруктураСообщений.Вставить("Провести", "Провести "+стрПредставлениеОбъекта);
		СтруктураСообщений.Вставить("ОтменитьПроведение", "Отменить проведение "+стрПредставлениеОбъекта);
		Если НомерКартинки(Элементы.тзДеревоДокументов.ТекущиеДанные.Сссылка)=2 Тогда
			СтруктураСообщений.Вставить("ПометкаУдаления", "Снять с "+стрПредставлениеОбъекта+" пометку удаления?");
		Иначе
			СтруктураСообщений.Вставить("ПометкаУдаления",  "Пометить "+стрПредставлениеОбъекта+" на удаление?");
		КонецЕсли;

		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ИзменитьПризнакДокумента", ЭтотОбъект, Новый Структура("Команда, ИндексСтроки", Команда.Имя, ИндексСтроки));
		ПоказатьВопрос(ОписаниеОповещения, СтруктураСообщений[Команда.Имя], РежимДиалогаВопрос.ДаНет, 20, КодВозвратаДиалога.Нет, "Внимание", КодВозвратаДиалога.Нет);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ИзменитьПризнакДокумента(Параметр1, Параметр2) Экспорт
	Если Не Параметр1=КодВозвратаДиалога.ДА Тогда Возврат; КонецЕсли; 
	ИзменитьПризнакДокумента(Параметр2.Команда, Параметр2.ИндексСтроки);

	ТекущиеДанные=Элементы.тзДеревоДокументов.ТекущиеДанные;
	ТекущиеДанные.НомерКартинки=НомерКартинки(ТекущиеДанные.Сссылка);
	
	тзДеревоДокументов_ПриАктивизацииСтроки(Элементы.тзДеревоДокументов);
КонецПроцедуры

&НаСервереБезКонтекста
Функция НомерКартинки(Ссылка)
	СтруктураДанных=ОбщегоНазначенияСервер.ЗначенияРеквизитовОбъекта(Ссылка, "Проведен,ПометкаУдаления");
	Если СтруктураДанных.Проведен Тогда Возврат 1; КонецЕсли;
	Если СтруктураДанных.ПометкаУдаления Тогда Возврат 2; КонецЕсли;
	Возврат 0;
КонецФункции

&НаСервере
Процедура ИзменитьПризнакДокумента(стрКоманда, ИндексСтроки)
	ТекущиеДанные=тзДеревоДокументов.НайтиПоИдентификатору(ИндексСтроки);
	ДокументОбъект=ТекущиеДанные.Сссылка.ПолучитьОбъект();
	Если стрКоманда="Провести" Тогда
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	ИначеЕсли стрКоманда="ОтменитьПроведение" Тогда
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	ИначеЕсли стрКоманда="ПометкаУдаления" Тогда
		ДокументОбъект.УстановитьПометкуУдаления(НЕ ДокументОбъект.ПометкаУдаления);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ДанныеФормыКоллекцияЭлементовДерева(Знач ДанныеФормыДерево, Знач СтрокаДереваЗначений)
	Если СтрокаДереваЗначений.Родитель=Неопределено Тогда
		ДанныеФормыКоллекцияЭлементовДерева=ДанныеФормыДерево.ПолучитьЭлементы();
	Иначе
		ИндексРодителя=?(СтрокаДереваЗначений.Родитель.Родитель = Неопределено, СтрокаДереваЗначений.Владелец().Строки, СтрокаДереваЗначений.Родитель.Родитель.Строки).Индекс(СтрокаДереваЗначений.Родитель);
		ДанныеФормыКоллекцияЭлементовДерева=ДанныеФормыКоллекцияЭлементовДерева(ДанныеФормыДерево, СтрокаДереваЗначений.Родитель).Получить(ИндексРодителя).ПолучитьЭлементы();
	КонецЕсли;
	Возврат ДанныеФормыКоллекцияЭлементовДерева;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Дерево документов

&НаСервере
Процедура тзДеревоДокументов_Обновить()
	тзДерево=РегистрыСведений.СтруктураПодчиненности.тзДеревоДокументов_Сформировать(Ссылка);

	ЗначениеВРеквизитФормы(тзДерево, "тзДеревоДокументов");

	// Позиционирование на основном документе
	СтрокаДерева=тзДерево.Строки.Найти(Ссылка, "Ссылка", Истина);
	Если НЕ СтрокаДерева=Неопределено Тогда
		ИндексСтроки=?(СтрокаДерева.Родитель=Неопределено, тзДерево.Строки, СтрокаДерева.Родитель.Строки).Индекс(СтрокаДерева);
		СтрокаЭлемента=ДанныеФормыКоллекцияЭлементовДерева(тзДеревоДокументов, СтрокаДерева).Получить(ИндексСтроки);
		СтрокаЭлемента.Основной=Истина;
		Элементы.тзДеревоДокументов.ТекущаяСтрока=СтрокаЭлемента.ПолучитьИдентификатор();
	КонецЕсли;

	тзДеревоДокументов_Оформление();
КонецПроцедуры

&НаСервере
Процедура тзДеревоДокументов_Оформление()
	дзБуфер=РеквизитФормыВЗначение("тзДеревоДокументов");
	дзБуфер.Колонки.Добавить("W", Новый ОписаниеТипов("Число"));

	МассивТипов=Новый Массив; 
	
	УсловноеОформление.Элементы.Очистить();

	ЭлементУсловногоОформления=УсловноеОформление.Элементы.Добавить();

	//Поля
	ПолеЭлемента=ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле=Новый ПолеКомпоновкиДанных("тзДеревоДокументов");
	
	//Отбор
	ЭлементОтбора=ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("тзДеревоДокументов.Основной");
	ЭлементОтбора.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение=Истина;

	//Оформление
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(0,0,192));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,,Истина));

	МассивСтрок=дзБуфер.Строки.НайтиСтроки(Новый Структура("W", 0), Истина);
	Для каждого СтрокаКоллекции Из МассивСтрок Цикл
		Если НЕ МассивТипов.Найти(СтрокаКоллекции.Тип)=Неопределено Тогда Продолжить; КонецЕсли; 
		МассивТипов.Добавить(СтрокаКоллекции.Тип);

		МенеджерЗаписи=РегистрыСведений.СтруктураПодчиненности.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Документ=СтрокаКоллекции.Тип;
		МенеджерЗаписи.Прочитать();
		Если НЕ МенеджерЗаписи.Выбран() Тогда Продолжить; КонецЕсли;

		тзОформление=МенеджерЗаписи.Оформление.Получить();
		Если НЕ ТипЗнч(тзОформление)=Тип("ТаблицаЗначений") Тогда Продолжить; КонецЕсли;

		НастройкаОформления=тзОформление.Найти(ПараметрыСеанса.ТекущийПользователь, "Пользователь");
		Если НастройкаОформления=Неопределено Тогда
			НастройкаОформления=тзОформление.Найти(Справочники.Пользователи.ПустаяСсылка(), "Пользователь");
		КонецЕсли;
		Если НастройкаОформления=Неопределено Тогда Продолжить; КонецЕсли; 

		ЭлементУсловногоОформления=УсловноеОформление.Элементы.Добавить();
		
		//Поля
		ПолеЭлемента=ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле=Новый ПолеКомпоновкиДанных("тзДеревоДокументов");

		//Отбор
		ЭлементОтбора=ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("тзДеревоДокументов.Тип");
		ЭлементОтбора.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение=СтрокаКоллекции.Тип;

		//Оформление
		Если НастройкаОформления.ИспользоватьЦветТекста Тогда
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", НастройкаОформления.ЦветТекста);
		КонецЕсли;
		Если НастройкаОформления.ИспользоватьЦветФона Тогда
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", НастройкаОформления.ЦветФона);
		КонецЕсли;
		Если НастройкаОформления.ИспользоватьШрифт Тогда
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", НастройкаОформления.Шрифт);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура тзДеревоДокументов_ПриАктивизацииСтроки(Элемент)
	Элементы.кпПровести.Доступность=Истина;
	Элементы.кпОтменитьПроведение.Доступность=Истина;
	Элементы.кпПометкаУдаления.Доступность=Истина;
	
	Элементы.кмПровести.Доступность=Истина;
	Элементы.кмОтменитьПроведение.Доступность=Истина;
	Элементы.кмПометкаУдаления.Доступность=Истина;
	
	НомерКартинки=Элемент.ТекущиеДанные.НомерКартинки;
	//Если НомерКартинки=1 Тогда // Документ проведен
	//	Элементы.кпПровести.Доступность=Ложь;
	//	Элементы.кмПровести.Доступность=Ложь;

	Если НомерКартинки=2 Тогда // Документ помечен на удаление
		Элементы.кпПровести.Доступность=Ложь;
		Элементы.кпОтменитьПроведение.Доступность=Ложь;
		Элементы.кмПровести.Доступность=Ложь;
		Элементы.кмОтменитьПроведение.Доступность=Ложь;
	ИначеЕсли НомерКартинки=0 Тогда //Документ не проведен
		Элементы.кпОтменитьПроведение.Доступность=Ложь;
		Элементы.кмОтменитьПроведение.Доступность=Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тзДеревоДокументов_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьЗначение(,Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура тзДеревоДокументов_Развернуть()
	СтрокиДерева=тзДеревоДокументов.ПолучитьЭлементы();
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Элементы.тзДеревоДокументов.Развернуть(СтрокаДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла;		
КонецПроцедуры

&НаКлиенте
Процедура тзДеревоДокументов_Свернуть()
	СтрокиДерева=тзДеревоДокументов.ПолучитьЭлементы();
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Элементы.тзДеревоДокументов.Свернуть(СтрокаДерева.ПолучитьИдентификатор());
	КонецЦикла;		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("Ссылка", Ссылка);

	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Отказ=Истина; Возврат; 
	КонецЕсли;

	тзДеревоДокументов_Обновить();

	ЭтаФорма.Заголовок="Структура подчиненности """+СокрЛП(Ссылка)+"""";	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	тзДеревоДокументов_Развернуть();
КонецПроцедуры