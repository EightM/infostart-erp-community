&НаСервере
Функция СформироватьТекстЗапроса()
	ТекстЗапроса="
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ном.*
	|ИЗ
	|	(
	|ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка КАК Номенклатура,
	|";

	Если ИспользоватьЕдиницыИзмерения Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ЕСТЬNULL(СпрЕдиницы.Ссылка, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	СпрНоменклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
		|";
	КонецЕсли;

	Если ИспользоватьКачество Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	СпрКачество.Ссылка КАК Качество,
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество,
		|";
	КонецЕсли;

	Если ИспользоватьХарактеристики Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ЕСТЬNULL(СпрХарактеристики.Ссылка, СпрНоменклатура.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатуры,
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	СпрНоменклатура.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|";
	КонецЕсли;

	Если ИспользоватьСерии Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ЕСТЬNULL(СпрСерии.Ссылка, СпрНоменклатура.СерияНоменклатуры) КАК СерияНоменклатуры
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	СпрНоменклатура.СерияНоменклатуры КАК СерияНоменклатуры
		|";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	(ВЫБРАТЬ
	|		СпрНоменклатура.Ссылка КАК Ссылка,
	|		СпрНоменклатура.ЕдиницаХраненияОстатков КАК ЕдиницаХраненияОстатков,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияНоменклатуры
	|	ИЗ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ГДЕ
	|		НЕ СпрНоменклатура.ЭтоГруппа
	|	) КАК СпрНоменклатура
	|";

	Если ИспользоватьЕдиницыИзмерения Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.ЕдиницыИзмерения КАК СпрЕдиницы
		|ПО
		|	СпрЕдиницы.Владелец = СпрНоменклатура.Ссылка
		|";
	КонецЕсли;

	Если ИспользоватьКачество Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	Справочник.Качество КАК СпрКачество
		|ПО
		|	СпрКачество.Ссылка = ЗНАЧЕНИЕ(Справочник.Качество.Новый)
		|	ИЛИ НЕ (СпрНоменклатура.Ссылка.Услуга
		|	Или СпрНоменклатура.Ссылка.Набор
		|	Или СпрНоменклатура.Ссылка.Комплект)
		|";
	КонецЕсли;

	Если ИспользоватьХарактеристики Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	(ВЫБРАТЬ
		|		СпрХарактеристики.Ссылка КАК Ссылка,
		|		СпрХарактеристики.Владелец КАК Владелец
		|	ИЗ
		|		Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
		|	ОБЪЕДИНИТЬ
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
		|		NULL
		|	)КАК СпрХарактеристики
		|ПО
		|	СпрХарактеристики.Владелец = СпрНоменклатура.Ссылка
		|	ИЛИ СпрХарактеристики.Ссылка = СпрНоменклатура.ХарактеристикаНоменклатуры
		|";
	КонецЕсли;

	Если ИспользоватьСерии Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	(ВЫБРАТЬ
		|		СпрСерии.Ссылка КАК Ссылка,
		|		СпрСерии.Владелец КАК Владелец
		|	ИЗ
		|		Справочник.СерииНоменклатуры КАК СпрСерии
		|	ОБЪЕДИНИТЬ
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
		|		NULL
		|	)КАК СпрСерии
		|ПО
		|	СпрСерии.Владелец = СпрНоменклатура.Ссылка
		|	ИЛИ СпрСерии.Ссылка = СпрНоменклатура.СерияНоменклатуры
		|";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + "
	|) КАК Ном
	|";

	ТекстЗапроса = ТекстЗапроса + "
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ШтрихКоды КАК ШтрихКоды
	|ПО
	|	ШтрихКоды.Владелец = Ном.Номенклатура
	|	И ШтрихКоды.ХарактеристикаНоменклатуры = Ном.ХарактеристикаНоменклатуры
	|	И ШтрихКоды.СерияНоменклатуры = Ном.СерияНоменклатуры
	|	И ШтрихКоды.ЕдиницаИзмерения = Ном.ЕдиницаИзмерения
	|	И ШтрихКоды.Качество = Ном.Качество
	|";

	Если ТолькоИмеющиесяВНаличии Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	(ВЫБРАТЬ
		|		РегТоварыНаСкладах.Номенклатура КАК Номенклатура,
		|		РегТоварыНаСкладах.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|		РегТоварыНаСкладах.СерияНоменклатуры КАК СерияНоменклатуры,
		|		РегТоварыНаСкладах.Качество КАК Качество,
		|		РегТоварыНаСкладах.КоличествоОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровНаСкладах.Остатки(, ) КАК РегТоварыНаСкладах
		|	) КАК Остатки
		|ПО
		|	Остатки.Номенклатура = Ном.Номенклатура
		|	И Остатки.ХарактеристикаНоменклатуры = Ном.ХарактеристикаНоменклатуры
		|	И Остатки.СерияНоменклатуры = Ном.СерияНоменклатуры
		|	И Остатки.Качество = Ном.Качество
		|ГДЕ
		|	(ЕСТЬNULL(Остатки.Количество, 0) > 0
		|	ИЛИ Ном.Номенклатура.Услуга)
		|	И ШтрихКоды.Качество ЕСТЬ NULL
		//|	И Не Ном.Номенклатура.Набор
		|	И Не Ном.Номенклатура.Весовой
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	ШтрихКоды.Качество ЕСТЬ NULL
		//|	И Не Ном.Номенклатура.Набор
		|	И Не Ном.Номенклатура.Весовой
		|";
	КонецЕсли;

	Возврат ТекстЗапроса;
КонецФункции

&НаКлиенте
Процедура Заполнить(Команда)
	СозданоНовых=ЗаполнитьНаСервере();
	ПоказатьПредупреждение(,"Создано " + СокрЛП(СозданоНовых)+" новых записей.");
КонецПроцедуры

&НаСервере
Функция ЗаполнитьНаСервере()
	дзДанные=Новый ТаблицаЗначений;
	
	СхемаКомпоновкиДанных=РегистрыСведений.Штрихкоды.ПолучитьМакет("СКД");
	СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос=СформироватьТекстЗапроса();

	КомпоновщикМакета=Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки=КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
	ПроцессорКомпоновкиДанных=Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода=Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(дзДанные);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ТипEAN13 = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
	ПрефиксШтучногоТовара = СокрЛП(Константы.ПрефиксШтучногоТовара.Получить());
	ПрефиксВнутреннегоШтрихкода = Константы.ПрефиксВнутреннегоШтрихкода.Получить();

	НаборЗаписей = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();

	СозданоНовых = 0;

	Для каждого СтрокаКоллекции Из дзДанные Цикл
		НаборЗаписей.Очистить();

		НоваяСтрока=НаборЗаписей.Добавить();
		НоваяСтрока.ТипШтрихкода               = ТипEAN13;
		НоваяСтрока.Штрихкод                   = УправлениеРозничнойТорговлейСервер.СформироватьШтрихКод(ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода);
		НоваяСтрока.Владелец                   = СтрокаКоллекции.Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения           = СтрокаКоллекции.ЕдиницаИзмерения;
		НоваяСтрока.СерияНоменклатуры          = СтрокаКоллекции.СерияНоменклатуры;
		НоваяСтрока.ХарактеристикаНоменклатуры = СтрокаКоллекции.ХарактеристикаНоменклатуры;
		НоваяСтрока.Качество                   = СтрокаКоллекции.Качество;
		
		НаборЗаписей.Отбор.ТипШтрихкода.Установить(НоваяСтрока.ТипШтрихкода);
		НаборЗаписей.Отбор.Штрихкод.Установить(НоваяСтрока.Штрихкод);
		НаборЗаписей.Отбор.Владелец.Установить(НоваяСтрока.Владелец);
		НаборЗаписей.Отбор.ЕдиницаИзмерения.Установить(НоваяСтрока.ЕдиницаИзмерения);
		НаборЗаписей.Отбор.СерияНоменклатуры.Установить(НоваяСтрока.СерияНоменклатуры);
		НаборЗаписей.Отбор.ХарактеристикаНоменклатуры.Установить(НоваяСтрока.ХарактеристикаНоменклатуры);
		НаборЗаписей.Отбор.Качество.Установить(НоваяСтрока.Качество);

		НаборЗаписей.Записать();

		СозданоНовых = СозданоНовых + 1;
	КонецЦикла;

	Возврат СозданоНовых;	
КонецФункции

&НаСервере
Процедура Инициализация()
	СхемаКомпоновкиДанных=РегистрыСведений.Штрихкоды.ПолучитьМакет("СКД");
	СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос=СформироватьТекстЗапроса();

	URLСхемы=ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());

	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Инициализация();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.ИспользоватьХарактеристики.Доступность=Константы.ИспользоватьХарактеристикиНоменклатуры.Получить();
	Элементы.ИспользоватьСерии.Доступность=Константы.ИспользоватьСерииНоменклатуры.Получить();
	Инициализация();
КонецПроцедуры