Функция НайтиНастройки(Объект, Регистратор)
	МассивРегистров=Новый Массив;
	МассивРегистров.Добавить(УправлениеКонфигурациейСервер.ИдентификаторОбъектовМетаданныхСсылка(Объект.Метаданные().ПолноеИмя()));
	МассивРегистров.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка());
	
	МассивДокументов=Новый Массив;
	МассивДокументов.Добавить(УправлениеКонфигурациейСервер.ИдентификаторОбъектовМетаданныхСсылка(Регистратор.Метаданные().ПолноеИмя()));
	МассивДокументов.Добавить(Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка());

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Регистр", МассивРегистров);
	Запрос.УстановитьПараметр("Документ", МассивДокументов);
	Запрос.Текст="
	|ВЫБРАТЬ
	//*** |	ИсточникДанных.Регистр КАК Регистр,
	|	ИсточникДанных.Документ,
	|	ИсточникДанных.ОчиститьЗаписи,
	|	ИсточникДанных.Настройка,
	|	ИсточникДанных.УсловияВыполнения
	|ИЗ
	|	РегистрСведений.НастройкаЗаписейРегистров КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.НеИспользовать=Ложь
	|	И ИсточникДанных.Регистр В(&Регистр)
	|	И ИсточникДанных.Документ В(&Документ)
	|УПОРЯДОЧИТЬ ПО
	|	ИсточникДанных.Порядок
	|";
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Процедура ВыполнитьНастройки(Объект, Отказ, Замещение) Экспорт
	Если Отказ Или Объект.Количество()=0 Тогда Возврат; КонецЕсли;

	Попытка Регистратор=Объект.Отбор.Регистратор.Значение;
	Исключение Регистратор=Неопределено;
	КонецПопытки; 	

	тзНастройки=НайтиНастройки(Объект, Регистратор);
	Для каждого СтрокаКоллекции Из тзНастройки Цикл
		ОбъектУсловия=СтрокаКоллекции.УсловияВыполнения.Получить();
		Если НЕ ОбъектУсловия=Неопределено И ЗначениеЗаполнено(Регистратор) Тогда
			Результат=УправлениеКонфигурациейСервер.УсловиеВыполненоПоСсылке(Регистратор, ОбъектУсловия);
			Если Не Результат Тогда Возврат; КонецЕсли;
		КонецЕсли;

		Если СтрокаКоллекции.ОчиститьЗаписи Тогда Объект.Очистить(); Возврат; КонецЕсли;

		СтруктураНастройки=СтрокаКоллекции.Настройка.Получить();
		Если СтруктураНастройки=Неопределено Тогда Продолжить; КонецЕсли;

		ЗаполнениеРеквизитовПоНастройке(Объект, СтруктураНастройки.ЗаполнениеРеквизитов, СтруктураНастройки.Параметры);

		Если НЕ ПустаяСтрока(СтруктураНастройки.ВыполняемыйМодуль) Тогда
			Для каждого СтрокаПараметра Из СтруктураНастройки.Параметры Цикл
				СтруктураНастройки.ВыполняемыйМодуль=СтрЗаменить(СтруктураНастройки.ВыполняемыйМодуль, "{"+СтрокаПараметра.Ключ+"}", "СтруктураНастройки.Параметры["""+СтрокаПараметра.Ключ+"""]");
			КонецЦикла;
			Выполнить(СтруктураНастройки.ВыполняемыйМодуль);
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры
 
Процедура ЗаполнениеРеквизитовПоНастройке(Объект, дзДанныеЗапонения, СтруктураПараметров)
	СтруктураОбъекта=УправлениеКонфигурациейСервер.СтруктураОбъекта(Объект.Метаданные().ПолноеИмя());
	
	Для каждого СтрокаКоллекции1 Из дзДанныеЗапонения.Строки Цикл
		ИмяРеквизита=СтрокаКоллекции1.Идентификатор;
		Значение=СтрокаКоллекции1.Значение;

		Если СтрокаКоллекции1.ТипУсловия="Путь" Тогда
			стрРевизитПуть=СтрРазделить(СтрокаКоллекции1.Значение, ".")[1];
			стрПуть=стрЗаменить(Значение, "Ссылка."+стрРевизитПуть+".", "");
		КонецЕсли;

		Для каждого СтрокаКоллекции2 Из Объект Цикл
			Если НЕ ЗаполнениеРеквизитов_УсловиеВыполнено(СтрокаКоллекции2, СтрокаКоллекции1) Тогда Продолжить; КонецЕсли;
				
			Если СтрокаКоллекции1.ТипУсловия="Путь" Тогда
				Значение=СтрокаКоллекции2[стрРевизитПуть];
				Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Значение)) Тогда
					Значение=УправлениеКонфигурациейСервер.ЗначениеРеквизитаПоСсылке(Значение, стрПуть);
				КонецЕсли;
			ИначеЕсли СтрокаКоллекции1.ТипУсловия="Алгоритм" Тогда	
				Для каждого СтрокаПараметра Из СтруктураПараметров Цикл
					СтрокаКоллекции1.Значение=СтрЗаменить(СтрокаКоллекции1.Значение, "{"+СтрокаПараметра.Ключ+"}", "СтруктураПараметров["""+СтрокаПараметра.Ключ+"""]");
				КонецЦикла;
				Выполнить(СтрокаКоллекции1.Значение);
			КонецЕсли;

			Если ИмяРеквизита="ВидДвижения" Тогда
				Если СтруктураОбъекта.Тип="РегистрНакопления" Тогда
					Значение=ВидДвиженияНакопления[Значение];
				ИначеЕсли СтруктураОбъекта.Тип="РегистрБухгалтерии" Тогда
					Значение=ВидДвиженияБухгалтерии[Значение];
				КонецЕсли;
			КонецЕсли;

			СтрокаКоллекции2[ИмяРеквизита]=Значение;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Функция ЗаполнениеРеквизитов_УсловиеВыполнено(Объект, КоллекцияЭлементов, СтрокаТабличнойЧасти=Неопределено)
	Если КоллекцияЭлементов.Строки.Количество()=0 Тогда Возврат Истина; КонецЕсли; //Нет условий

	Для каждого СтрокаКоллекции1 Из КоллекцияЭлементов.Строки[0].Строки Цикл
		ИмяРеквизита=СтрокаКоллекции1.Идентификатор;
		ЗначениеУсловия=СтрокаКоллекции1.Значение;

		МассивСтрок=СтрРазделить(ИмяРеквизита, ".");
		Если МассивСтрок.Количество()=1 Тогда
			Значение=Объект[ИмяРеквизита];
		Иначе //Путь к реквизиту
			стрПуть=СтрЗаменить(ИмяРеквизита, МассивСтрок[0]+".", ""); ИмяРеквизита=МассивСтрок[0];
			Значение=УправлениеКонфигурациейСервер.ЗначениеРеквизитаПоСсылке(Объект[ИмяРеквизита], стрПуть);
		КонецЕсли;

		Если НЕ УправлениеКонфигурациейСервер.ПроверкаУсловия(Значение, СтрокаКоллекции1.ТипУсловия, ЗначениеУсловия) Тогда Возврат Ложь; КонецЕсли;
	КонецЦикла;

	Возврат Истина; 
КонецФункции