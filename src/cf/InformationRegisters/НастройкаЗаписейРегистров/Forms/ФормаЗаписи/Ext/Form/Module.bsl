&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="ОчищатьЗаписи" Тогда
		Запись.ОчиститьЗаписи=НЕ Запись.ОчиститьЗаписи;
		Элементы.ОчиститьЗаписи.Пометка=НЕ Элементы.ОчиститьЗаписи.Пометка;
		ДоступностьВидимостьЭлементовФормы();		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДоступностьВидимостьЭлементовФормы()
	Видимость=НЕ Запись.Регистр.Пустая();
	Элементы.СтраницаЗаполнениеРеквизитов.Видимость=Видимость;
	Элементы.СтраницаУсловияВыполнения.Видимость=Видимость;	
	Элементы.тпУсловияВыполнения.Видимость=НЕ Запись.Документ.Пустая();
	Элементы.кпУсловияВыполнения.Видимость=НЕ Запись.Документ.Пустая();
	
	Видимость=НЕ Запись.ОчиститьЗаписи;
	Элементы.СтраницаЗаполнениеРеквизитов.Видимость=Видимость;
	Элементы.СтраницаВыполняемыйМодуль.Видимость=Видимость;	
	Элементы.СтраницаПараметры.Видимость=Видимость;	
КонецПроцедуры
 
&НаСервере
Функция ИмяОсновнойТаблицыДокумента()
	Возврат ?(Запись.Документ.Пустая(), "", ?(ПустаяСтрока(Запись.Документ.ПолноеИмя), стрЗаменить(Запись.Документ.ИмяПредопределенныхДанных, "_", "."), Запись.Документ.ПолноеИмя));
КонецФункции

&НаСервере
Функция ИмяОсновнойТаблицыРегистра()
	Возврат ?(Запись.Регистр.Пустая(), "", ?(ПустаяСтрока(Запись.Регистр.ПолноеИмя), стрЗаменить(Запись.Регистр.ИмяПредопределенныхДанных, "_", "."), Запись.Регистр.ПолноеИмя));
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуВыбораРеквизита(ОписаниеОповещения, ТолькоПервыйУровень)
	стрТип=ИмяОсновнойТаблицыРегистра();
	Если ПустаяСтрока(стрТип) Тогда Возврат; КонецЕсли; 

	стрТип=СтрЗаменить(стрТип, "Документ.", "ДокументСсылка.");
	стрТип=СтрЗаменить(стрТип, "Справочник.", "СправочникСсылка.");
	стрТип=СтрЗаменить(стрТип, "РегистрНакопления.", "РегистрНакопленияКлючЗаписи.");
	стрТип=СтрЗаменить(стрТип, "РегистрБухгалтерии.", "РегистрБухгалтерииКлючЗаписи.");
	стрТип=СтрЗаменить(стрТип, "РегистрСведений.", "РегистрСведенийКлючЗаписи.");

	ПараметрыВыбораРеквизита=Новый Структура();	
	ПараметрыВыбораРеквизита.Вставить("Заголовок", "Выберите реквизит");
	ПараметрыВыбораРеквизита.Вставить("ТолькоПервыйУровень", ТолькоПервыйУровень);
	ПараметрыВыбораРеквизита.Вставить("НачальныеТаблицы", Новый Массив());
	ПараметрыВыбораРеквизита.НачальныеТаблицы.Добавить(Новый Структура("ТипСтроки, Имя, Представление, ТипЗначения", "", "Ссылка", Запись.Регистр, Новый ОписаниеТипов(стрТип)));
	
	ПараметрыВыбораРеквизита.Вставить("НаборНастроек", Новый Структура());	
	ПараметрыВыбораРеквизита.НаборНастроек.Вставить("Реквизит", Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Истина));
	ПараметрыВыбораРеквизита.НаборНастроек.Вставить("Таблица" , Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Ложь));
	ПараметрыВыбораРеквизита.НаборНастроек.Вставить("КорневыеЭлементы", Новый Структура("Видимость, ДоступностьРаскрытия, ДоступностьВыбора", Истина, Истина, Ложь));
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораРеквизита", ПараметрыВыбораРеквизита,,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// Обработчики оповещений

&НаКлиенте
Процедура ОбработчикОповещения_ВыборТипыУсловия(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	ТекущиеДанные=Элементы.дзЗаполнениеРеквизитов.ТекущиеДанные;
	ТекущиеДанные.ТипУсловия=Параметр1;
	Если ТекущиеДанные.ТипУсловия="Путь" Тогда
		ТекущиеДанные.Значение="";
	ИначеЕсли ТекущиеДанные.ТипУсловия="Алгоритм" Тогда
		ТекущиеДанные.Значение="";
	Иначе
		ТекущиеДанные.Значение=Неопределено;
	КонецЕсли;	
КонецПроцедуры
 
&НаКлиенте
Процедура ОбработчикОповещения_ВыборРеквизита_Клиент(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	ОбработчикОповещения_ВыборРеквизита_Сервер(Параметр1, Параметр2);
КонецПроцедуры

&НаСервере
Процедура ОбработчикОповещения_ВыборРеквизита_Сервер(Параметр1, Параметр2)
	СтруктураМетаданныхОбъекта=Новый Структура("СтандартныеРеквизиты,Реквизиты");
	
	СтруктураОбъекта=УправлениеКонфигурациейСервер.СтруктураОбъекта(ИмяОсновнойТаблицыРегистра());
	Если СтруктураОбъекта.Тип="Документ" Тогда
	    мдОбъект=Метаданные.Документы[СтруктураОбъекта.Вид];
		СтруктураМетаданныхОбъекта.Вставить("ТабличныеЧасти");

	ИначеЕсли СтруктураОбъекта.Тип="Справочник" Тогда
		мдОбъект=Метаданные.Справочники[СтруктураОбъекта.Вид];
		СтруктураМетаданныхОбъекта.Вставить("ТабличныеЧасти");

	ИначеЕсли СтруктураОбъекта.Тип="РегистрНакопления" Тогда
		мдОбъект=Метаданные.РегистрыНакопления[СтруктураОбъекта.Вид];
		СтруктураМетаданныхОбъекта.Вставить("Измерения");
		СтруктураМетаданныхОбъекта.Вставить("Ресурсы");
		
	ИначеЕсли СтруктураОбъекта.Тип="РегистрБухгалтерии" Тогда
		мдОбъект=Метаданные.РегистрыБухгалтерии[СтруктураОбъекта.Вид];
		СтруктураМетаданныхОбъекта.Вставить("Измерения");
		СтруктураМетаданныхОбъекта.Вставить("Ресурсы");

	ИначеЕсли СтруктураОбъекта.Тип="РегистрСведений" Тогда
		мдОбъект=Метаданные.РегистрыСведений[СтруктураОбъекта.Вид];
		СтруктураМетаданныхОбъекта.Вставить("Измерения");
		СтруктураМетаданныхОбъекта.Вставить("Ресурсы");
	КонецЕсли;
	
	ТекущаяСтрока=Элементы.дзЗаполнениеРеквизитов.ТекущаяСтрока; стрРодитель="";
	Если Не ТекущаяСтрока=Неопределено Тогда
		ТекущиеДанные=дзЗаполнениеРеквизитов.НайтиПоИдентификатору(ТекущаяСтрока);
		Если НЕ ТекущиеДанные=Неопределено Тогда
			стрРодитель=ТекущиеДанные.Идентификатор;
		КонецЕсли;
	КонецЕсли;

	стрПуть=Параметр1; //.ПолноеИмя;
	МассивСтрок=СтрРазделить(стрПуть, ".");

	мдРеквизит=Неопределено;
	мдТабличнаяЧасть=?(СтруктураМетаданныхОбъекта.Свойство("ТабличныеЧасти"), мдОбъект.ТабличныеЧасти.Найти(МассивСтрок[1]), Неопределено);
	Если НЕ мдТабличнаяЧасть=Неопределено Тогда		
		//Для каждого СтрокаКоллекции Из СтруктураМетаданныхОбъекта Цикл
		//	Попытка мдРеквизит=мдОбъект[СтрокаКоллекции.Ключ][МассивСтрок[1]]; Прервать;
		//	Исключение
		//	КонецПопытки;
		//КонецЦикла;
		Попытка мдРеквизит=мдТабличнаяЧасть.СтандартныеРеквизиты[МассивСтрок[1]];
		Исключение мдРеквизит=мдТабличнаяЧасть.Реквизиты[МассивСтрок[2]];
		КонецПопытки;
		Если мдРеквизит=Неопределено Тогда Возврат; КонецЕсли; 
		Если Параметр2.Действие="Добавить" Тогда
			ТекущиеДанные=?(стрРодитель="_Условия_", ТекущиеДанные, дзЗаполнениеРеквизитов);
			НоваяСтрока=ТекущиеДанные.ПолучитьЭлементы().Добавить();
		Иначе //Если Параметр2.Действие="Изменить" Тогда
			НоваяСтрока=дзЗаполнениеРеквизитов.НайтиПоИдентификатору(Элементы.дзЗаполнениеРеквизитов.ТекущаяСтрока);
		КонецЕсли;
		Если Параметр2.Действие="Путь" Тогда
			НоваяСтрока.Значение=стрПуть;
		Иначе
			НоваяСтрока.Идентификатор=мдТабличнаяЧасть.Имя+"."+мдРеквизит.Имя; //***стрПуть;
			НоваяСтрока.Представление=мдТабличнаяЧасть.Имя+"."+мдРеквизит.Представление();
			НоваяСтрока.Значение=мдРеквизит.Тип.ПривестиЗначение();
		КонецЕсли;
	Иначе
		Для каждого СтрокаКоллекции Из СтруктураМетаданныхОбъекта Цикл
			Попытка мдРеквизит=мдОбъект[СтрокаКоллекции.Ключ][МассивСтрок[1]]; Прервать;
			Исключение
			КонецПопытки;
		КонецЦикла; 
		Если мдРеквизит=Неопределено Тогда Возврат; КонецЕсли;

		Если Параметр2.Действие="Добавить" Тогда
			ТекущиеДанные=?(стрРодитель="_Условия_", ТекущиеДанные, дзЗаполнениеРеквизитов);
			НоваяСтрока=ТекущиеДанные.ПолучитьЭлементы().Добавить();
		Иначе //Если Параметр2.Действие="Изменить" Тогда
			НоваяСтрока=дзЗаполнениеРеквизитов.НайтиПоИдентификатору(Элементы.дзЗаполнениеРеквизитов.ТекущаяСтрока);
		КонецЕсли;
		Если Параметр2.Действие="Путь" Тогда
			НоваяСтрока.Значение=стрПуть;
		Иначе
			стрПуть=СтрЗаменить(стрПуть, "Ссылка.", "");
			Если Найти(стрПуть, ".")=0 Тогда
				НоваяСтрока.Идентификатор=мдРеквизит.Имя;
				НоваяСтрока.Представление=мдРеквизит.Представление();
				НоваяСтрока.Значение=мдРеквизит.Тип.ПривестиЗначение();
			Иначе
				НоваяСтрока.Идентификатор=стрПуть;
				НоваяСтрока.Представление=стрЗаменить(Параметр1.ПолноеПредставление, СтрРазделить(Параметр1.ПолноеПредставление, ".")[0]+".", "");
				НоваяСтрока.Значение=УправлениеКонфигурациейСервер.ПолучитьЗначениеПоТипу(Параметр1.ТипЗначения.Типы()[0]);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(НоваяСтрока.ТипУсловия) Тогда
		НоваяСтрока.ТипУсловия=?(стрРодитель="_Условия_", ВидСравнения.Равно, "Значение");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ВыборРегистра(Параметр1, Параметр2) Экспорт 
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;
	Запись.Регистр=Параметр1;
	Атрибут_ПриИзменении_Сервер("Регистр");
КонецПроцедуры 

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Атрибут_ПриИзменении_Сервер(Элемент.Имя);		
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элемент.Имя="Регистр" Тогда
		спМетаданные=Новый СписокЗначений; СтандартнаяОбработка=Ложь;
		спМетаданные.Добавить("РегистрыНакопления", "Регистры накопления",,БиблиотекаКартинок.РегистрНакопления);
		спМетаданные.Добавить("РегистрыСведений", "Регистры сведений",,БиблиотекаКартинок.РегистрСведений);
		спМетаданные.Добавить("РегистрыРасчета", "Регистры расчета",,БиблиотекаКартинок.РегистрРасчета);
		спМетаданные.Добавить("РегистрыБухгалтерии", "Регистры бухгалтерии",,БиблиотекаКартинок.РегистрБухгалтерии);
		
		ПараметрыФормы=Новый Структура("ОбъектыМетаданных", спМетаданные);
		ОткрытьФорму("ОбщаяФорма.ФормаВыбораОбъектаМетаданных", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, Новый ОписаниеОповещения("ОбработчикОповещения_ВыборРегистра", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура Атрибут_ПриИзменении_Сервер(стрИмя)	
	ДоступностьВидимостьЭлементовФормы();

	Если стрИмя="Документ" Тогда
		Если Запись.Документ.Пустая() Тогда
			ДинамическийСписок.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
			ДинамическийСписок.Отбор.Элементы.Очистить();
		Иначе
			ДинамическийСписок_ИнициализацияНастроек();
		КонецЕсли;
		ДоступностьВидимостьЭлементовФормы();

	ИначеЕсли стрИмя="Регистр" Тогда
		Если Модифицированность Тогда
			//дзЗаполнениеРеквизитов.ПолучитьЭлементы().Очистить();
			тзБуфер=РеквизитФормыВЗначение("дзЗаполнениеРеквизитов");
			тзБуфер.Строки.Очистить();
			ЗначениеВРеквизитФормы(тзБуфер, "дзЗаполнениеРеквизитов");
		КонецЕсли; 

		Элементы.Документ.СписокВыбора.Очистить();
		Элементы.Документ.СписокВыбора.Добавить("", "");
		
		Если Запись.Регистр.Пустая() Тогда
			Запись.Документ=Неопределено;
			ДинамическийСписок.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
			Возврат;
		КонецЕсли; 

		СтруктураОбъекта=УправлениеКонфигурациейСервер.СтруктураОбъекта(ИмяОсновнойТаблицыРегистра());
		Если СтруктураОбъекта.Тип="РегистрНакопления" Тогда
			мдОбъект=Метаданные.РегистрыНакопления[СтруктураОбъекта.Вид];
			
		ИначеЕсли СтруктураОбъекта.Тип="РегистрБухгалтерии" Тогда
			мдОбъект=Метаданные.РегистрыБухгалтерии[СтруктураОбъекта.Вид];
			
		ИначеЕсли СтруктураОбъекта.Тип="РегистрСведений" Тогда
			мдОбъект=Метаданные.РегистрыСведений[СтруктураОбъекта.Вид];
		КонецЕсли;

		Если мдОбъект=Неопределено Тогда Возврат; КонецЕсли;
		МассивТиповСсылок=мдОбъект.СтандартныеРеквизиты.Регистратор.Тип.Типы();
		
		Для каждого Тип Из МассивТиповСсылок Цикл
			Ссылка=УправлениеКонфигурациейСервер.ИдентификаторОбъектовМетаданныхСсылка(Метаданные.НайтиПоТипу(Тип).ПолноеИмя());
			Если Ссылка.Пустая() Тогда Продолжить; КонецЕсли;
			Элементы.Документ.СписокВыбора.Добавить(Ссылка);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий таблицы формы "Динамический список"
 
&НаСервере
Процедура ДинамическийСписок_ИнициализацияНастроек()
	Попытка
		СхемаКомпоновкиДанных=Новый СхемаКомпоновкиДанных;
		ИсточникДанных=СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
		ИсточникДанных.Имя="ИсточникДанных1";
		ИсточникДанных.ТипИсточникаДанных="Local";
		
		НаборДанныхЗапрос=СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
		НаборДанныхЗапрос.Имя="НаборДанных";
		НаборДанныхЗапрос.ИсточникДанных="ИсточникДанных1";
		НаборДанныхЗапрос.Запрос="
		|ВЫБРАТЬ
		| *
		|ИЗ
		|	"+ИмяОсновнойТаблицыДокумента()+" КАК ИсточникДанных
		|";
		ДинамическийСписок.ПроизвольныйЗапрос=Истина;
		ДинамическийСписок.ОсновнаяТаблица=ИмяОсновнойТаблицыДокумента();
		ДинамическийСписок.ТекстЗапроса=НаборДанныхЗапрос.Запрос;
		ДинамическийСписок.КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
		ДинамическийСписок.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	Исключение
	КонецПопытки;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий таблицы формы "Заполнения реквизитов"

&НаКлиенте
Процедура дзЗаполнениеРеквизитов_ВыполнитьДействие(Команда)
	стрКоманда=СтрЗаменить(Команда.Имя, "ЗаполнениеРеквизитов_", "");
	Если стрКоманда="СоздатьГруппуУсловия" ИЛИ стрКоманда="СоздатьГруппуПараметры" Тогда
		стрИмя=стрЗаменить(стрКоманда, "СоздатьГруппу", "");

		ТекущиеДанные=Элементы.дзЗаполнениеРеквизитов.ТекущиеДанные;
		Если НЕ ТекущиеДанные.ПолучитьРодителя()=Неопределено Тогда
			Сообщить("Добавлять ветку <"+стрИмя+"> можно только к реквизитам!");
			Возврат;
		КонецЕсли;

		ЭлементыТаблицы=ТекущиеДанные.ПолучитьЭлементы();
		Для каждого СтрокаКоллекции Из ЭлементыТаблицы Цикл
			Если СтрокаКоллекции.Идентификатор="_"+стрИмя+"_" Тогда
				Возврат;
			КонецЕсли; 
		КонецЦикла; 
		НоваяСтрока=ЭлементыТаблицы.Добавить();
		НоваяСтрока.Идентификатор="_"+стрИмя+"_";
		НоваяСтрока.Представление=стрИмя;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура дзЗаполнениеРеквизитов_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Запись.Регистр.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите вид регистр",,"Регистр", "Запись");
		Отказ=Истина; Возврат;
	КонецЕсли;	
	ТекущиеДанные=Элементы.дзЗаполнениеРеквизитов.ТекущиеДанные; Отказ=Истина;
	Если ТекущиеДанные=Неопределено Или ТекущиеДанные.ПолучитьРодителя()=Неопределено Или ТекущиеДанные.Идентификатор="_Условия_" Тогда
		ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборРеквизита_Клиент", ЭтотОбъект, Новый Структура("Действие", "Добавить"));
		ОткрытьТолькоПервыйУровень=?(ТекущиеДанные=Неопределено, Истина, НЕ ТекущиеДанные.Идентификатор="_Условия_");
		ОткрытьФормуВыбораРеквизита(ОписаниеОповещения, ОткрытьТолькоПервыйУровень);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура дзЗаполнениеРеквизитов_ПередНачаломИзменения(Элемент, Отказ)
	ТекущиеДанные=дзЗаполнениеРеквизитов.НайтиПоИдентификатору(Элементы.дзЗаполнениеРеквизитов.ТекущаяСтрока);
	Если Элемент.ТекущийЭлемент.Имя="дзЗаполнениеРеквизитовПредставление" Тогда
		Отказ=Истина;
		Если НЕ ТекущиеДанные.Идентификатор="_Условия_" Тогда
			ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборРеквизита_Клиент", ЭтотОбъект, Новый Структура("Действие", "Изменить"));
			ОткрытьТолькоПервыйУровень=?(ТекущиеДанные.ПолучитьРодителя()=Неопределено, Истина, НЕ ТекущиеДанные.ПолучитьРодителя().Идентификатор="_Условия_");
			ОткрытьФормуВыбораРеквизита(ОписаниеОповещения, ОткрытьТолькоПервыйУровень);
		КонецЕсли;

	ИначеЕсли Элемент.ТекущийЭлемент.Имя="дзЗаполнениеРеквизитовТипУсловия" Тогда
		ТекущийРодитель=ТекущиеДанные.ПолучитьРодителя();
		Если ТекущийРодитель=Неопределено Тогда //Это реквизит
			спМеню=Новый СписокЗначений; Отказ=Истина;
			спМеню.Добавить("Путь", "Путь");
			спМеню.Добавить("Значение", "Значение");
			спМеню.Добавить("Алгоритм", "Алгоритм");
			ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ОбработчикОповещения_ВыборТипыУсловия", ЭтотОбъект), спМеню, Элементы.дзЗаполнениеРеквизитовТипУсловия);
		Иначе
			Отказ=ТекущийРодитель.ПолучитьРодителя()=Неопределено; //Условия
		КонецЕсли;

	ИначеЕсли Элемент.ТекущийЭлемент.Имя="дзЗаполнениеРеквизитовЗначение" Тогда
		Если СокрЛП(ТекущиеДанные.ТипУсловия)="Путь" Тогда
			ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборРеквизита_Клиент", ЭтотОбъект, Новый Структура("Действие", "Путь"));
			ОткрытьФормуВыбораРеквизита(ОписаниеОповещения, Ложь); Отказ=Истина; Возврат ;
		КонецЕсли;
		Если НЕ ТекущиеДанные.ПолучитьРодителя()=Неопределено Тогда
			Отказ=ТекущиеДанные.ПолучитьРодителя().ПолучитьРодителя()=Неопределено; //Условия
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура дзЗаполнениеРеквизитов_Колонка_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекущиеДанные=Элементы.дзЗаполнениеРеквизитов.ТекущиеДанные;
	стрИмя=стрЗаменить(Элемент.Имя, "дзЗаполнениеРеквизитов", "");
	Если стрИмя="ТипУсловия" Тогда		
		СтандартнаяОбработка=НЕ ТекущиеДанные.ПолучитьРодителя()=Неопределено;
	////ИначеЕсли стрИмя="Значение" Тогда
	////	Если ТипЗнч(ТекущиеДанные.ТипУсловия)=Тип("Строка") Тогда
	////		Если ТекущиеДанные.ТипУсловия="Путь" Тогда
	////			ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповещения_ВыборРеквизита_Клиент", ЭтотОбъект, Новый Структура("Действие", "Путь"));
	////			ПараметрыФормы=Новый Структура("ИсточникДанных,Действие", Запись.ИсточникДанных, "Путь");
	////			ОткрытьФорму("РегистрСведений.НастройкиФормыОбъекта.Форма.ВыборРеквизита", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	////		КонецЕсли;
	////		СтандартнаяОбработка=ТекущиеДанные.ТипУсловия="Значение";
	////	КонецЕсли;		
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Функция дзЗаполнениеРеквизитов_ЭтоСпецВетка(стрИмя="_Условия_")
	ТекущиеДанные=Элементы.дзЗаполнениеРеквизитов.ТекущиеДанные;
	Если ТекущиеДанные=Неопределено Тогда Возврат Ложь; КонецЕсли; 
	Если ТекущиеДанные.Идентификатор=стрИмя Тогда Возврат Истина; КонецЕсли;

	ТекущиеДанные=ТекущиеДанные.ПолучитьРодителя();
	Если ТекущиеДанные=Неопределено Тогда Возврат Ложь; КонецЕсли; 
	Если ТекущиеДанные.Идентификатор=стрИмя Тогда Возврат Истина; КонецЕсли;
	Возврат Ложь;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий таблицы формы "Условия выполнения"

&НаКлиенте
Процедура тпУсловияВыполнения_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Запись.Документ.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите вид документа",,"Документ", "Запись");
		Отказ=Истина; Возврат;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Атрибут_ПриИзменении_Сервер("Регистр");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Запись.Регистр.Пустая() Тогда
		ДинамическийСписок_ИнициализацияНастроек();
	КонецЕсли;
	Элементы.ОчиститьЗаписи.Пометка=Запись.ОчиститьЗаписи;
	ДоступностьВидимостьЭлементовФормы();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ДинамическийСписок_ИнициализацияНастроек();

	СтруктураНастройки=ТекущийОбъект.Настройка.Получить();
	Если ТипЗнч(СтруктураНастройки)=Тип("Структура") Тогда
		ВыполняемыйМодуль=СтруктураНастройки.ВыполняемыйМодуль;
		ЗначениеВРеквизитФормы(СтруктураНастройки.ЗаполнениеРеквизитов, "дзЗаполнениеРеквизитов");
		Для каждого СтрокаКоллекции Из СтруктураНастройки.Параметры Цикл
			ЗаполнитьЗначенияСвойств(тзПараметры.Добавить(), СтрокаКоллекции);
		КонецЦикла;
	КонецЕсли;	
	
	Отбор=ТекущийОбъект.УсловияВыполнения.Получить();
	Если НЕ Отбор=Неопределено Тогда
		Для каждого СтрокаКоллекции Из Отбор.Элементы Цикл
			ДинамическиеСпискиСервер.СоздатьЭлементОтбора(ДинамическийСписок.Отбор.Элементы, СтрокаКоллекции)
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СтруктураПараметров=Новый Структура;
	Для каждого СтрокаКоллекции Из тзПараметры Цикл
		СтруктураПараметров.Вставить(СтрокаКоллекции.Ключ, СтрокаКоллекции.Значение);
	КонецЦикла;

	СтруктураНастройки=Новый Структура;
	СтруктураНастройки.Вставить("ВыполняемыйМодуль", СокрЛП(ВыполняемыйМодуль));
	СтруктураНастройки.Вставить("Параметры", СтруктураПараметров);
	СтруктураНастройки.Вставить("ЗаполнениеРеквизитов", РеквизитФормыВЗначение("дзЗаполнениеРеквизитов"));

	ТекущийОбъект.Настройка=Новый ХранилищеЗначения(СтруктураНастройки, Новый СжатиеДанных(9));
	ТекущийОбъект.УсловияВыполнения=?(ЗначениеЗаполнено(ДинамическийСписок.ОсновнаяТаблица), Новый ХранилищеЗначения(ДинамическийСписок.Отбор, Новый СжатиеДанных(9)), Неопределено);
КонецПроцедуры