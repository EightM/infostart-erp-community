////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов формы

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="ВидРегистра" Тогда
		тпНастройкаКонтроляРегистра_Обновить();
		дзНастройкаКонтроляРегистра_Развернуть();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочие процедуру\функции

&НаСервере
Функция ПредставлениеРегистра(стрРегистр)
	Возврат Метаданные.РегистрыНакопления[стрРегистр].Представление()
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Настройка контроля регистра"

&НаКлиенте
Процедура дзНастройкаКонтроляРегистра_Развернуть()
	КоллекцияЭлементов=дзНастройкаКонтроляРегистра.ПолучитьЭлементы();
	Если КоллекцияЭлементов.Количество()=0 Тогда Возврат; КонецЕсли;
	Элементы.дзНастройкаКонтроляРегистра.Развернуть(КоллекцияЭлементов[0].ПолучитьИдентификатор(), Истина);
	Элементы.дзНастройкаКонтроляРегистра.Развернуть(КоллекцияЭлементов[1].ПолучитьИдентификатор(), Истина);
КонецПроцедуры
 
&НаСервере
Процедура тпНастройкаКонтроляРегистра_Обновить()
	Если ПустаяСтрока(Запись.ВидРегистра) Тогда Возврат; КонецЕсли;
	мдРегистр=Метаданные.РегистрыНакопления[Запись.ВидРегистра];
	
	дзНастройка=РеквизитФормыВЗначение("дзНастройкаКонтроляРегистра");
	дзНастройка.Строки.Очистить();

	//Измерения
	НоваяВетка=дзНастройка.Строки.Добавить();
	НоваяВетка.Идентификатор="Измерения";
	НоваяВетка.Представление="Измерения";
	Для Каждого мдОбъект из мдРегистр.Измерения Цикл
		НоваяСтрока=НоваяВетка.Строки.Добавить();
		НоваяСтрока.Идентификатор=мдОбъект.Имя;
		НоваяСтрока.Представление=мдОбъект.Представление();
		НоваяСтрока.Пометка=Найти(Запись.Измерения+",", мдОбъект.Имя+",")>0;
	КонецЦикла;
	
	//ресурсы
	НоваяВетка=дзНастройка.Строки.Добавить();
	НоваяВетка.Идентификатор="Ресурсы";
	НоваяВетка.Представление="Ресурсы";
	Для Каждого мдОбъект из мдРегистр.Ресурсы Цикл
		НоваяСтрока=НоваяВетка.Строки.Добавить();
		НоваяСтрока.Идентификатор=мдОбъект.Имя;
		НоваяСтрока.Представление=мдОбъект.Представление();
		НоваяСтрока.Пометка=Найти(Запись.Ресурсы+",", мдОбъект.Имя+",")>0;
	КонецЦикла;
    ЗначениеВРеквизитФормы(дзНастройка, "дзНастройкаКонтроляРегистра");

	тпНастройкаКонтроляРегистра_УстановитьПометкуРодителя();	
	
	тзДокументы_Заполнить();
КонецПроцедуры

&НаКлиенте
Процедура дзНастройкаКонтроляРегистра_Пометка_ПриИзменении(Элемент)
	Элемент.Родитель.Родитель.ТекущиеДанные.Пометка=?(Элемент.Родитель.Родитель.ТекущиеДанные.Пометка=1, 1, 0);
	Родитель=Элемент.Родитель.Родитель.ТекущиеДанные.ПолучитьРодителя();
	Если НЕ Родитель=Неопределено Тогда
		Родитель.Пометка=тпНастройкаКонтроляРегистра_ПометкаРодителя(Родитель.Идентификатор);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция тпНастройкаКонтроляРегистра_ПолучитьДанныеВетки(ВеткаДерева)
	стрДанные="";
	Для каждого СтрокаКоллекции Из ВеткаДерева.Строки Цикл
		Если Не СтрокаКоллекции.Пометка Тогда Продолжить; КонецЕсли;
		стрДанные=стрДанные+?(стрДанные="", "", ",")+СокрЛП(СтрокаКоллекции.Идентификатор);
	КонецЦикла;
	Возврат стрДанные;
КонецФункции

&НаСервере
Функция тпНастройкаКонтроляРегистра_ПометкаРодителя(стрРодитель="Измерения")
	дзНастройка=РеквизитФормыВЗначение("дзНастройкаКонтроляРегистра");

	ОбластьПоиска=дзНастройка.Строки[?(стрРодитель="Измерения", 0, 1)].Строки;
	Есть_0=Не ОбластьПоиска.Найти(0, "Пометка")=Неопределено;
	Есть_1=Не ОбластьПоиска.Найти(1, "Пометка")=Неопределено;
	Если Есть_0 И Есть_1 Тогда
		Возврат 2;
	ИначеЕсли Есть_0 Тогда
		Возврат 0;
	ИначеЕсли Есть_1 Тогда
		Возврат 1;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура тпНастройкаКонтроляРегистра_Записать()
	дзНастройка=РеквизитФормыВЗначение("дзНастройкаКонтроляРегистра");
	Запись.Измерения=тпНастройкаКонтроляРегистра_ПолучитьДанныеВетки(дзНастройка.Строки[0]);
	Запись.Ресурсы=тпНастройкаКонтроляРегистра_ПолучитьДанныеВетки(дзНастройка.Строки[1]);	
КонецПроцедуры
 
&НаСервере
Процедура тпНастройкаКонтроляРегистра_УстановитьПометкуРодителя()
	дзНастройка=РеквизитФормыВЗначение("дзНастройкаКонтроляРегистра");

	дзНастройка.Строки[0].Пометка=тпНастройкаКонтроляРегистра_ПометкаРодителя("Измерения");
	дзНастройка.Строки[1].Пометка=тпНастройкаКонтроляРегистра_ПометкаРодителя("Ресурсы");

	ЗначениеВРеквизитФормы(дзНастройка, "дзНастройкаКонтроляРегистра");
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Документы"

&НаСервере
Процедура тзДокументы_Заполнить()
	Если ПустаяСтрока(Запись.ВидРегистра) Тогда Возврат; КонецЕсли;

	тзВидыДокументов.Очистить();
	Для каждого мдОбъект Из Метаданные.Документы Цикл
   		Если мдОбъект.Движения.Содержит(Метаданные.РегистрыНакопления[Запись.ВидРегистра]) Тогда
			НоваяСтрок=тзВидыДокументов.Добавить();
			НоваяСтрок.Идентификатор=мдОбъект.Имя;
			НоваяСтрок.Представление=мдОбъект.Представление();
		КонецЕсли;
	КонецЦикла;
	
	//восстановить ранее отмеченные виды документов
	тзДанные=РеквизитФормыВЗначение("тзВидыДокументов");
	стрВидыДокументов=СтрЗаменить(Запись.ВидыДокументов, ",", Символы.ПС);
	Для ъ=1 По СтрЧислоСтрок(стрВидыДокументов) Цикл
		стрВидДокумента=СтрПолучитьСтроку(стрВидыДокументов, ъ);
		СтрокаТаблицыЗначений=тзДанные.Найти(стрВидДокумента, "Идентификатор");
		Если НЕ СтрокаТаблицыЗначений=Неопределено Тогда
			СтрокаТаблицыЗначений.Пометка=Истина;
		КонецЕсли;
	КонецЦикла;
	ЗначениеВРеквизитФормы(тзДанные, "тзВидыДокументов");
КонецПроцедуры

&НаСервере
Процедура тзДокументы_Записать()
	тзДанные=РеквизитФормыВЗначение("тзВидыДокументов");
	
	стрВидыДокументов="";
	Для каждого СтрокаКоллекции Из тзДанные Цикл
		Если СтрокаКоллекции.Пометка Тогда
			стрВидыДокументов=стрВидыДокументов+?(стрВидыДокументов="", "", ",")+СтрокаКоллекции.Идентификатор;
		КонецЕсли;
	КонецЦикла;
	Запись.ВидыДокументов=стрВидыДокументов;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Для Каждого мдРегистр из Метаданные.РегистрыНакопления Цикл
		Если Строка(мдРегистр.ВидРегистра)="Обороты" Тогда Продолжить; КонецЕсли;
		Элементы.ВидРегистра.СписокВыбора.Добавить(мдРегистр.Имя, мдРегистр.Представление());
	КонецЦикла;
	тпНастройкаКонтроляРегистра_Обновить();	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Элементы.ВидРегистра.СписокВыбора.Количество()=0 Тогда
		ПоказатьОповещениеПользователя("Ошибка:",,"В конфигурации отсутствуют остаточные регистры накопления!");
		Отказ=Истина; Возврат; 
	КонецЕсли;
	ВидКонтроля=?(Запись.ВидКонтроля, "На дату документа", "На рабочую дату");
	ТипКонтроля=?(Запись.ТипКонтроля, "Запретить проведение", "Выводить сообщение");
	дзНастройкаКонтроляРегистра_Развернуть();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	тпНастройкаКонтроляРегистра_Записать();
	Если ПустаяСтрока(Запись.Измерения) Тогда ПоказатьПредупреждение(, "Не указаны измерения!", 10); Отказ=Истина; Возврат; КонецЕсли;
	Если ПустаяСтрока(Запись.Ресурсы) 	Тогда ПоказатьПредупреждение(, "Не указаны ресурсы!"  , 10); Отказ=Истина; Возврат; КонецЕсли;

	Запись.ВидКонтроля=ЭтаФорма.ВидКонтроля="На дату документа";
	Запись.ТипКонтроля=ЭтаФорма.ТипКонтроля="Запретить проведение";

	тзДокументы_Записать();
КонецПроцедуры
