&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="Сформировать" Тогда
		Если Не ЗначениеЗаполнено(Отчет.ДатаНачала) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Дата начала>>!",,"Отчет.ДатаНачала"); Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Отчет.ДатаКонца) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Дата конца>>!",,"Отчет.ДатаКонца"); Возврат;
		КонецЕсли;		
		Если Не ЗначениеЗаполнено(Отчет.Организация) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Организация>>!",,"Отчет.Организация"); Возврат;
		КонецЕсли;
		ПоказыватьЗаголовок=Ложь; ВысотаЗаголовка=0;
		СформироватьОтчет(ПоказыватьЗаголовок, ВысотаЗаголовка);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ВывестиВОтчетДанныеПоБазеРаспределения(ТабличныйДокумент, Макет)
	// Подсчитываем выручку от реализации
	СтруктураВыручки=Новый Структура;
	СтруктураВыручки.Вставить("ВыручкаЕНВД",0);
	СтруктураВыручки.Вставить("ВыручкаБезНДС",0);
	СтруктураВыручки.Вставить("ВыручкаНДС0",0);
	СтруктураВыручки.Вставить("ВыручкаНДС",0);
	//ВыручкаЕНВД   = 0;
	//ВыручкаБезНДС = 0;
	//ВыручкаНДС0   = 0;
	//ВыручкаНДС    = 0;

	Выручка=УчетНалоговСервер.РассчитатьВыручкуДляНДС(Отчет.Организация, Отчет.ДатаНачала, Отчет.ДатаКонца);
	ЗаполнитьЗначенияСвойств(СтруктураВыручки,Выручка);
	//ВыручкаЕНВД   = Выручка.ВыручкаЕНВД;
	//ВыручкаБезНДС = Выручка.ВыручкаБезНДС;
	//ВыручкаНДС0   = Выручка.ВыручкаНДС0;
	//ВыручкаНДС    = Выручка.ВыручкаНДС;
	
	//УчетНалоговСервер.РассчитатьВыручкуДляНДС(Отчет.Организация, Отчет.ДатаНачала, Отчет.ДатаКонца, ВыручкаЕНВД, ВыручкаБезНДС, ВыручкаНДС0, ВыручкаНДС);
	
	ВсегоВыручка = СтруктураВыручки.ВыручкаЕНВД + СтруктураВыручки.ВыручкаБезНДС + СтруктураВыручки.ВыручкаНДС0 + СтруктураВыручки.ВыручкаНДС;
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Отчет.Организация);
	Запрос.УстановитьПараметр("НачалоПериодаОтчета", НачалоДня(Отчет.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериодаОтчета",  ?(Не ЗначениеЗаполнено(Отчет.ДатаКонца), Отчет.ДатаКонца, КонецДня(Отчет.ДатаКонца)));
	Запрос.УстановитьПараметр("Проведен", Истина);
	Запрос.УстановитьПараметр("Ссылка", Отчет.ДокументРаспределения);
	Запрос.Текст="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаспределениеНДСКосвенныхРасходов.Ссылка КАК ДокументРаспределения,
	|	СУММА(РаспределениеНДСКосвенныхРасходов.ВыручкаЕНВД) КАК ВыручкаЕНВД,
	|	СУММА(РаспределениеНДСКосвенныхРасходов.ВыручкаБезНДС) КАК ВыручкаБезНДС,
	|	СУММА(РаспределениеНДСКосвенныхРасходов.ВыручкаНДС0) КАК ВыручкаНДС0,
	|	СУММА(РаспределениеНДСКосвенныхРасходов.ВыручкаНДС) КАК ВыручкаНДС,
	|	СУММА(РаспределениеНДСКосвенныхРасходов.ВыручкаЕНВД) + СУММА(РаспределениеНДСКосвенныхРасходов.ВыручкаБезНДС) + СУММА(РаспределениеНДСКосвенныхРасходов.ВыручкаНДС0) + СУММА(РаспределениеНДСКосвенныхРасходов.ВыручкаНДС) КАК ВсегоВыручка
	|ИЗ
	|	Документ.РаспределениеНДС КАК РаспределениеНДСКосвенныхРасходов
	|";
	Если Не ЗначениеЗаполнено(Отчет.ДокументРаспределения) Тогда
		Запрос.Текст=Запрос.Текст+"
		|ГДЕ
	    |	РаспределениеНДСКосвенныхРасходов.Организация = &Организация
	    |" + ?(Не ЗначениеЗаполнено(Отчет.ДатаНачала), "",	"И РаспределениеНДСКосвенныхРасходов.НачалоПериода МЕЖДУ &НачалоПериодаОтчета И &КонецПериодаОтчета") + "
	    |" + ?(Не ЗначениеЗаполнено(Отчет.ДатаКонца), "",	"И РаспределениеНДСКосвенныхРасходов.Дата МЕЖДУ &НачалоПериодаОтчета И &КонецПериодаОтчета") + "
	    |	И РаспределениеНДСКосвенныхРасходов.Проведен = &Проведен
		|";
	Иначе
		Запрос.Текст=Запрос.Текст+ "
		|ГДЕ
		|	РаспределениеНДСКосвенныхРасходов.Ссылка = &Ссылка
		|";
	КонецЕсли;									   
	Запрос.Текст=Запрос.Текст+"СГРУППИРОВАТЬ ПО	РаспределениеНДСКосвенныхРасходов.Ссылка";

	Результат=Запрос.Выполнить().Выбрать();
	
	// Сравнение выручки по регистрам учета с выручкой в документе
	Пока Результат.Следующий() Цикл
		Если Результат.ВыручкаБезНДС <> СтруктураВыручки.ВыручкаБезНДС Тогда
			Сообщить(Результат.ДокументРаспределения);
			Сообщить("Выручка, не облагаемая НДС по документу (" + Результат.ВыручкаБезНДС + " " + МодульВалютногоУчета.ПолучитьВалюту("Бух") + ")" +
					" не соответствует выручке по регистрам учета подсистемы НДС (" + СтруктураВыручки.ВыручкаБезНДС + " " + МодульВалютногоУчета.ПолучитьВалюту("Бух") + ")", СтатусСообщения.Внимание);
		КонецЕсли;
		Если Результат.ВыручкаЕНВД <> СтруктураВыручки.ВыручкаЕНВД Тогда
			Сообщить(Результат.ДокументРаспределения);
			Сообщить("Выручка, по деятельности облагаемой ЕНВД по документу (" + Результат.ВыручкаЕНВД + " " + МодульВалютногоУчета.ПолучитьВалюту("Бух") + ")" +
					" не соответствует выручке по регистрам учета подсистемы НДС (" + СтруктураВыручки.ВыручкаЕНВД + " " + МодульВалютногоУчета.ПолучитьВалюту("Бух") + ")", СтатусСообщения.Внимание);
		КонецЕсли;
		Если Результат.ВыручкаНДС0 <> СтруктураВыручки.ВыручкаНДС0 Тогда
			Сообщить(Результат.ДокументРаспределения);
			Сообщить("Выручка, облагаемая НДС по ставке 0% по документу (" + Результат.ВыручкаНДС0 + " " + МодульВалютногоУчета.ПолучитьВалюту("Бух") + ")" +
					" не соответствует выручке по регистрам учета подсистемы НДС (" + СтруктураВыручки.ВыручкаНДС0 + " " + МодульВалютногоУчета.ПолучитьВалюту("Бух") + ")", СтатусСообщения.Внимание);
		КонецЕсли;
		Если Результат.ВыручкаНДС <> СтруктураВыручки.ВыручкаНДС Тогда
			Сообщить(Результат.ДокументРаспределения);
			Сообщить("Выручка, облагаемая НДС по обычным ставкасм по документу (" + Результат.ВыручкаНДС + " " + МодульВалютногоУчета.ПолучитьВалюту("Бух") + ")" +
					" не соответствует выручке по регистрам учета подсистемы НДС (" + СтруктураВыручки.ВыручкаНДС + " " + МодульВалютногоУчета.ПолучитьВалюту("Бух") + ")", СтатусСообщения.Внимание);
		КонецЕсли;
	КонецЦикла;
				
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ПараметрыБазыРаспределения");
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	
	Если Отчет.ВыручкаПоДокументам Тогда
		Результат.Сбросить();
		Пока Результат.Следующий() Цикл
			ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ДокументБазыРаспределения");
			ОбластьШапкаТаблицы.Параметры.Заполнить(Результат);
			ОбластьШапкаТаблицы.Параметры.Расшифровка = Результат.ДокументРаспределения;
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
			
			ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("СтрокаБазыРаспределения");
			ОбластьШапкаТаблицы.Параметры.Заполнить(Результат);
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		КонецЦикла;
	Иначе
		ОбластьШапкаТаблицы=Макет.ПолучитьОбласть("СтрокаБазыРаспределения");
		ОбластьШапкаТаблицы.Параметры.ВсегоВыручка 	= ВсегоВыручка;
		ОбластьШапкаТаблицы.Параметры.ВыручкаБезНДС = СтруктураВыручки.ВыручкаБезНДС;
		ОбластьШапкаТаблицы.Параметры.ВыручкаЕНВД 	= СтруктураВыручки.ВыручкаЕНВД;
		ОбластьШапкаТаблицы.Параметры.ВыручкаНДС0	= СтруктураВыручки.ВыручкаНДС0;
		ОбластьШапкаТаблицы.Параметры.ВыручкаНДС 	= СтруктураВыручки.ВыручкаНДС;
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВывестиСтрокуТабличнойЧасти(ТабличныйДокумент, ОбластьСтрока, Выборка)
	Если ТипЗнч(Выборка.СчетФактура) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		ОбластьСтрока.Параметры.ДатаОперации = "" + Формат(Выборка.СчетФактура.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ", №" + Выборка.СчетФактура.НомерВходящегоДокумента;
	Иначе
		Документ = УчетНалоговСервер.НайтиПодчиненныйДокумент(Выборка.СчетФактура, "СчетФактураПолученный");
		Если Документ = Неопределено Тогда
			Попытка ОбластьСтрока.Параметры.ДатаОперации = "" + Формат(Выборка.СчетФактура.Дата, "ДФ=dd.MM.yyyy") + ", №" + Выборка.СчетФактура.Номер;
			Исключение ОбластьСтрока.Параметры.ДатаОперации = "";
			КонецПопытки; 
		Иначе
			ОбластьСтрока.Параметры.ДатаОперации = "" + Формат(Документ.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ", №" + Документ.НомерВходящегоДокумента;
		КонецЕсли;
	КонецЕсли;	
	ОбластьСтрока.Параметры.Заполнить(Выборка);
	ТабличныйДокумент.Вывести(ОбластьСтрока);	
КонецПроцедуры

&НаСервере
Процедура ВывестиВОтчетДанныеПоРаспределениюКосвенныхРасходов(ТабличныйДокумент, Макет)
	Запрос=Новый Запрос;
	Запрос.Текст="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.Ссылка КАК ДокументРаспределения,
	|	РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.ВидЦенности,
	|	РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.Поставщик,
	|	РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.СчетФактура,
	|	РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.СтавкаНДС,
	|	СУММА(РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.СуммаВсего) КАК ВсегоСумма,
	|	СУММА(РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.НДСВсего) КАК ВсегоНДС,
	|	СУММА(РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.БезНДССумма) КАК БезНДССумма,
	|	СУММА(РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.БезНДС) КАК БезНДС,
	|	СУММА(РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.НДС0Сумма) КАК НДС0Сумма,
	|	СУММА(РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.НДС0) КАК НДС0,
	|	СУММА(РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.ЕНВДСумма) КАК ЕНВДСумма,
	|	СУММА(РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.ЕНВДНДС) КАК ЕНВДНДС,
	|	СУММА(РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.НДССумма) КАК Сумма,
	|	СУММА(РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.НДС) КАК НДС,
	|	СУММА(ВЫБОР КОГДА НДСВключенныйВСтоимость.НДС>0 ТОГДА НДСВключенныйВСтоимость.НДС ИНАЧЕ 0 КОНЕЦ) КАК НДСВключен,
	|	СУММА(ВЫБОР КОГДА НДСВключенныйВСтоимость.НДС<0 ТОГДА -НДСВключенныйВСтоимость.НДС ИНАЧЕ 0 КОНЕЦ) КАК НДСИсключен
	|ИЗ
	|	Документ.РаспределениеНДС.СоставКосвенныхРасходов КАК РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСВключенныйВСтоимость КАК НДСВключенныйВСтоимость
	|		ПО РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.Ссылка = НДСВключенныйВСтоимость.Регистратор И
	|			РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.Ссылка.Организация = НДСВключенныйВСтоимость.Организация И
	|			РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.ВидЦенности = НДСВключенныйВСтоимость.ВидЦенности И
	|			РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.СчетФактура = НДСВключенныйВСтоимость.СчетФактура И
	|			РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.СтавкаНДС	= НДСВключенныйВСтоимость.СтавкаНДС И
	|			РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.Поставщик	= НДСВключенныйВСтоимость.Поставщик				   
	|";
	Если Не ЗначениеЗаполнено(Отчет.ДокументРаспределения) Тогда
		Запрос.Текст=Запрос.Текст+"
		|ГДЕ
		|	РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.Ссылка.Проведен = &Проведен
		|	И РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.Ссылка.Организация = &Организация
		|" + ?(Не ЗначениеЗаполнено(Отчет.ДатаНачала), "",	"И РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.Ссылка.НачалоПериода МЕЖДУ &НачалоПериодаОтчета И &КонецПериодаОтчета") + "
		|" + ?(Не ЗначениеЗаполнено(Отчет.ДатаКонца), "",	"И РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.Ссылка.Дата МЕЖДУ &НачалоПериодаОтчета И &КонецПериодаОтчета");
	Иначе
		Запрос.Текст=Запрос.Текст+"
		|ГДЕ
		|	РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.Ссылка = &Ссылка";
	КонецЕсли;									   

	Запрос.Текст=Запрос.Текст+"
	|СГРУППИРОВАТЬ ПО
	|	РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.Ссылка,
	|	РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.ВидЦенности,
	|	РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.Поставщик,
	|	РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.СчетФактура,
	|	РаспределениеНДСКосвенныхРасходовСоставКосвенныхРасходов.СтавкаНДС
	|АВТОУПОРЯДОЧИВАНИЕ
	|";

	Запрос.Текст=Запрос.Текст+"
	|ИТОГИ
	|	СУММА(ВсегоСумма),
	|	СУММА(ВсегоНДС),
	|	СУММА(БезНДССумма),
	|	СУММА(БезНДС),
	|	СУММА(НДС0Сумма),
	|	СУММА(НДС0),
	|	СУММА(ЕНВДСумма),
	|	СУММА(ЕНВДНДС),
	|	СУММА(Сумма),
	|	СУММА(НДС),
	|	СУММА(НДСВключен),
	|	СУММА(НДСИсключен)
	|ПО
	|	ОБЩИЕ
	|";
	Если Отчет.ВыручкаПоДокументам Тогда
	    Запрос.Текст=Запрос.Текст+"	,ДокументРаспределения";
	КонецЕсли;									
	
	Запрос.УстановитьПараметр("Организация", 			Отчет.Организация);
	Запрос.УстановитьПараметр("НачалоПериодаОтчета", 	НачалоДня(Отчет.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериодаОтчета",  	?(Не ЗначениеЗаполнено(Отчет.ДатаКонца), Отчет.ДатаКонца, КонецДня(Отчет.ДатаКонца)));
	Запрос.УстановитьПараметр("Проведен",	  			Истина);
	Запрос.УстановитьПараметр("Ссылка", Отчет.ДокументРаспределения);
	
	Результат = Запрос.Выполнить();
	ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицыРаспределения");
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	
	ОбластьСтрокаДокумента = Макет.ПолучитьОбласть("СтрокаДокументРаспределения");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоги  = Макет.ПолучитьОбласть("Итоги");
	
	Пока ВыборкаИтоги.Следующий() Цикл
		Если Отчет.ВыручкаПоДокументам Тогда
			ВыборкаДокументы = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
			Пока ВыборкаДокументы.Следующий() Цикл
				
				ОбластьСтрокаДокумента.Параметры.Заполнить(ВыборкаДокументы);
				ОбластьСтрокаДокумента.Параметры.Расшифровка = ВыборкаДокументы.ДокументРаспределения;
				ТабличныйДокумент.Вывести(ОбластьСтрокаДокумента);
				
				ВыборкаСтроки = ВыборкаДокументы.Выбрать();
				Пока ВыборкаСтроки.Следующий() Цикл
	            	ВывестиСтрокуТабличнойЧасти(ТабличныйДокумент, ОбластьСтрока, ВыборкаСтроки);
				КонецЦикла;
			КонецЦикла;
		Иначе
			ВыборкаСтроки=ВыборкаИтоги.Выбрать();
			Пока ВыборкаСтроки.Следующий() Цикл
            	ВывестиСтрокуТабличнойЧасти(ТабличныйДокумент, ОбластьСтрока, ВыборкаСтроки);
			КонецЦикла;
		КонецЕсли;
		
		ОбластьИтоги.Параметры.Заполнить(ВыборкаИтоги);
		ТабличныйДокумент.Вывести(ОбластьИтоги);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчет(ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	НачалоПериода = Отчет.ДатаНачала;
	КонецПериода = Отчет.ДатаКонца;
	
	ТабличныйДокумент.Очистить();
	
	Макет = Отчеты.РаспределениеНДСКосвенныхРасходов.ПолучитьМакет("Таблица");	

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");

	Заголовок = "Распределение сумм НДС по приобретенным ценностям, относящимся к косвенным расходам";
	
	НачалоПериода = ?(Не ЗначениеЗаполнено(Отчет.ДокументРаспределения), НачалоПериода, Отчет.ДокументРаспределения.НачалоПериода);
	КонецПериода  = ?(Не ЗначениеЗаполнено(Отчет.ДокументРаспределения), КонецПериода, УчетНалоговСервер.КонецПериодаПоУчетнойПолитике(Отчет.ДокументРаспределения.Организация, Отчет.ДокументРаспределения.НачалоПериода));
	
	ОбластьЗаголовок.Параметры.Период = "Период: " + ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(КонецПериода)) + ?(Не ЗначениеЗаполнено(Отчет.ДокументРаспределения), "", " по документу """+Отчет.ДокументРаспределения+"""");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = ?(Не ЗначениеЗаполнено(Отчет.ДокументРаспределения), Отчет.Организация.НаименованиеПолное, Отчет.ДокументРаспределения.Организация.НаименованиеПолное);
	ОбластьЗаголовок.Параметры.Заголовок 		   = Заголовок;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + ?(Не ЗначениеЗаполнено(Отчет.ДокументРаспределения), Отчет.Организация.ИНН, Отчет.ДокументРаспределения.Организация.ИНН)+ " / " + 
														  ?(Не ЗначениеЗаполнено(Отчет.ДокументРаспределения), Отчет.Организация.КПП, Отчет.ДокументРаспределения.Организация.КПП);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);

	ВывестиВОтчетДанныеПоБазеРаспределения(ТабличныйДокумент, Макет);
	
	ВывестиВОтчетДанныеПоРаспределениюКосвенныхРасходов(ТабличныйДокумент, Макет);
КонецПроцедуры

&НаСервере
Процедура ПроверитьПериодДокументаРаспределения()
	Если ЗначениеЗаполнено(Отчет.ДокументРаспределения) Тогда
		Если Отчет.ДокументРаспределения.Дата < НачалоДня(Отчет.ДатаНачала) ИЛИ Отчет.ДокументРаспределения.Дата > КонецДня(Отчет.ДатаКонца) Тогда
			Сообщить("Документ распределения не входит в период формирования отчета", СтатусСообщения.Внимание);
			Отчет.ДокументРаспределения=Документы.РаспределениеНДС.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов формы

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="ДатаКонца" Тогда
		Отчет.ДатаНачала=УчетНалоговСервер.НачалоПериодаПоУчетнойПолитике(Отчет.Организация, Отчет.ДатаКонца);
		ПроверитьПериодДокументаРаспределения();
		
	ИначеЕсли Элемент.Имя="Организация" Тогда
		Отчет.ДатаНачала=УчетНалоговСервер.НачалоПериодаПоУчетнойПолитике(Отчет.Организация, Отчет.ДатаКонца);

	ИначеЕсли Элемент.Имя="ДокументРаспределения" Тогда
		Если ЗначениеЗаполнено(Отчет.ДокументРаспределения) Тогда
			ДатаДокумента=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Отчет.ДокументРаспределения, "Дата");
			Если ДатаДокумента < НачалоДня(Отчет.ДатаНачала) ИЛИ ДатаДокумента > КонецДня(Отчет.ДатаКонца) Тогда
				Сообщить("Документ распределения не входит в период формирования отчета", СтатусСообщения.Внимание);
				Отчет.ДокументРаспределения=Неопределено; Возврат;
			КонецЕсли;
			ОрганизацияДокумента=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Отчет.ДокументРаспределения, "Организация");
			Если НЕ ОрганизацияДокумента=Отчет.Организация Тогда
				Отчет.Организация=ОрганизацияДокумента;
				Отчет.ДатаНачала=УчетНалоговСервер.НачалоПериодаПоУчетнойПолитике(Отчет.Организация, Отчет.ДатаКонца);
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.Организация=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(Отчет.ДатаНачала) Тогда
		Отчет.ДатаНачала=НачалоГода(ТекущаяДата());
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(Отчет.ДатаКонца) Тогда
		Отчет.ДатаКонца=ТекущаяДата();
	КонецЕсли;
КонецПроцедуры
