#Если Клиент Тогда
	
Перем Запрос;
Перем ТаблицаДанныхУменьшенияНалогаПоКвартально;


Функция НомерКвартала(ДатаВКвартале)
	
	Возврат Цел(Месяц(КонецКвартала(ДатаВКвартале))/3);
	
КонецФункции

Функция мОписаниеПериода(КонДата = Неопределено) Экспорт
	
	КонДата = ?(КонДата = Неопределено, Период, КонДата);
	Возврат ПредставлениеПериода(НачалоГода(КонДата), КонецДня(КонДата), "ФП = Истина");
	
КонецФункции

Процедура ВывестиИтогиЗаКвартал(ТекКвартал, ПоследнийКварталПериода, Макет, ДокументРезультат)
	
	Секция = Макет.ПолучитьОбласть("Итого|Основная");
	Попытка Секция.Параметры.ПечТекстИтогов = "Итого за " + РО.ПреобразоватьЧислоВРимскуюНотацию(ТекКвартал, Истина) + " квартал";
	Исключение
	КонецПопытки; 

	ДокументРезультат.Вывести(Секция);
	
	Секция = Макет.ПолучитьОбласть(?(РежимПечатиГраф4и6 = 3, "Итого|Режим3","Итого|Режим12"));	
	
	ИтогПечДоходыБУ 	= 0;
	ИтогПечРасходыБУ 	= 0;
	ИтогПечДоходы 		= 0;
	ИтогПечРасходы 		= 0;
	ПечДоходыБУ 		= 0;
	ПечРасходыБУ 		= 0;
	ПечДоходы 			= 0;
	ПечРасходы 			= 0;
	
	Для Каждого ИтогиПериода Из Запрос Цикл
		текНомерКвартала=НомерКвартала(ИтогиПериода.Период);
		Если текНомерКвартала <= ТекКвартал Тогда
			ИтогПечДоходыБУ = ИтогПечДоходыБУ + ИтогиПериода.Графа4;
			ИтогПечРасходыБУ= ИтогПечРасходыБУ + ИтогиПериода.Графа6;
			ИтогПечДоходы 	= ИтогПечДоходы + ИтогиПериода.Графа5;
			ИтогПечРасходы 	= ИтогПечРасходы + ИтогиПериода.Графа7;
		КонецЕсли;
		Если текНомерКвартала = ТекКвартал Тогда
			////ПечДоходыБУ 	= ИтогиПериода.Графа4;
			////ПечРасходыБУ 	= ИтогиПериода.Графа6;
			////ПечДоходы 		= ИтогиПериода.Графа5;
			////ПечРасходы 		= ИтогиПериода.Графа7;
			ПечДоходыБУ=ПечДоходыБУ+ИтогиПериода.Графа4;
			ПечРасходыБУ=ПечРасходыБУ+ИтогиПериода.Графа6;
			ПечДоходы=ПечДоходы+ИтогиПериода.Графа5;
			ПечРасходы=ПечРасходы+ИтогиПериода.Графа7;			
		КонецЕсли;
	КонецЦикла;
		
	Если РежимПечатиГраф4и6 < 2 Тогда
		Секция.Параметры.ПечДоходыБУ = ПечДоходыБУ;
		Секция.Параметры.ПечРасходыБУ = ПечРасходыБУ;
	КонецЕсли;
	Секция.Параметры.ПечДоходы = ПечДоходы;
	Секция.Параметры.ПечРасходы = ПечРасходы;						
	ДокументРезультат.Присоединить(Секция);
	
	Если ТекКвартал <> 1 Тогда	
		Секция = Макет.ПолучитьОбласть("Итого|Основная");
		Секция.Параметры.ПечТекстИтогов = "Итого за " + мОписаниеПериода(ДобавитьМесяц(НачалоГода(Период)-1, ТекКвартал*3));
		ДокументРезультат.Вывести(Секция);
		
		Секция = Макет.ПолучитьОбласть(?(РежимПечатиГраф4и6 = 3, "Итого|Режим3","Итого|Режим12"));
		Если РежимПечатиГраф4и6 < 2 Тогда
			Секция.Параметры.ПечДоходыБУ = ИтогПечДоходыБУ;
			Секция.Параметры.ПечРасходыБУ = ИтогПечРасходыБУ;
		КонецЕсли;
		Секция.Параметры.ПечДоходы = ИтогПечДоходы;
		Секция.Параметры.ПечРасходы = ИтогПечРасходы;
		ДокументРезультат.Присоединить(Секция);
	КонецЕсли;
	
	Если ТекКвартал <> ПоследнийКварталПериода Тогда
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
КонецПроцедуры

Функция ВыделятьНДС(УказаннаяОрганизация) Экспорт
	
	Результат = Истина;  Отказ = Ложь;

	Если ЗначениеЗаполнено(УказаннаяОрганизация) Тогда
		УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(Период, Отказ, УказаннаяОрганизация);
		Если Не Отказ Тогда
			Если УчетнаяПолитика.УСН Тогда
				Если УчетнаяПолитика.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
					Результат = (УчетнаяПолитика.ПорядокПризнанияРасходовПоНДС = Перечисления.ПорядокПризнанияРасходовПоНДС.ПоОплатеПоставщику);
				КонецЕсли;
			КонецЕсли; 
		КонецЕсли;	
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Процедура ПечатьТитульногоЛиста(ДокументРезультат)

	ДокументРезультат.Очистить();
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_ТитульныйЛист";
	
	Если Период >= Дата("20130101") Тогда
		Секция = ПолучитьМакет("ТитульныйЛист_135н");
    ИначеЕсли Период >= Дата("20090101") Тогда
		Секция = ПолучитьМакет("ТитульныйЛист_154н");
	ИначеЕсли Период >= Дата("20060101") Тогда
		Секция = ПолучитьМакет("ТитульныйЛист_167н");
	Иначе
		Секция = ПолучитьМакет("ТитульныйЛист");
	КонецЕсли;
	
	Сведения = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Организация,,);
	
	Секция.Параметры.НаПериод         = "за " + Формат(Год(Период), "ЧГ=") + " год";
	Секция.Параметры.Год=Год(ТекущаяДата());
	Секция.Параметры.Месяц=Месяц(ТекущаяДата());
	Секция.Параметры.Число=День(ТекущаяДата());
	Секция.Параметры.ПолноеНаименованиеОрганизации = ПечатныеФормыСервер.ОписаниеОрганизации(Сведения, "ПолноеНаименование");;
	Секция.Параметры.КодОКПО          = Сведения.КодПоОКПО;
	Если Период < Дата("20060101") Тогда
		Секция.Параметры.ИННОрганизации   = Сведения.ИНН + "/" + Сведения.КПП;
		Секция.Параметры.КодОКДП          = "";
		Если РежимПечатиГраф4и6 = 3 Тогда
			Секция.Параметры.РедакцияПриказаМНС = "";
		Иначе
			Секция.Параметры.РедакцияПриказаМНС = "(в редакции приказа МНС РФ от ""26"" марта 2003 №БГ-3-22/135)";
		КонецЕсли;
	ИначеЕсли Период < Дата("20090101") Тогда
		Если РежимПечатиГраф4и6 = 3 Тогда
			Секция.Параметры.РедакцияПриказаМНС = "(в ред. Приказа Минфина РФ от 27.11.2006 № 152н)";
		Иначе
			Секция.Параметры.РедакцияПриказаМНС = "";
		КонецЕсли;
	КонецЕсли;
		
	//Соберем банковские счета
	Счета = "";
	
	ЗапросБС = Новый Запрос;
	ЗапросБС.УстановитьПараметр("Владелец", Организация);
	ЗапросБС.УстановитьПараметр("НачДата", НачалоГода(Период));
	ЗапросБС.УстановитьПараметр("КонДата", КонецГода(Период));
	ЗапросБС.УстановитьПараметр("ПустаяДата", Дата("00010101"));
	ЗапросБС.Текст =
	"ВЫБРАТЬ
	|	БанковскиеСчета.НомерСчета КАК Номер,
	|	БанковскиеСчета.Банк.Наименование КАК Банк
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Владелец = &Владелец
	|	И (БанковскиеСчета.ДатаОткрытия = &ПустаяДата ИЛИ БанковскиеСчета.ДатаОткрытия <= &КонДата)
	|	И (БанковскиеСчета.ДатаЗакрытия = &ПустаяДата ИЛИ БанковскиеСчета.ДатаОткрытия >= &НачДата)";
	
	
	БанковскиеСчета = ЗапросБС.Выполнить().Выгрузить();
	Для Каждого Строка Из БанковскиеСчета Цикл
		НомСч = СокрЛП(Строка.Номер);
		Банк  = СокрЛП(Строка.Банк);
		Счета = Счета+"№ "+НомСч+" в "+Банк+", ";
	КонецЦикла;	                         
	Счета = Лев(Счета,СтрДлина(Счета)-2);
	Секция.Параметры.Счета            = Счета;
	
	Отказ = Ложь;
	ПараметрыУчетнойПолитики = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(Период, Отказ, Организация);
	Если НЕ Отказ Тогда
		Секция.Параметры.ОбъектНалогообложения = ПараметрыУчетнойПолитики.ОбъектНалогообложенияУСН;
		Если Период < Дата("20090101") Тогда
			
			Секция.Параметры.ДатаУведомления       = "от " + Формат(ПараметрыУчетнойПолитики.УведомлениеДата, "ДЛФ=ДД");
			Секция.Параметры.НомерУведомления      = "№ " + ПараметрыУчетнойПолитики.УведомлениеНомер;
		КонецЕсли;
	КонецЕсли;
	
	Если Период >= Дата("20060101") Тогда
	//Проверим длинну адреса
		
		СтрокаАдреса = СокрЛП(Сведения.ФактическийАдрес);
		Если СтрДлина(СтрокаАдреса) > 45 Тогда
			ПозицияПереноса = 0;
			СтрокаПоиска = СтрокаАдреса;
			РезультатПоиска = Найти(СтрокаПоиска, ",");
			Пока (РезультатПоиска + ПозицияПереноса < 45) И (РезультатПоиска > 0) Цикл
				ПозицияПереноса = ПозицияПереноса + РезультатПоиска;
				СтрокаПоиска = Прав(СтрокаПоиска, СтрДлина(СтрокаПоиска) - РезультатПоиска);
				РезультатПоиска = Найти(СтрокаПоиска, ",");
			КонецЦикла;
			Если НЕ ПозицияПереноса = 0 Тогда
				Секция.Параметры.АдресОрганизации = Лев(СтрокаАдреса, ПозицияПереноса);
				Секция.Параметры.АдресОрганизации2 = Прав(СтрокаАдреса, СтрДлина(СтрокаАдреса) - ПозицияПереноса);
			Иначе
				СтрокаПоиска = СтрокаАдреса;
				РезультатПоиска = Найти(СтрокаПоиска, " ");
				Пока (РезультатПоиска + ПозицияПереноса < 45) И (РезультатПоиска > 0) Цикл
					ПозицияПереноса = ПозицияПереноса + РезультатПоиска;
					СтрокаПоиска = Прав(СтрокаПоиска, СтрДлина(СтрокаПоиска) - РезультатПоиска);
					РезультатПоиска = Найти(СтрокаПоиска, " ");
				КонецЦикла;
				ПозицияПереноса = ?(ПозицияПереноса = 0, 45, ПозицияПереноса);
				Секция.Параметры.АдресОрганизации = Лев(СтрокаАдреса, ПозицияПереноса);
				Секция.Параметры.АдресОрганизации2 = Прав(СтрокаАдреса, СтрДлина(СтрокаАдреса) - ПозицияПереноса);				
			КонецЕсли;		
			
		Иначе
			Секция.Параметры.АдресОрганизации = Сведения.ФактическийАдрес;
		КонецЕсли;                                                    						
	Иначе 
		Секция.Параметры.АдресОрганизации = Сведения.ФактическийАдрес;
	КонецЕсли;
	
	ДокументРезультат.Вывести(Секция);
	
	Если Период >= Дата("20060101") Тогда
		
		ИНН = Сведения.ИНН;
		КПП = Сведения.КПП;
		
		Если СтрДлина(ИНН) <> 12 Тогда
			// Налогоплательщик - юр. лицо		
			ИНН = "00" + ИНН;		
		Иначе                                     
			// Налогоплательщик - физ. лицо 
			КПП = "";		
		КонецЕсли;
		
		Ном = 1;
		Пока Ном > 0 Цикл
			Если НЕ(Ном > 9) Тогда
				ДокументРезультат.Область("КПП" + Ном).Текст = Сред(КПП, Ном, 1);
			КонецЕсли;
			ИмяОбластиИНН = "ИНН";
			Если Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
				ИмяОбластиИНН = "Пр" + ИмяОбластиИНН;
			КонецЕсли;	
			Если НЕ(Ном > 12) Тогда
				ДокументРезультат.Область(ИмяОбластиИНН + Ном).Текст = ?(Число(ИНН) > 0, Сред(ИНН, Ном, 1), ""); 
				
				Ном = Ном + 1;
				Продолжить;
			КонецЕсли;
			Ном = 0;
		КонецЦикла;
	КонецЕсли;
	
	ДокументРезультат.ТолькоПросмотр = Истина;

КонецПроцедуры

Процедура ПечатьРаздела1(ДокументРезультат)
	
	ДокументРезультат.Очистить();
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел1";
	Макет = ПолучитьМакет("Раздел1");
	
	Секция = Макет.ПолучитьОбласть("Шапка|Основная");
	ДокументРезультат.Вывести(Секция);
	Секция = Макет.ПолучитьОбласть(?(РежимПечатиГраф4и6 = 3, "Шапка|Режим3","Шапка|Режим12"));
	Если РежимПечатиГраф4и6 = 3 Тогда
		Секция = Макет.ПолучитьОбласть("Шапка|Режим3");
		Если Период >= Дата("20060101") Тогда
			Секция.Параметры.Заголовок4 = "Доходы, учитываемые при исчислении налоговой базы"; 
			Секция.Параметры.Заголовок6 = "Расходы, учитываемые при исчислении налоговой базы";
		Иначе
			Секция.Параметры.Заголовок4 = "Доходы"; 
			Секция.Параметры.Заголовок6 = "Расходы";
		КонецЕсли;
	Иначе
		Секция = Макет.ПолучитьОбласть("Шапка|Режим12");
		Если Период >= Дата("20060101") Тогда
			Секция.Параметры.Заголовок5 = "в т.ч. доходы, учитываемые при исчислении налоговой базы"; 
			Секция.Параметры.Заголовок7 = "в т.ч. расходы, учитываемые при исчислении налоговой базы";
		Иначе
			Секция.Параметры.Заголовок5 = "в т.ч. доходы, учитываемые при расчете единого налога"; 
			Секция.Параметры.Заголовок7 = "в т.ч. расходы, учитываемые при расчете единого налога";
		КонецЕсли;
	КонецЕсли;
	
	ДокументРезультат.Присоединить(Секция); 
	ВыделятьНДС = ВыделятьНДС(Организация);

	НачДата = ?(CНачалаГода, НачалоГода(Период), НачалоКвартала(Период));
	КолКварталов = Цел(Месяц(КонецКвартала(Период))/3);
		
	НПП = 1;
	
	Если НачДата <> НачалоГода(Период) Тогда
		
		ЗапросНПП=Новый Запрос();
		ЗапросНПП.УстановитьПараметр("Организация", Организация);
		ЗапросНПП.УстановитьПараметр("Контрагент", Контрагент);
		ЗапросНПП.УстановитьПараметр("НачДата", НачалоГода(Период));
		ЗапросНПП.УстановитьПараметр("КонДата", НачалоКвартала(Период) - 1);
		ЗапросНПП.Текст="
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(*) КАК КоличествоСтрок,
		|	СУММА(ВЫБОР КОГДА КнигаУчетаДоходовИРасходов.НДС <> 0 ТОГДА " + ?((НЕ ВыделятьНДС) И (РежимПечатиНДС = 2), "1", "0") + " ИНАЧЕ 0 КОНЕЦ) КАК КоличествоСтрокНДС
		|ИЗ
		|	РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
		|ГДЕ
		|	КнигаУчетаДоходовИРасходов.Период МЕЖДУ &НачДата И &КонДата
		|	"+?(Контрагент.Пустая(), "", " И КнигаУчетаДоходовИРасходов.Контрагент = &Контрагент")+"
		|	И КнигаУчетаДоходовИРасходов.Организация = &Организация" + ?(РежимПечатиГраф4и6 = 1, "", "
		|	И (КнигаУчетаДоходовИРасходов.Графа5 <> 0 ИЛИ КнигаУчетаДоходовИРасходов.Графа7 <> 0)");
		
		РезультатЗапроса = ЗапросНПП.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ТаблицаРезультата = РезультатЗапроса.Выгрузить();
			НПП = НПП + ТаблицаРезультата.Итог("КоличествоСтрок") + ТаблицаРезультата.Итог("КоличествоСтрокНДС");
		КонецЕсли;	
	КонецЕсли;
	
	ТекКвартал = Цел(Месяц(КонецКвартала(НачДата))/3);
	ПоследнийКварталПериода = НомерКвартала(Период);
	
	ЗапросВыборкаЗаписей=Новый Запрос;
	ЗапросВыборкаЗаписей.УстановитьПараметр("ДатаНачала", НачДата);
	ЗапросВыборкаЗаписей.УстановитьПараметр("ДатаКонца", КонецДня(Период));
	ЗапросВыборкаЗаписей.УстановитьПараметр("Организация", Организация);
	ЗапросВыборкаЗаписей.УстановитьПараметр("Контрагент", Контрагент);
	ЗапросВыборкаЗаписей.Текст="
	|ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходов.Период,
	|	КВАРТАЛ(КнигаУчетаДоходовИРасходов.Период) КАК Квартал,
	|	КнигаУчетаДоходовИРасходов.Регистратор,
	|	КнигаУчетаДоходовИРасходов.Дата КАК Дата,
	|	КнигаУчетаДоходовИРасходов.Графа4,
	|	КнигаУчетаДоходовИРасходов.Графа5,
	|	КнигаУчетаДоходовИРасходов.Графа6,
	|	КнигаУчетаДоходовИРасходов.Графа7,
	|	КнигаУчетаДоходовИРасходов.НДС,
	|	КнигаУчетаДоходовИРасходов.ДоходЕНВД,
	|	КнигаУчетаДоходовИРасходов.Патент,
	|	КнигаУчетаДоходовИРасходов.Графа2,
	|	КнигаУчетаДоходовИРасходов.Содержание,
	|	КнигаУчетаДоходовИРасходов.СтрокаДокумента
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|ГДЕ
	|	КнигаУчетаДоходовИРасходов.Период МЕЖДУ &ДатаНачала И &ДатаКонца
	|	И КнигаУчетаДоходовИРасходов.Организация = &Организация
	|	"+?(Контрагент.Пустая(), "", " И КнигаУчетаДоходовИРасходов.Контрагент = &Контрагент")+"
	|
	|УПОРЯДОЧИТЬ ПО
	|	Квартал,
	|	Дата
	|";
	ВыборкаЗаписей=ЗапросВыборкаЗаписей.Выполнить().Выбрать();
	Пока ВыборкаЗаписей.Следующий() Цикл
		Если ВыборкаЗаписей.Патент<>0 Тогда Продолжить; КонецЕсли; 
        КварталЗаписи = ВыборкаЗаписей.Квартал;
		Пока КварталЗаписи > ТекКвартал Цикл
			ВывестиИтогиЗаКвартал(ТекКвартал, ПоследнийКварталПериода, Макет, ДокументРезультат);
			ТекКвартал = ТекКвартал + 1;
		КонецЦикла;
		
		Секция = Макет.ПолучитьОбласть("Строка|Основная");
		Секция.Параметры.НомерПП = НПП;
		Секция.Параметры.ТекРасшифровка= ВыборкаЗаписей.Регистратор;
		Секция.Параметры.ПечДатаНомерДок = ВыборкаЗаписей.Графа2;
		Если НЕ ЗначениеЗаполнено(ВыборкаЗаписей.Графа2) Тогда
			НомерДокумента=СокрЛП(ВыборкаЗаписей.Регистратор.Номер);
			ДатаДокумента=Формат(ВыборкаЗаписей.Регистратор.Дата,"ДФ=dd.MM.yyyy");
			Если ТипЗнч(ВыборкаЗаписей.Регистратор.Ссылка)=Тип("ДокументСсылка.ПлатежноеПоручениеВходящее") ИЛИ ТипЗнч(ВыборкаЗаписей.Регистратор.Ссылка)=Тип("ДокументСсылка.ПлатежныйОрдерПоступлениеДенежныхСредств") Тогда
				Если ЗначениеЗаполнено(ВыборкаЗаписей.Регистратор.НомерВходящегоДокумента) Тогда
					НомерДокумента=Строка(ВыборкаЗаписей.Регистратор.НомерВходящегоДокумента);
				КонецЕсли;	
				Если ЗначениеЗаполнено(ВыборкаЗаписей.Регистратор.ДатаВходящегоДокумента) Тогда
					ДатаДокумента=Формат(ВыборкаЗаписей.Регистратор.ДатаВходящегоДокумента,"ДФ=dd.MM.yyyy");
				КонецЕсли;	
			КонецЕсли;	
			Секция.Параметры.ПечДатаНомерДок ="№ "+НомерДокумента+" от "+ДатаДокумента;
		КонецЕсли;	
		Секция.Параметры.ПечСодержОпер = ВыборкаЗаписей.Содержание;
		Если НЕ ЗначениеЗаполнено(ВыборкаЗаписей.Содержание) Тогда
			МетаданныеДокумента=ВыборкаЗаписей.Регистратор.Метаданные();
			стрВидДкумента=МетаданныеДокумента.Имя;
			Если НЕ ВыборкаЗаписей.Графа4=0 ИЛИ НЕ ВыборкаЗаписей.Графа5=0 Тогда
				стрСодержание = МетаданныеДокумента.Представление()+". ";
			Иначе
				стрСодержание="Принятие расходов: "+МетаданныеДокумента.Представление()+". ";
			КонецЕсли;	
			Секция.Параметры.ПечСодержОпер = стрСодержание;
		КонецЕсли;	
		
		Если (РежимПечатиГраф4и6 < 2) Тогда
			//Выводим все строки
		ИначеЕсли НЕ ЗначениеЗаполнено(ВыборкаЗаписей.Графа5) И НЕ ЗначениеЗаполнено(ВыборкаЗаписей.Графа7) Тогда
			Продолжить;
		КонецЕсли;
				
		ДокументРезультат.Вывести(Секция);

		НДСрасходовБУ = 0;
		
		Секция = Макет.ПолучитьОбласть(?(РежимПечатиГраф4и6 = 3, "Строка|Режим3","Строка|Режим12"));
		Если РежимПечатиГраф4и6 < 2 Тогда
			Секция.Параметры.ПечДоходыБУ = ВыборкаЗаписей.Графа4;
			Если (РежимПечатиНДС = 2) и (ВыборкаЗаписей.Графа6 > 0) и (ВыборкаЗаписей.Графа7 > 0) и (ВыборкаЗаписей.НДС > 0) и (НЕ ВыделятьНДС) Тогда 
				НДСрасходовБУ  = ?(ВыборкаЗаписей.Графа6 >= ВыборкаЗаписей.Графа7, ВыборкаЗаписей.НДС, ВыборкаЗаписей.НДС*ВыборкаЗаписей.Графа6/ВыборкаЗаписей.Графа7);
				Секция.Параметры.ПечРасходыБУ = ВыборкаЗаписей.Графа6 - НДСрасходовБУ;
			Иначе
				Секция.Параметры.ПечРасходыБУ = ВыборкаЗаписей.Графа6;
			КонецЕсли;
		КонецЕсли;
		
		Секция.Параметры.ПечДоходы = ВыборкаЗаписей.Графа5;
		Если (ВыборкаЗаписей.НДС = 0) ИЛИ (ВыделятьНДС) Тогда
			Секция.Параметры.ПечРасходы = ВыборкаЗаписей.Графа7;
			ДокументРезультат.Присоединить(Секция);
		ИначеЕсли РежимПечатиНДС = 1 Тогда
			Секция.Параметры.ПечРасходы = "" + Формат(ВыборкаЗаписей.Графа7, "ЧДЦ=2") + "
			|в т.ч. НДС
			|" + Формат(ВыборкаЗаписей.НДС, "ЧДЦ=2");
			ДокументРезультат.Присоединить(Секция);
		Иначе // РежимПечатиНДС = 2
			Секция.Параметры.ПечРасходы = ВыборкаЗаписей.Графа7 - ВыборкаЗаписей.НДС;
			ДокументРезультат.Присоединить(Секция);
		КонецЕсли;
		
		//Если ВыводитьРасшифровки Тогда
		//	ЕстьШапка = Ложь;
		//	ВыборкаРасшифровки = РегистрыСведений.РасшифровкаКУДиР.ВыбратьПоРегистратору(ВыборкаЗаписей.Регистратор);
		//	Пока ВыборкаРасшифровки.Следующий() Цикл
		//		Если ВыборкаРасшифровки.СтрокаДокумента <> ВыборкаЗаписей.СтрокаДокумента Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		Если РежимПечатиНДС = 2 И (НЕ ВыделятьНДС) И ВыборкаЗаписей.НДС <> 0 Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		Если НЕ ЕстьШапка Тогда
		//			
		//			ДокументРезультат.НачатьГруппуСтрок("Расшифровка расходов строки №" + Строка(НПП), Ложь);
		//			
		//			Секция = Макет.ПолучитьОбласть(?(РежимПечатиГраф4и6 = 3, "ШапкаРасшифровки3","ШапкаРасшифровки12"));
		//			Секция.Параметры.НомерПП = НПП;
		//			//Секция = Макет.ПолучитьОбласть("ПодвалРасшифровки");
		//							
		//			ДокументРезультат.Вывести(Секция);
		//			
		//			ЕстьШапка = Истина;
		//		КонецЕсли;
		//		
		//		Секция = Макет.ПолучитьОбласть(?(РежимПечатиГраф4и6 = 3, "СтрокаРасшифровки3","СтрокаРасшифровки12"));
		//		Секция.Параметры.НомерПП 	   = Строка(НПП)+"."+ВыборкаРасшифровки.СтрокаРасхода;
		//		Секция.Параметры.ПечСодержОпер = ВыборкаРасшифровки.Содержание;
		//		Если ЗначениеЗаполнено(ВыборкаРасшифровки.РеквизитыДокументаОплаты) Тогда
		//			Секция.Параметры.ПечДатаНомерОплаты	= "Оплачено: "+НалоговыйУчет.ПолучитьОписаниеСодержанияКУДиР(ВыборкаРасшифровки.РеквизитыДокументаОплаты);
		//			Секция.Параметры.ДокОплаты = ВыборкаРасшифровки.РеквизитыДокументаОплаты;
		//		КонецЕсли;
		//		Секция.Параметры.ПечРасходы    = ВыборкаРасшифровки.Графа7;
		//		
		//		ДокументРезультат.Вывести(Секция);
		//		
		//	КонецЦикла;
		//	Если ЕстьШапка Тогда
		//		Секция = Макет.ПолучитьОбласть("ПодвалРасшифровки");
		//		ДокументРезультат.Вывести(Секция);
		//		ДокументРезультат.ЗакончитьГруппуСтрок(); 
		//	КонецЕсли;
		//КонецЕсли;
		
		//Выведем строку НДС
		Если РежимПечатиНДС = 2 И ВыборкаЗаписей.НДС <> 0 И (НЕ ВыделятьНДС) Тогда
			
			НПП = НПП + 1;
				
			Секция = Макет.ПолучитьОбласть("Строка|Основная");
			Секция.Параметры.НомерПП = НПП;
			Секция.Параметры.ТекРасшифровка= ВыборкаЗаписей.Регистратор;
			Секция.Параметры.ПечДатаНомерДок = ВыборкаЗаписей.Графа2;
			Секция.Параметры.ПечСодержОпер = ВыборкаЗаписей.Содержание +" (НДС)";
			ДокументРезультат.Вывести(Секция);
			Секция = Макет.ПолучитьОбласть(?(РежимПечатиГраф4и6 = 3, "Строка|Режим3","Строка|Режим12"));
			Если РежимПечатиГраф4и6 < 2 Тогда
				Секция.Параметры.ПечРасходыБУ = НДСрасходовБУ;
			КонецЕсли;
			Секция.Параметры.ПечРасходы = ВыборкаЗаписей.НДС;
			ДокументРезультат.Присоединить(Секция);
			
			//Если ВыводитьРасшифровки Тогда
			//	ЕстьШапка = Ложь;
			//	ВыборкаРасшифровки = РегистрыСведений.РасшифровкаКУДиР.ВыбратьПоРегистратору(ВыборкаЗаписей.Регистратор);
			//	Пока ВыборкаРасшифровки.Следующий() Цикл
			//		Если ВыборкаРасшифровки.СтрокаДокумента <> ВыборкаЗаписей.СтрокаДокумента Тогда
			//			Продолжить;
			//		КонецЕсли;
			//		Если РежимПечатиНДС = 2 И ВыборкаЗаписей.НДС <> 0 Тогда
			//			Продолжить;
			//		КонецЕсли;
			//		Если НЕ ЕстьШапка Тогда
			//			
			//			ДокументРезультат.НачатьГруппуСтрок("Расшифровка расходов строки №" + Строка(НПП), Ложь);
			//			
			//			Секция = Макет.ПолучитьОбласть(?(РежимПечатиГраф4и6 = 3, "ШапкаРасшифровки3","ШапкаРасшифровки12"));
			//			Секция.Параметры.НомерПП = НПП;
			//			//Секция = Макет.ПолучитьОбласть("ПодвалРасшифровки");
			//			
			//			ДокументРезультат.Вывести(Секция);
			//			
			//			ЕстьШапка = Истина;
			//		КонецЕсли;
			//		
			//		Секция = Макет.ПолучитьОбласть(?(РежимПечатиГраф4и6 = 3, "СтрокаРасшифровки3","СтрокаРасшифровки12"));
			//		Секция.Параметры.НомерПП 	   = Строка(НПП) + "." + ВыборкаРасшифровки.СтрокаРасхода;
			//		Секция.Параметры.ПечСодержОпер = ВыборкаРасшифровки.Содержание;
			//		Если ЗначениеЗаполнено(ВыборкаРасшифровки.РеквизитыДокументаОплаты) Тогда
			//			Секция.Параметры.ПечДатаНомерОплаты	= "Оплачено: " + НалоговыйУчет.ПолучитьОписаниеСодержанияКУДиР(ВыборкаРасшифровки.РеквизитыДокументаОплаты);
			//			Секция.Параметры.ДокОплаты = ВыборкаРасшифровки.РеквизитыДокументаОплаты;
			//		КонецЕсли;
			//		Секция.Параметры.ПечРасходы    = ВыборкаРасшифровки.Графа7;
			//		
			//		ДокументРезультат.Вывести(Секция);
			//		
			//	КонецЦикла;
			//	Если ЕстьШапка Тогда
			//		Секция = Макет.ПолучитьОбласть("ПодвалРасшифровки");
			//		ДокументРезультат.Вывести(Секция);
			//		ДокументРезультат.ЗакончитьГруппуСтрок(); 
			//	КонецЕсли;
			//КонецЕсли;
			
		КонецЕсли;
				
		НПП = НПП + 1;
		
	КонецЦикла;
		
	Пока (ПоследнийКварталПериода >= ТекКвартал) Цикл
		ВывестиИтогиЗаКвартал(ТекКвартал, ПоследнийКварталПериода, Макет, ДокументРезультат);
		ТекКвартал = ТекКвартал + 1;
	КонецЦикла;
	
	// Выведем подвал
	Если НомерКвартала(Период) = 4 Тогда
		Секция = Макет.ПолучитьОбласть("Справка");
		Секция.Параметры.ПечДоходы  = Запрос.Итог("Графа5");
		Секция.Параметры.ПечРасходы = Запрос.Итог("Графа7");
		
		ДокументРезультат.Вывести(Секция);
	КонецЕсли;
		
	ДокументРезультат.ТолькоПросмотр = Истина;
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(6,,6,);
	
	СохранитьЗначение("КУДиР_РежимПечатиГраф4и6", РежимПечатиГраф4и6);
	СохранитьЗначение("КУДиР_РежимПечатиНДС", РежимПечатиНДС);

КонецПроцедуры

Процедура ПечатьРаздела2(ДокументРезультат)
	
	ДокументРезультат.Очистить();
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.Автомасштаб = Истина;
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел2";
	
	Если Период >= Дата("20130101") Тогда
		Макет = ПолучитьМакет("Раздел2_135н");
	ИначеЕсли Период >= Дата("20090101") Тогда
		Макет = ПолучитьМакет("Раздел2_154н");
	ИначеЕсли Период >= Дата("20060101") Тогда
		Макет = ПолучитьМакет("Раздел2_167н");
	Иначе
		Макет = ПолучитьМакет("Раздел2");
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.ЗаПериод = "за " + мОписаниеПериода();
	ДокументРезультат.Вывести(Секция);
	
	НПП = 1;
	
	ЗапросОС = Новый Запрос;
	ЗапросОС.УстановитьПараметр("НачГода", НачалоГода(Период));
	ЗапросОС.УстановитьПараметр("НачДата", НачалоКвартала(Период));
	ЗапросОС.УстановитьПараметр("КонДата", КонецДня(Период));
	ЗапросОС.УстановитьПараметр("Организация", Организация);
	ЗапросОС.УстановитьПараметр("Контрагент", Контрагент);	
	ЗапросОС.Текст="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	КнигаУчетаДоходовИРасходовОС.ОсновноеСредство КАК ОсновноеСредство,
	|	КнигаУчетаДоходовИРасходовОС.ДокументМодернизации КАК ДокументМодернизации,
    |	КнигаУчетаДоходовИРасходовОС.ОсновноеСредство.ДатаВводаВЭкспуатацию КАК Графа3_ДатаВводаВЭксплуатацию,
    |	КнигаУчетаДоходовИРасходовОС.ДатаОплаты КАК ДатаОплаты,
    |	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа5_ПервоначальнаяСтоимость) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа5_ПервоначальнаяСтоимость КОНЕЦ) КАК Графа5_ПервоначальнаяСтоимость,
    |	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа6_ОстаточнаяСтоимость) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа6_ОстаточнаяСтоимость КОНЕЦ) КАК Графа6_ОстаточнаяСтоимость,
	|	КнигаУчетаДоходовИРасходовОС.Графа4_ГосударственнаяРегистрация КАК Графа4_ГосударственнаяРегистрация,
	|	КнигаУчетаДоходовИРасходовОС.Графа7_СрокПолезногоИспользования КАК Графа7_СрокПолезногоИспользования,
    |	КнигаУчетаДоходовИРасходовОС.Графа8_КолКварталовВОтчетномПериоде КАК Графа8_КолКварталовВОтчетномПериоде,
    |	КнигаУчетаДоходовИРасходовОС.Графа9_КолКварталовВНалПериоде КАК Графа9_КолКварталовВНалПериоде,
    |	КнигаУчетаДоходовИРасходовОС.Графа10_ДоляРасходовЗаНалПериод КАК Графа10_ДоляРасходовЗаНалПериод,
    |	КнигаУчетаДоходовИРасходовОС.Графа11_ДоляРасходовЗаКвартал КАК Графа11_ДоляРасходовЗаКвартал,
    |	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа12_СуммаРасходовЗаОтчетнПериод) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа12_СуммаРасходовЗаОтчетнПериод КОНЕЦ) КАК Графа12_СуммаРасходовЗаОтчетнПериод,
    |	СУММА(ВЫБОР КОГДА ((КнигаУчетаДоходовИРасходовОС.Графа13_СуммаРасходовЗаКвартал) ЕСТЬ NULL ИЛИ (КнигаУчетаДоходовИРасходовОС.Период < &НачДата))  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа13_СуммаРасходовЗаКвартал КОНЕЦ) КАК Графа13_СуммаРасходовЗаКвартал,
    |	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа14_РасходыПрошлыхПериодов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа14_РасходыПрошлыхПериодов КОНЕЦ) КАК Графа14_РасходыПрошлыхПериодов,
    |	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов КОНЕЦ) КАК Графа15_ОстатокРасходов,
    |	КнигаУчетаДоходовИРасходовОС.ОсновноеСредство.Код КАК ИнвентарныйНомер
    |ИЗ
    |	РегистрНакопления.КнигаУчетаДоходовИРасходовОС КАК КнигаУчетаДоходовИРасходовОС
    |
    |ГДЕ
    |	((КнигаУчетаДоходовИРасходовОС.Период МЕЖДУ &НачДата И &КонДата) ИЛИ 
	|	((ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов КОНЕЦ) = 0) И 
	|	(КнигаУчетаДоходовИРасходовОС.Период МЕЖДУ &НачГода И &КонДата)) И
    |	КнигаУчетаДоходовИРасходовОС.Организация = &Организация
	//***|	"+?(Контрагент.Пустая(), "", "И КнигаУчетаДоходовИРасходов.Контрагент = &Контрагент")+"
	|
    |СГРУППИРОВАТЬ ПО
    |	КнигаУчетаДоходовИРасходовОС.ОсновноеСредство,
	|	КнигаУчетаДоходовИРасходовОС.ОсновноеСредство.ДатаВводаВЭкспуатацию,
	|	КнигаУчетаДоходовИРасходовОС.ДокументМодернизации,
    |	КнигаУчетаДоходовИРасходовОС.ДатаОплаты,
    |	КнигаУчетаДоходовИРасходовОС.Графа3_ДатаВводаВЭксплуатацию,
	|	КнигаУчетаДоходовИРасходовОС.Графа4_ГосударственнаяРегистрация,
    |	КнигаУчетаДоходовИРасходовОС.Графа7_СрокПолезногоИспользования,
    |	КнигаУчетаДоходовИРасходовОС.Графа8_КолКварталовВОтчетномПериоде,
    |	КнигаУчетаДоходовИРасходовОС.Графа9_КолКварталовВНалПериоде,
    |	КнигаУчетаДоходовИРасходовОС.Графа10_ДоляРасходовЗаНалПериод,
    |	КнигаУчетаДоходовИРасходовОС.Графа11_ДоляРасходовЗаКвартал,
    |	КнигаУчетаДоходовИРасходовОС.ОсновноеСредство.Код
	|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	КнигаУчетаДоходовИРасходовОС.НематериальныйАктив,
	//|	NULL,
	//|	КнигаУчетаДоходовИРасходовОС.Графа3_ДатаПринятияКУчету,
	//|	КнигаУчетаДоходовИРасходовОС.ДатаОплаты,
	//|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа5_ПервоначальнаяСтоимость) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа5_ПервоначальнаяСтоимость КОНЕЦ),
	//|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа6_ОстаточнаяСтоимость) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа6_ОстаточнаяСтоимость КОНЕЦ),
	//|	0,
	//|	КнигаУчетаДоходовИРасходовОС.Графа7_СрокПолезногоИспользования,
	//|	КнигаУчетаДоходовИРасходовОС.Графа8_КолКварталовВОтчетномПериоде,
	//|	КнигаУчетаДоходовИРасходовОС.Графа9_КолКварталовВНалПериоде,
	//|	КнигаУчетаДоходовИРасходовОС.Графа10_ДоляРасходовЗаНалПериод,
	//|	КнигаУчетаДоходовИРасходовОС.Графа11_ДоляРасходовЗаКвартал,
	//|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа12_СуммаРасходовЗаОтчетнПериод) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа12_СуммаРасходовЗаОтчетнПериод КОНЕЦ),
	//|	СУММА(ВЫБОР КОГДА ((КнигаУчетаДоходовИРасходовОС.Графа13_СуммаРасходовЗаКвартал) ЕСТЬ NULL ИЛИ (КнигаУчетаДоходовИРасходовОС.Период < &НачДата))  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа13_СуммаРасходовЗаКвартал КОНЕЦ),
	//|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа14_РасходыПрошлыхПериодов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа14_РасходыПрошлыхПериодов КОНЕЦ),
	//|	СУММА(ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов КОНЕЦ),
	//|	0
	//|ИЗ
	//|	РегистрНакопления.КнигаУчетаДоходовИРасходовНМА КАК КнигаУчетаДоходовИРасходовОС
	//|
	//|ГДЕ
	//|	((КнигаУчетаДоходовИРасходовОС.Период МЕЖДУ &НачДата И &КонДата) ИЛИ 
	//|	((ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовОС.Графа15_ОстатокРасходов КОНЕЦ) = 0) И 
	//|	(КнигаУчетаДоходовИРасходовОС.Период МЕЖДУ &НачГода И &КонДата)) И
	//|	КнигаУчетаДоходовИРасходовОС.Организация = &Организация
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	КнигаУчетаДоходовИРасходовОС.НематериальныйАктив,
	//|	КнигаУчетаДоходовИРасходовОС.ДатаОплаты,
	//|	КнигаУчетаДоходовИРасходовОС.Графа3_ДатаПринятияКУчету,
	//|	КнигаУчетаДоходовИРасходовОС.Графа7_СрокПолезногоИспользования,
	//|	КнигаУчетаДоходовИРасходовОС.Графа8_КолКварталовВОтчетномПериоде,
	//|	КнигаУчетаДоходовИРасходовОС.Графа9_КолКварталовВНалПериоде,
	//|	КнигаУчетаДоходовИРасходовОС.Графа10_ДоляРасходовЗаНалПериод,
	//|	КнигаУчетаДоходовИРасходовОС.Графа11_ДоляРасходовЗаКвартал
    |
    |УПОРЯДОЧИТЬ ПО
    |	ОсновноеСредство,
	|	ДокументМодернизации,
    |	Графа7_СрокПолезногоИспользования,
    |	Графа8_КолКварталовВОтчетномПериоде УБЫВ,
    |	Графа9_КолКварталовВНалПериоде УБЫВ,
    |	Графа10_ДоляРасходовЗаНалПериод,
    |	Графа11_ДоляРасходовЗаКвартал,
    |	ДатаОплаты
	|";
	 
	 ТаблицаРезультата  = ЗапросОС.Выполнить().Выгрузить();
	 ТаблицаОтчета = ТаблицаРезультата.Скопировать();
	 ТаблицаОтчета.Очистить();
	 ТаблицаОтчета.Колонки.Добавить("ПечДатаОплаты");
	 СтрокаТаблицыОтчета = Неопределено;
	 СписокДат = "";
	 ДЛЯ КАЖДОГО СтрокаТаблицы ИЗ ТаблицаРезультата Цикл
		Если СтрокаТаблицыОтчета = Неопределено Тогда
			СтрокаТаблицыОтчета = ТаблицаОтчета.Добавить();
		КонецЕсли;
		Если (СтрокаТаблицыОтчета.ОсновноеСредство					 = СтрокаТаблицы.ОсновноеСредство) И
			(СтрокаТаблицыОтчета.ДокументМодернизации 				 = СтрокаТаблицы.ДокументМодернизации) И
			(СтрокаТаблицыОтчета.Графа3_ДатаВводаВЭксплуатацию 		 = СтрокаТаблицы.Графа3_ДатаВводаВЭксплуатацию) И
			(СтрокаТаблицыОтчета.Графа7_СрокПолезногоИспользования   = СтрокаТаблицы.Графа7_СрокПолезногоИспользования) И
			(СтрокаТаблицыОтчета.Графа8_КолКварталовВОтчетномПериоде = СтрокаТаблицы.Графа8_КолКварталовВОтчетномПериоде) И
			(СтрокаТаблицыОтчета.Графа9_КолКварталовВНалПериоде 	 = СтрокаТаблицы.Графа9_КолКварталовВНалПериоде) И
			(СтрокаТаблицыОтчета.Графа10_ДоляРасходовЗаНалПериод 	 = СтрокаТаблицы.Графа10_ДоляРасходовЗаНалПериод) И
			(СтрокаТаблицыОтчета.Графа11_ДоляРасходовЗаКвартал 		 = СтрокаТаблицы.Графа11_ДоляРасходовЗаКвартал) Тогда
			
			СтрокаТаблицыОтчета.Графа5_ПервоначальнаяСтоимость 		= СтрокаТаблицыОтчета.Графа5_ПервоначальнаяСтоимость + СтрокаТаблицы.Графа5_ПервоначальнаяСтоимость;
			СтрокаТаблицыОтчета.Графа6_ОстаточнаяСтоимость 			= СтрокаТаблицыОтчета.Графа6_ОстаточнаяСтоимость + СтрокаТаблицы.Графа6_ОстаточнаяСтоимость;
			СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод = СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод + СтрокаТаблицы.Графа12_СуммаРасходовЗаОтчетнПериод;
			СтрокаТаблицыОтчета.Графа13_СуммаРасходовЗаКвартал 		= СтрокаТаблицыОтчета.Графа13_СуммаРасходовЗаКвартал + СтрокаТаблицы.Графа13_СуммаРасходовЗаКвартал;
			СтрокаТаблицыОтчета.Графа14_РасходыПрошлыхПериодов 		= СтрокаТаблицыОтчета.Графа14_РасходыПрошлыхПериодов + СтрокаТаблицы.Графа14_РасходыПрошлыхПериодов;
			СтрокаТаблицыОтчета.Графа15_ОстатокРасходов 			= СтрокаТаблицыОтчета.Графа15_ОстатокРасходов + СтрокаТаблицы.Графа15_ОстатокРасходов;
			
			СписокДат = СписокДат + Формат(СтрокаТаблицы.ДатаОплаты, "ДФ=дд.ММ.гггг") + ", ";
		Иначе
			СтрокаТаблицыОтчета.ПечДатаОплаты = ?(Прав(СписокДат,2)=", ",Лев(СписокДат,СтрДлина(СписокДат)-2),СписокДат);
			
			СтрокаТаблицыОтчета 									= ТаблицаОтчета.Добавить();
			СтрокаТаблицыОтчета.ОсновноеСредство 					= СтрокаТаблицы.ОсновноеСредство;
			СтрокаТаблицыОтчета.ДокументМодернизации 				= СтрокаТаблицы.ДокументМодернизации;
			СтрокаТаблицыОтчета.ИнвентарныйНомер 					= СтрокаТаблицы.ИнвентарныйНомер;
			СтрокаТаблицыОтчета.Графа3_ДатаВводаВЭксплуатацию 		= СтрокаТаблицы.Графа3_ДатаВводаВЭксплуатацию;
			СтрокаТаблицыОтчета.Графа4_ГосударственнаяРегистрация	= СтрокаТаблицы.Графа4_ГосударственнаяРегистрация;
			СтрокаТаблицыОтчета.Графа7_СрокПолезногоИспользования 	= СтрокаТаблицы.Графа7_СрокПолезногоИспользования;
			СтрокаТаблицыОтчета.Графа8_КолКварталовВОтчетномПериоде = СтрокаТаблицы.Графа8_КолКварталовВОтчетномПериоде;
			СтрокаТаблицыОтчета.Графа9_КолКварталовВНалПериоде 		= СтрокаТаблицы.Графа9_КолКварталовВНалПериоде;
			СтрокаТаблицыОтчета.Графа10_ДоляРасходовЗаНалПериод 	= СтрокаТаблицы.Графа10_ДоляРасходовЗаНалПериод;
			СтрокаТаблицыОтчета.Графа11_ДоляРасходовЗаКвартал 		= СтрокаТаблицы.Графа11_ДоляРасходовЗаКвартал;
			
			СтрокаТаблицыОтчета.Графа5_ПервоначальнаяСтоимость 		= СтрокаТаблицы.Графа5_ПервоначальнаяСтоимость;
			СтрокаТаблицыОтчета.Графа6_ОстаточнаяСтоимость			= СтрокаТаблицы.Графа6_ОстаточнаяСтоимость;
			СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод = СтрокаТаблицы.Графа12_СуммаРасходовЗаОтчетнПериод;
			СтрокаТаблицыОтчета.Графа13_СуммаРасходовЗаКвартал 		= СтрокаТаблицы.Графа13_СуммаРасходовЗаКвартал;
			СтрокаТаблицыОтчета.Графа14_РасходыПрошлыхПериодов 		= СтрокаТаблицы.Графа14_РасходыПрошлыхПериодов;
			СтрокаТаблицыОтчета.Графа15_ОстатокРасходов 			= СтрокаТаблицы.Графа15_ОстатокРасходов;
			
			СписокДат = Формат(СтрокаТаблицы.ДатаОплаты, "ДФ=дд.ММ.гггг") + ", ";
		КонецЕсли;
	КонецЦикла;
	Если (НЕ СтрокаТаблицыОтчета = Неопределено) Тогда
		СтрокаТаблицыОтчета.ПечДатаОплаты = ?(Прав(СписокДат,2)=", ",Лев(СписокДат,СтрДлина(СписокДат)-2),СписокДат);
		ТаблицаОтчета.Удалить(0);
	КонецЕсли;
		
	НПП = 1;
	ДЛЯ КАЖДОГО СтрокаТаблицыОтчета ИЗ ТаблицаОтчета Цикл
		
		Секция = Макет.ПолучитьОбласть("Строка");
		Секция.Параметры.ПорядковыйНомер 							= НПП;
		Если ЗначениеЗаполнено(СтрокаТаблицыОтчета.ДокументМодернизации) Тогда
			СтрокаСодержания = СтрокаТаблицыОтчета.ОсновноеСредство.Наименование + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицыОтчета.ИнвентарныйНомер), "", ", инв.№" + СтрокаТаблицыОтчета.ИнвентарныйНомер) + " (" + СтрокаТаблицыОтчета.ДокументМодернизации.СобытиеОС.Наименование + " от " + Формат(СтрокаТаблицыОтчета.ДокументМодернизации.Дата,"ДФ=дд.ММ.гггг") + ")";
		Иначе
			СтрокаСодержания = СтрокаТаблицыОтчета.ОсновноеСредство.Наименование + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицыОтчета.ИнвентарныйНомер), "", ", инв.№" + СтрокаТаблицыОтчета.ИнвентарныйНомер);
		КонецЕсли;
		Секция.Параметры.НаименованиеОС 							= СтрокаСодержания;
		Секция.Параметры.ПечДатаВводаВЭксплуатацию 					= Формат(СтрокаТаблицыОтчета.Графа3_ДатаВводаВЭксплуатацию, "ДФ=дд.ММ.гггг");
		Секция.Параметры.ДатаОплаты 								= СтрокаТаблицыОтчета.ПечДатаОплаты;
		Секция.Параметры.ПервоначальнаяСтоимость 					= СтрокаТаблицыОтчета.Графа5_ПервоначальнаяСтоимость;
		
		Если Период >= Дата("20060101") Тогда
			Если (НомерКвартала(Период) = 4) Тогда
				Секция.Параметры.СуммаРасходовЗаОтчетныйПериод 		= СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицыОтчета.Графа7_СрокПолезногоИспользования) Тогда
				СтрокаТаблицыОтчета.Графа15_ОстатокРасходов	= 0;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаТаблицыОтчета.Графа4_ГосударственнаяРегистрация) Тогда
				Секция.Параметры.Графа4_ГосударственнаяРегистрация	= СтрокаТаблицыОтчета.Графа4_ГосударственнаяРегистрация;
			КонецЕсли;
						
		Иначе
			Секция.Параметры.КоличествоКварталовВОтчетномПериоде 		= СтрокаТаблицыОтчета.Графа8_КолКварталовВОтчетномПериоде;
			Секция.Параметры.СуммаРасходовЗаОтчетныйПериод 				= СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод;
			Секция.Параметры.СуммаРасходовНеВключенныхВСоставРасходов 	= СтрокаТаблицыОтчета.Графа15_ОстатокРасходов;
		КонецЕсли;
		
		Секция.Параметры.ОстаточнаяСтоимость 						= СтрокаТаблицыОтчета.Графа6_ОстаточнаяСтоимость;
		Секция.Параметры.СрокПолезногоИспользования 				= СтрокаТаблицыОтчета.Графа7_СрокПолезногоИспользования;
		
		Секция.Параметры.КоличествоКварталовВНалоговомПериоде 		= СтрокаТаблицыОтчета.Графа9_КолКварталовВНалПериоде;
		Секция.Параметры.ПроцентПринятыхРасходов 					= СтрокаТаблицыОтчета.Графа10_ДоляРасходовЗаНалПериод;
		Секция.Параметры.ПроцентПринятыхРасходовЗаКвартал 			= СтрокаТаблицыОтчета.Графа11_ДоляРасходовЗаКвартал;
		Секция.Параметры.СуммаРасходовЗаПоследнийКвартал 			= СтрокаТаблицыОтчета.Графа13_СуммаРасходовЗаКвартал;
		Секция.Параметры.СуммаРасходовПредыдущихПериодов			= СтрокаТаблицыОтчета.Графа14_РасходыПрошлыхПериодов;
		Секция.Параметры.СуммаРасходовНеВключенныхВСоставРасходов 	= СтрокаТаблицыОтчета.Графа15_ОстатокРасходов;
				
//		СтруктураИсторииСостояний=УправлениеВнеоборотнымиАктивами.ПолучитьИсториюСостоянийНМА(СтрокаТаблицыОтчета.ОсновноеСредство, Организация);

		//ДокументСнятоСУчетаБУ=СтруктураИсторииСостояний.ДокументВыбытия;
		//ДатаВыбытия=СтруктураИсторииСостояний.ДатаВыбытия;
		//
		//ДатаВыбытия = ?(ДатаВыбытия > КонецДня(Период),"", ДатаВыбытия);
		//Секция.Параметры.ПечДатаВыбытия 							= Формат(ДатаВыбытия, "ДФ=дд.ММ.гггг");
		
		ДокументРезультат.Вывести(Секция);
		НПП = НПП + 1;
	КонецЦикла;
	
	Секция = Макет.ПолучитьОбласть("Итог");
		
	Секция.Параметры.ИтогоПервоначальнаяСтоимость 					= ТаблицаОтчета.Итог("Графа5_ПервоначальнаяСтоимость");
	Секция.Параметры.ИтогоОстаточнаяСтоимость 						= ТаблицаОтчета.Итог("Графа6_ОстаточнаяСтоимость");
	
	Если (Период < Дата("20060101")) ИЛИ (НомерКвартала(Период) = 4) Тогда
		Секция.Параметры.ИтогоСуммаРасходовЗаОтчетныйПериод 		= ТаблицаОтчета.Итог("Графа12_СуммаРасходовЗаОтчетнПериод");
	КонецЕсли;
	
	Секция.Параметры.ИтогоСуммаРасходовЗаПоследнийКвартал 			= ТаблицаОтчета.Итог("Графа13_СуммаРасходовЗаКвартал");
	Секция.Параметры.ИтогоСуммаРасходовПредыдущихПериодов 			= ТаблицаОтчета.Итог("Графа14_РасходыПрошлыхПериодов");
	Секция.Параметры.ИтогоСуммаРасходовНеВключенныхВСоставРасходов 	= ТаблицаОтчета.Итог("Графа15_ОстатокРасходов");
	
	ДокументРезультат.Вывести(Секция);
	ДокументРезультат.ТолькоПросмотр = Истина;
	
КонецПроцедуры

Процедура ПечатьРаздела3(ДокументРезультат)
	
	ДокументРезультат.Очистить();
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел3";
		
	Если Период >= Дата("20090101") Тогда
		Если Период >= Дата("20130101") Тогда
			Секция = ПолучитьМакет("Раздел3_135н");
		Иначе
			Секция = ПолучитьМакет("Раздел3_154н");
		КонецЕсли;	
		Секция.Параметры.ЗаПериод = "за " + мОписаниеПериода();
		
	ИначеЕсли Период >= Дата("20060101") Тогда
		Секция = ПолучитьМакет("Раздел3_167н");
		Секция.Параметры.ЗаПериод = "за " + мОписаниеПериода();
		
	Иначе
		Секция = ПолучитьМакет("Раздел3");
		Секция.Параметры.П0103 = 0;
		Секция.Параметры.П0203 = 0;
		Секция.Параметры.П0104 = 0;
		Секция.Параметры.П0204 = 0;
		Секция.Параметры.П0105 = 0;
		Секция.Параметры.П0205 = 0;
		Секция.Параметры.П0106 = 0;
		Секция.Параметры.П0206 = 0;
		
		ПоследнийКварталПериода = НомерКвартала(Период);
		
		Для каждого Квартал из Запрос Цикл
			НомКв = НомерКвартала(Квартал.Период);
			
			Для Сч = НомКв	 по ПоследнийКварталПериода Цикл
				ИмПар = "П010" + (Сч + 2);
				Секция.Параметры[ИмПар] = Секция.Параметры[ИмПар] + Квартал.Графа5;
				
				ИмПар = "П020" + (Сч + 2);
				Секция.Параметры[ИмПар] = Секция.Параметры[ИмПар] + Квартал.Графа7;
			КонецЦикла;
		КонецЦикла;
		
		Для Сч = 3 по 6 Цикл
			Секция.Параметры["П030" + Сч] = ?((Секция.Параметры["П010" + Сч]-Секция.Параметры["П020" + Сч])>0, Секция.Параметры["П010" + Сч]-Секция.Параметры["П020" + Сч], "");
			Секция.Параметры["П031" + Сч] = ?((Секция.Параметры["П010" + Сч]-Секция.Параметры["П020" + Сч])<0, -(Секция.Параметры["П010" + Сч]-Секция.Параметры["П020" + Сч]), "");
		КонецЦикла;
		
		Секция.Параметры.П0103 = ?(Секция.Параметры.П0103 = 0, "", Секция.Параметры.П0103);
		Секция.Параметры.П0203 = ?(Секция.Параметры.П0203 = 0, "", Секция.Параметры.П0203);
		Секция.Параметры.П0104 = ?(Секция.Параметры.П0104 = 0, "", Секция.Параметры.П0104);
		Секция.Параметры.П0204 = ?(Секция.Параметры.П0204 = 0, "", Секция.Параметры.П0204);
		Секция.Параметры.П0105 = ?(Секция.Параметры.П0105 = 0, "", Секция.Параметры.П0105);
		Секция.Параметры.П0205 = ?(Секция.Параметры.П0205 = 0, "", Секция.Параметры.П0205);
		Секция.Параметры.П0106 = ?(Секция.Параметры.П0106 = 0, "", Секция.Параметры.П0106);
		Секция.Параметры.П0206 = ?(Секция.Параметры.П0206 = 0, "", Секция.Параметры.П0206);
		
		Секция.Параметры.ЗаПериод = "за " + мОписаниеПериода();
		Секция.Параметры.ПериодОтчетаСтр = Формат(Год(Период), "ЧГ=") + " г.";
	КонецЕсли;
		
	ДокументРезультат.Вывести(Секция);
	ДокументРезультат.ТолькоПросмотр = Истина;

КонецПроцедуры

Функция ПолучитьОборотыУменьшенияНалогаПоКвартально(НачалоПериода, КонецПериода)
	ЗапросРаздел4=Новый Запрос;
	ЗапросРаздел4.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ЗапросРаздел4.УстановитьПараметр("КонецПериода", КонецПериода);
	ЗапросРаздел4.УстановитьПараметр("Организация", Организация);
	ЗапросРаздел4.Текст="
	|ВЫБРАТЬ
	|	СУММА(УменьшениеНалога.ПФР) КАК ПФР,
	|	СУММА(УменьшениеНалога.ФСС) КАК ФСС,
	|	СУММА(УменьшениеНалога.ФОМС) КАК ФОМС,
	|	СУММА(УменьшениеНалога.ФСС_НС) КАК ФСС_НС,
	|	СУММА(УменьшениеНалога.Больничные) КАК Больничные,
	|	СУММА(УменьшениеНалога.ДобровольноеСтрахование) КАК Дстрах,
	|	НАЧАЛОПЕРИОДА(УменьшениеНалога.Ссылка.Дата, КВАРТАЛ) КАК Квартал
	|ИЗ
	|	Документ.ФормированиеЗаписейКУДиР.УменьшениеНалога КАК УменьшениеНалога
	|ГДЕ
	|	УменьшениеНалога.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И УменьшениеНалога.Ссылка.Организация = &Организация
	|	И УменьшениеНалога.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(УменьшениеНалога.Ссылка.Дата, КВАРТАЛ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Квартал
	|";
	Возврат ЗапросРаздел4.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьЗаписиУменьшенияНалога(НачалоПериода, КонецПериода, Организация)
	
	ЗапросРаздел4 = Новый Запрос;
	ЗапросРаздел4.Текст = "ВЫБРАТЬ
	|	УменьшениеНалога.ДатаНомер,
	|	УменьшениеНалога.Ссылка.Дата КАК ПериодЗаписи,
	|	УменьшениеНалога.ПериодНачисления КАК ПериодНачисления,
	|	УменьшениеНалога.ПФР КАК ПФР,
	|	УменьшениеНалога.ФСС КАК ФСС,
	|	УменьшениеНалога.ФОМС КАК ФОМС,
	|	УменьшениеНалога.ФСС_НС КАК ФСС_НС,
	|	УменьшениеНалога.Больничные КАК Больничные,
	|	УменьшениеНалога.ДобровольноеСтрахование КАК ДСтрах
	|ИЗ
	|	Документ.ФормированиеЗаписейКУДиР.УменьшениеНалога КАК УменьшениеНалога
	|ГДЕ
	|	УменьшениеНалога.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И УменьшениеНалога.Ссылка.Организация = &Организация
	|	И УменьшениеНалога.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодЗаписи,
	|	ПериодНачисления,
	|	УменьшениеНалога.НомерСтроки";
	
	ЗапросРаздел4.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ЗапросРаздел4.УстановитьПараметр("КонецПериода", КонецПериода);
	ЗапросРаздел4.УстановитьПараметр("Организация", Организация);
	
	Возврат ЗапросРаздел4.Выполнить().Выбрать();
	
КонецФункции

Процедура ВывестиУменьшенияНалогаЗаКвартал(ТекКвартал, ПоследнийКварталПериода, Макет, ДокументРезультат)
	
	Секция = Макет.ПолучитьОбласть("Итог");
	РимскоеЧисло = ТекКвартал;
	Секция.Параметры.ПредставлениеПериодаИтогов = "Итого за " + РО.ПреобразоватьЧислоВРимскуюНотацию(РимскоеЧисло, Истина) + " квартал";
		
	ПФР 		= 0;
	ФСС 		= 0;
	ФОМС 		= 0;
	ФСС_НС 		= 0;
	Больничные 	= 0;
	Дстрах 		= 0;
		
	Для Каждого ИтогиПериода Из ТаблицаДанныхУменьшенияНалогаПоКвартально Цикл	
		
		Если НомерКвартала(ИтогиПериода.Квартал) > ТекКвартал Тогда
			Прервать;
		КонецЕсли;
		ПФР 		= ПФР + ИтогиПериода.ПФР;
		ФСС 		= ФСС + ИтогиПериода.ФСС;
		ФОМС 		= ФОМС + ИтогиПериода.ФОМС;
		ФСС_НС 		= ФСС_НС + ИтогиПериода.ФСС_НС;
		Больничные 	= Больничные + ИтогиПериода.Больничные;
		Дстрах 		= Дстрах + ИтогиПериода.Дстрах;
		
		ИтогоВзносов = ИтогиПериода.ПФР + ИтогиПериода.ФСС + ИтогиПериода.ФОМС + ИтогиПериода.ФСС_НС + ИтогиПериода.Больничные + ИтогиПериода.Дстрах;
		
		Если НомерКвартала(ИтогиПериода.Квартал) = ТекКвартал Тогда
			Секция.Параметры.Заполнить(ИтогиПериода);
			Секция.Параметры.ИтогоВзносов = ИтогоВзносов;
			ДокументРезультат.Вывести(Секция);
		КонецЕсли;
	КонецЦикла;
	
	Если ТекКвартал <> 1 Тогда
		Секция = Макет.ПолучитьОбласть("Итог");
		Секция.Параметры.ПредставлениеПериодаИтогов = "Итого за " + мОписаниеПериода(ДобавитьМесяц(НачалоГода(Период)-1, ТекКвартал*3));
		
		Секция.Параметры.ПФР 		= ПФР;
		Секция.Параметры.ФСС 		= ФСС;
		Секция.Параметры.ФОМС 		= ФОМС;
		Секция.Параметры.ФСС_НС 		= ФСС_НС;
		Секция.Параметры.Больничные 	= Больничные;
		Секция.Параметры.Дстрах 		= Дстрах;
		Секция.Параметры.ИтогоВзносов   = ПФР + ФСС + ФОМС +ФСС_НС + Больничные + Дстрах;
	
		ДокументРезультат.Вывести(Секция);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьРаздела4(ДокументРезультат)
	
	ДокументРезультат.Очистить();
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.Автомасштаб = Истина;
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел4";
	
	Если Период < Дата("20130101") Тогда
		Возврат;
	КонецЕсли;
	
	Макет = ПолучитьМакет("Раздел4");
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.ЗаПериод = "за " + мОписаниеПериода();
	ДокументРезультат.Вывести(Секция);
	
	НачДата = ?(CНачалаГода, НачалоГода(Период), НачалоКвартала(Период));
	КолКварталов = Цел(Месяц(КонецКвартала(Период))/3);
	
	НПП = 1;
	
	Если НачДата <> НачалоГода(Период) Тогда
		
		ЗапросНПП = Новый Запрос();
		ЗапросНПП.УстановитьПараметр("Организация", Организация);
		ЗапросНПП.УстановитьПараметр("НачДата", НачалоГода(Период));
		ЗапросНПП.УстановитьПараметр("КонДата", НачалоКвартала(Период) - 1);
		ЗапросНПП.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(*) КАК КоличествоСтрок
		|ИЗ
		|	Документ.ФормированиеЗаписейКУДиР.УменьшениеНалога КАК УменьшениеНалога
		|ГДЕ
		|	УменьшениеНалога.ПериодНачисления МЕЖДУ &НачДата И &КонДата
		|	И УменьшениеНалога.Ссылка.Организация = &Организация
		|	И УменьшениеНалога.Ссылка.Проведен";
		
		РезультатЗапроса = ЗапросНПП.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ТаблицаРезультата = РезультатЗапроса.Выгрузить();
			НПП = НПП + ТаблицаРезультата.Итог("КоличествоСтрок");
		КонецЕсли;
		
	КонецЕсли;
	
	ТекКвартал 				= НомерКвартала(НачДата);
	ПоследнийКварталПериода = НомерКвартала(Период);
	
	ВыборкаЗаписей = ПолучитьЗаписиУменьшенияНалога(НачДата, КонецДня(Период), Организация);
	
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		КварталЗаписи = Цел(Месяц(КонецКвартала(ВыборкаЗаписей.ПериодНачисления))/3);
		
		Пока КварталЗаписи <> ТекКвартал Цикл
			
			ВывестиУменьшенияНалогаЗаКвартал(ТекКвартал, ПоследнийКварталПериода, Макет, ДокументРезультат);
			ТекКвартал = ТекКвартал + 1;
			
		КонецЦикла;
		
		Секция = Макет.ПолучитьОбласть("Строка");
		Секция.Параметры.НомерПП = НПП;
		Секция.Параметры.Заполнить(ВыборкаЗаписей);
		Секция.Параметры.ИтогоВзносов = ВыборкаЗаписей.ПФР + ВыборкаЗаписей.ФСС + ВыборкаЗаписей.ФОМС + ВыборкаЗаписей.ФСС_НС 
				+ ВыборкаЗаписей.Больничные + ВыборкаЗаписей.Дстрах;
				
		НПП = НПП + 1;
		ДокументРезультат.Вывести(Секция);
		
	КонецЦикла;
	
	Пока ПоследнийКварталПериода >= ТекКвартал Цикл
		
		ВывестиУменьшенияНалогаЗаКвартал(ТекКвартал, ПоследнийКварталПериода, Макет, ДокументРезультат);
		ТекКвартал = ТекКвартал + 1;
		
	КонецЦикла;
	
	ДокументРезультат.ТолькоПросмотр = Истина;
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(9,,9,);
	
КонецПроцедуры

Процедура СформироватьОтчет(ТитульныйЛист, Раздел1, Раздел2, Раздел3, Раздел4) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Не указана организация!");
		Возврат;
	КонецЕсли;
	стрУсловия="Организация = &Организация";
	Если НЕ Контрагент.Пустая() Тогда
		стрУсловия=стрУсловия+" И Контрагент=&Контрагент";
	КонецЕсли; 
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(Период));
	Запрос.УстановитьПараметр("Период", КонецДня(Период));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.Графа4Оборот КАК Графа4,
	|	ИсточникДанных.Графа5Оборот КАК Графа5,
	|	ИсточникДанных.Графа6Оборот КАК Графа6,
	|	ИсточникДанных.Графа7Оборот КАК Графа7,
	|	ИсточникДанных.Период КАК Период,
	|	ИсточникДанных.Дата КАК Дата
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоГода, &Период, Квартал, "+стрУсловия+") КАК ИсточникДанных
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|";				   
	Запрос=Запрос.Выполнить().Выгрузить();
	
	ТаблицаДанныхУменьшенияНалогаПоКвартально = ПолучитьОборотыУменьшенияНалогаПоКвартально(НачалоГода(Период), КонецДня(Период));

	ПечатьТитульногоЛиста(ТитульныйЛист);
	ПечатьРаздела1(Раздел1);
	ПечатьРаздела2(Раздел2);
	ПечатьРаздела3(Раздел3);
	ПечатьРаздела4(Раздел4);
КонецПроцедуры

#КонецЕсли