&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="Сформировать" Тогда
		Если Не ЗначениеЗаполнено(Отчет.ДатаНачала) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Дата начала>>!",,"Отчет.ДатаНачала"); Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Отчет.ДатаКонца) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Дата конца>>!",,"Отчет.ДатаКонца"); Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Отчет.Организация) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Организация>>!",,"Отчет.Организация"); Возврат;
		КонецЕсли;		
		Если Отчет.ДатаНачала > Отчет.ДатаКонца Тогда
			ПоказатьПредупреждение(, "Неправильно задан период формирования отчета!"+Символы.ПС+"Дата начала больше даты окончания периода."); Возврат;
		КонецЕсли;
		СформироватьОтчет();
		Элементы.Страницы.ТекущаяСтраница=Элементы.Страница1;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ДобавитьОбороты(РабочаяТаблица, Валюта, Приход, Расход)
	СтрокаТаблицы = РабочаяТаблица.Найти(Валюта, "Валюта");
	Если СтрокаТаблицы = Неопределено Тогда
		НоваяСтрока = РабочаяТаблица.Добавить();
		НоваяСтрока.Валюта     = Валюта;
		НоваяСтрока.ВалОстаток = 0;
		НоваяСтрока.Остаток    = 0;
		НоваяСтрока.Приход     = Приход;
		НоваяСтрока.Расход     = Расход;
	Иначе
		СтрокаТаблицы.Приход    = СтрокаТаблицы.Приход    + Приход;
		СтрокаТаблицы.Расход    = СтрокаТаблицы.Расход    + Расход;
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Процедура СформироватьОтчет()
	ДокументРезультат=ТабличныйДокумент;
	ДокументРезультат.Очистить();

	НачалоГода = НачалоГода(Отчет.ДатаНачала);
	
	// расчет номера начального листа
	// осуществляется по проводкам так как не все операции по
	// кассе оформляются приходными/расходными ордерами
	
	ЛистовЗаГод   = 0;
	ЛистовЗаМесяц = 0;
	
	Если Отчет.ПересчитатьНомера Тогда
		Номера=РегистрыСведений.НомераЛистовКассовойКниги.СоздатьНаборЗаписей();
		Номера.Отбор.Организация.Значение		= Отчет.Организация;
		Номера.Отбор.Организация.Использование	= Истина;
		Номера.Прочитать();
		Номера.Очистить();
		Номера.Записать();
	Иначе
		Если Отчет.ДатаНачала <> НачалоГода Тогда
			Номера=РегистрыСведений.НомераЛистовКассовойКниги.СрезПоследних(Отчет.ДатаНачала-86400,Новый Структура("Организация", Отчет.Организация));
			Если Номера.Количество()>0 Тогда
				Если Номера[0].Период >= НачалоГода Тогда
					ЛистовЗаГод = Номера[0].НомерЛиста;
					ЛистовЗаМесяц = Номера[0].НомерЛиста;
				КонецЕсли;
				Номера=РегистрыСведений.НомераЛистовКассовойКниги.СрезПоследних(НачалоМесяца(Отчет.ДатаКонца)-86400,Новый Структура("Организация", Отчет.Организация));
				Если Номера.Количество()>0 Тогда
					Если Номера[0].Период >= НачалоГода Тогда
						ЛистовЗаМесяц = ЛистовЗаГод - Номера[0].НомерЛиста;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Инициируем области отчета
	Макет=Отчеты.ДенежныеСредстваКассоваяКнигаОУ.ПолучитьМакет("КассоваяКнига");
	
	//////////////////////////////////////////////////////////////////////////////////////////
	ОбластьВалОстатокОтчет 				= Макет.ПолучитьОбласть("ВалОстаток|Отчет");
	ОбластьПодвалОтчет 					= Макет.ПолучитьОбласть("Подвал|Отчет");
	ОбластьВТомЧислеОтчет 				= Макет.ПолучитьОбласть("ВТомЧисле|Отчет");
	ОбластьОстатокОтчет 				= Макет.ПолучитьОбласть("Остаток|Отчет");
	ОбластьЛистовЗаМесяцОтчет 			= Макет.ПолучитьОбласть("ЛистовЗаМесяц|Отчет");
	ОбластьЛистовЗаГодОтчет 			= Макет.ПолучитьОбласть("ЛистовЗаГод|Отчет");
	ОбластьВкладнойЛистОтчет 			= Макет.ПолучитьОбласть("ВкладнойЛист|Отчет");
	ОбластьОтчетКассираОтчет 			= Макет.ПолучитьОбласть("ОтчетКассира|Отчет");
	ОбластьШапкаОтчет 					= Макет.ПолучитьОбласть("Шапка|Отчет");
	ОбластьОстатокНаНДОтчет 			= Макет.ПолучитьОбласть("ОстатокНаНД|Отчет");
	ОбластьКурсовыеРазницыОтчет 		= Макет.ПолучитьОбласть("КурсовыеРазницы|Отчет");
	ОбластьКурсовыеРазницыПоВалютеОтчет = Макет.ПолучитьОбласть("КурсовыеРазницыПоВалюте|Отчет");
	ОбластьПереносОтчет 				= Макет.ПолучитьОбласть("Перенос|Отчет");
	ОбластьСтрокаВалШирокаяОтчет 		= Макет.ПолучитьОбласть("СтрокаВалШирокая|Отчет");
	ОбластьСтрокаВалОтчет 				= Макет.ПолучитьОбласть("СтрокаВал|Отчет");
	ОбластьСтрокаШирокаяОтчет 			= Макет.ПолучитьОбласть("СтрокаШирокая|Отчет");
	ОбластьСтрокаОтчет 					= Макет.ПолучитьОбласть("Строка|Отчет");
	ОбластьОборотОтчет 					= Макет.ПолучитьОбласть("Оборот|Отчет");
	ОбластьОборотРубОтчет 				= Макет.ПолучитьОбласть("ОборотРуб|Отчет");
	ОбластьОборотВалОтчет 				= Макет.ПолучитьОбласть("ОборотВал|Отчет");
	ОбластьКурсоваяРазницаОтчет 		= Макет.ПолучитьОбласть("КурсоваяРазница|Отчет");
	ОбластьКурсоваяРазницаПоВалютеОтчет = Макет.ПолучитьОбласть("КурсоваяРазницаПоВалюте|Отчет");
	ОбластьКонечныйОстатокОтчет 		= Макет.ПолучитьОбласть("КонечныйОстаток|Отчет");
	////////////////////////////////////////////////////////////////////////////////////////////////
	
	НачИтоги = ?(Отчет.ПересчитатьНомера, НачалоГода, Отчет.ДатаНачала);

	спКассы=Новый СписокЗначений;
	Для каждого Строка Из Отчет.НастройкаКасс Цикл
		спКассы.Добавить(Строка.Касса);
	КонецЦикла;	

	ЗапросПоИтогам=Новый Запрос;
	ЗапросПоИтогам.УстановитьПараметр("НачИтоги", НачалоДня(НачИтоги));
	ЗапросПоИтогам.УстановитьПараметр("ДатаКонца", КонецДня(Отчет.ДатаКонца));
	ЗапросПоИтогам.УстановитьПараметр("Организация", Отчет.Организация);
	ЗапросПоИтогам.УстановитьПараметр("ВидДенежныхСредств", Перечисления.ВидыДенежныхСредств.Наличные);
	ЗапросПоИтогам.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.Период КАК Период,
//	|	ИсточникДанных.БанковскийСчетКасса.ВалютаДенежныхСредств КАК Валюта,
	|	СУММА(ИсточникДанных.СуммаНачальныйОстаток) КАК СуммаНачальныйОстатокДт,
	|	СУММА(ИсточникДанных.СуммаУпрНачальныйОстаток) КАК ВалютнаяСуммаНачальныйОстатокДт,
	|	СУММА(ИсточникДанных.СуммаПриход) КАК СуммаОборотДт,
	|	СУММА(ИсточникДанных.СуммаРасход) КАК СуммаОборотКт,
	|	СУММА(ИсточникДанных.СуммаКонечныйОстаток) КАК СуммаКонечныйОстатокДт,
	|	СУММА(ИсточникДанных.СуммаУпрКонечныйОстаток) КАК ВалютнаяСуммаКонечныйОстатокДт
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.ОстаткиИОбороты(&НачИтоги, &ДатаКонца, День,,Организация = &Организация) КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.ВидДенежныхСредств=&ВидДенежныхСредств
	|";

	Если Отчет.НастройкаКасс.Количество()>0 Тогда
		ЗапросПоИтогам.УстановитьПараметр("Касса", спКассы);
		ЗапросПоИтогам.Текст=ЗапросПоИтогам.Текст+"
		|И ИсточникДанных.БанковскийСчетКасса В ИЕРАРХИИ(&Касса)
		|";
	КонецЕсли;

	ЗапросПоИтогам.Текст=ЗапросПоИтогам.Текст+"
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.Период
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ
	|	СУММА(СуммаНачальныйОстатокДт),
	|	СУММА(ВалютнаяСуммаНачальныйОстатокДт),
	|	СУММА(СуммаКонечныйОстатокДт),
	|	СУММА(ВалютнаяСуммаКонечныйОстатокДт),
	|	СУММА(СуммаОборотДт),
	|	СУММА(СуммаОборотКт)
	|	ПО
	|	ОБЩИЕ,
	|	Период ПЕРИОДАМИ(ДЕНЬ, , )
	|АВТОУПОРЯДОЧИВАНИЕ
	|";	
	РезультатЗапросаПоИтогам=ЗапросПоИтогам.Выполнить();
	                         
	ЗапросПоДокументам=Новый Запрос;
	ЗапросПоДокументам.УстановитьПараметр("НачИтоги", НачалоДня(НачИтоги));
	ЗапросПоДокументам.УстановитьПараметр("ДатаКонца", КонецДня(Отчет.ДатаКонца));
	ЗапросПоДокументам.УстановитьПараметр("Организация", Отчет.Организация);
	ЗапросПоДокументам.УстановитьПараметр("Касса", спКассы);
	ЗапросПоДокументам.УстановитьПараметр("ОперацияПриемРозничнойВыручки", Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка);
	ЗапросПоДокументам.Текст="
	|ВЫБРАТЬ
	|	КассовыеДокументы.Док КАК Документ,
	|	НАЧАЛОПЕРИОДА(КассовыеДокументы.Дата, ДЕНЬ) КАК День,
	|	КассовыеДокументы.Дата КАК ДатаДок,
	|	КассовыеДокументы.Номер КАК НомерДок,
	|	КассовыеДокументы.Основание КАК Основание,";
	Если Отчет.НастройкаКасс.Количество()>0 Тогда
		ЗапросПоДокументам.Текст=ЗапросПоДокументам.Текст+"
		|	ВЫБОР
		|		КОГДА КассовыеДокументы.Док ССЫЛКА Документ.ВнутреннееПеремещениеНаличныхДенежныхСредств
		|			ТОГДА КассовыеДокументы.Док.Касса.Наименование
		|		ИНАЧЕ """"
		|   КОНЕЦ КАК Касса,
		|	ВЫБОР
		|		КОГДА КассовыеДокументы.Док ССЫЛКА Документ.ВнутреннееПеремещениеНаличныхДенежныхСредств
		|			ТОГДА КассовыеДокументы.Док.КассаПолучатель.Наименование
		|		ИНАЧЕ """"
		|   КОНЕЦ КАК КассаПолучатель,";	
	КонецЕсли;
	
	ЗапросПоДокументам.Текст=ЗапросПоДокументам.Текст+"	
	|	ВЫБОР
	|		КОГДА КассовыеДокументы.Док ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|			ТОГДА КассовыеДокументы.Док.ПринятоОт
	|		КОГДА КассовыеДокументы.Док ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ТОГДА КассовыеДокументы.Док.Выдать		
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ТекстДок,
	|	КассовыеДокументы.Приход КАК Приход,
	|	КассовыеДокументы.Расход КАК Расход
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПриходныйКассовыйОрдер.Ссылка КАК Док,
	|		ПриходныйКассовыйОрдер.Дата КАК Дата,
	|		ПриходныйКассовыйОрдер.Номер КАК Номер,
	|		ПОДСТРОКА(ПриходныйКассовыйОрдер.Основание, 1, 200) КАК Основание,
	|		ПриходныйКассовыйОрдер.СуммаДокумента КАК Приход,
	|		0 КАК Расход
	|	ИЗ
	|		Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|	ГДЕ
	|		ПриходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ
	|		И ПриходныйКассовыйОрдер.Дата МЕЖДУ &НачИтоги И &ДатаКонца
	|		И ПриходныйКассовыйОрдер.Организация = &Организация
	|		"+?(Отчет.НастройкаКасс.Количество()>0, "И ПриходныйКассовыйОрдер.Касса В ИЕРАРХИИ(&Касса)", "")+"
	|		И ПриходныйКассовыйОрдер.Проведен
	|		И ПриходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ	
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасходныйКассовыйОрдер.Ссылка,
	|		РасходныйКассовыйОрдер.Дата,
	|		РасходныйКассовыйОрдер.Номер,
	|		ПОДСТРОКА(РасходныйКассовыйОрдер.Основание, 1, 200),
    |		0,
    |		РасходныйКассовыйОрдер.СуммаДокумента
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|	ГДЕ
	|		РасходныйКассовыйОрдер.Дата МЕЖДУ &НачИтоги И &ДатаКонца
	|		И РасходныйКассовыйОрдер.Организация = &Организация
	|		"+?(Отчет.НастройкаКасс.Количество()>0, "И РасходныйКассовыйОрдер.Касса В ИЕРАРХИИ(&Касса)", "")+"
	|		И РасходныйКассовыйОрдер.Проведен
	|		И РасходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПриходныйКассовыйОрдер.Ссылка,
	|		Сторно.Дата,
	|		Сторно.Номер,
	|		ПОДСТРОКА(ПриходныйКассовыйОрдер.Основание, 1, 200),
    |		-ПриходныйКассовыйОрдер.СуммаДокумента,
    |		0
	|	ИЗ
	|		Документ.Сторно КАК Сторно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|		ПО Сторно.СторнируемыйДокумент=ПриходныйКассовыйОрдер.Ссылка
	|			И Сторно.Дата МЕЖДУ &НачИтоги И &ДатаКонца
	|			И Сторно.Организация = &Организация
	|			"+?(Отчет.НастройкаКасс.Количество()>0, "И ПриходныйКассовыйОрдер.Касса В ИЕРАРХИИ(&Касса)", "")+"
	|			И Сторно.Проведен
	|			И Сторно.ПометкаУдаления = ЛОЖЬ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасходныйКассовыйОрдер.Ссылка,
	|		Сторно.Дата,
	|		Сторно.Номер,
	|		ПОДСТРОКА(РасходныйКассовыйОрдер.Основание, 1, 200),
    |		0,
    |		-РасходныйКассовыйОрдер.СуммаДокумента
	|	ИЗ
	|		Документ.Сторно КАК Сторно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|		ПО Сторно.СторнируемыйДокумент=РасходныйКассовыйОрдер.Ссылка
	|			И Сторно.Дата МЕЖДУ &НачИтоги И &ДатаКонца
	|			И Сторно.Организация = &Организация
	|			"+?(Отчет.НастройкаКасс.Количество()>0, "И РасходныйКассовыйОрдер.Касса В ИЕРАРХИИ(&Касса)", "")+"
	|			И Сторно.Проведен
	|			И Сторно.ПометкаУдаления = ЛОЖЬ
	|";
	Если Отчет.НастройкаКасс.Количество()>0 Тогда
		ЗапросПоДокументам.Текст=ЗапросПоДокументам.Текст+"
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|   ВЫБРАТЬ
		|		ВнутреннееПеремещениеНаличныхДенежныхСредств.Ссылка,
		|		ВнутреннееПеремещениеНаличныхДенежныхСредств.Дата,
		|		ВнутреннееПеремещениеНаличныхДенежныхСредств.Номер,
		|		""внутреннее перемещение"",
		|		ВЫБОР
		|			КОГДА ВнутреннееПеремещениеНаличныхДенежныхСредств.КассаПолучатель В ИЕРАРХИИ(&Касса)
		|				ТОГДА ВнутреннееПеремещениеНаличныхДенежныхСредств.СуммаДокумента
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ВнутреннееПеремещениеПриход,
		|		ВЫБОР
		|			КОГДА ВнутреннееПеремещениеНаличныхДенежныхСредств.Касса В ИЕРАРХИИ(&Касса)
		|				ТОГДА ВнутреннееПеремещениеНаличныхДенежныхСредств.СуммаДокумента
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ВнутреннееПеремещениеРасход
		|   ИЗ
		|   	Документ.ВнутреннееПеремещениеНаличныхДенежныхСредств КАК ВнутреннееПеремещениеНаличныхДенежныхСредств
		|   ГДЕ
		|       ВнутреннееПеремещениеНаличныхДенежныхСредств.Дата МЕЖДУ &НачИтоги И &ДатаКонца
		|       И (ВнутреннееПеремещениеНаличныхДенежныхСредств.Организация=&Организация)
		|		И ((ВнутреннееПеремещениеНаличныхДенежныхСредств.Касса В ИЕРАРХИИ(&Касса)) ИЛИ ((ВнутреннееПеремещениеНаличныхДенежныхСредств.КассаПолучатель В ИЕРАРХИИ(&Касса))))
		|		И ВнутреннееПеремещениеНаличныхДенежныхСредств.Проведен
		|		И ВнутреннееПеремещениеНаличныхДенежныхСредств.ПометкаУдаления = ЛОЖЬ) КАК КассовыеДокументы
		|";
	Иначе ЗапросПоДокументам.Текст=ЗапросПоДокументам.Текст+") КАК КассовыеДокументы";	
	КонецЕсли;
	
	ЗапросПоДокументам.Текст=ЗапросПоДокументам.Текст+"
	|УПОРЯДОЧИТЬ ПО
	|	День
	|ИТОГИ ПО
	|	День
	|АВТОУПОРЯДОЧИВАНИЕ
	|";

	РезультатЗапросаПоДокументам=ЗапросПоДокументам.Выполнить();
	
	ТаблицаДокументы=РезультатЗапросаПоДокументам.Выгрузить();
	ТаблицаДокументы.Очистить();
	ТаблицаДокументы.Колонки.Добавить("СтрокаСчет", УправлениеКонфигурациейСервер.СоздатьТип("Строка"));
	ТаблицаДокументы.Колонки.Добавить("Валютный");
	ТаблицаДокументы.Колонки.Добавить("ВидДокумента");
	
	ТипЧисло=ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2);
	
	РабочаяТаблица=Новый ТаблицаЗначений;
	РабочаяТаблица.Колонки.Добавить("Валюта",Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	РабочаяТаблица.Колонки.Добавить("ВалОстаток",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("Остаток",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("Приход",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("Расход",ТипЧисло);
	РабочаяТаблица.Индексы.Добавить("Валюта");
		
	ВыборкаОбщихИтогов = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Общие");

	//Без валюты
	Строка        = РабочаяТаблица.Добавить();
	Строка.Валюта = Справочники.Валюты.ПустаяСсылка();
	Если ВыборкаОбщихИтогов.Следующий() Тогда		
		Строка.Остаток    = ВыборкаОбщихИтогов["СуммаНачальныйОстатокДт"]-РабочаяТаблица.Итог("Остаток");
		Строка.ВалОстаток = ВыборкаОбщихИтогов["ВалютнаяСуммаНачальныйОстатокДт"]-РабочаяТаблица.Итог("ВалОстаток");
	КонецЕсли;
		
	ВыборкаИтоговПоДням     = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
	ВыборкаДокументовПоДням = РезультатЗапросаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"День");
	
	ПоПроводкам  = ВыборкаИтоговПоДням.Следующий();
	ПоДокументам = ВыборкаДокументовПоДням.Следующий();
	
	БылиОшибки    = Ложь;
	ВывестиПодвал = Ложь;
	
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Отчет.Организация, КонецДня(Отчет.ДатаКонца));
	
	ТипПКО = Тип("ДокументСсылка.ПриходныйКассовыйОрдер");
	ТипРКО = Тип("ДокументСсылка.РасходныйКассовыйОрдер");
	ТипВП  = Тип("ДокументСсылка.ВнутреннееПеремещениеНаличныхДенежныхСредств");
	
	Пока ПоПроводкам Или ПоДокументам  Цикл
		Если НЕ ПоПроводкам  Тогда
			ДатаЛиста = ВыборкаДокументовПоДням.День;
		ИначеЕсли НЕ ПоДокументам Тогда
			ДатаЛиста = ВыборкаИтоговПоДням.Период;
		Иначе                 
			ДатаЛиста = Мин(ВыборкаДокументовПоДням.День, ВыборкаИтоговПоДням.Период);
		КонецЕсли;
		Если ВыборкаИтоговПоДням.СуммаОборотДт = 0 И ВыборкаИтоговПоДням.СуммаОборотКт = 0 Тогда
			Если НЕ ПоДокументам ИЛИ ДатаЛиста <> ВыборкаДокументовПоДням.День Тогда
				ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		НомерЛиста = ЛистовЗаГод + 1;
		ЛистовЗаГод = ЛистовЗаГод + 1;
		ЛистовЗаМесяц = ЛистовЗаМесяц + 1;
		
		КоличествоПриходныхДокументов = 0;
		КоличествоРасходныхДокументов = 0;
		
		Остаток = РабочаяТаблица.Итог("Остаток");
		Если ДатаЛиста >= Отчет.ДатаНачала Тогда
			ОбластьВкладнойЛистОтчет.Параметры.ЗаголовокЛиста="КАССА за "+Формат(ДатаЛиста, "ДФ=dd.MM.yyyy");
			ДокументРезультат.Вывести(ОбластьВкладнойЛистОтчет);

			ОбластьОтчетКассираОтчет.Параметры.ЗаголовокЛиста="КАССА за "+Формат(ДатаЛиста, "ДФ=dd.MM.yyyy");
			ДокументРезультат.Присоединить(ОбластьОтчетКассираОтчет);

			ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста="Лист "+НомерЛиста;
			ДокументРезультат.Вывести(ОбластьШапкаОтчет);
			ДокументРезультат.Присоединить(ОбластьШапкаОтчет);

			ОбластьОстатокНаНДОтчет.Параметры.ОстатокНачало=Остаток;
			ДокументРезультат.Вывести(ОбластьОстатокНаНДОтчет);
			ДокументРезультат.Присоединить(ОбластьОстатокНаНДОтчет);
		КонецЕсли;
		
		ПоВалютам = Ложь;
		ВысотаСтроки = ?(Отчет.ВыводитьОснования = 1, 4, 2); // высота секции документа
		СтрокШапки = 9;
		СтрокПодвала = 13;

		Если ПоВалютам Тогда
			Если ДатаЛиста >= Отчет.ДатаНачала Тогда
				ДокументРезультат.Вывести(ОбластьВТомЧислеОтчет);
				ДокументРезультат.Присоединить(ОбластьВТомЧислеОтчет);
			КонецЕсли;
			СтрокШапки = СтрокШапки + 1;
			Для Каждого Строка ИЗ РабочаяТаблица Цикл    
				Валюта     = Строка.Валюта;
				РубОстаток = Строка.Остаток;
				ВалОстаток = Строка.ВалОстаток;
				Если (Строка.Валюта = Справочники.Валюты.ПустаяСсылка()) ИЛИ (Строка.Валюта = Константы.ВалютаРегламентированногоУчета.Получить()) Тогда    //Щуклин  Добавил проверку на рубли
					Если ДатаЛиста >= Отчет.ДатаНачала Тогда
						
						ОбластьОстатокОтчет.Параметры.ВалютаРеглУчета = "национальная валюта ("+Константы.ВалютаРегламентированногоУчета.Получить().НаименованиеПолное+"):";
						ОбластьОстатокОтчет.Параметры.РеглОстаток = РубОстаток;
						
						ДокументРезультат.Вывести(ОбластьОстатокОтчет);
						ДокументРезультат.Присоединить(ОбластьОстатокОтчет);
						
					КонецЕсли;
					СтрокШапки = СтрокШапки + 1;
				Иначе
					Если (РубОстаток <> 0) Или (ВалОстаток <> 0) Тогда
						Если ДатаЛиста >= Отчет.ДатаНачала Тогда
							
							ОбластьВалОстатокОтчет.Параметры.ВалютаВалУчета="иностранная валюта ("+Валюта.НаименованиеПолное+"):";
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокРегл=РубОстаток;
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокВал=Формат(ВалОстаток,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
							
							ДокументРезультат.Вывести(ОбластьВалОстатокОтчет);
							ДокументРезультат.Присоединить(ОбластьВалОстатокОтчет);
							
						КонецЕсли;
						СтрокШапки = СтрокШапки + 2;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаДокументы.Очистить();
		Валюты = Новый СписокЗначений;
		
		Если ПоДокументам И ВыборкаДокументовПоДням.День = ДатаЛиста Тогда
			
			ВыборкаДокументов = ВыборкаДокументовПоДням.Выбрать();     //ОбходРезультатаЗапроса.ПоГруппировкам, "Документ");
			
			Пока ВыборкаДокументов.Следующий() Цикл
				НоваяСтрока=ТаблицаДокументы.Добавить();
				НоваяСтрока.ВидДокумента = ?(ТипЗнч(ВыборкаДокументов.Документ) = ТипВП, "ВнутреннееПеремещение", ?(ТипЗнч(ВыборкаДокументов.Документ) = ТипПКО, "ПриходныйОрдер", "РасходныйОрдер"));
				НоваяСтрока.Документ     = ВыборкаДокументов.Документ;
				НоваяСтрока.ДатаДок      = ВыборкаДокументов.ДатаДок;
				НоваяСтрока.День         = ВыборкаДокументов.День;
				НоваяСтрока.НомерДок     = ВыборкаДокументов.НомерДок;
				НоваяСтрока.Приход       = ВыборкаДокументов.Приход;
				НоваяСтрока.Расход       = ВыборкаДокументов.Расход;
				НоваяСтрока.Основание    = ВыборкаДокументов.Основание;
				НоваяСтрока.ТекстДок     = ВыборкаДокументов.ТекстДок;
				НоваяСтрока.Валютный 	 = Ложь;
				Если Отчет.НастройкаКасс.Количество()>0 Тогда
					НоваяСтрока.Касса=ВыборкаДокументов.Касса;
					НоваяСтрока.КассаПолучатель=ВыборкаДокументов.КассаПолучатель;					
				КонецЕсли; 
				
				СтрокаСчет="";
				Если ВыборкаДокументов.Документ.Метаданные().Имя = "ПриходныйКассовыйОрдер" Тогда
					Если ВыборкаДокументов.Документ.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя Тогда
						СтрокаСчет = "62.1";
					ИначеЕсли ВыборкаДокументов.Документ.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратДенежныхСредствПодотчетником Тогда
						СтрокаСчет = "71.1";
					ИначеЕсли ВыборкаДокументов.Документ.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратДенежныхСредствПоставщиком Тогда
						СтрокаСчет = "60.1";
					ИначеЕсли ВыборкаДокументов.Документ.ВидОперации = Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка Тогда
						СтрокаСчет = "90.1.2";
					ИначеЕсли ВыборкаДокументов.Документ.ВидОперации = Перечисления.ВидыОперацийПКО.ПолучениеНаличныхДенежныхСредствВБанке Тогда
						СтрокаСчет = "51";
					КонецЕсли;
				КонецЕсли;
				Если ВыборкаДокументов.Документ.Метаданные().Имя = "РасходныйКассовыйОрдер" Тогда
					Если ВыборкаДокументов.Документ.ВидОперации = Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк Тогда
						СтрокаСчет = "51";
					ИначеЕсли ВыборкаДокументов.Документ.ВидОперации = Перечисления.ВидыОперацийРКО.ОплатаПоставщику Тогда
						СтрокаСчет = "60.1";
					ИначеЕсли ВыборкаДокументов.Документ.ВидОперации = Перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствПодотчетнику Тогда
						СтрокаСчет = "71.1";
					ИначеЕсли ВыборкаДокументов.Документ.ВидОперации = Перечисления.ВидыОперацийРКО.ВозвратДенежныхСредствПокупателю Тогда
						СтрокаСчет = "62.1";
					КонецЕсли;					
				КонецЕсли;
				НоваяСтрока.СтрокаСчет = СтрокаСчет;

				Если Лев(ТипЗнч(ВыборкаДокументов.Документ),10)="Внутреннее" Тогда Продолжить; КонецЕсли; 

				МассивСтрок=Отчет.НастройкаСчетов.НайтиСтроки(Новый Структура("Операция", ВыборкаДокументов.Документ.ВидОперации));
				Если НЕ МассивСтрок.Количество()=0 Тогда НоваяСтрока.СтрокаСчет=МассивСтрок[0].Счет; КонецЕсли; 								
			КонецЦикла;
		КонецЕсли;
		
		СумПриход    = 0;
		СумРасход    = 0;
		ПерваяСтрока = 1;
		Для Каждого СтрокаТаблица ИЗ РабочаяТаблица Цикл
			Если СтрокаТаблица.Валюта=Справочники.Валюты.ПустаяСсылка() Тогда Продолжить; КонецЕсли;
			
			Если ДатаЛиста <> НачалоДня(КонецМесяца(ДатаЛиста)) Тогда
				Если Валюты.НайтиПоЗначению(СтрокаТаблица.Валюта) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			СтруктураКурсов = МодульВалютногоУчета.КурсВалюты(СтрокаТаблица.Валюта,ДатаЛиста);
			
			Курс      = СтруктураКурсов.Курс;
			Кратность = СтруктураКурсов.Кратность;
			Кратность = ?(Кратность=0, 1, Кратность);
			КурсоваяРазница = Окр(СтрокаТаблица.ВалОстаток * Курс / Кратность - СтрокаТаблица.Остаток, 2, 1);
			Если КурсоваяРазница <> 0 Тогда
				Если ПерваяСтрока = 1 Тогда
					Если ДатаЛиста >= Отчет.ДатаНачала Тогда
						ДокументРезультат.Вывести(ОбластьКурсовыеРазницыОтчет);
						ДокументРезультат.Присоединить(ОбластьКурсовыеРазницыОтчет);
					КонецЕсли;
					СтрокШапки   = СтрокШапки + 2;
					ПерваяСтрока = 0;
				КонецЕсли;
				Валюта = СтрокаТаблица.Валюта;
				Приход = 0;
				Расход = 0;
				КоррСчет = "КР";
				Если КурсоваяРазница > 0 Тогда
					Приход    = КурсоваяРазница;
					СумПриход = СумПриход+КурсоваяРазница;
				Иначе
					Расход    = -КурсоваяРазница;
					СумРасход = СумРасход-КурсоваяРазница;
				КонецЕсли;   
				СтрокаТаблица.Приход = СтрокаТаблица.Приход+Приход;
				СтрокаТаблица.Расход = СтрокаТаблица.Расход+Расход;
				Если ДатаЛиста >= Отчет.ДатаНачала Тогда
					ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.НадписьКРВалюта = "по " + Валюта.Наименование;
					ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.КоррСчет = КоррСчет;
					ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.Приход   = Приход;
					ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.Расход   = Расход;
					
					ДокументРезультат.Вывести(ОбластьКурсовыеРазницыПоВалютеОтчет);
					ДокументРезультат.Присоединить(ОбластьКурсовыеРазницыПоВалютеОтчет);
				КонецЕсли;
				СтрокШапки = СтрокШапки + 1;
			КонецЕсли;
		КонецЦикла;
		
		// Для простоты настройки печатной формы примем следующие соглашения:
		//	-	высота строк в таблице печатной формы задана жестко,
		//		тогда известно, сколько строк помещается на странице;
		СтрокНаСтранице = 58;
		//	-	высота шапки и подвала задана жестко и кратна высоте строк таблицы,
		//		тогда можно указать, сколько строк занимают шапка и подвал
		//		в пересчете на строки таблицы;
		//  -   Количество строк шапки определено при выводе валюты в шапку;
		//  -   Количество строк подвала определим позже по количеству валют;
		//	-	для нормальной работы алгоритма необходимо, чтобы шапка и подвал
		//		могли поместиться на одной странице + хотя бы одна строка таблицы:
		//		СтрокНаСтранице >= СтрокШапки + СтрокПодвала + 1
		//	-	если подвал не помещается на странице, он переносится на другую
		//		страницу с последней строкой; исключение составляет случай,
		//		когда в таблице всего одна строка.
		
		// Резервирование строк для вывода сведений о валюте в подвале.
		// Найдем количество валют, по которым будет остаток в конце дня.
		КоличествоВалютВПодвале = РабочаяТаблица.Количество() - 1; // без рублей
		// Добавим валюты, по которым нет итогов, но по которым есть оборот,
		// введенный документами.
		
		// Добавляет строка для секции "КурсоваяРазница" и "ВТомЧисле".
		СтрокПодвала = СтрокПодвала + ?(КоличествоВалютВПодвале > 0, КоличествоВалютВПодвале * 5 + 4, 0);
		
		// Резервирование строк подвала для секции "ЛистовЗаМесяц" и "ЛистовЗаГод".
		СтрокПодвала = СтрокПодвала + ?(Отчет.ПоследнийЛист > 0, Отчет.ПоследнийЛист, 0);
		
		// Если ПереноситьПоследнююСтроку = 1 - переносить,
		// если ПереноситьПоследнююСтроку = 0 - не надо переносить:
		Если (ТаблицаДокументы.Количество() * ВысотаСтроки) <= (СтрокНаСтранице - СтрокШапки - СтрокПодвала) Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом = Цел(((СтрокШапки-5)+ТаблицаДокументы.Количество()*ВысотаСтроки+СтрокПодвала-1)/(СтрокНаСтранице-5));
			ЦелыхСтраницБезПодвала = Цел(((СтрокШапки-5)+ТаблицаДокументы.Количество()*ВысотаСтроки-1)/(СтрокНаСтранице-5));
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		КоличествоСтраниц = 1;
		Индекс            = 1;
		Для Каждого Документ Из ТаблицаДокументы Цикл
			
			Если Документ.Приход=Null или Документ.Расход=Null Тогда
				Продолжить;
			КонецЕсли; 
			ЕстьВалюта = Ложь;
			
			Если ЕстьВалюта Тогда
				Валюта          = Документ.Валюта;
				СтруктураКурсов = МодульВалютногоУчета.КурсВалюты(Валюта,Документ.ДатаДок);
				
				Курс      = СтруктураКурсов.Курс;
				Кратность = СтруктураКурсов.Кратность;
				Кратность = ?(Кратность = 0, 1, Кратность);
			Иначе
				Валюта    = Справочники.Валюты.ПустаяСсылка();
				Курс      = 1;
				Кратность = 1;
			КонецЕсли;
			
			Если Документ.ВидДокумента = "РасходныйОрдер" Тогда
				Клиент = "Выдано " + СокрЛП(Документ.ТекстДок) + ?(Отчет.ВыводитьОснования = 1, " " + СокрЛП(Документ.Основание), "");
				КоличествоРасходныхДокументов = КоличествоРасходныхДокументов + 1;
				Расход    = ?(НЕ Документ.Расход=NULL,Окр(Документ.Расход*Курс/Кратность,2,1),0);
				Приход    = 0;
			ИначеЕсли Документ.ВидДокумента = "ПриходныйОрдер" Тогда
				Клиент = "Принято от " + СокрЛП(Документ.ТекстДок) + ?(Отчет.ВыводитьОснования = 1, " " + СокрЛП(Документ.Основание), "");
				КоличествоПриходныхДокументов = КоличествоПриходныхДокументов + 1;
				Приход    = ?(НЕ Документ.Приход=NULL,Окр(Документ.Приход*Курс/Кратность,2,1),0);
				Расход    = 0;
			Иначе
				Если Документ.Приход<>0 И Документ.Расход=0 Тогда
					Клиент = "Внутреннее перемещение из "+СокрЛП(Документ.Касса);
					КоличествоПриходныхДокументов = КоличествоПриходныхДокументов + 1;
					Приход    = ?(НЕ Документ.Приход=NULL,Окр(Документ.Приход*Курс/Кратность,2,1),0);
					Расход    = 0;
				ИначеЕсли Документ.Расход<>0 И Документ.Приход=0 Тогда
					Клиент = "Внутреннее перемещение в "+СокрЛП(Документ.КассаПолучатель);
					КоличествоРасходныхДокументов = КоличествоРасходныхДокументов + 1;
					Расход    = ?(НЕ Документ.Расход=NULL,Окр(Документ.Расход*Курс/Кратность,2,1),0);
					Приход    = 0;
				ИначеЕсли Документ.Расход<>0 И Документ.Приход<>0 Тогда
					Клиент = "Внутреннее перемещение из "+СокрЛП(Документ.Касса+" в "+СокрЛП(Документ.КассаПолучатель));
					КоличествоПриходныхДокументов = КоличествоПриходныхДокументов + 1;
					КоличествоРасходныхДокументов = КоличествоРасходныхДокументов + 1;
					Приход    = ?(НЕ Документ.Приход=NULL,Окр(Документ.Приход*Курс/Кратность,2,1),0);
					Расход    = ?(НЕ Документ.Расход=NULL,Окр(Документ.Расход*Курс/Кратность,2,1),0);
				КонецЕсли;			
			КонецЕсли;

			НомерДокПечатнойФормы = ОбщегоНазначенияСервер.НомерНаПечать(Документ.Документ);
			КоррСчет = Документ.СтрокаСчет;
			
			// Начинаем новую страницу, если предыдущая строка была последней на странице
			// или пора переносить последнюю строку на последнюю страницу с подвалом.
			ЦелаяСтраница = Цел(((СтрокШапки-5)+(КоличествоСтраниц - 1)+(Индекс*ВысотаСтроки)-1)/(СтрокНаСтранице-5));
			Если (ЦелаяСтраница = КоличествоСтраниц) или 
				((ПереноситьПоследнююСтроку = 1) и (Индекс = ТаблицаДокументы.Количество())) Тогда
				ПриходЗаДень = РабочаяТаблица.Итог("Приход");
				РасходЗаДень = РабочаяТаблица.Итог("Расход");
				Если ДатаЛиста >= Отчет.ДатаНачала Тогда
					ОбластьПереносОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
					ОбластьПереносОтчет.Параметры.РасходЗаДень = РасходЗаДень;
					
					ДокументРезультат.Вывести(ОбластьПереносОтчет);
					ДокументРезультат.Присоединить(ОбластьПереносОтчет);
				КонецЕсли;
				НомерЛиста        = НомерЛиста + 1;
				КоличествоСтраниц = КоличествоСтраниц + 1;
				ЛистовЗаГод       = ЛистовЗаГод + 1;
				ЛистовЗаМесяц     = ЛистовЗаМесяц + 1;
				Если ДатаЛиста >= Отчет.ДатаНачала Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста = "Лист "+НомерЛиста;
					ДокументРезультат.Вывести(ОбластьШапкаОтчет);
					ДокументРезультат.Присоединить(ОбластьШапкаОтчет);
				КонецЕсли;
			КонецЕсли;
			
			Если ДатаЛиста >= Отчет.ДатаНачала Тогда
				Если ЕстьВалюта Тогда
					Если Отчет.ВыводитьОснования Тогда
						
						ОбластьСтрокаВалШирокаяОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.Контрагент = Клиент;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.КоррСчет   = КоррСчет;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.Приход     = Приход;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.Расход     = Расход;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.Документ   = Документ.Документ;						
						ДокументРезультат.Вывести(ОбластьСтрокаВалШирокаяОтчет);
						ДокументРезультат.Присоединить(ОбластьСтрокаВалШирокаяОтчет);
					Иначе
						ОбластьСтрокаВалОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
						ОбластьСтрокаВалОтчет.Параметры.Контрагент = Клиент;
						ОбластьСтрокаВалОтчет.Параметры.КоррСчет   = КоррСчет;
						ОбластьСтрокаВалОтчет.Параметры.Приход     = Приход;
						ОбластьСтрокаВалОтчет.Параметры.Расход     = Расход;
						ОбластьСтрокаВалОтчет.Параметры.Документ   = Документ.Документ;
						
						ДокументРезультат.Вывести(ОбластьСтрокаВалОтчет);
						ДокументРезультат.Присоединить(ОбластьСтрокаВалОтчет);
					КонецЕсли;
					
				Иначе
					Если Отчет.ВыводитьОснования Тогда
						ОбластьСтрокаШирокаяОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
						ОбластьСтрокаШирокаяОтчет.Параметры.Контрагент = Клиент;
						ОбластьСтрокаШирокаяОтчет.Параметры.КоррСчет   = КоррСчет;
						ОбластьСтрокаШирокаяОтчет.Параметры.Приход     = Приход;
						ОбластьСтрокаШирокаяОтчет.Параметры.Расход     = Расход;
						ОбластьСтрокаШирокаяОтчет.Параметры.Документ   = Документ.Документ;
						
						ДокументРезультат.Вывести(ОбластьСтрокаШирокаяОтчет);
						ДокументРезультат.Присоединить(ОбластьСтрокаШирокаяОтчет);
					Иначе
						ОбластьСтрокаОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
						ОбластьСтрокаОтчет.Параметры.Контрагент = Клиент;
						ОбластьСтрокаОтчет.Параметры.КоррСчет   = КоррСчет;
						ОбластьСтрокаОтчет.Параметры.Приход     = Приход;
						ОбластьСтрокаОтчет.Параметры.Расход     = Расход;
						ОбластьСтрокаОтчет.Параметры.Документ   = Документ.Документ;
						
						ДокументРезультат.Вывести(ОбластьСтрокаОтчет);
						ДокументРезультат.Присоединить(ОбластьСтрокаОтчет);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ДобавитьОбороты(РабочаяТаблица, Валюта, Приход, Расход);
			Индекс = Индекс + 1;
		КонецЦикла;
		
		ПриходЗаДень = РабочаяТаблица.Итог("Приход");
		РасходЗаДень = РабочаяТаблица.Итог("Расход");
		Если ДатаЛиста >= Отчет.ДатаНачала Тогда
			
			ОбластьОборотОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
			ОбластьОборотОтчет.Параметры.РасходЗаДень = РасходЗаДень;
			
			ДокументРезультат.Вывести(ОбластьОборотОтчет);
			ДокументРезультат.Присоединить(ОбластьОборотОтчет);
			
			ПоВалютам = Ложь;
			Для Каждого Строка ИЗ РабочаяТаблица Цикл    
				Если ((Строка.Приход <> 0) Или (Строка.Расход <> 0)) И  
					 (НЕ Строка.Валюта=Справочники.Валюты.ПустаяСсылка()) Тогда
					ПоВалютам = Истина ;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ПоВалютам Тогда
				Для Каждого Строка ИЗ РабочаяТаблица Цикл
					Валюта = Строка.Валюта;
					РубПриходЗаДень = Строка.Приход;
					РубРасходЗаДень = Строка.Расход;
					Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
						
						ОбластьОборотРубОтчет.Параметры.РеглПриходЗаДень = РубПриходЗаДень;
						ОбластьОборотРубОтчет.Параметры.РеглРасходЗаДень = РубРасходЗаДень;
						ОбластьОборотРубОтчет.Параметры.ВалютаРеглУчета  = "национальная валюта (" + Константы.ВалютаРегламентированногоУчета.Получить().НаименованиеПолное + "):";
						
						ДокументРезультат.Вывести(ОбластьОборотРубОтчет);
						ДокументРезультат.Присоединить(ОбластьОборотРубОтчет);
					Иначе
						Если (РубПриходЗаДень <> 0) Или (РубРасходЗаДень <> 0) Тогда							
							ОбластьОборотВалОтчет.Параметры.ВалютаВалУчета      = "иностранная валюта (" + Валюта.НаименованиеПолное + "):";
							ОбластьОборотВалОтчет.Параметры.ВалПриходЗаДеньРегл = РубПриходЗаДень;
							ОбластьОборотВалОтчет.Параметры.ВалРасходЗаДеньРегл = РубРасходЗаДень;
							ДокументРезультат.Вывести(ОбластьОборотВалОтчет);
							ДокументРезультат.Присоединить(ОбластьОборотВалОтчет);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		ПерваяСтрока = Истина;
		Остаток      = Остаток + ПриходЗаДень - РасходЗаДень;
		Для Каждого Строка ИЗ РабочаяТаблица Цикл
			Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
				Продолжить;
			КонецЕсли;
			
			Если ДатаЛиста <> НачалоДня(КонецМесяца(ДатаЛиста)) Тогда
				Если Валюты.НайтиПоЗначению(Строка.Валюта) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			СтруктураКурсов = МодульВалютногоУчета.КурсВалюты(Строка.Валюта, ДатаЛиста);
			
			Курс      = СтруктураКурсов.Курс;
			Кратность = СтруктураКурсов.Кратность;
			Кратность = ?(Кратность=0, 1, Кратность);
			КурсоваяРазница = 0;
			Если КурсоваяРазница <> 0 Тогда
				Если ПерваяСтрока Тогда
					Если ДатаЛиста >= Отчет.ДатаНачала Тогда
						ДокументРезультат.Вывести(ОбластьКурсоваяРазницаОтчет);
						ДокументРезультат.Присоединить(ОбластьКурсоваяРазницаОтчет);
					КонецЕсли;
					ПерваяСтрока = Ложь;
				КонецЕсли;
				Валюта       = Строка.Валюта;
				ПриходЗаДень = 0;
				РасходЗаДень = 0;
				Если КурсоваяРазница > 0 Тогда
					ПриходЗаДень  = КурсоваяРазница;
					Строка.Приход = Строка.Приход + КурсоваяРазница;
				Иначе
					РасходЗаДень  = -КурсоваяРазница;
					Строка.Расход = Строка.Расход - КурсоваяРазница;
				КонецЕсли;
				Если ДатаЛиста >= Отчет.ДатаНачала Тогда
					ОбластьКурсоваяРазницаПоВалютеОтчет.Параметры.Валюта       = Валюта;
					ОбластьКурсоваяРазницаПоВалютеОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
					ОбластьКурсоваяРазницаПоВалютеОтчет.Параметры.РасходЗаДень = РасходЗаДень;
					
					ДокументРезультат.Вывести(ОбластьКурсоваяРазницаПоВалютеОтчет);
					ДокументРезультат.Присоединить(ОбластьКурсоваяРазницаПоВалютеОтчет);
				КонецЕсли;
				Остаток = Остаток + КурсоваяРазница;
			КонецЕсли;
		КонецЦикла;
		
		Если ДатаЛиста >= Отчет.ДатаНачала Тогда
			
			ОбластьКонечныйОстатокОтчет.Параметры.ОстатокКонец = Остаток;
			
			ДокументРезультат.Вывести(ОбластьКонечныйОстатокОтчет);
			ДокументРезультат.Присоединить(ОбластьКонечныйОстатокОтчет);
			
			ПоВалютам = Ложь;
			Для Каждого Строка ИЗ РабочаяТаблица Цикл
				Если (Строка.Остаток+Строка.Приход-Строка.Расход <> 0) И (НЕ Строка.Валюта=Справочники.Валюты.ПустаяСсылка()) Тогда
					ПоВалютам = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ПоВалютам Тогда
				ДокументРезультат.Вывести(ОбластьВТомЧислеОтчет);
				ДокументРезультат.Присоединить(ОбластьВТомЧислеОтчет);
				Для Каждого Строка ИЗ РабочаяТаблица Цикл
					Валюта     = Строка.Валюта;
					РубОстаток = Строка.Остаток + Строка.Приход - Строка.Расход;
					Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
						ОбластьОстатокОтчет.Параметры.ВалютаРеглУчета = "национальная валюта (" + Константы.ВалютаРегламентированногоУчета.Получить().НаименованиеПолное+"):";
						ОбластьОстатокОтчет.Параметры.РеглОстаток     = РубОстаток;						
						ДокументРезультат.Вывести(ОбластьОстатокОтчет);
						ДокументРезультат.Присоединить(ОбластьОстатокОтчет);
					Иначе
						Если (РубОстаток <> 0) Или (ВалОстаток <> 0) Тогда
							ОбластьВалОстатокОтчет.Параметры.ВалютаВалУчета = "иностранная валюта (" + Валюта.НаименованиеПолное + "):";
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокРегл = РубОстаток;
							ДокументРезультат.Вывести(ОбластьВалОстатокОтчет);
							ДокументРезультат.Присоединить(ОбластьВалОстатокОтчет);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ОбластьПодвалОтчет.Параметры.НадписьКолПриходныхРасходных=?(КоличествоПриходныхДокументов>0, ЧислоПрописью(КоличествоПриходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ")+ "приходных и "+
			?(КоличествоРасходныхДокументов>0,ЧислоПрописью(КоличествоРасходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ")+"расходных получил.";
			
			Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(Отчет.Организация, КонецДня(ДатаЛиста),);
			
			ОбластьПодвалОтчет.Параметры.ГлБухгалтер = Руководители.ГлавныйБухгалтер;
			ОбластьПодвалОтчет.Параметры.Кассир      = Руководители.Кассир;
			
			ДокументРезультат.Вывести(ОбластьПодвалОтчет);
			ДокументРезультат.Присоединить(ОбластьПодвалОтчет);
		КонецЕсли;
		
		Ошибка      = Ложь;
		Сортировать = Ложь;

		Строка = РабочаяТаблица.Найти(Справочники.Валюты.ПустаяСсылка(), "Валюта");
		Если Строка = Неопределено Тогда
			Строка        = РабочаяТаблица.Добавить();
			Строка.Валюта = Справочники.Валюты.ПустаяСсылка();
			Сортировать   = Истина;
		Иначе
			Строка.Остаток = 0;
		КонецЕсли;
		
		Если (ДатаЛиста = ВыборкаИтоговПоДням.Период) Тогда
			Строка.Остаток = ВыборкаИтоговПоДням.СуммаКонечныйОстатокДт - РабочаяТаблица.Итог("Остаток");
			Если Остаток <> ВыборкаИтоговПоДням.СуммаКонечныйОстатокДт Тогда
				Ошибка = Истина;
			КонецЕсли;
		Иначе
			Если ПоПроводкам Тогда
				Строка.Остаток = ВыборкаИтоговПоДням.СуммаНачальныйОстатокДт - РабочаяТаблица.Итог("Остаток");
				Если Остаток <> ВыборкаИтоговПоДням.СуммаНачальныйОстатокДт Тогда
					Ошибка = Истина;
				КонецЕсли;
			Иначе
				Строка.Остаток = -РабочаяТаблица.Итог("Остаток");
				Если Остаток <> 0 Тогда
					Ошибка = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Ошибка Тогда
			Сообщить("Обороты по документам и проводкам за " + ДатаЛиста + " не совпадают!");
		КонецЕсли;
		
		Если Сортировать Тогда
			РабочаяТаблица.Сортировать("Валюта");
		КонецЕсли;
		РабочаяТаблица.ЗаполнитьЗначения(0,"Приход, Расход");
		
		Если ПоПроводкам И ДатаЛиста = ВыборкаИтоговПоДням.Период Тогда
			ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
		КонецЕсли;
		Если ПоДокументам И ДатаЛиста = ВыборкаДокументовПоДням.День Тогда
			ПоДокументам = ВыборкаДокументовПоДням.Следующий();
		КонецЕсли;
		// Проверим, если месяц закончился, то выведем количество листов
		Если (ПоПроводкам И МЕСЯЦ(ДатаЛиста) <> МЕСЯЦ(ВыборкаИтоговПоДням.Период))
			ИЛИ (ПоДокументам И МЕСЯЦ(ДатаЛиста) <> МЕСЯЦ(ВыборкаДокументовПоДням.День)) Тогда
			
			ОбластьЛистовЗаМесяцОтчет.Параметры.НадписьЛистовЗаМесяц = "Количество листов кассовой книги за месяц: " +ЛистовЗаМесяц;
			ДокументРезультат.Вывести(ОбластьЛистовЗаМесяцОтчет);
			ДокументРезультат.Присоединить(ОбластьЛистовЗаМесяцОтчет);
			
			ЛистовЗаМесяц = 0;
		КонецЕсли;
		
		Если ПоПроводкам 
			И ВыборкаИтоговПоДням.Период = НачалоДня(Отчет.ДатаКонца)
			И ВыборкаИтоговПоДням.СуммаОборотДт = 0 
			И ВыборкаИтоговПоДням.СуммаОборотКт = 0 
			Тогда
			Если МЕСЯЦ(ДатаЛиста) <> МЕСЯЦ(ВыборкаИтоговПоДням.Период) Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
		КонецЕсли;
		
		Если ПоПроводкам или ПоДокументам Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ВывестиПодвал = Истина;
		
		ТекНомера = РегистрыСведений.НомераЛистовКассовойКниги.СрезПоследних(ДатаЛиста,Новый Структура("Организация", Отчет.Организация));	
		Если ТекНомера.Количество() = 0 ИЛИ ТекНомера[0].НомерЛиста <> НомерЛиста Тогда
			Номера=РегистрыСведений.НомераЛистовКассовойКниги.СоздатьНаборЗаписей();			
			Номера.Отбор.Организация.Значение 		= Отчет.Организация; 
			Номера.Отбор.Организация.Использование  = Истина;
			Номера.Отбор.Период.Значение 			= ДатаЛиста; 
			Номера.Отбор.Период.Использование 		= Истина; 
			
			НоваяЗапись=Номера.Добавить();			
			НоваяЗапись.Организация = Отчет.Организация;
			НоваяЗапись.Период      = ДатаЛиста;
			НоваяЗапись.НомерЛиста  = НомерЛиста;
			Номера.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Если ВывестиПодвал Тогда
		Д = Отчет.ДатаКонца;
		Если (НачалоДня(КонецМесяца(ДатаЛиста)) = ДатаЛиста) Или
			(НачалоМесяца(ДатаЛиста) <> НачалоМесяца(Отчет.ДатаКонца)) Или
			(Месяц(Отчет.ДатаНачала)=Месяц(Отчет.ДатаКонца)) Или (Отчет.ПоследнийЛист <> 0) Тогда			
			ОбластьЛистовЗаМесяцОтчет.Параметры.НадписьЛистовЗаМесяц = "Количество листов кассовой книги за месяц: " +ЛистовЗаМесяц; 
			ДокументРезультат.Вывести(ОбластьЛистовЗаМесяцОтчет);
			ДокументРезультат.Присоединить(ОбластьЛистовЗаМесяцОтчет);
		КонецЕсли;
		Если (НачалоДня(КонецГода(ДатаЛиста)) = ДатаЛиста) Или 
			(НачалоГода(ДатаЛиста) <> НачалоГода(Отчет.ДатаКонца)) Или 
			(Отчет.ПоследнийЛист = 2) Тогда
			
			ОбластьЛистовЗаГодОтчет.Параметры.НадписьЛистовЗаГод = "Количество листов кассовой книги за год: " + ЛистовЗаГод; 
			ДокументРезультат.Вывести(ОбластьЛистовЗаГодОтчет);
			ДокументРезультат.Присоединить(ОбластьЛистовЗаГодОтчет); 
			
			// Печать обложки и титульного листа
			Т1     = Новый ТабличныйДокумент;
			Макет1 = Отчеты.ДенежныеСредстваКассоваяКнигаОУ.ПолучитьМакет("Обложка");
			ОбластьОбложка = Макет1.ПолучитьОбласть("Обложка");
			ОбластьОбложка.Параметры.НазваниеОрганизации = ?(Отчет.Организация.НаименованиеПолное = "", Отчет.Организация.Наименование, Отчет.Организация.НаименованиеПолное);
			ОбластьОбложка.Параметры.НадписьОбложка = " на "+Формат(ДатаЛиста, "ДФ=yyyy") + " г.";
			ОбластьОбложка.Параметры.КодОКПО = СведенияОбОрганизации.КодПоОКПО;	
			Т1.Вывести(ОбластьОбложка);
			Т1.ВывестиГоризонтальныйРазделительСтраниц();
			Т1.Вывести(ОбластьОбложка);
			// Последний лист кассовой книги
			Т1.ВывестиГоризонтальныйРазделительСтраниц();
			ОбластьПослДеньГода = Макет1.ПолучитьОбласть("ПослДеньГода");
			
			Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизаций(Отчет.Организация, КонецДня(ДатаЛиста),);
			
			ОбластьПослДеньГода.Параметры.ГлБухгалтер           = Руководители.ГлавныйБухгалтер;
			ОбластьПослДеньГода.Параметры.Руководитель          = Руководители.Руководитель;
			ОбластьПослДеньГода.Параметры.РуководительДолжность = Руководители.РуководительДолжность;
			ОбластьПослДеньГода.Параметры.ЛистовЗаГод           = ЛистовЗаГод;
			Т1.Вывести(ОбластьПослДеньГода);
			Т1.ОтображатьСетку     = Ложь;
			Т1.ОтображатьЗаголовки = Ложь;
			Т1.Показать("Обложка и титульный лист кассовой книги","");
		КонецЕсли;
	КонецЕсли;         
	
	ДокументРезультат.ТолькоПросмотр = Истина;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.Организация=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(Отчет.ДатаНачала) Тогда
		Отчет.ДатаНачала=НачалоДня(ТекущаяДата());
	КонецЕсли;	
	Если НЕ ЗначениеЗаполнено(Отчет.ДатаКонца) Тогда
		Отчет.ДатаКонца=КонецДня(ТекущаяДата());
	КонецЕсли;
КонецПроцедуры
