&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="Сформировать" Тогда
		Если Не ЗначениеЗаполнено(Отчет.ДатаНачала) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Дата начала>>!",,"Отчет.ДатаНачала"); Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Отчет.ДатаКонца) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Дата конца>>!",,"Отчет.ДатаКонца"); Возврат;
		КонецЕсли;		
		Если Не ЗначениеЗаполнено(Отчет.Склад) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Склад>>!",,"Отчет.Склад"); Возврат;
		КонецЕсли;		
		Если Не ЗначениеЗаполнено(Отчет.Организация) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Организация>>!",,"Отчет.Организация"); Возврат;
		КонецЕсли;		
		СформироватьОтчет();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчет()
	ТабличныйДокумент.Очистить();

	Макет=Отчеты.УнифицированнаяФорма_ТОРГ29.ПолучитьМакет("Макет");

	// Выведем заголовок.
	СведенияОПокупателе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Отчет.Организация, Отчет.ДатаКонца);

	ВыбМОЛ = РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(КонецДня(Отчет.ДатаКонца), Новый Структура("СтруктурнаяЕдиница", Отчет.Склад)).ФизическоеЛицо;

	ОбластьМакета=Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ОрганизацияПредставление = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ДатаСоставления = ТекущаяДата();
	ОбластьМакета.Параметры.ДатаНачала = Отчет.ДатаНачала;
	ОбластьМакета.Параметры.ДатаКонца = Отчет.ДатаКонца;
	ОбластьМакета.Параметры.ОрганизацияПоОКПО = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.Подразделение=Отчет.Склад.Подразделение.Наименование;
	ОбластьМакета.Параметры.МОЛ = ?(ЗначениеЗаполнено(ВыбМОЛ), ВыбМОЛ, "");
	ОбластьМакета.Параметры.МОЛТабельныйНомер = ?(Не ЗначениеЗаполнено(ВыбМОЛ), "", ВыбМОЛ.Код);

	ОбластьМакета.Параметры.Номер = Отчет.НомерОтчета;
	ВысотаЗаголовка=ОбластьМакета.ВысотаТаблицы;

	ТабличныйДокумент.Вывести(ОбластьМакета);

	ОбластьМакета=Макет.ПолучитьОбласть("Шапка");
	ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(1 + ВысотаЗаголовка, ,2 + ВысотаЗаголовка);

	ТабличныйДокумент.Вывести(ОбластьМакета);

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Дата1", НачалоДня(Отчет.ДатаНачала));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Отчет.ДатаКонца));
	Запрос.УстановитьПараметр("Организация", Отчет.Организация);
	Запрос.УстановитьПараметр("Склад", Отчет.Склад);

	Если Отчет.ВидУчета=0 Тогда
		Если Отчет.Склад.ВидСклада=Перечисления.ВидыСкладов.Розничный Тогда
			Запрос.Текст="
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ИсточникДанных.Регистратор КАК Док,
			|	ИсточникДанных.Период КАК ДатаДок,
			|	ИсточникДанных.Регистратор.Номер КАК НомерДок,
			|	СУММА(ИсточникДанных.СтоимостьПриход) КАК ПризнакПрихода,
			|	СУММА(ИсточникДанных.СтоимостьРасход) КАК ПризнакРасхода,
			|	СУММА(ИсточникДанных.СтоимостьНачальныйОстаток) КАК НачОст,
			|	СУММА(ИсточникДанных.СтоимостьКонечныйОстаток) КАК КонОст,
			|	СУММА(
			|		ВЫБОР КОГДА ИсточникДанных.СтоимостьПриход - ИсточникДанных.СтоимостьРасход > 0 ТОГДА
			|			(ИсточникДанных.СтоимостьПриход - ИсточникДанных.СтоимостьРасход)
			|		ИНАЧЕ
			|			0
			|		КОНЕЦ
			|	) КАК Приход,
			|	СУММА(
			|		ВЫБОР КОГДА ИсточникДанных.СтоимостьРасход - ИсточникДанных.СтоимостьПриход > 0 ТОГДА
			|			(ИсточникДанных.СтоимостьРасход - ИсточникДанных.СтоимостьПриход)
			|		ИНАЧЕ
			|			0
			|		КОНЕЦ
			|	) КАК Расход
			|ИЗ
			|	РегистрНакопления.ПартииТоваровНаСкладах.ОстаткиИОбороты(&Дата1, &Дата2, Регистратор,,Склад = &Склад И Организация = &Организация ) КАК ИсточникДанных
			|СГРУППИРОВАТЬ ПО
			|	ИсточникДанных.Регистратор,
			|	ИсточникДанных.Период,
			|	ИсточникДанных.Регистратор.Номер
			|УПОРЯДОЧИТЬ ПО
			|	ИсточникДанных.Период
			|";
		Иначе
			Запрос.Текст="
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ИсточникДанных.Регистратор КАК Док,
			|	ИсточникДанных.Период КАК ДатаДок,
			|	ИсточникДанных.Регистратор.Номер КАК НомерДок,
			|	СУММА(ИсточникДанных.СтоимостьПриход) КАК ПризнакПрихода,
			|	СУММА(ИсточникДанных.СтоимостьРасход) КАК ПризнакРасхода,
			|	СУММА(ИсточникДанных.СтоимостьНачальныйОстаток) КАК НачОст,
			|	СУММА(ИсточникДанных.СтоимостьКонечныйОстаток) КАК КонОст,
			|	СУММА(
			|		ВЫБОР КОГДА ИсточникДанных.СтоимостьПриход - ИсточникДанных.СтоимостьРасход > 0 ТОГДА
			|			(ИсточникДанных.СтоимостьПриход - ИсточникДанных.СтоимостьРасход)
			|		ИНАЧЕ
			|			0
			|		КОНЕЦ
			|	) КАК Приход,
			|	СУММА(
			|		ВЫБОР КОГДА ИсточникДанных.СтоимостьРасход - ИсточникДанных.СтоимостьПриход > 0 ТОГДА
			|			(ИсточникДанных.СтоимостьРасход - ИсточникДанных.СтоимостьПриход)
			|		ИНАЧЕ
			|			0
			|		КОНЕЦ
			|	) КАК Расход
			|ИЗ
			|	РегистрНакопления.ПартииТоваровНаСкладах.ОстаткиИОбороты(&Дата1, &Дата2, Регистратор,,Склад = &Склад И Организация = &Организация) КАК ИсточникДанных
			|СГРУППИРОВАТЬ ПО
			|	ИсточникДанных.Регистратор,
			|	ИсточникДанных.Период,
			|	ИсточникДанных.Регистратор.Номер
			|УПОРЯДОЧИТЬ ПО
			|	ИсточникДанных.Период
			|";
		КонецЕсли;
	Иначе
		МассивСчетов=Новый Массив;
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахАТТ);
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ);
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговле);
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТараПодТоваромИПорожняя);

		//*** Запрос.УстановитьПараметр("ВидСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
		Запрос.УстановитьПараметр("Счета", МассивСчетов);
		Запрос.УстановитьПараметр("СчетТары", ПланыСчетов.Хозрасчетный.ТараПодТоваромИПорожняя);	
		Запрос.Текст="
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсточникДанных.Период КАК ДатаДок,
		|	ИсточникДанных.Регистратор КАК Док,
		|	ИсточникДанных.Регистратор.Номер КАК НомерДок,
		|	СУММА(ИсточникДанных.СуммаОборотДт) КАК ПризнакПрихода,
		|	СУММА(ИсточникДанных.СуммаОборотКт) КАК ПризнакРасхода,
		|	СУММА(ВЫБОР
		|			КОГДА ИсточникДанных.Счет <> &СчетТары
		|				ТОГДА ИсточникДанных.СуммаНачальныйОстатокДт - ИсточникДанных.СуммаНачальныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НачОст,
		|	СУММА(ВЫБОР
		|			КОГДА ИсточникДанных.Счет = &СчетТары
		|				ТОГДА ИсточникДанных.СуммаНачальныйОстатокДт - ИсточникДанных.СуммаНачальныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НачОстТары,
		|	СУММА(ВЫБОР
		|			КОГДА ИсточникДанных.Счет <> &СчетТары
		|				ТОГДА ИсточникДанных.СуммаОборотДт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Приход,
		|	СУММА(ВЫБОР
		|			КОГДА ИсточникДанных.Счет = &СчетТары
		|				ТОГДА ИсточникДанных.СуммаОборотДт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПриходТары,
		|	СУММА(ВЫБОР
		|			КОГДА ИсточникДанных.Счет <> &СчетТары
		|				ТОГДА ИсточникДанных.СуммаОборотКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Расход,
		|	СУММА(ВЫБОР
		|			КОГДА ИсточникДанных.Счет = &СчетТары
		|				ТОГДА ИсточникДанных.СуммаОборотКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РасходТары,
		|	СУММА(ВЫБОР
		|			КОГДА ИсточникДанных.Счет <> &СчетТары
		|				ТОГДА ИсточникДанных.СуммаКонечныйОстатокДт - ИсточникДанных.СуммаКонечныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КонОст,
		|	СУММА(ВЫБОР
		|			КОГДА ИсточникДанных.Счет = &СчетТары
		|				ТОГДА ИсточникДанных.СуммаКонечныйОстатокДт - ИсточникДанных.СуммаКонечныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КонОстТары
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&Дата1, &Дата2, Регистратор, , Счет В (&Счета), , Организация = &Организация И Субконто"+?(Отчет.Склад.ВидСклада=Перечисления.ВидыСкладов.Розничный, "2", "2")+" = &Склад) КАК ИсточникДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсточникДанных.Период,
		|	ИсточникДанных.Регистратор,
		|	ИсточникДанных.Регистратор.Номер
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДок
		|";
	КонецЕсли;
	
	РезультатЗапроса=Запрос.Выполнить();
                      
	тзОстатки=РезультатЗапроса.Выгрузить();
	Если тзОстатки.Количество()=0 Тогда
		НачОст=0;
		КонОст=0;
	Иначе
		НачОст=тзОстатки[0].НачОст;
		КонОст=тзОстатки[тзОстатки.Количество() - 1].КонОст;
	КонецЕсли;
	Для Каждого СтрокаТз ИЗ тзОстатки Цикл
		Если НЕ СтрокаТз.ПризнакПрихода=0 И НЕ СтрокаТз.ПризнакРасхода=0 Тогда
			Если СтрокаТз.ПризнакПрихода<0 Тогда
				СтрокаТз.ПризнакРасхода=СтрокаТз.ПризнакРасхода-СтрокаТз.ПризнакПрихода;
				СтрокаТз.ПризнакПрихода=0;
				СтрокаТз.Расход=СтрокаТз.Расход-СтрокаТз.Приход;
				СтрокаТз.Приход=0;
			Иначе
				СтрокаТз.ПризнакПрихода=СтрокаТз.ПризнакПрихода-СтрокаТз.ПризнакРасхода;
				СтрокаТз.ПризнакРасхода=0;
				СтрокаТз.Приход=СтрокаТз.Приход-СтрокаТз.Расход;
				СтрокаТз.Расход=0;
			Конецесли;	
		КонецЕсли;	
	КонецЦикла;

	ОбластьМакета=Макет.ПолучитьОбласть("ОстатокНачала");
	ОбластьМакета.Параметры.ДатаНачала = "Остаток на " + Формат(Отчет.ДатаНачала, "ДЛФ=Д");
	ОбластьМакета.Параметры.НачСтоимостьВсего = ОбщегоНазначения.ФорматСумм(НачОст);
	ТабличныйДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Приход");
	ТабличныйДокумент.Вывести(ОбластьМакета);

	тзПриходы=ОбщегоНазначения.ОтобратьСтрокиПоКритериям(тзОстатки, Новый Структура("Приход", 0), Новый Структура("Приход", ВидСравнения.НеРавно)).Выгрузить();
	тзПриходы.Сортировать("ДатаДок Возр");

	ОбластьМакета=Макет.ПолучитьОбласть("Строка");
	Для Каждого СтрокаПрихода Из тзПриходы Цикл
		ОбластьМакета.Параметры.Докум = Лев(СтрокаПрихода.Док,СтрДлина(СтрокаПрихода.Док)-8);
		Попытка
			ОбластьМакета.Параметры.Докум = Лев(СтрокаПрихода.Док,СтрДлина(СтрокаПрихода.Док)-8)+" "+СокрЛП(СтрокаПрихода.Док.Контрагент);
		Исключение	
		КонецПопытки;
		Попытка
			ОбластьМакета.Параметры.Докум = Лев(СтрокаПрихода.Док,СтрДлина(СтрокаПрихода.Док)-8)+" "+СокрЛП(СтрокаПрихода.Док.СкладОтправитель)+"->"+СокрЛП(СтрокаПрихода.Док.СкладПолучатель);
		Исключение	
		КонецПопытки;
		ОбластьМакета.Параметры.Расшифровка = СтрокаПрихода.Док;
		ОбластьМакета.Параметры.ДатаДокумента = СтрокаПрихода.ДатаДок;
		ОбластьМакета.Параметры.НомерДокумента = СокрЛП(СтрокаПрихода.НомерДок);
		ОбластьМакета.Параметры.СуммаТовара = ОбщегоНазначения.ФорматСумм(СтрокаПрихода.Приход);
		ОбластьМакета.Параметры.СуммаТары = ОбщегоНазначения.ФорматСумм(0);
		ОбластьМакета.Параметры.Отметки=ТекстПроводокДокумента(СтрокаПрихода.Док);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	Приход = тзПриходы.Итог("Приход");

	ОбластьМакета=Макет.ПолучитьОбласть("ИтогоПриход");
	ОбластьМакета.Параметры.ПрихСтоимостьВсего = ОбщегоНазначения.ФорматСумм(Приход);
	ТабличныйДокумент.Вывести(ОбластьМакета);

	ОбластьМакета=Макет.ПолучитьОбласть("ВсегоПриход");
	ОбластьМакета.Параметры.ПриходСОстатком = ОбщегоНазначения.ФорматСумм(Приход + НачОст);
	ТабличныйДокумент.Вывести(ОбластьМакета);

	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	ОбластьМакета=Макет.ПолучитьОбласть("Расход");
	ТабличныйДокумент.Вывести(ОбластьМакета);

	тзРасходы=ОбщегоНазначения.ОтобратьСтрокиПоКритериям(тзОстатки, Новый Структура("Расход", 0), Новый Структура("Расход", ВидСравнения.НеРавно)).Выгрузить();
	тзРасходы.Сортировать("ДатаДок Возр");

	ОбластьМакета=Макет.ПолучитьОбласть("Строка");
	Для Каждого СтрокаРасхода Из тзРасходы Цикл
		ОбластьМакета.Параметры.Докум = Лев(СтрокаРасхода.Док,СтрДлина(СтрокаРасхода.Док)-8);
		Попытка                             
			ОбластьМакета.Параметры.Докум = Лев(СтрокаРасхода.Док,СтрДлина(СтрокаРасхода.Док)-8)+" "+СокрЛП(СтрокаРасхода.Док.Контрагент);
		Исключение	
		КонецПопытки;	
		Попытка                             
			ОбластьМакета.Параметры.Докум = Лев(СтрокаРасхода.Док,СтрДлина(СтрокаРасхода.Док)-8)+" "+СокрЛП(СтрокаРасхода.Док.СкладОтправитель)+"->"+СокрЛП(СтрокаРасхода.Док.СкладПолучатель);
		Исключение	
		КонецПопытки;	

		ОбластьМакета.Параметры.Расшифровка = СтрокаРасхода.Док;
		ОбластьМакета.Параметры.ДатаДокумента = СтрокаРасхода.ДатаДок;
		ОбластьМакета.Параметры.НомерДокумента = СокрЛП(СтрокаРасхода.НомерДок);
		ОбластьМакета.Параметры.СуммаТовара = ОбщегоНазначения.ФорматСумм(СтрокаРасхода.Расход);
		ОбластьМакета.Параметры.СуммаТары = ОбщегоНазначения.ФорматСумм(0);
		ОбластьМакета.Параметры.Отметки=ТекстПроводокДокумента(СтрокаРасхода.Док);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	Расход = тзРасходы.Итог("Расход");

	ОбластьМакета=Макет.ПолучитьОбласть("ИтогоРасход");
	ОбластьМакета.Параметры.РасхСтоимостьВсего = ОбщегоНазначения.ФорматСумм(Расход);
	ТабличныйДокумент.Вывести(ОбластьМакета);

	ОбластьМакета=Макет.ПолучитьОбласть("ОстатокКонец");
	ОбластьМакета.Параметры.ДатаКонца="Остаток на "+Формат(Отчет.ДатаКонца, "ДЛФ=Д");
	ОбластьМакета.Параметры.КонСтоимостьВсего=ОбщегоНазначения.ФорматСумм(КонОст);
	ТабличныйДокумент.Вывести(ОбластьМакета);

	ОбластьМакета=Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.МОЛ=?(ЗначениеЗаполнено(ВыбМОЛ), ВыбМОЛ, "");
	ТабличныйДокумент.Вывести(ОбластьМакета);

	ТабличныйДокумент.ПовторятьПриПечатиСтроки=ПовторятьПриПечатиСтроки;

	Отчет.НомерОтчета=Отчет.НомерОтчета+1;
КонецПроцедуры

&НаСервере
Функция ТекстПроводокДокумента(Регистратор)
	Запрос=Новый Запрос; стрОтметки="";
	Запрос.УстановитьПараметр("Регистратор", Регистратор);	
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.СчетДт,
	|	ИсточникДанных.СчетКт,
	|	СУММА(ИсточникДанных.СуммаОборот) КАК СуммаОборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(, , Регистратор, , , , , ) КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.СчетКт,
	|	ИсточникДанных.СчетДт
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		стрОтметки=стрОтметки+Строка(Выборка.СчетДТ)+"/"+Строка(Выборка.СчетКт)+" = "+Формат(Выборка.СуммаОборот, "ЧЦ=10; ЧДЦ=2")+Символы.ВК+Символы.ПС;
	КонецЦикла;	
	Возврат стрОтметки;
КонецФункции	

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.Организация=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	Отчет.Склад=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(Отчет.ДатаНачала) Тогда
		Отчет.ДатаНачала=НачалоГода(ТекущаяДата());
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(Отчет.ДатаКонца) Тогда
		Отчет.ДатаКонца=ТекущаяДата();
	КонецЕсли;
	//Если Не ЗначениеЗаполнено(Отчет.ДатаСоставления) Тогда
	//	Отчет.ДатаСоставления=ТекущаяДата();
	//КонецЕсли;
КонецПроцедуры
