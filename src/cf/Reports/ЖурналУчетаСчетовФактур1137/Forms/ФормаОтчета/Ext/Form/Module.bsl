&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="Сформировать" Тогда
		Если Не ЗначениеЗаполнено(Отчет.Организация) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Организация>>!",,"Отчет.Организация"); Возврат;
		КонецЕсли;		
		СформироватьОтчет();

	ИначеЕсли Команда.Имя="ПериодНазад" Тогда
		Отчет.Период=КонецКвартала(ДобавитьМесяц(Отчет.Период, -3));
		ОбновитьНадписьКвартал();

	ИначеЕсли Команда.Имя="ПериодВперед" Тогда
		Отчет.Период=КонецКвартала(ДобавитьМесяц(Отчет.Период, 3));
		ОбновитьНадписьКвартал();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНадписьКвартал()
	Элементы.ДекорацияПериод.Заголовок=ПредставлениеПериода(НачалоКвартала(Отчет.Период), КонецКвартала(Отчет.Период), "ФП = Истина");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	Элементы.ГруппаДопНастройки.Доступность=НЕ Отчет.СформироватьОтчетПоСтандартнойФорме;	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчет()
	//*** МассивПрефиксовДляРИБиОрганизации=ОбщегоНазначения.СформироватьМассивПрефиксовДляРИБИОрганизации(Отчет.Организация);
	
	Макет=Отчеты.ЖурналУчетаСчетовФактур1137.ПолучитьМакет("Макет1137");
	
	ТабличныйДокумент.Очистить();

	Данные = ПолучитьДанныеДляОтчета();
	
	СведенияОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Отчет.Организация);
	НаименованиеОрганизацииДляПечатныхФорм = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОрганизации, "ПолноеНаименование,");
	
	Отступ = Макет.ПолучитьОбласть("Отступ");
	
	// ШАПКА
	
	Если Отчет.СформироватьОтчетПоСтандартнойФорме Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьШапкуОтчета(Шапка);
	ТабличныйДокумент.Вывести(Шапка);	
	ТабличныйДокумент.Вывести(Отступ);
	
	// ЧАСТЬ 1
	
	Часть1Заголовок = Макет.ПолучитьОбласть("Часть1Заголовок");	
	ТабличныйДокумент.Вывести(Часть1Заголовок);
	
	Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка");
	
	СтрокиЧасть1 = Данные.ВыставленныеСчетаФактуры;
	
	НомерПП = 1;
	
	Если НЕ Отчет.СформироватьОтчетПоСтандартнойФорме И Отчет.ГруппироватьПоКонтрагентам Тогда
		//Режим построения с группировкой по контрагенту
		СекцияКонтрагента = Макет.ПолучитьОбласть("Контрагент");
		ГруппировкаПоКонтрагенту = СтрокиЧасть1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ГруппировкаПоКонтрагенту.Количество() > 0 Тогда
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
				СекцияКонтрагента.Параметры.Заполнить(ГруппировкаПоКонтрагенту);
				ТабличныйДокумент.Вывести(СекцияКонтрагента, 1);	
				ГруппировкаПоСчетуФактуре = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ГруппировкаПоСчетуФактуре.Следующий() Цикл
					ЗаполнитьСтрокуОтчета(Часть1Строка, ГруппировкаПоСчетуФактуре, НаименованиеОрганизацииДляПечатныхФорм);
					ТабличныйДокумент.Вывести(Часть1Строка, 2);
					НомерПП = НомерПП + 1;
				КонецЦикла; 
			КонецЦикла;	
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;	
	Иначе
		Выборка = СтрокиЧасть1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьСтрокуОтчета(Часть1Строка, Выборка, НаименованиеОрганизацииДляПечатныхФорм);
			Часть1Строка.Параметры.Номер = НомерПП;
			ТабличныйДокумент.Вывести(Часть1Строка);
			НомерПП = НомерПП + 1;
		КонецЦикла;
	КонецЕсли;	
		
	ТабличныйДокумент.Вывести(Отступ);
	
	// ЧАСТЬ 2
	
	Часть2Заголовок = Макет.ПолучитьОбласть("Часть2Заголовок");	
	ТабличныйДокумент.Вывести(Часть2Заголовок);
	
	Часть2Строка = Макет.ПолучитьОбласть("Часть2Строка");
	
	СтрокиЧасть2 = Данные.ПолученныеСчетаФактуры;
	
    НомерПП = 1;
	
	Если НЕ Отчет.СформироватьОтчетПоСтандартнойФорме И Отчет.ГруппироватьПоКонтрагентам Тогда
		//Режим построения с группировкой по контрагенту
		СекцияКонтрагента = Макет.ПолучитьОбласть("Контрагент");
		ГруппировкаПоКонтрагенту = СтрокиЧасть2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ГруппировкаПоКонтрагенту.Количество() > 0 Тогда
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
				СекцияКонтрагента.Параметры.Заполнить(ГруппировкаПоКонтрагенту);
				ТабличныйДокумент.Вывести(СекцияКонтрагента, 1);	
				ГруппировкаПоСчетуФактуре = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ГруппировкаПоСчетуФактуре.Следующий() Цикл
					ЗаполнитьСтрокуОтчета(Часть2Строка, ГруппировкаПоСчетуФактуре, НаименованиеОрганизацииДляПечатныхФорм);
					ТабличныйДокумент.Вывести(Часть2Строка, 2);
					НомерПП = НомерПП + 1;
				КонецЦикла; 
			КонецЦикла;	
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;	
	Иначе
		Выборка = СтрокиЧасть2.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьСтрокуОтчета(Часть2Строка, Выборка, НаименованиеОрганизацииДляПечатныхФорм);
			Часть2Строка.Параметры.Номер = НомерПП;
			ТабличныйДокумент.Вывести(Часть2Строка);
			НомерПП = НомерПП + 1;
		КонецЦикла;
	КонецЕсли;	
		
	ТабличныйДокумент.Вывести(Отступ);
	
	// ПОДВАЛ
	Подвал=Макет.ПолучитьОбласть("Подвал");
	ЗаполнитьПодвалОтчета(Подвал);
	ТабличныйДокумент.Вывести(Подвал);	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДляОтчета()
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Отчет.Организация);
	Запрос.УстановитьПараметр("Квартал", НачалоКвартала(Отчет.Период));
	стрУсловиеКонтрагент=""; стрУсловиеВидДоговора="";
	Если НЕ Отчет.КонтрагентДляОтбора.Пустая() Тогда
		стрУсловиеКонтрагент=" И ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент=&Контрагент";
		Запрос.УстановитьПараметр("Контрагент", Отчет.КонтрагентДляОтбора);
	КонецЕсли;
	
	Если Отчет.Период >= Дата(2015,1,1) Тогда
		стрУсловиеВидДоговора=" И ЗаписиРегистраЖурналУчетаСчетовФактур.ДоговорКонтрагента.ВидДоговора В (&ВидДоговора)";

		МассивВидовДоговоров=Новый Массив;
		МассивВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
		МассивВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);

		Запрос.УстановитьПараметр("ВидДоговора", МассивВидовДоговоров);
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоКвартала(Отчет.Период));
	Запрос.УстановитьПараметр("ДатаКонца", КонецКвартала(Отчет.Период));
	
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Организация,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Ссылка КАК СчетФактураДокумент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВидаОперации,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент.НаименованиеПолное КАК КонтрагентНаименование,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ВалютаДокумента КАК НаименованиеВалюты,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ВалютаДокумента.Код КАК КодВалюты,
	|	""ВыставленныеСчетаФактуры"" КАК ЧастьЖурнала,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент.ИНН КАК КонтрагентИНН,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент.КПП КАК КонтрагентКПП,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Дата КАК ДатаПередачиПолучения,
	|	1 КАК КодСпособаВыставления,
	|	ЛОЖЬ КАК СчетФактураНеВыставляется,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ИЛИ 
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Исправительный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДокументОснованиеКорректировка.Дата
	|ИНАЧЕ 
	|	 ЗаписиРегистраЖурналУчетаСчетовФактур.Дата 
	|КОНЕЦ  КАК ДатаСчетаФактуры,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ИЛИ 
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Исправительный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДокументОснованиеКорректировка.Номер
	|ИНАЧЕ 
	|	 ЗаписиРегистраЖурналУчетаСчетовФактур.Номер 
	|КОНЕЦ  КАК НомерСчетаФактуры,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС<>0 ТОГДА
	|	ЛОЖЬ	
	|ИНАЧЕ 
	|	 ИСТИНА
	|КОНЕЦ  КАК СчетФактураБезНДС,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Номер
	|ИНАЧЕ 
	|	 """" 
	|КОНЕЦ  КАК НомерКорректировочногоСчетаФактуры,
	|
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Дата
	|ИНАЧЕ 
	|	 """" 
	|КОНЕЦ  КАК ДатаКорректировочногоСчетаФактуры,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|	ИСТИНА
	|ИНАЧЕ 
	|	 ЛОЖЬ 
	|КОНЕЦ  КАК КорректировочныйСчетФактура,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Исправительный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерИсправления
	|ИНАЧЕ 
	|	 """" 
	|КОНЕЦ  КАК НомерИсправления,
	|
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Исправительный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Дата
	|ИНАЧЕ 
	|	 """" 
	|КОНЕЦ  КАК ДатаИсправления,
    |	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДокументОснованиеКорректировка.СуммаДокумента + ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента
	|ИНАЧЕ 
	|	 ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента
	|КОНЕЦ  КАК СуммаДокумента,
    |	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДокументОснованиеКорректировка.СуммаНДС + ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС
	|ИНАЧЕ 
	|	 ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС
	|КОНЕЦ  КАК СуммаНДС,
    |	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|   ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента<0 ТОГДА
	|  		-ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента 
	|   ИНАЧЕ
	|        """"
	|   КОНЕЦ  
	|КОНЕЦ  КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|   ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента>0 ТОГДА
	|  		ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента 
	|   ИНАЧЕ
	|        """"
	|   КОНЕЦ  
	|КОНЕЦ  КАК СуммаПоСчетуФактуреРазницаУвеличение,
    |	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|   ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС<0 ТОГДА
	|  		-ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС 
	|   ИНАЧЕ
	|        """"
	|   КОНЕЦ  
	|КОНЕЦ  КАК СуммаНДСРазницаУменьшение,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|   ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС>0 ТОГДА
	|  		ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС 
	|   ИНАЧЕ
	|        """"
	|   КОНЕЦ  
	|КОНЕЦ  КАК СуммаНДСРазницаУвеличение
	|	
	|ИЗ
	|	Документ.СчетФактураВыданный КАК ЗаписиРегистраЖурналУчетаСчетовФактур
	|ГДЕ
	|   ЗаписиРегистраЖурналУчетаСчетовФактур.Дата МЕЖДУ &ДатаНачала И &ДатаКонца И ЗаписиРегистраЖурналУчетаСчетовФактур.Организация=&Организация И  ЗаписиРегистраЖурналУчетаСчетовФактур.Ссылка.Проведен=ИСТИНА
	|   "+стрУсловиеКонтрагент+"
	|   "+стрУсловиеВидДоговора+"
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПередачиПолучения
	|";
	Если НЕ Отчет.СформироватьОтчетПоСтандартнойФорме И Отчет.ГруппироватьПоКонтрагентам Тогда
		Запрос.Текст = Запрос.Текст + "
		|ИТОГИ
		|	СУММА(СуммаДокумента),
		|	СУММА(СуммаНДС),
		| 	МАКСИМУМ(КонтрагентНаименование)
		|ПО
		|	Контрагент";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО
		|КонтрагентНаименование, ");			
	КонецЕсли;		
			
	ВыставленныеСчетаФактуры = Запрос.Выполнить();
	
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Организация,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Ссылка КАК СчетФактураДокумент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВидаОперации,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент.НаименованиеПолное КАК КонтрагентНаименование,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ВалютаДокумента КАК НаименованиеВалюты,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ВалютаДокумента.Код КАК КодВалюты,
	|	""ПолученныеСчетаФактуры"" КАК ЧастьЖурнала,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент.ИНН КАК КонтрагентИНН,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент.КПП КАК КонтрагентКПП,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Дата КАК ДатаПередачиПолучения,
	|	1 КАК КодСпособаВыставления,
	|	ЛОЖЬ КАК СчетФактураНеВыставляется,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ИЛИ 
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Исправительный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДокументОснованиеКорректировка.Дата
	|ИНАЧЕ 
	|	 ЗаписиРегистраЖурналУчетаСчетовФактур.Дата 
	|КОНЕЦ  КАК ДатаСчетаФактуры,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ИЛИ 
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Исправительный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДокументОснованиеКорректировка.Номер
	|ИНАЧЕ 
	|	 ЗаписиРегистраЖурналУчетаСчетовФактур.Номер 
	|КОНЕЦ  КАК НомерСчетаФактуры,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС<>0 ТОГДА
	|	ЛОЖЬ	
	|ИНАЧЕ 
	|	 ИСТИНА
	|КОНЕЦ  КАК СчетФактураБезНДС,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Номер
	|ИНАЧЕ 
	|	 """" 
	|КОНЕЦ  КАК НомерКорректировочногоСчетаФактуры,
	|
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Дата
	|ИНАЧЕ 
	|	 """" 
	|КОНЕЦ  КАК ДатаКорректировочногоСчетаФактуры,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|	ИСТИНА
	|ИНАЧЕ 
	|	 ЛОЖЬ 
	|КОНЕЦ  КАК КорректировочныйСчетФактура,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Исправительный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерИсправления
	|ИНАЧЕ 
	|	 """" 
	|КОНЕЦ  КАК НомерИсправления,
	|
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Исправительный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Дата
	|ИНАЧЕ 
	|	 """" 
	|КОНЕЦ  КАК ДатаИсправления,
    |	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДокументОснованиеКорректировка.СуммаДокумента + ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента
	|ИНАЧЕ 
	|	 ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента
	|КОНЕЦ  КАК СуммаДокумента,
    |	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДокументОснованиеКорректировка.СуммаНДС + ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС
	|ИНАЧЕ 
	|	 ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС
	|КОНЕЦ  КАК СуммаНДС,
    |	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|   ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента<0 ТОГДА
	|  		-ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента 
	|   ИНАЧЕ
	|        """"
	|   КОНЕЦ  
	|КОНЕЦ  КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|   ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента>0 ТОГДА
	|  		ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента 
	|   ИНАЧЕ
	|        """"
	|   КОНЕЦ  
	|КОНЕЦ  КАК СуммаПоСчетуФактуреРазницаУвеличение,
    |	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|   ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС<0 ТОГДА
	|  		-ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС 
	|   ИНАЧЕ
	|        """"
	|   КОНЕЦ  
	|КОНЕЦ  КАК СуммаНДСРазницаУменьшение,
	|	
	|ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ВидСчетаФактуры=Значение(Перечисление.НДСВидСчетаФактуры.Корректировочный) ТОГДА
	|   ВЫБОР КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС>0 ТОГДА
	|  		ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС 
	|   ИНАЧЕ
	|        """"
	|   КОНЕЦ  
	|КОНЕЦ  КАК СуммаНДСРазницаУвеличение
	|	
	|ИЗ
	|	Документ.СчетФактураПолученный КАК ЗаписиРегистраЖурналУчетаСчетовФактур
	|ГДЕ
	|   ЗаписиРегистраЖурналУчетаСчетовФактур.Дата МЕЖДУ &ДатаНачала И &ДатаКонца И ЗаписиРегистраЖурналУчетаСчетовФактур.Организация=&Организация И  ЗаписиРегистраЖурналУчетаСчетовФактур.Ссылка.Проведен=ИСТИНА
	|   "+стрУсловиеКонтрагент+"
	|   "+стрУсловиеВидДоговора+"
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПередачиПолучения
	|";

	//|ВЫБРАТЬ
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.Организация,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.Ссылка КАК СчетФактураДокумент,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВидаОперации,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.Дата КАК ДатаПередачиПолучения,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.Дата КАК ДатаСчетаФактуры,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.Номер КАК НомерСчетаФактуры,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент.Наименование КАК КонтрагентНаименование,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.ВалютаДокумента КАК НаименованиеВалюты,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.ВалютаДокумента.Код КАК КодВалюты,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента КАК СуммаДокумента,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	//|	ЛОЖЬ КАК СчетФактураБезНДС,
	//|	""ВыставленныеСчетаФактуры"" КАК ЧастьЖурнала,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент.ИНН КАК КонтрагентИНН,
	//|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент.КПП КАК КонтрагентКПП,
	//|	0 КАК СуммаПоСчетуФактуреРазницаУменьшение,
	//|	0 КАК СуммаПоСчетуФактуреРазницаУвеличение,
	//|	0 КАК СуммаНДСРазницаУменьшение,
	//|	0 КАК СуммаНДСРазницаУвеличение,
	//|	1 КАК КодСпособаВыставления,
	//|	"""" КАК НомерКорректировочногоСчетаФактуры,
	//|	"""" КАК ДатаКорректировочногоСчетаФактуры,
	//|	"""" КАК НомерИсправления,
	//|	"""" КАК ДатаИсправления,
	//|	ЛОЖЬ КАК СчетФактураНеВыставляется,
	//|	ЛОЖЬ КАК КорректировочныйСчетФактура
	//|ИЗ
	//|	Документ.СчетФактураПолученный КАК ЗаписиРегистраЖурналУчетаСчетовФактур
	//|   
	//|ГДЕ
	//|   ЗаписиРегистраЖурналУчетаСчетовФактур.Дата МЕЖДУ &ДатаНачала И &ДатаКонца И  ЗаписиРегистраЖурналУчетаСчетовФактур.Ссылка.Проведен=ИСТИНА
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ДатаПередачиПолучения
	//|";	
	Если НЕ Отчет.СформироватьОтчетПоСтандартнойФорме И Отчет.ГруппироватьПоКонтрагентам Тогда
		Запрос.Текст = Запрос.Текст + "
		|ИТОГИ
		|	СУММА(СуммаДокумента),
		|	СУММА(СуммаНДС),
		| 	МАКСИМУМ(КонтрагентНаименование)
		|ПО
		|	Контрагент";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО
		|КонтрагентНаименование, ");	
	КонецЕсли;	
	
	ПолученныеСчетаФактуры = Запрос.Выполнить();

	Возврат Новый Структура("ВыставленныеСчетаФактуры, ПолученныеСчетаФактуры", ВыставленныеСчетаФактуры, ПолученныеСчетаФактуры);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьШапкуОтчета(Шапка)
	
	СведенияОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Отчет.Организация);
	Шапка.Параметры.Организация = ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОрганизации, "ПолноеНаименование");
	Шапка.Параметры.ИННКПП = "" + Отчет.Организация.ИНН + ?(НЕ ЗначениеЗаполнено(Отчет.Организация.КПП), "", ("/"+Отчет.Организация.КПП));
	Шапка.Параметры.Квартал = Формат(Отчет.Период, "ДФ = к");
	Шапка.Параметры.Год = Формат(Отчет.Период, "ДФ = гггг");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодвалОтчета(Подвал)		
	СписокПоказателей=Новый Массив;
	СписокПоказателей.Добавить("ФИОРук");
	СписокПоказателей.Добавить("ФИО");
	СведенияОбОрганизации = РО.ПолучитьСведенияОбОрганизации(Отчет.Организация, ТекущаяДата(), СписокПоказателей);
	СведенияОЮрФизЛице    = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Отчет.Организация, ТекущаяДата());
	СведенияОбОрганизации.Вставить("Свидетельство", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОЮрФизЛице, "Свидетельство,"));

	Подвал.Параметры.ИмяРук = СведенияОбОрганизации.ФИОРук;
	Подвал.Параметры.ИмяОрг = ?(РО.ЭтоПБОЮЛ(Отчет.Организация), СведенияОбОрганизации.ФИО, "");
	Подвал.Параметры.Свидетельство = СведенияОбОрганизации.Свидетельство;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуОтчета(СтрокаОтчета, СтрокаДанных, НаименованиеОрганизацииДляПечатныхФорм)
	
	ЗаполнитьЗначенияСвойств(СтрокаОтчета.Параметры, СтрокаДанных);
	Если СтрокаДанных.ЧастьЖурнала="ВыставленныеСчетаФактуры" Тогда
		СтрокаОтчета.Параметры.НомерСчетаФактуры=ОбщегоНазначенияСервер.НомерНаПечать("");
		СтрокаОтчета.Параметры.НомерКорректировочногоСчетаФактуры=ОбщегоНазначенияСервер.НомерНаПечать("");
		
		//////СтрокаОтчета.Параметры.НомерСчетаФактуры=ОбщегоНазначенияСервер.НомерНаПечать(Новый Структура("Номер",СтрокаДанных.НомерСчетаФактуры), МассивПрефиксовДляРИБиОрганизации);
		//////СтрокаОтчета.Параметры.НомерКорректировочногоСчетаФактуры=ОбщегоНазначенияСервер.НомерНаПечать(Новый Структура("Номер",СтрокаДанных.НомерКорректировочногоСчетаФактуры), МассивПрефиксовДляРИБиОрганизации);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(СтрокаДанных.КонтрагентИНН) 
		И НЕ ЗначениеЗаполнено(СтрокаДанных.КонтрагентКПП) Тогда
		СтрокаОтчета.Параметры.КонтрагентИННКПП = "";
	Иначе
		Если НЕ ЗначениеЗаполнено(СтрокаДанных.КонтрагентКПП) Тогда
			СтрокаОтчета.Параметры.КонтрагентИННКПП = СтрокаДанных.КонтрагентИНН;
		Иначе
			СтрокаОтчета.Параметры.КонтрагентИННКПП = СтрокаДанных.КонтрагентИНН + "/" + СтрокаДанных.КонтрагентКПП;
		КонецЕсли;
	КонецЕсли;
	
	Если СтрокаДанных.Контрагент = СтрокаДанных.Организация Тогда
		СтрокаОтчета.Параметры.КонтрагентНаименование = НаименованиеОрганизацииДляПечатныхФорм;
	КонецЕсли;
	
	СтрокаОтчета.Параметры.Валюта = "" + СтрокаДанных.НаименованиеВалюты + ", " + СтрокаДанных.КодВалюты;
	
	Если СтрокаДанных.СчетФактураБезНДС Тогда
		
		Если СтрокаДанных.КорректировочныйСчетФактура Тогда
			СтрокаОтчета.Параметры.СуммаНДСРазницаУменьшение = "без НДС";
			СтрокаОтчета.Параметры.СуммаНДСРазницаУвеличение = "без НДС";
		Иначе
			СтрокаОтчета.Параметры.СуммаНДС = "без НДС";
		КонецЕсли;
		
	КонецЕсли;
	
	// Выводим незаполненные значения в графах в соответствии с Постановлением 1137
	
	Если СтрокаДанных.СчетФактураНеВыставляется Тогда
		СтрокаОтчета.Параметры.ДатаПередачиПолучения = "";
	КонецЕсли;
	
	Если СтрокаДанных.КорректировочныйСчетФактура Тогда
		СтрокаОтчета.Параметры.СуммаДокумента = "";
		СтрокаОтчета.Параметры.СуммаНДС       = "";
	Иначе
		СтрокаОтчета.Параметры.НомерКорректировочногоСчетаФактуры = "";
		СтрокаОтчета.Параметры.ДатаКорректировочногоСчетаФактуры  = "";
		СтрокаОтчета.Параметры.СуммаПоСчетуФактуреРазницаУменьшение = "";
		СтрокаОтчета.Параметры.СуммаПоСчетуФактуреРазницаУвеличение = "";
		СтрокаОтчета.Параметры.СуммаНДСРазницаУменьшение = "";
		СтрокаОтчета.Параметры.СуммаНДСРазницаУвеличение = "";
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов формы

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="ОтображатьСФНаАванс" Тогда
		Если Не Отчет.ОтображатьСФНаАванс Тогда
			Отчет.ОтображатьТолькоСФНаАванс=Ложь;
		КонецЕсли; 
	КонецЕсли;	
	УстановитьВидимостьДоступность();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.Организация=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(Отчет.Период) Тогда
		Отчет.Период=НачалоКвартала(ТекущаяДата());
	КонецЕсли;
	Отчет.СформироватьОтчетПоСтандартнойФорме=Истина;
	УстановитьВидимостьДоступность();
	ОбновитьНадписьКвартал();
КонецПроцедуры