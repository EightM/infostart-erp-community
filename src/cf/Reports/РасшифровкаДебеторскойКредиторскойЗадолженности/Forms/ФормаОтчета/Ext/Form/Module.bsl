&НаКлиенте
Процедура ВыполнитьДествие(Команда)
	Если Команда.Имя="Сформировать" Тогда
		Если Не ЗначениеЗаполнено(Отчет.ДатаКонца) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Дата конца>>!",,"Отчет.ДатаКонца"); Возврат;
		КонецЕсли;		
		Если Не ЗначениеЗаполнено(Отчет.Организация) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Организация>>!",,"Отчет.Организация"); Возврат;
		КонецЕсли;		

		СформироватьОтчет();
		Элементы.Страницы.ТекущаяСтраница=Элементы.Страница1;

	ИначеЕсли Команда.Имя="СчетаУчетаЗаполнитьПоУмолчанию" Тогда
		тпСчетаУчета_ЗаполнитьПоУмолчанию();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ОбоработатьДанныеЗапроса(Запрос)
	тзИсходныеДанные=Запрос.Выполнить().Выгрузить();
	тзРезультат=тзИсходныеДанные.СкопироватьКолонки();

	тзБуфер=тзИсходныеДанные.Скопировать();
	тзБуфер.Свернуть("Контрагент,ДоговорКонтрагента,ДК", "");
	Для каждого СтрокаКоллекции Из тзБуфер Цикл
		МассивСтрок=тзИсходныеДанные.НайтиСтроки(Новый Структура("Контрагент, ДК", СтрокаКоллекции.Контрагент, СтрокаКоллекции.ДК));
		Если МассивСтрок.Количество()=0 Тогда Продолжить; КонецЕсли; 
		текПериод=Дата('00010101'); текСумма=0;

		Для каждого СтрокаМассива Из МассивСтрок Цикл
			Если ЗначениеЗаполнено(СтрокаМассива.Период) Тогда 
			Если текПериод<СтрокаМассива.Период Тогда
				текПериод=СтрокаМассива.Период;
			КонецЕсли;
			КонецЕсли;
			текСумма=текСумма+СтрокаМассива.ОстатокНаКонец;
			тзИсходныеДанные.Удалить(СтрокаМассива);
		КонецЦикла;
		НоваяСтрока=тзРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции);
		НоваяСтрока.Период=текПериод;
		НоваяСтрока.ОстатокНаКонец=текСумма;
	КонецЦикла;

	тзРезультат.Свернуть("Контрагент,Период,ДК", "ОстатокНаКонец");
	тзРезультат.Колонки.Добавить("ФормаСобственности");
	Для каждого СтрокаКоллекции Из тзРезультат Цикл
		Попытка
			СтрокаКоллекции.ФормаСобственности=СтрокаКоллекции.Контрагент.ОКОПФ;
		Исключение
			СтрокаКоллекции.ФормаСобственности="";
		КонецПопытки;
	КонецЦикла;
	тзРезультат.Сортировать("ФормаСобственности Возр");

	Возврат тзРезультат;
КонецФункции

&НаСервере
Функция ЗаполнитьПоДаннымБухгалтерскогоУчета()
	КоличествоСчетов=Отчет.СчетаУчета.Количество();

	ФильтрСчетаУчета=Новый Массив();
	Для каждого СтрокаСчета Из Отчет.СчетаУчета Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаСчета.Счет) или НЕ СтрокаСчета.УчаствуетВРасчетах Тогда
			Продолжить;
		КонецЕсли; 
		ФильтрСчетаУчета.Добавить(СтрокаСчета.Счет);
	КонецЦикла; 
	Если ФильтрСчетаУчета.Количество()=0 Тогда
	    ОбщегоНазначения.СообщитьОбОшибке("Неверно задан список счетов, по которым производится сверка!",,,СтатусСообщения.Важное);
	КонецЕсли;

	//АналитикаРасчетов=Новый Массив();
	//АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	//АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаКонца", Новый Граница(КонецДня(Отчет.ДатаКонца),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Отчет.Организация);
	Запрос.УстановитьПараметр("ФильтрСчетаУчета", ФильтрСчетаУчета);
	//Запрос.УстановитьПараметр("АналитикаРасчетов", АналитикаРасчетов);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.Счет,
	|	ИсточникДанных.Субконто1 КАК Контрагент,
	|	ИсточникДанных.Субконто2 КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ИсточникДанных.СуммаРазвернутыйОстатокДт <> 0
	|			ТОГДА ИсточникДанных.СуммаРазвернутыйОстатокДт
	|		ИНАЧЕ ИсточникДанных.СуммаРазвернутыйОстатокКт
	|	КОНЕЦ КАК ОстатокНаКонец,
	|	ВЫБОР
	|		КОГДА ИсточникДанных.СуммаРазвернутыйОстатокДт <> 0
	|			ТОГДА ""Д""
	|		ИНАЧЕ ""К""
	|	КОНЕЦ КАК ДК,
	|	МАКСИМУМ(ИсточникДанных2.Период) КАК Период
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаКонца, Счет В ИЕРАРХИИ (&ФильтрСчетаУчета), , Организация = &Организация) КАК ИсточникДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(, &ДатаКонца, Регистратор, Счет В ИЕРАРХИИ (&ФильтрСчетаУчета),, Организация = &Организация, , ) КАК ИсточникДанных2
	|		ПО ИсточникДанных.Субконто1 = ИсточникДанных2.Субконто1
	|			И ИсточникДанных.Субконто2 = ИсточникДанных2.Субконто2
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.Счет,
	|	ИсточникДанных.Субконто1,
	|	ИсточникДанных.Субконто2,
	|	ВЫБОР
	|		КОГДА ИсточникДанных.СуммаРазвернутыйОстатокДт <> 0
	|			ТОГДА ИсточникДанных.СуммаРазвернутыйОстатокДт
	|		ИНАЧЕ ИсточникДанных.СуммаРазвернутыйОстатокКт
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИсточникДанных.СуммаРазвернутыйОстатокДт <> 0
	|			ТОГДА ""Д""
	|		ИНАЧЕ ""К""
	|	КОНЕЦ
	|";	
	Возврат ОбоработатьДанныеЗапроса(Запрос);
КонецФункции

&НаСервере
Функция ЗаполнитьПоДаннымУправленческогоУчета()
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаКонца", Новый Граница(КонецДня(Отчет.ДатаКонца),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Отчет.Организация);
	Запрос.Текст="
	|ВЫБРАТЬ 
	|	ИсточникДанных.Контрагент  КАК Контрагент,
	|	ИсточникДанных.ДоговорКонтрагента  КАК ДоговорКонтрагента,
	|	ВЫБОР 
	|		КОГДА ИсточникДанных.СуммаБухОстаток < 0
	|			ТОГДА ИсточникДанных.СуммаБухОстаток * (-1)
	|		ИНАЧЕ ИсточникДанных.СуммаБухОстаток
	|	КОНЕЦ КАК ОстатокНаКонец,
	|	ВЫБОР
	|		КОГДА ИсточникДанных.СуммаБухОстаток>=0
	|			ТОГДА ""Д""
	|		ИНАЧЕ ""К""
	|	КОНЕЦ КАК ДК,
	|	МИНИМУМ(ИсточникДанных2.Период) КАК Период
	|ИЗ 
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&ДатаКонца, Организация = &Организация) КАК ИсточникДанных
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(, &ДатаКонца, Регистратор, Организация = &Организация) КАК ИсточникДанных2
	|		ПО ИсточникДанных.Контрагент=ИсточникДанных2.Контрагент
	|		И ИсточникДанных.ДоговорКонтрагента=ИсточникДанных2.ДоговорКонтрагента
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.Контрагент,
	|	ИсточникДанных.ДоговорКонтрагента,
	|	ВЫБОР 
	|		КОГДА ИсточникДанных.СуммаБухОстаток < 0
	|			ТОГДА ИсточникДанных.СуммаБухОстаток * (-1)
	|		ИНАЧЕ ИсточникДанных.СуммаБухОстаток
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИсточникДанных.СуммаБухОстаток>=0
	|			ТОГДА ""Д""
	|		ИНАЧЕ ""К""
	|	КОНЕЦ
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ
	|";
	Возврат ОбоработатьДанныеЗапроса(Запрос);
КонецФункции

&НаСервере
Процедура ВывестиТаблицу(тзДолги, ДК, Макет, Таблица)
	Область=Макет.ПолучитьОбласть("Шапка"+ДК);
	Таблица.Вывести(Область);
	
	ПредыдущаяФормаСобственности="";
	СуммаВсего=0; СуммаПрочих=0; НомерПП=0;

	Для Каждого СтрокаТЗ ИЗ тзДолги Цикл
		текСуммаДолга=СтрокаТЗ.ОстатокНаКонец;
		СуммаВсего=СуммаВсего+текСуммаДолга;
		Если текСуммаДолга<=Отчет.ДолгиМенее Тогда
			СуммаПрочих=СуммаПрочих+текСуммаДолга;
			Продолжить;
		КонецЕсли;	
		Если ПредыдущаяФормаСобственности<>СтрокаТЗ.ФормаСобственности тогда
			Параметр1=3;
			Если СтрокаТЗ.ФормаСобственности<>Null Тогда
				Если СтрокаТЗ.ФормаСобственности.Код=60 Тогда
					Параметр1=2;
				ИначеЕсли СтрокаТЗ.ФормаСобственности.Код=82 Тогда
					Параметр1=1;
				КонецЕсли;
			КонецЕсли;
			Область=Макет.ПолучитьОбласть("Шапка"+ДК+Параметр1);
			Таблица.Вывести(Область);
		КонецЕсли;
		Попытка
			ПредыдущаяФормаСобственности=СтрокаТЗ.ФормаСобственности;
		Исключение
			ПредыдущаяФормаСобственности="";
		КонецПопытки;
		НомерПП=НомерПП+1;
		Область=Макет.ПолучитьОбласть("Строка");
		Область.Параметры.НомерПП=НомерПП;
		Если СтрокаТЗ.Контрагент<>Неопределено Тогда
			Попытка Область.Параметры.ИНН=СтрокаТЗ.Контрагент.ИНН;
			Исключение
			КонецПОпытки;
		КонецЕсли;
		Область.Параметры.Контрагент=СтрокаТЗ.Контрагент;
		Область.Параметры.СуммаДолга=текСуммаДолга;
		Область.Параметры.ДатаВозникновенияЗадолженности=СтрокаТЗ.Период;
		Таблица.Вывести(Область);
	КонецЦикла;

	Область=Макет.ПолучитьОбласть("Прочие"+ДК);
	Область.Параметры.СуммаПрочих=СуммаПрочих;
	Таблица.Вывести(Область);
	
	Область=Макет.ПолучитьОбласть("Итого");
	Область.Параметры.СуммаВсего=СуммаВсего;
	Таблица.Вывести(Область);
КонецПроцедуры	

&НаСервере
Процедура СформироватьОтчет()
	Таблица=ТабличныйДокумент;
	Таблица.Очистить();

	Макет=Отчеты.РасшифровкаДебеторскойКредиторскойЗадолженности.ПолучитьМакет("Макет");

	Область=Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.СтрокаНаДату="На "+Формат(Отчет.ДатаКонца,"ДФ=dd.MM.yyyy");
	Область.Параметры.НаДату=Формат(Отчет.ДатаКонца,"ДФ=dd.MM.yyyy");
	Область.Параметры.Организация=Отчет.Организация.Наименование;
	Область.Параметры.ОКПО=Отчет.Организация.КодПоОКПО;
	Область.Параметры.ОКОНХ=Отчет.Организация.КодОКОНХ;
	Область.Параметры.ОКОПФ=Отчет.Организация.КодОКОПФ;
	Таблица.Вывести(Область);
	
	Если Отчет.РежимФормирования=0 Тогда
		тзДолги=ЗаполнитьПоДаннымУправленческогоУчета();
	Иначе
		тзДолги=ЗаполнитьПоДаннымБухгалтерскогоУчета();
	КонецЕсли;	

	ВывестиТаблицу(тзДолги.НайтиСтроки(Новый Структура("ДК", "Д")), "Д", Макет, Таблица);
	ВывестиТаблицу(тзДолги.НайтиСтроки(Новый Структура("ДК", "К")), "К", Макет, Таблица);

	Область=Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Составлен=Формат(Отчет.ДатаКонца,"ДФ=dd.MM.yyyy");
	
	Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(Отчет.Организация, Отчет.ДатаКонца);
	Область.Параметры.Руководитель=Строка(Руководители.Руководитель);
	Область.Параметры.ГлавныйБухгалтер=Строка(Руководители.ГлавныйБухгалтер);
	
	Таблица.Вывести(Область);
	
	Таблица.АвтоМасштаб=Истина;
	Таблица.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
	Таблица.ОтображатьЗаголовки=Ложь;
	Таблица.ОтображатьСетку=Ложь;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Счета учета"

&НаКлиенте
Процедура тпСчетаУчета_ЗаполнитьПоУмолчанию()
	Отчет.СчетаУчета.Очистить();
	
	НоваяСтрока=Отчет.СчетаУчета.Добавить();
	НоваяСтрока.УчаствуетВРасчетах=Истина;
	НоваяСтрока.Счет=ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками");

	НоваяСтрока=Отчет.СчетаУчета.Добавить();
	НоваяСтрока.УчаствуетВРасчетах=Истина;
	НоваяСтрока.Счет=ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками");

	НоваяСтрока=Отчет.СчетаУчета.Добавить();
	НоваяСтрока.УчаствуетВРасчетах=Истина;
	НоваяСтрока.Счет=ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам");

	НоваяСтрока=Отчет.СчетаУчета.Добавить();
	НоваяСтрока.УчаствуетВРасчетах=Истина;
	НоваяСтрока.Счет=ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам");

	НоваяСтрока=Отчет.СчетаУчета.Добавить();
	НоваяСтрока.УчаствуетВРасчетах=Истина;
	НоваяСтрока.Счет=ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами");
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.Организация=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Отчет.СчетаУчета.Количество()=0 Тогда
		тпСчетаУчета_ЗаполнитьПоУмолчанию();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Отчет.ДатаКонца) Тогда
		Отчет.ДатаКонца=ТекущаяДата();
	КонецЕсли; 
КонецПроцедуры
