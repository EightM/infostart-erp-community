&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="Сформировать" Тогда
		Если Не ЗначениеЗаполнено(Отчет.Организация) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Организация>>!",,"Отчет.Организация"); Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Отчет.Дата) Тогда
			Отчет.Дата=ТекущаяДата();
		КонецЕсли;
		СформироватьОтчет();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеПоСчетам(текДата) Экспорт
	Запрос=Новый Запрос; НомерСчета=0;
	Запрос.УстановитьПараметр("Дата", Новый Граница(КонецДня(текДата),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Отчет.Организация);
	
	Для Каждого СтрокаСчетов ИЗ Отчет.НастройкаСчетов Цикл
		Если СтрокаСчетов.Касса Тогда
			стрУсловияСчета="";
			стрУсловия="Организация = &Организация";
			НомерСчета=НомерСчета+1;
			Запрос.УстановитьПараметр("Счет"+НомерСчета,СтрокаСчетов.Счет);
			стрУсловияСчета="Счет = &Счет"+НомерСчета;
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто1) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто1=&Субконто1"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто1"+НомерСчета,СтрокаСчетов.Субконто1);
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто2) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто2=&Субконто2"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто2"+НомерСчета,СтрокаСчетов.Субконто2);
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто3) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто3=&Субконто3"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто3"+НомерСчета,СтрокаСчетов.Субконто1);
			КонецЕсли;	
			Запрос.Текст=Запрос.Текст+?(Запрос.Текст="",""," ОБЪЕДИНИТЬ ВСЕ ")+"
			|ВЫБРАТЬ
			|	ИсточникДанных1.СуммаОстаток КАК Касса,
			|	0 КАК Марки,
			|	0 КАК ЦенныеБумаги
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, "+стрУсловияСчета+",,"+стрУсловия+") КАК ИсточникДанных1";
		КонецЕсли;
		
		Если СтрокаСчетов.Марки Тогда
			стрУсловияСчета="";
			стрУсловия="Организация = &Организация";
			НомерСчета=НомерСчета+1;
			Запрос.УстановитьПараметр("Счет"+НомерСчета,СтрокаСчетов.Счет);
			стрУсловияСчета="Счет = &Счет"+НомерСчета;
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто1) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто1=&Субконто1"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто1"+НомерСчета,СтрокаСчетов.Субконто1);
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто2) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто2=&Субконто2"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто2"+НомерСчета,СтрокаСчетов.Субконто2);
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто3) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто3=&Субконто3"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто3"+НомерСчета,СтрокаСчетов.Субконто1);
			КонецЕсли;	
			Запрос.Текст=Запрос.Текст+?(Запрос.Текст="",""," ОБЪЕДИНИТЬ ВСЕ ")+"
			|ВЫБРАТЬ
			|	0 КАК Касса,
			|	ИсточникДанных1.СуммаОстаток КАК Марки,
			|	0 КАК ЦенныеБумаги
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, "+стрУсловияСчета+",,"+стрУсловия+") КАК ИсточникДанных1";
		КонецЕсли;
		
		Если СтрокаСчетов.ЦенныеБумаги Тогда
			стрУсловияСчета="";
			стрУсловия="Организация = &Организация";
			НомерСчета=НомерСчета+1;
			Запрос.УстановитьПараметр("Счет"+НомерСчета,СтрокаСчетов.Счет);
			стрУсловияСчета="Счет = &Счет"+НомерСчета;
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто1) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто1=&Субконто1"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто1"+НомерСчета,СтрокаСчетов.Субконто1);
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто2) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто2=&Субконто2"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто2"+НомерСчета,СтрокаСчетов.Субконто2);
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто3) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто3=&Субконто3"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто3"+НомерСчета,СтрокаСчетов.Субконто1);
			КонецЕсли;	
			Запрос.Текст=Запрос.Текст+?(Запрос.Текст="",""," ОБЪЕДИНИТЬ ВСЕ ")+"
			|ВЫБРАТЬ
			|	0 КАК Касса,
			|	0 КАК Марки,
			|	ИсточникДанных1.СуммаОстаток КАК ЦенныеБумаги
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, "+стрУсловияСчета+",,"+стрУсловия+") КАК ИсточникДанных1";
		КонецЕсли;
	КонецЦикла;

	Возврат Запрос.Выполнить().Выбрать();
КонецФункции 

&НаСервере
Функция ПолучитьНомер_ПКО_РКО(стрИсточникДанных)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Дата", Отчет.Дата);
	Запрос.УстановитьПараметр("Организация", Отчет.Организация);
	
	НомерСчета=0;
	Для Каждого СтрокаСчетов ИЗ Отчет.НастройкаСчетов Цикл
		Если СтрокаСчетов.Касса Тогда
			стрУсловияСчета="";
			стрУсловия="Организация = &Организация";
			НомерСчета=НомерСчета+1;
			Запрос.УстановитьПараметр("Счет"+НомерСчета,СтрокаСчетов.Счет);
			стрУсловияСчета="Счет = &Счет"+НомерСчета;
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто1) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто1=&Субконто1"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто1"+НомерСчета,СтрокаСчетов.Субконто1);
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто2) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто2=&Субконто2"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто2"+НомерСчета,СтрокаСчетов.Субконто2);
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто3) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто3=&Субконто3"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто3"+НомерСчета,СтрокаСчетов.Субконто1);
			КонецЕсли;	
			
			Запрос.Текст=Запрос.Текст+?(Запрос.Текст="",""," ОБЪЕДИНИТЬ ВСЕ ")+"
			|ВЫБРАТЬ
			|	ИсточникДанных1.Регистратор.Номер КАК Номер,
			|	ИсточникДанных1.Регистратор.Дата КАК Дата
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(,&Дата,Регистратор, "+стрУсловияСчета+",,"+стрУсловия+") КАК ИсточникДанных1
			|	
			|ГДЕ 
			|ИсточникДанных1.Регистратор ССЫЛКА Документ."+стрИсточникДанных+"
			|";
		КонецЕсли;
		
		Если СтрокаСчетов.Марки Тогда
			стрУсловияСчета="";
			стрУсловия="Организация = &Организация";
			НомерСчета=НомерСчета+1;
			Запрос.УстановитьПараметр("Счет"+НомерСчета,СтрокаСчетов.Счет);
			стрУсловияСчета="Счет = &Счет"+НомерСчета;
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто1) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто1=&Субконто1"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто1"+НомерСчета,СтрокаСчетов.Субконто1);
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто2) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто2=&Субконто2"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто2"+НомерСчета,СтрокаСчетов.Субконто2);
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто3) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто3=&Субконто3"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто3"+НомерСчета,СтрокаСчетов.Субконто1);
			КонецЕсли;	
			Запрос.Текст=Запрос.Текст+?(Запрос.Текст="",""," ОБЪЕДИНИТЬ ВСЕ ")+"
			|ВЫБРАТЬ
			|	ИсточникДанных1.Регистратор.Номер КАК Номер,
			|	ИсточникДанных1.Регистратор.Дата КАК Дата
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(,&Дата,Регистратор, "+стрУсловияСчета+",,"+стрУсловия+") КАК ИсточникДанных1
			|	
			|ГДЕ 
			|ИсточникДанных1.Регистратор ССЫЛКА Документ."+стрИсточникДанных+"
			|";
		КонецЕсли;
		
		Если СтрокаСчетов.ЦенныеБумаги Тогда
			стрУсловияСчета="";
			стрУсловия="Организация = &Организация";
			НомерСчета=НомерСчета+1;
			Запрос.УстановитьПараметр("Счет"+НомерСчета,СтрокаСчетов.Счет);
			стрУсловияСчета="Счет = &Счет"+НомерСчета;
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто1) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто1=&Субконто1"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто1"+НомерСчета,СтрокаСчетов.Субконто1);
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто2) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто2=&Субконто2"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто2"+НомерСчета,СтрокаСчетов.Субконто2);
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаСчетов.Субконто3) Тогда
				стрУсловия=стрУсловия+?(стрУсловия="",""," И ")+"Субконто3=&Субконто3"+НомерСчета;
				Запрос.УстановитьПараметр("Субконто3"+НомерСчета,СтрокаСчетов.Субконто1);
			КонецЕсли;	
			Запрос.Текст=Запрос.Текст+?(Запрос.Текст="",""," ОБЪЕДИНИТЬ ВСЕ ")+"
			|ВЫБРАТЬ
			|	ИсточникДанных1.Регистратор.Номер КАК Номер,
			|	ИсточникДанных1.Регистратор.Дата КАК Дата
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(,&Дата,Регистратор, "+стрУсловияСчета+",,"+стрУсловия+") КАК ИсточникДанных1
			|	
			|ГДЕ 
			|ИсточникДанных1.Регистратор ССЫЛКА Документ."+стрИсточникДанных+"
			|";
		КонецЕсли;
		
	КонецЦикла;	
	
	Запрос.Текст=Запрос.Текст+"
	|УПОРЯДОЧИТЬ ПО
	|	ИсточникДанных1.Регистратор.Дата УБЫВ
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Номер, "");
КонецФункции 

&НаСервере
Процедура СформироватьОтчет()
	ТабличныйДокумент.Очистить();
	
	Макет=Отчеты.ДенежныеСредстваАктИнвентаризации.ПолучитьМакет("ИНВ15");
	
	ОбластьМакета=Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Организация=Отчет.Организация;
	ОбластьМакета.Параметры.Подразделение=Отчет.Подразделение;
	ОбластьМакета.Параметры.ОКПО=Отчет.Организация.КодПоОКПО;
	Если Отчет.Организация.КодПоОКПО="" Тогда  
		Сообщить("Код ОКПО для выбранной организации не задан", СтатусСообщения.Информация);
	КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Если Отчет.ОснованиеИнв = "Приказ" Тогда 
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка21");		
	ИначеЕсли Отчет.ОснованиеИнв = "Постановление" Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка22");		
	ИначеЕсли Отчет.ОснованиеИнв = "Распоряжение" Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка23");
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка20");
	КонецЕсли;
	ОбластьМакета.Параметры.ОснованиеНомер 	= Отчет.ОснованиеНомер;
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета=Макет.ПолучитьОбласть("Шапка3");
	ОбластьМакета.Параметры.ОснованиеДата=Формат(Отчет.ОснованиеДата, "ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.Номер=Отчет.Номер;
	ОбластьМакета.Параметры.Дата=Формат(Отчет.Дата, "ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.Число=Формат(Отчет.Дата, "ДЛФ=DD");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Выборка=ПолучитьДанныеПоСчетам(Отчет.Дата);
	СуммаУчет=?(Выборка.Следующий(), Выборка.Касса+Выборка.Марки+Выборка.ЦенныеБумаги, 0);
	СуммаФакт = Отчет.Наличных + Отчет.Марок + Отчет.ЦенныхБумаг;
	
	Излишек   = ?(СуммаФакт-СуммаУчет > 0, СуммаФакт-СуммаУчет, 0);
	Недостача = ?(СуммаФакт-СуммаУчет < 0, СуммаУчет - СуммаФакт, 0);
	
	Руководители=ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(Отчет.Организация, Отчет.Дата);
	
	ВалютаБух=МодульВалютногоУчета.ПолучитьВалюту("Бух");
	
	ОбластьМакета=Макет.ПолучитьОбласть("Расписка");
	ОбластьМакета.Параметры.ИтогоПрописью 		  = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаФакт, ВалютаБух);
	ОбластьМакета.Параметры.ИтогоУчетПрописью 	  = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаУчет, ВалютаБух);
	ОбластьМакета.Параметры.Излишек 			  = ?(Излишек>0, СтрЗаменить(Формат(Излишек, "ЧДЦ=2"), ",", " руб. ") + " коп.", "");
	ОбластьМакета.Параметры.Недостача 			  = ?(Недостача>0, СтрЗаменить(Формат(Недостача, "ЧДЦ=2"), ",", " руб. ") + " коп.", "");
	ОбластьМакета.Параметры.Нал 	  			  = ?(Отчет.Наличных>0, СтрЗаменить(Формат(Отчет.Наличных, "ЧДЦ=2"), ",", " руб. ") + " коп.", "");
	ОбластьМакета.Параметры.Марки 	  			  = ?(Отчет.Марок>0, СтрЗаменить(Формат(Отчет.Марок, "ЧДЦ=2"), ",", " руб. ") + " коп.", "");
	ОбластьМакета.Параметры.ЦенБумаги 			  = ?(Отчет.ЦенныхБумаг>0, СтрЗаменить(Формат(Отчет.ЦенныхБумаг, "ЧДЦ=2"), ",", " руб. ") + " коп.", "");
	ОбластьМакета.Параметры.Итого 	  			  = ?(СуммаФакт>0, СтрЗаменить(Формат(СуммаФакт, "ЧДЦ=2"), ",", " руб. ") + " коп.", "");
	ОбластьМакета.Параметры.ИтогоУчет 			  = ?(СуммаУчет>0, СтрЗаменить(Формат(СуммаУчет, "ЧДЦ=2"), ",", " руб. ") + " коп.", "");
	ОбластьМакета.Параметры.ПКОНомер  			  = ПолучитьНомер_ПКО_РКО("ПриходныйКассовыйОрдер");
	ОбластьМакета.Параметры.РКОНомер 			  = ПолучитьНомер_ПКО_РКО("РасходныйКассовыйОрдер");
	
	СтруктураПредседатель =ПолучитьФИОДолжность(Отчет.Председатель);
	СтруктураЧленКомиссии1=ПолучитьФИОДолжность(Отчет.ЧленКомиссии1);
	СтруктураЧленКомиссии2=ПолучитьФИОДолжность(Отчет.ЧленКомиссии2);
	СтруктураЧленКомиссии3=ПолучитьФИОДолжность(Отчет.ЧленКомиссии3);
	
	ОбластьМакета.Параметры.Председатель		  = СтруктураПредседатель.ФИО;
	ОбластьМакета.Параметры.ЧК1		 			  = СтруктураЧленКомиссии1.ФИО;
	ОбластьМакета.Параметры.ЧК2		 			  = СтруктураЧленКомиссии2.ФИО;
	ОбластьМакета.Параметры.ЧК3		 			  = СтруктураЧленКомиссии3.ФИО;
	ОбластьМакета.Параметры.ПредседательДолжность = СтруктураПредседатель.Должность;
	ОбластьМакета.Параметры.ЧК1Должность		  = СтруктураЧленКомиссии1.Должность;
	ОбластьМакета.Параметры.ЧК2Должность		  = СтруктураЧленКомиссии2.Должность;
	ОбластьМакета.Параметры.ЧК3Должность		  = СтруктураЧленКомиссии3.Должность;	
	
	ОбластьМакета.Параметры.КассирДолжность 	  = СокрЛП(Руководители.КассирДолжность);
	ОбластьМакета.Параметры.Кассир			 	  = "/ "+Руководители.Кассир+ " /";
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьМакета=Макет.ПолучитьОбласть("Стр2");
	ОбластьМакета.Параметры.РуководительДолжность = Руководители.РуководительДолжность;
	ОбластьМакета.Параметры.Руководитель 		  = "/ "+Руководители.Руководитель+ " /";
	ОбластьМакета.Параметры.КассирДолжность 	  = СокрЛП(Руководители.КассирДолжность);
	ОбластьМакета.Параметры.Кассир			 	  = "/ "+Руководители.Кассир+ " /";
	ОбластьМакета.Параметры.Число		 		  = Формат(Отчет.Дата, "ДЛФ=DD");
	ТабличныйДокумент.Вывести(ОбластьМакета);
КонецПроцедуры

&НаСервере
Функция ПолучитьФИОДолжность(ФизЛицо)
	
	Результат = Новый Структура("ФИО, Должность");
	
	ЗапросПоЛицам=Новый Запрос();
	ЗапросПоЛицам.УстановитьПараметр("ДатаСреза",   Отчет.Дата);
	ЗапросПоЛицам.УстановитьПараметр("Организация", Отчет.Организация);
	ЗапросПоЛицам.УстановитьПараметр("ПризнакФизЛица",   Перечисления.ЮрФизЛицо.ФизЛицо);
	ЗапросПоЛицам.УстановитьПараметр("ФизЛицо",   ФизЛицо);
	ЗапросПоЛицам.Текст = 
	"ВЫБРАТЬ
	|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаСреза, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|				&ДатаСреза,
	|				СтруктурнаяЕдиница = &Организация
	|					И ФизическоеЛицо = &ФизЛицо) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	|		ПО (ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо)";
	ФИОДолжность=ЗапросПоЛицам.Выполнить().Выбрать();
	Пока ФИОДолжность.Следующий() Цикл
		Если НЕ (НЕ ЗначениеЗаполнено(ФИОДолжность.Фамилия) или ФИОДолжность.Фамилия = NULL) Тогда
			Фамилия = ФИОДолжность.Фамилия;
		КонецЕсли;
		Если НЕ (НЕ ЗначениеЗаполнено(ФИОДолжность.Имя) или ФИОДолжность.Имя = NULL) Тогда
			Имя = ФИОДолжность.Имя;
		КонецЕсли;
		Если НЕ (НЕ ЗначениеЗаполнено(ФИОДолжность.Отчество) или ФИОДолжность.Отчество = NULL) Тогда
			Отчество = ФИОДолжность.Отчество;
		КонецЕсли;
		Результат.ФИО="/ "+ОбщегоНазначения.ПолучитьФамилиюИмяОтчество(Фамилия, Имя, Отчество)+" /";
		Результат.Должность=ФИОДолжность.Должность;
	КонецЦикла;
	
	Возврат Результат;	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.Организация=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	Отчет.Дата=ТекущаяДата();
	Отчет.ОснованиеДата=ТекущаяДата();
	
	НоваяСтрока=Отчет.НастройкаСчетов.Добавить();
	НоваяСтрока.Счет=ПланыСчетов.Хозрасчетный.КассаОрганизации;
	НоваяСтрока.Касса=Истина;
	НоваяСтрока=Отчет.НастройкаСчетов.Добавить();
	НоваяСтрока.Счет=ПланыСчетов.Хозрасчетный.ОперационнаяКасса;
	НоваяСтрока.Марки=Истина;
	НоваяСтрока=Отчет.НастройкаСчетов.Добавить();
	НоваяСтрока.Счет=ПланыСчетов.Хозрасчетный.ДенежныеДокументы;
	НоваяСтрока.ЦенныеБумаги=Истина;
	
	Выборка=ПолучитьДанныеПоСчетам(ТекущаяДата());
	Если Выборка.Следующий() Тогда 
		Наличных=Выборка.Касса;
		Марок=Выборка.Марки;
		ЦенныхБумаг=Выборка.ЦенныеБумаги;
	КонецЕсли;	
КонецПроцедуры
