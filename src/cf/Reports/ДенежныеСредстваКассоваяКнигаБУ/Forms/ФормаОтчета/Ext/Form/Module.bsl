&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="Сформировать" Тогда
		Если Не ЗначениеЗаполнено(Отчет.ДатаНачала) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Дата начала>>!",,"Отчет.ДатаНачала"); Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Отчет.ДатаКонца) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Дата конца>>!",,"Отчет.ДатаКонца"); Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Отчет.Организация) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Организация>>!",,"Отчет.Организация"); Возврат;
		КонецЕсли;		
		Если Отчет.ДатаНачала > Отчет.ДатаКонца Тогда
			ПоказатьПредупреждение(, "Неправильно задан период формирования отчета!"+Символы.ПС+"Дата начала больше даты окончания периода."); Возврат;
		КонецЕсли;
		СформироватьОтчет();
		Элементы.Страницы.ТекущаяСтраница=Элементы.Страница1;
	КонецЕсли;	
КонецПроцедуры

Процедура ДобавитьОбороты(РабочаяТаблица, Валюта, ВалПриход, Приход, ВалРасход, Расход)

	СтрокаТаблицы = РабочаяТаблица.Найти(Валюта, "Валюта");

	Если СтрокаТаблицы = Неопределено Тогда
		НоваяСтрока=РабочаяТаблица.Добавить();
		НоваяСтрока.Валюта     = Валюта;
		НоваяСтрока.ВалОстаток = 0;
		НоваяСтрока.Остаток    = 0;
		НоваяСтрока.ВалПриход  = ВалПриход; 
		НоваяСтрока.Приход     = Приход;
		НоваяСтрока.ВалРасход  = ВалРасход;
		НоваяСтрока.Расход     = Расход;
	Иначе
		СтрокаТаблицы.ВалПриход = СтрокаТаблицы.ВалПриход + ВалПриход; 
		СтрокаТаблицы.Приход    = СтрокаТаблицы.Приход    + Приход;
		СтрокаТаблицы.ВалРасход = СтрокаТаблицы.ВалРасход + ВалРасход;
		СтрокаТаблицы.Расход    = СтрокаТаблицы.Расход    + Расход;
	КонецЕсли;

КонецПроцедуры 

Процедура СформироватьОтчет()
	ДокументРезультат=ТабличныйДокумент;
	ДокументРезультат.Очистить();
	
	ВалютаРегламентированногоУчета=Константы.ВалютаРегламентированногоУчета.Получить();
	НачалоГода = НачалоГода(Отчет.ДатаНачала);

	// расчет номера начального листа
	// осуществляется по проводкам так как не все операции по
	// кассе оформляются приходными/расходными ордерами

	ЛистовЗаГод   = 0;
	ЛистовЗаМесяц = 0;

	Если Отчет.ПересчитатьНомера Тогда
		Номера = РегистрыСведений.НомераЛистовКассовойКниги.СоздатьНаборЗаписей();
		Номера.Отбор.Организация.Значение		= Отчет.Организация;
		Номера.Отбор.Организация.Использование	= Истина;
		Номера.Прочитать();
		Номера.Очистить();
		Номера.Записать();
	Иначе
		Если Отчет.ДатаНачала <> НачалоГода Тогда
			Номера=РегистрыСведений.НомераЛистовКассовойКниги.СрезПоследних(Отчет.ДатаНачала-86400,Новый Структура("Организация", Отчет.Организация));
			Если Номера.Количество()>0 Тогда
				Если Номера[0].Период >= НачалоГода Тогда
					ЛистовЗаГод = Номера[0].НомерЛиста;
					ЛистовЗаМесяц = Номера[0].НомерЛиста;
				КонецЕсли;

				Номера=РегистрыСведений.НомераЛистовКассовойКниги.СрезПоследних(НачалоМесяца(Отчет.ДатаКонца)-86400,Новый Структура("Организация", Отчет.Организация));
				Если Номера.Количество()>0 Тогда
					Если Номера[0].Период >= НачалоГода Тогда
						ЛистовЗаМесяц = ЛистовЗаГод - Номера[0].НомерЛиста;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	// Инициируем области отчета

	Макет = Отчеты.ДенежныеСредстваКассоваяКнигаБУ.ПолучитьМакет("КассоваяКнига");

	//////////////////////////////////////////////////////////////////////////////////////////
	
	ОбластьВалОстатокОтчет 				= Макет.ПолучитьОбласть("ВалОстаток|Отчет");
	ОбластьПодвалОтчет 					= Макет.ПолучитьОбласть("Подвал|Отчет");
	ОбластьВТомЧислеОтчет 				= Макет.ПолучитьОбласть("ВТомЧисле|Отчет");
	ОбластьОстатокОтчет 				= Макет.ПолучитьОбласть("Остаток|Отчет");
	ОбластьЛистовЗаМесяцОтчет 			= Макет.ПолучитьОбласть("ЛистовЗаМесяц|Отчет");
	ОбластьЛистовЗаГодОтчет 			= Макет.ПолучитьОбласть("ЛистовЗаГод|Отчет");
	ОбластьВкладнойЛистОтчет 			= Макет.ПолучитьОбласть("ВкладнойЛист|Отчет");
	ОбластьОтчетКассираОтчет 			= Макет.ПолучитьОбласть("ОтчетКассира|Отчет");
	ОбластьШапкаОтчет 					= Макет.ПолучитьОбласть("Шапка|Отчет");
	ОбластьОстатокНаНДОтчет 			= Макет.ПолучитьОбласть("ОстатокНаНД|Отчет");
	ОбластьКурсовыеРазницыОтчет 		= Макет.ПолучитьОбласть("КурсовыеРазницы|Отчет");
	ОбластьКурсовыеРазницыПоВалютеОтчет = Макет.ПолучитьОбласть("КурсовыеРазницыПоВалюте|Отчет");
	ОбластьПереносОтчет 				= Макет.ПолучитьОбласть("Перенос|Отчет");
	ОбластьСтрокаВалШирокаяОтчет 		= Макет.ПолучитьОбласть("СтрокаВалШирокая|Отчет");
	ОбластьСтрокаВалОтчет 				= Макет.ПолучитьОбласть("СтрокаВал|Отчет");
	ОбластьСтрокаШирокаяОтчет 			= Макет.ПолучитьОбласть("СтрокаШирокая|Отчет");
	ОбластьСтрокаОтчет 					= Макет.ПолучитьОбласть("Строка|Отчет");
	ОбластьОборотОтчет 					= Макет.ПолучитьОбласть("Оборот|Отчет");
	ОбластьОборотРубОтчет 				= Макет.ПолучитьОбласть("ОборотРуб|Отчет");
	ОбластьОборотВалОтчет 				= Макет.ПолучитьОбласть("ОборотВал|Отчет");
	ОбластьКурсоваяРазницаОтчет 		= Макет.ПолучитьОбласть("КурсоваяРазница|Отчет");
	ОбластьКурсоваяРазницаПоВалютеОтчет = Макет.ПолучитьОбласть("КурсоваяРазницаПоВалюте|Отчет");
	ОбластьКонечныйОстатокОтчет 		= Макет.ПолучитьОбласть("КонечныйОстаток|Отчет");

	ВывестиКассовуюКнигу=Отчет.ВариантВыводаКассовойКниги=0 Или Отчет.ВариантВыводаКассовойКниги=2;
	ВывестиОтчетКассира =Отчет.ВариантВыводаКассовойКниги=1 Или Отчет.ВариантВыводаКассовойКниги=2;
	////////////////////////////////////////////////////////////////////////////////////////////////

	НачИтоги = ?(Отчет.ПересчитатьНомера,НачалоГода, Отчет.ДатаНачала);
	
	ЗапросПоИтогам=Новый Запрос;
	ЗапросПоИтогам.УстановитьПараметр("НачИтоги",НачалоДня(НачИтоги));
	ЗапросПоИтогам.УстановитьПараметр("ДатаКон",КонецДня(Отчет.ДатаКонца));
	ЗапросПоИтогам.УстановитьПараметр("Организация", Отчет.Организация);
	ОсновнойТекстЗапроса="
	|ВЫБРАТЬ
	|	ИсточникДанных.Период КАК Период,
	|	ИсточникДанных.Валюта КАК Валюта,
	|	ИсточникДанных.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
	|	ИсточникДанных.ВалютнаяСуммаНачальныйОстатокДт КАК ВалютнаяСуммаНачальныйОстатокДт,
	|	ИсточникДанных.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
	|	ИсточникДанных.ВалютнаяСуммаКонечныйОстатокДт КАК ВалютнаяСуммаКонечныйОстатокДт,
	|	ИсточникДанных.СуммаОборотДт КАК СуммаОборотДт,
	|	ИсточникДанных.СуммаОборотКт КАК СуммаОборотКт
	|ИЗ
	|";
	Если Отчет.НастройкаСчетов.Количество()=0 Тогда	
		МассивСчетов=Новый Массив;
		Если Отчет.НастройкаСчетов.Количество()=0 Тогда			
			МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации);
			МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизацииВал);
		Иначе
			Для Каждого СтрокаКоллекции Из Отчет.НастройкаСчетов Цикл
				МассивСчетов.Добавить(СтрокаКоллекции.Счет);
			КонецЦикла;	
		КонецЕсли;
		ЗапросПоИтогам.УстановитьПараметр("МассивСчетов", МассивСчетов);
		ЗапросПоИтогам.Текст=ЗапросПоИтогам.Текст+"
		|"+ОсновнойТекстЗапроса+"
		|РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачИтоги, &ДатаКон, ДЕНЬ, ДвиженияИГраницыПериода, Счет В ИЕРАРХИИ (&МассивСчетов), , Организация = &Организация) КАК ИсточникДанных
		|";
	Иначе	
		Для Каждого СтрокаКоллекции ИЗ Отчет.НастройкаСчетов Цикл
			стрУсловия="";
			Если ЗначениеЗаполнено(СтрокаКоллекции.Субконто1) Тогда
				ЗапросПоИтогам.УстановитьПараметр("Субконто1",СтрокаКоллекции.Субконто1);
				стрУсловия=стрУсловия+?(стрУсловия="","ГДЕ "," И ")+" ИсточникДанных.Субконто1 В ИЕРАРХИИ (&Субконто1)";
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаКоллекции.Субконто2) Тогда
				ЗапросПоИтогам.УстановитьПараметр("Субконто2",СтрокаКоллекции.Субконто2);
				стрУсловия=стрУсловия+?(стрУсловия="","ГДЕ "," И ")+" ИсточникДанных.Субконто2 В ИЕРАРХИИ (&Субконто2)";
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаКоллекции.Субконто1) Тогда
				ЗапросПоИтогам.УстановитьПараметр("Субконто3",СтрокаКоллекции.Субконто3);
				стрУсловия=стрУсловия+?(стрУсловия="","ГДЕ "," И ")+" ИсточникДанных.Субконто3 В ИЕРАРХИИ (&Субконто3)";
			КонецЕсли;	
			ЗапросПоИтогам.УстановитьПараметр("Счет"+СтрокаКоллекции.НомерСтроки, СтрокаКоллекции.Счет);
			
			Если Отчет.НастройкаСчетов.Количество()>1 И СтрокаКоллекции.НомерСтроки>1 Тогда
				ЗапросПоИтогам.Текст=ЗапросПоИтогам.Текст+"ОБЪЕДИНИТЬ ВСЕ 
				|"+ОсновнойТекстЗапроса+"
				|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачИтоги, &ДатаКон, ДЕНЬ, ДвиженияИГраницыПериода, Счет В ИЕРАРХИИ (&Счет"+СтрокаКоллекции.НомерСтроки+"), , Организация = &Организация) КАК ИсточникДанных
				|"+стрУсловия+"
				|";
			Иначе	
				ЗапросПоИтогам.Текст=ЗапросПоИтогам.Текст+"
				|"+ОсновнойТекстЗапроса+"
				|РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачИтоги, &ДатаКон, ДЕНЬ, ДвиженияИГраницыПериода, Счет В ИЕРАРХИИ (&Счет"+СтрокаКоллекции.НомерСтроки+"), , Организация = &Организация) КАК ИсточникДанных
				|"+стрУсловия+"
				|";
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	ЗапросПоИтогам.Текст=ЗапросПоИтогам.Текст+"
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|ИТОГИ
		|	СУММА(СуммаНачальныйОстатокДт),
		|	СУММА(ВалютнаяСуммаНачальныйОстатокДт),
		|	СУММА(СуммаКонечныйОстатокДт),
		|	СУММА(ВалютнаяСуммаКонечныйОстатокДт),
		|	СУММА(СуммаОборотДт),
		|	СУММА(СуммаОборотКт)
		|ПО
		|	ОБЩИЕ,
		|	Период ПЕРИОДАМИ(ДЕНЬ, , ),
		|	Валюта
		|АВТОУПОРЯДОЧИВАНИЕ
		|";

	РезультатЗапросаПоИтогам=ЗапросПоИтогам.Выполнить();
	
	ЗапросПоДокументам=Новый Запрос;
	ЗапросПоДокументам.УстановитьПараметр("НачИтоги", НачалоДня(НачИтоги));
	ЗапросПоДокументам.УстановитьПараметр("ДатаКон", КонецДня(Отчет.ДатаКонца));
	ЗапросПоДокументам.УстановитьПараметр("Организация", Отчет.Организация);
	ОсновнойТекстЗапроса="ВЫБРАТЬ
	|	ЕСТЬNULL(Сторно.СторнируемыйДокумент, ИсточникДанных.Регистратор) КАК Документ,
	|	НАЧАЛОПЕРИОДА(ИсточникДанных.Регистратор.Дата, ДЕНЬ) КАК День,
	|	ИсточникДанных.Регистратор.Дата КАК ДатаДок,
	|	ИсточникДанных.Регистратор.Номер КАК НомерДок,
	|	ИсточникДанных.Валюта КАК Валюта,
	|	ВЫБОР
	|   	КОГДА НЕ ПриходныйКассовыйОрдер.Основание IS NULL
	|			ТОГДА ПриходныйКассовыйОрдер.Основание
	|   	КОГДА НЕ РасходныйКассовыйОрдер.Основание IS NULL
	|			ТОГДА РасходныйКассовыйОрдер.Основание
	|   	ИНАЧЕ
	|			ИсточникДанных.Регистратор.Основание
	|	КОНЕЦ КАК Основание,
	|	ВЫБОР
	|   	КОГДА ИсточникДанных.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|			ТОГДА ИсточникДанных.Регистратор.ПринятоОт
	|   	КОГДА НЕ ПриходныйКассовыйОрдер.Основание IS NULL
	|			ТОГДА ПриходныйКассовыйОрдер.ПринятоОт
	|   	КОГДА ИсточникДанных.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ТОГДА ИсточникДанных.Регистратор.Выдать
	|   	КОГДА НЕ РасходныйКассовыйОрдер.Основание IS NULL
	|			ТОГДА РасходныйКассовыйОрдер.Выдать
	|   	КОГДА ИсточникДанных.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах ИЛИ НЕ ОтчетОРозничныхПродажах.Ссылка IS NULL
	|			ТОГДА ""розничная выручка""
	//|   	КОГДА ИсточникДанных.Регистратор ССЫЛКА Документ.ЗарплатаВыплата ИЛИ НЕ ЗарплатаВыплата.Ссылка IS NULL
	//|			ТОГДА ""выплата зарплаты""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ТекстДок,
	|	ИсточникДанных.СуммаОборотДт Как Приход,
	|	ИсточникДанных.СуммаОборотКт Как Расход,
	|	ИсточникДанных.КорСчет КАК Счет
	|ИЗ
    |";
	
	Соединения="
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.Сторно КАК Сторно
	|	ПО ИсточникДанных.Регистратор=Сторно.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|	ПО Сторно.СторнируемыйДокумент=ПриходныйКассовыйОрдер.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|	ПО Сторно.СторнируемыйДокумент=РасходныйКассовыйОрдер.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|	ПО Сторно.СторнируемыйДокумент=ОтчетОРозничныхПродажах.Ссылка
	//|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗарплатаВыплата КАК ЗарплатаВыплата
	//|	ПО Сторно.СторнируемыйДокумент=ЗарплатаВыплата.Ссылка
	|";
	Если Отчет.НастройкаСчетов.Количество()=0 Тогда
		ЗапросПоДокументам.УстановитьПараметр("МассивСчетов", МассивСчетов);
		ЗапросПоДокументам.Текст=ЗапросПоДокументам.Текст+"
		|"+ОсновнойТекстЗапроса+"
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачИтоги, &ДатаКон, Регистратор, Счет В ИЕРАРХИИ (&МассивСчетов),,Организация = &Организация) КАК ИсточникДанных
		|"+Соединения+стрУсловия+"
		|";
	Иначе
		Для Каждого СтрокаКоллекции ИЗ Отчет.НастройкаСчетов Цикл
			стрУсловия="";
			Если ЗначениеЗаполнено(СтрокаКоллекции.Субконто1) Тогда
				ЗапросПоДокументам.УстановитьПараметр("Субконто1",СтрокаКоллекции.Субконто1);
				стрУсловия=стрУсловия+?(стрУсловия="","ГДЕ "," И ")+" ИсточникДанных.Субконто1 В ИЕРАРХИИ (&Субконто1)";
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаКоллекции.Субконто2) Тогда
				ЗапросПоДокументам.УстановитьПараметр("Субконто2",СтрокаКоллекции.Субконто2);
				стрУсловия=стрУсловия+?(стрУсловия="","ГДЕ "," И ")+" ИсточникДанных.Субконто2 В ИЕРАРХИИ (&Субконто2)";
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтрокаКоллекции.Субконто1) Тогда
				ЗапросПоДокументам.УстановитьПараметр("Субконто3",СтрокаКоллекции.Субконто3);
				стрУсловия=стрУсловия+?(стрУсловия="","ГДЕ "," И ")+" ИсточникДанных.Субконто3 В ИЕРАРХИИ (&Субконто3)";
			КонецЕсли;	
			ЗапросПоДокументам.УстановитьПараметр("Счет"+СтрокаКоллекции.НомерСтроки, СтрокаКоллекции.Счет);
			
			Если Отчет.НастройкаСчетов.Количество()>1 И СтрокаКоллекции.НомерСтроки>1 Тогда
				ЗапросПоДокументам.Текст=ЗапросПоДокументам.Текст+"ОБЪЕДИНИТЬ ВСЕ 
				|"+ОсновнойТекстЗапроса+"
				|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачИтоги, &ДатаКон, Регистратор, Счет В ИЕРАРХИИ (&Счет"+СтрокаКоллекции.НомерСтроки+"),,Организация = &Организация) КАК ИсточникДанных
				|"+Соединения+стрУсловия+"
				|";
			Иначе	
				ЗапросПоДокументам.Текст=ЗапросПоДокументам.Текст+"
				|"+ОсновнойТекстЗапроса+"
				|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачИтоги, &ДатаКон, Регистратор, Счет В ИЕРАРХИИ (&Счет"+СтрокаКоллекции.НомерСтроки+"),,Организация = &Организация) КАК ИсточникДанных
				|"+Соединения+стрУсловия+"
				|";
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;

	ЗапросПоДокументам.Текст=ЗапросПоДокументам.Текст+"
	|УПОРЯДОЧИТЬ ПО
	|	День,
	|	ДатаДок,
	|	ЕСТЬNULL(Сторно.СторнируемыйДокумент, ИсточникДанных.Регистратор)
	|ИТОГИ
	|	СУММА(Приход),
	|	СУММА(Расход)
	|ПО
	|	День,
	|	Документ,
	|	Счет
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	
	РезультатЗапросаПоДокументам=ЗапросПоДокументам.Выполнить();
	
	ТаблицаДокументы=РезультатЗапросаПоДокументам.Выгрузить();
	ТаблицаДокументы.Очистить();
	ТаблицаДокументы.Колонки.Добавить("СтрокаСчет");
	ТаблицаДокументы.Колонки.Добавить("Валютный");
	ТаблицаДокументы.Колонки.Добавить("ВидДокумента");
	
	ТипЧисло=ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2);
	
	РабочаяТаблица=Новый ТаблицаЗначений;
	РабочаяТаблица.Колонки.Добавить("Валюта",Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	РабочаяТаблица.Колонки.Добавить("ВалОстаток",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("Остаток",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("ВалПриход",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("Приход",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("ВалРасход",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("Расход",ТипЧисло);
	РабочаяТаблица.Индексы.Добавить("Валюта");
	
	ВалютаБухУчета=МодульВалютногоУчета.ПолучитьВалюту("Бух");
	ВыборкаПоВалюте=РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Валюта");		
	Пока ВыборкаПоВалюте.Следующий() Цикл
		Если НЕ ВыборкаПоВалюте.Валюта.Пустая() И НЕ ВыборкаПоВалюте.Валюта=ВалютаБухУчета Тогда
			Строка=РабочаяТаблица.Добавить();
			Строка.Валюта=ВыборкаПоВалюте.Валюта;
			Строка.Остаток=ВыборкаПоВалюте.СуммаНачальныйОстатокДт;
			Строка.ВалОстаток=ВыборкаПоВалюте.ВалютнаяСуммаНачальныйОстатокДт;
		КонецЕсли;
	КонецЦикла;
	
	ВыборкаОбщихИтогов = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Общие");
	
	Строка=РабочаяТаблица.Добавить();
	Строка.Валюта=Справочники.Валюты.ПустаяСсылка();
	Строка.Остаток=0;
	Строка.ВалОстаток=0;
	
	Если ВыборкаОбщихИтогов.Следующий() Тогда		
		Строка.Остаток=ВыборкаОбщихИтогов["СуммаНачальныйОстатокДт"]-РабочаяТаблица.Итог("Остаток");
		Строка.ВалОстаток=ВыборкаОбщихИтогов["ВалютнаяСуммаНачальныйОстатокДт"]-РабочаяТаблица.Итог("ВалОстаток");
	КонецЕсли;

	РабочаяТаблица.Сортировать("Валюта");
	
	ВыборкаИтоговПоДням     = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
	ВыборкаДокументовПоДням = РезультатЗапросаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"День");
	
	ПоПроводкам  = ВыборкаИтоговПоДням.Следующий();
	ПоДокументам = ВыборкаДокументовПоДням.Следующий();
	
	БылиОшибки    = Ложь;
	ВывестиПодвал = Ложь;
	
	СведенияОбОрганизации = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Отчет.Организация, КонецДня(Отчет.ДатаКонца));

	Пока ПоПроводкам Или ПоДокументам  Цикл
		Если НЕ ПоПроводкам  Тогда
			ДатаЛиста = ВыборкаДокументовПоДням.День;
		ИначеЕсли НЕ ПоДокументам Тогда
			ДатаЛиста = ВыборкаИтоговПоДням.Период;
		Иначе                 
			ДатаЛиста = Мин(ВыборкаДокументовПоДням.День, ВыборкаИтоговПоДням.Период);
		КонецЕсли;
		Если ВыборкаИтоговПоДням.СуммаОборотДт = 0 И ВыборкаИтоговПоДням.СуммаОборотКт = 0 Тогда
			Если НЕ ПоДокументам ИЛИ ДатаЛиста <> ВыборкаДокументовПоДням.День Тогда
				ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		НомерЛиста = ЛистовЗаГод + 1;
		ЛистовЗаГод = ЛистовЗаГод + 1;
		ЛистовЗаМесяц = ЛистовЗаМесяц + 1;
		
		КоличествоПриходныхДокументов = 0;
		КоличествоРасходныхДокументов = 0;
		
		СчетКурсовыхРазниц = ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы;
		Остаток = РабочаяТаблица.Итог("Остаток");
		Если ДатаЛиста >= Отчет.ДатаНачала Тогда
			
			Если ВывестиКассовуюКнигу И НЕ ВывестиОтчетКассира Тогда
				ОбластьВкладнойЛистОтчет.Параметры.ЗаголовокЛиста="КАССА за "+Формат(ДатаЛиста, "ДФ=dd.MM.yyyy");
				ДокументРезультат.Вывести(ОбластьВкладнойЛистОтчет);

				ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста="Лист "+НомерЛиста;
				ДокументРезультат.Вывести(ОбластьШапкаОтчет);
			
				ОбластьОстатокНаНДОтчет.Параметры.ОстатокНачало=Остаток;
				ДокументРезультат.Вывести(ОбластьОстатокНаНДОтчет);

			ИначеЕсли ВывестиОтчетКассира И НЕ ВывестиКассовуюКнигу Тогда
				ОбластьОтчетКассираОтчет.Параметры.ЗаголовокЛиста="КАССА за "+Формат(ДатаЛиста, "ДФ=dd.MM.yyyy");
				ДокументРезультат.Вывести(ОбластьОтчетКассираОтчет);

				ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста="Лист "+НомерЛиста;
				ДокументРезультат.Вывести(ОбластьШапкаОтчет);
			
				ОбластьОстатокНаНДОтчет.Параметры.ОстатокНачало=Остаток;
				ДокументРезультат.Вывести(ОбластьОстатокНаНДОтчет);
				
			ИначеЕсли ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
				ОбластьВкладнойЛистОтчет.Параметры.ЗаголовокЛиста="КАССА за "+Формат(ДатаЛиста, "ДФ=dd.MM.yyyy");
				ДокументРезультат.Вывести(ОбластьВкладнойЛистОтчет);
				
				ОбластьОтчетКассираОтчет.Параметры.ЗаголовокЛиста="КАССА за "+Формат(ДатаЛиста, "ДФ=dd.MM.yyyy");
				ДокументРезультат.Присоединить(ОбластьОтчетКассираОтчет);
				
				ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста="Лист "+НомерЛиста;
				ДокументРезультат.Вывести(ОбластьШапкаОтчет);
				ДокументРезультат.Присоединить(ОбластьШапкаОтчет);
			
				ОбластьОстатокНаНДОтчет.Параметры.ОстатокНачало=Остаток;
				ДокументРезультат.Вывести(ОбластьОстатокНаНДОтчет);
				ДокументРезультат.Присоединить(ОбластьОстатокНаНДОтчет);			
			КонецЕсли;
		КонецЕсли;
	
		ПоВалютам = Ложь;
		Для Каждого Строка Из РабочаяТаблица Цикл  
			Если ((Строка.Остаток <> 0) Или (Строка.ВалОстаток <> 0)) И (НЕ Строка.Валюта=Справочники.Валюты.ПустаяСсылка()) Тогда
				ПоВалютам = Истина; Прервать;
			КонецЕсли;
		КонецЦикла;
		
//		Высота каждой строки = 13 пунктов
//      На стандартную страницу помещается 59 строк

//		Высоты секций в строках:
//      Шапка = 5 стр
//		ВкладнойЛист = 3 стр
//		ОтчетКассира = 3 стр
//		ОстатокНаНачало = 1 стр
//		ВТомЧисле = 1 стр
//		Остаток = 1 стр
//		ВалОстаток = 2 стр
//		КурсовыеРазницы = 2 стр
//		КурсовыеРазницыПоВалюте = 1 стр
//		Строка = 2 стр
//		СтрокаШирокая = 4 стр
//		СтрокаВал = 2 стр
//		СтрокаВалШирокая = 4 стр
//		Перенос = 1 стр
//		Оборот = 1 стр
//		ОборотРуб = 1 стр
//		ОборотВал = 2 стр
//		КурсоваяРазница = 1 стр
//		КурсоваяРазницаПоВалюте = 1 стр
//		КонечныйОстаток = 1 стр
//		Подвал = 11 стр
//		ЛистовЗаМесяц = 1 стр
//		ЛистовЗаГод = 1 стр
		
		ВысотаСтроки = ?(Отчет.ВыводитьОснования = 1, 4, 2); // высота секции документа
		СтрокШапки = 9;
		СтрокПодвала = 13;
		
		Если ПоВалютам Тогда
			Если ДатаЛиста >= Отчет.ДатаНачала Тогда
				ДокументРезультат.Вывести(ОбластьВТомЧислеОтчет);
				Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
					ДокументРезультат.Присоединить(ОбластьВТомЧислеОтчет);
				КонецЕсли; 
			КонецЕсли;
			СтрокШапки = СтрокШапки + 1;
			Для Каждого Строка ИЗ РабочаяТаблица Цикл    
				Валюта     = Строка.Валюта;
				РубОстаток = Строка.Остаток;
				ВалОстаток = Строка.ВалОстаток;
				Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
					Если ДатаЛиста >= Отчет.ДатаНачала Тогда
						
						ОбластьОстатокОтчет.Параметры.ВалютаРеглУчета = "национальная валюта ("+Константы.ВалютаРегламентированногоУчета.Получить().НаименованиеПолное+"):";
						ОбластьОстатокОтчет.Параметры.РеглОстаток = РубОстаток;
						
						ДокументРезультат.Вывести(ОбластьОстатокОтчет);
						Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
							ДокументРезультат.Присоединить(ОбластьОстатокОтчет);
						КонецЕсли;
					КонецЕсли;
					СтрокШапки = СтрокШапки + 1;
				Иначе
					Если (РубОстаток <> 0) Или (ВалОстаток <> 0) Тогда
						Если ДатаЛиста >= Отчет.ДатаНачала Тогда
							
							ОбластьВалОстатокОтчет.Параметры.ВалютаВалУчета="иностранная валюта ("+Валюта.НаименованиеПолное+"):";
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокРегл=РубОстаток;
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокВал=Формат(ВалОстаток,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
							
							ДокументРезультат.Вывести(ОбластьВалОстатокОтчет);
							Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда							
								ДокументРезультат.Присоединить(ОбластьВалОстатокОтчет);
							КонецЕсли;
						КонецЕсли;
						СтрокШапки = СтрокШапки + 2;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаДокументы.Очистить();
		Валюты = Новый СписокЗначений;
				
		Если ПоДокументам И ВыборкаДокументовПоДням.День = ДатаЛиста Тогда
			ВыборкаДокументов1=ВыборкаДокументовПоДням.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Документ");
			Пока ВыборкаДокументов1.Следующий() Цикл
				ВыборкаДокументов2=ВыборкаДокументов1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Счет");
				Пока ВыборкаДокументов2.Следующий() Цикл
				ВыборкаДокументов=ВыборкаДокументов2.Выбрать();
				Пока ВыборкаДокументов.Следующий() Цикл
					НоваяСтрока = ТаблицаДокументы.Добавить();
					Если ТипЗнч(ВыборкаДокументов.Документ) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
						НоваяСтрока.ВидДокумента="ПриходныйОрдер";
					ИначеЕсли ТипЗнч(ВыборкаДокументов.Документ)=Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
						НоваяСтрока.ВидДокумента="РасходныйОрдер";
					ИначеЕсли ТипЗнч(ВыборкаДокументов.Документ)=Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
						НоваяСтрока.ВидДокумента="ОтчетОРозничныхПродажах"
					КонецЕсли;
					НоваяСтрока.Документ     = ВыборкаДокументов.Документ;
					НоваяСтрока.ДатаДок      = ВыборкаДокументов.ДатаДок;
					НоваяСтрока.День         = ВыборкаДокументов.День;
					НоваяСтрока.НомерДок     = ВыборкаДокументов.НомерДок;
					НоваяСтрока.Валюта       = ВыборкаДокументов.Валюта;
					НоваяСтрока.Приход       = ВыборкаДокументов.Приход;
					НоваяСтрока.Расход       = ВыборкаДокументов.Расход;
					НоваяСтрока.Основание    = ВыборкаДокументов.Основание;
					НоваяСтрока.ТекстДок     = ВыборкаДокументов.ТекстДок;
					НоваяСтрока.Валютный=Ложь;
					
					Если ЗначениеЗаполнено(ВыборкаДокументов.Валюта) Тогда
						НоваяСтрока.Валютный = ВыборкаДокументов.Валюта <> ВалютаРегламентированногоУчета;
						Если НоваяСтрока.Валютный И Валюты.НайтиПоЗначению(ВыборкаДокументов.Валюта) = Неопределено Тогда
							Валюты.Добавить(ВыборкаДокументов.Валюта);
						КонецЕсли;
					КонецЕсли;
					
					СписокСчетов=Новый ТаблицаЗначений;
					СписокСчетов.Колонки.Добавить("Счет");
					//ВыборкаСчетов=ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Счет");
					//Пока ВыборкаСчетов.Следующий() Цикл
					СтрокаТаблицыСчетов=СписокСчетов.Добавить();
					СтрокаТаблицыСчетов.Счет=ВыборкаДокументов.Счет; //ВыборкаСчетов.Счет;
					//КонецЦикла;
					
					СписокСчетов.Свернуть("Счет");
					
					СтрокаСчет = "";
					Для Каждого СтрокаТаблицыСчетов Из СписокСчетов Цикл
						СтрокаСчет = СтрокаСчет + СтрокаТаблицыСчетов.Счет + Символы.ПС;
					КонецЦикла;
					
					НоваяСтрока.СтрокаСчет = СтрокаСчет;
				КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		СумПриход    = 0;
		СумРасход    = 0;
		ПерваяСтрока = 1;
		Для Каждого СтрокаТаблица ИЗ РабочаяТаблица Цикл
			Если СтрокаТаблица.Валюта=Справочники.Валюты.ПустаяСсылка() Тогда Продолжить; КонецЕсли;

			Если ДатаЛиста <> НачалоДня(КонецМесяца(ДатаЛиста)) Тогда
				Если Валюты.НайтиПоЗначению(СтрокаТаблица.Валюта) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			СтруктураКурсов = МодульВалютногоУчета.КурсВалюты(СтрокаТаблица.Валюта,ДатаЛиста);
			
			Курс      = СтруктураКурсов.Курс;
			Кратность = СтруктураКурсов.Кратность;
			Кратность = ?(Кратность=0, 1, Кратность);
			КурсоваяРазница = Окр(СтрокаТаблица.ВалОстаток * Курс / Кратность - СтрокаТаблица.Остаток, 2, 1);
			Если КурсоваяРазница <> 0 Тогда
				Если ПерваяСтрока = 1 Тогда
					Если ДатаЛиста >= Отчет.ДатаНачала Тогда
						ДокументРезультат.Вывести(ОбластьКурсовыеРазницыОтчет);
						Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
							ДокументРезультат.Присоединить(ОбластьКурсовыеРазницыОтчет);
						КонецЕсли;	
					КонецЕсли;
					СтрокШапки   = СтрокШапки + 2;
					ПерваяСтрока = 0;
				КонецЕсли;
				Валюта = СтрокаТаблица.Валюта;
				Приход = 0;
				Расход = 0;
				КоррСчет = СчетКурсовыхРазниц;
				Если КурсоваяРазница > 0 Тогда
					Приход    = КурсоваяРазница;
					СумПриход = СумПриход+КурсоваяРазница;
				Иначе
					Расход    = -КурсоваяРазница;
					СумРасход = СумРасход-КурсоваяРазница;
				КонецЕсли;   
				СтрокаТаблица.Приход = СтрокаТаблица.Приход+Приход;
				СтрокаТаблица.Расход = СтрокаТаблица.Расход+Расход;
				Если ДатаЛиста >= Отчет.ДатаНачала Тогда
					
					ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.НадписьКРВалюта = "по " + Валюта.Наименование;
					ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.КоррСчет = КоррСчет;
					ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.Приход   = Приход;
					ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.Расход   = Расход;
					
					ДокументРезультат.Вывести(ОбластьКурсовыеРазницыПоВалютеОтчет);
					Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
						ДокументРезультат.Присоединить(ОбластьКурсовыеРазницыПоВалютеОтчет);
					КонецЕсли;
				КонецЕсли;
				СтрокШапки = СтрокШапки + 1;
			КонецЕсли;
		КонецЦикла;
		          
		// Для простоты настройки печатной формы примем следующие соглашения:
		//	-	высота строк в таблице печатной формы задана жестко,
		//		тогда известно, сколько строк помещается на странице;
		СтрокНаСтранице = 45;
		//	-	высота шапки и подвала задана жестко и кратна высоте строк таблицы,
		//		тогда можно указать, сколько строк занимают шапка и подвал
		//		в пересчете на строки таблицы;
		//  -   Количество строк шапки определено при выводе валюты в шапку;
		//  -   Количество строк подвала определим позже по количеству валют;
		//	-	для нормальной работы алгоритма необходимо, чтобы шапка и подвал
		//		могли поместиться на одной странице + хотя бы одна строка таблицы:
		//		СтрокНаСтранице >= СтрокШапки + СтрокПодвала + 1
		//	-	если подвал не помещается на странице, он переносится на другую
		//		страницу с последней строкой; исключение составляет случай,
		//		когда в таблице всего одна строка.
		
		// Резервирование строк для вывода сведений о валюте в подвале.
		// Найдем количество валют, по которым будет остаток в конце дня.
		КоличествоВалютВПодвале = РабочаяТаблица.Количество() - 1; // без рублей
		// Добавим валюты, по которым нет итогов, но по которым есть оборот,
		// введенный документами.
		Для Каждого Валюта ИЗ Валюты Цикл
			
			Если РабочаяТаблица.Найти(Валюта.Значение, "Валюта") = Неопределено Тогда
				КоличествоВалютВПодвале = КоличествоВалютВПодвале + 1;
			КонецЕсли;
			
		КонецЦикла;
		// По каждой валюте добавляется:
		//  2 строки для оборота;
		//  2 строки для остатка;
		//  1 строка под курсовую разницу.
		// Для рублей добавляется:
		//  1 строка для оборота;
		//  1 строка для остатка.
		// Добавляет строка для секции "КурсоваяРазница" и "ВТомЧисле".
		СтрокПодвала = СтрокПодвала + ?(КоличествоВалютВПодвале > 0, КоличествоВалютВПодвале * 5 + 4, 0);
		
		// Резервирование строк подвала для секции "ЛистовЗаМесяц" и "ЛистовЗаГод".
		СтрокПодвала = СтрокПодвала + ?(Отчет.ПоследнийЛист > 0, Отчет.ПоследнийЛист, 0);
		
		// Если ПереноситьПоследнююСтроку = 1 - переносить,
		// если ПереноситьПоследнююСтроку = 0 - не надо переносить:
		Если (ТаблицаДокументы.Количество() * ВысотаСтроки) <= (СтрокНаСтранице - СтрокШапки - СтрокПодвала) Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом = Цел(((СтрокШапки-5)+ТаблицаДокументы.Количество()*ВысотаСтроки+СтрокПодвала-1)/(СтрокНаСтранице-5));
			ЦелыхСтраницБезПодвала = Цел(((СтрокШапки-5)+ТаблицаДокументы.Количество()*ВысотаСтроки-1)/(СтрокНаСтранице-5));
			ПереноситьПоследнююСтроку = 0; //ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		КоличествоСтраниц = 1;
		Индекс            = 1;
		Для Каждого Документ Из ТаблицаДокументы Цикл
			ЕстьВалюта=Документ.Валютный;
			Если ЕстьВалюта=Null Тогда ЕстьВалюта=Ложь; КонецЕсли; 
						
			Если ЕстьВалюта Тогда
				Валюта=Документ.Валюта;
				СтруктураКурсов=МодульВалютногоУчета.КурсВалюты(Валюта,Документ.ДатаДок);
				
				Курс      = СтруктураКурсов.Курс;
				Кратность = СтруктураКурсов.Кратность;
				Кратность = ?(Кратность = 0, 1, Кратность);
			Иначе
				Валюта    = Справочники.Валюты.ПустаяСсылка();
				Курс      = 1;
				Кратность = 1;
			КонецЕсли;
			
			Расход = Документ.Расход;
			ВалРасход  = Окр(Документ.Расход*Курс/Кратность,2,1);
			
			Приход = Документ.Приход;
			ВалПриход = Окр(Документ.Приход*Курс/Кратность,2,1);
			
			//ВалРасход = Документ.Расход;
			//Расход    = Окр(Документ.Расход*Курс/Кратность,2,1);
			//
			//ВалПриход = Документ.Приход;
			//Приход    = Окр(Документ.Приход*Курс/Кратность,2,1);
			
			

			Если Документ.ВидДокумента="РасходныйОрдер" Тогда
				Клиент = "Выдано " + СокрЛП(Документ.ТекстДок) + ?(Отчет.ВыводитьОснования = 1, " " + СокрЛП(Документ.Основание), "");
				КоличествоРасходныхДокументов=КоличествоРасходныхДокументов+ 1;
				
			ИначеЕсли Документ.ВидДокумента="ПриходныйОрдер" Тогда
				Клиент = "Принято от " + СокрЛП(Документ.ТекстДок) + ?(Отчет.ВыводитьОснования = 1, " " + СокрЛП(Документ.Основание), "");
				КоличествоПриходныхДокументов = КоличествоПриходныхДокументов + 1;
				
			ИначеЕсли Документ.ВидДокумента="ОтчетОРозничныхПродажах" Тогда
				Клиент = "Розничная выручка "+СокрЛП(Документ.Документ.Склад);
			КонецЕсли;

			НомерДокПечатнойФормы=ОбщегоНазначенияСервер.НомерНаПечать(Документ.Документ);
			КоррСчет = Документ.СтрокаСчет;
			
			// Начинаем новую страницу, если предыдущая строка была последней на странице
			// или пора переносить последнюю строку на последнюю страницу с подвалом.
			ЦелаяСтраница = Цел(((СтрокШапки-5)+(КоличествоСтраниц - 1)+(Индекс*ВысотаСтроки)-1)/(СтрокНаСтранице-5));
			Если (ЦелаяСтраница = КоличествоСтраниц) Или ((ПереноситьПоследнююСтроку = 1) и (Индекс = ТаблицаДокументы.Количество())) Тогда
				ПриходЗаДень = РабочаяТаблица.Итог("Приход");
				РасходЗаДень = РабочаяТаблица.Итог("Расход");
				Если ДатаЛиста >= Отчет.ДатаНачала Тогда					
					ОбластьПереносОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
					ОбластьПереносОтчет.Параметры.РасходЗаДень = РасходЗаДень;
					
					ДокументРезультат.Вывести(ОбластьПереносОтчет);
					Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
						ДокументРезультат.Присоединить(ОбластьПереносОтчет);
					КонецЕсли;
				КонецЕсли;
				НомерЛиста        = НомерЛиста + 1;
				КоличествоСтраниц = КоличествоСтраниц + 1;
				ЛистовЗаГод       = ЛистовЗаГод + 1;
				ЛистовЗаМесяц     = ЛистовЗаМесяц + 1;
				Если ДатаЛиста >= Отчет.ДатаНачала Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста = "Лист "+НомерЛиста;
					ДокументРезультат.Вывести(ОбластьШапкаОтчет);
					Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
						ДокументРезультат.Присоединить(ОбластьШапкаОтчет);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ДатаЛиста >= Отчет.ДатаНачала Тогда
				Если ЕстьВалюта Тогда
					Если Отчет.ВыводитьОснования Тогда
						ОбластьСтрокаВалШирокаяОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.Контрагент = Клиент;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.КоррСчет   = КоррСчет;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.Приход     = Приход;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.Расход     = Расход;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.ВалПриход  = Формат(ВалПриход,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.ВалРасход  = Формат(ВалРасход,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
						ОбластьСтрокаВалШирокаяОтчет.Параметры.Документ   = Документ.Документ;
	
						ДокументРезультат.Вывести(ОбластьСтрокаВалШирокаяОтчет);
						Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
							ДокументРезультат.Присоединить(ОбластьСтрокаВалШирокаяОтчет);
						КонецЕсли;
					Иначе
						ОбластьСтрокаВалОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
						ОбластьСтрокаВалОтчет.Параметры.Контрагент = Клиент;
						ОбластьСтрокаВалОтчет.Параметры.КоррСчет   = КоррСчет;
						ОбластьСтрокаВалОтчет.Параметры.Приход     = Приход;
						ОбластьСтрокаВалОтчет.Параметры.Расход     = Расход;
						Если Валюта<>Null Тогда
							ОбластьСтрокаВалОтчет.Параметры.ВалПриход  = Формат(ВалПриход,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
							ОбластьСтрокаВалОтчет.Параметры.ВалРасход  = Формат(ВалРасход,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
						Иначе
							ОбластьСтрокаВалОтчет.Параметры.ВалПриход  = Формат(ВалПриход,"ЧЦ=15; ЧДЦ=2; ЧРД==");
							ОбластьСтрокаВалОтчет.Параметры.ВалРасход  = Формат(ВалРасход,"ЧЦ=15; ЧДЦ=2; ЧРД==");
						КонецЕсли;	
		
						ОбластьСтрокаВалОтчет.Параметры.Документ   = Документ.Документ;
						
						ДокументРезультат.Вывести(ОбластьСтрокаВалОтчет);
						Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
							ДокументРезультат.Присоединить(ОбластьСтрокаВалОтчет);
						КонецЕсли;
					КонецЕсли;
				Иначе
					Если Отчет.ВыводитьОснования Тогда
						ОбластьСтрокаШирокаяОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
						ОбластьСтрокаШирокаяОтчет.Параметры.Контрагент = Клиент;
						ОбластьСтрокаШирокаяОтчет.Параметры.КоррСчет   = КоррСчет;
						ОбластьСтрокаШирокаяОтчет.Параметры.Приход     = Приход;
						ОбластьСтрокаШирокаяОтчет.Параметры.Расход     = Расход;
						ОбластьСтрокаШирокаяОтчет.Параметры.Документ   = Документ.Документ;
						
						ДокументРезультат.Вывести(ОбластьСтрокаШирокаяОтчет);
						Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
							ДокументРезультат.Присоединить(ОбластьСтрокаШирокаяОтчет);
						КонецЕсли;
					Иначе
						ОбластьСтрокаОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
						ОбластьСтрокаОтчет.Параметры.Контрагент = Клиент;
						ОбластьСтрокаОтчет.Параметры.КоррСчет   = КоррСчет;
						ОбластьСтрокаОтчет.Параметры.Приход     = Приход;
						ОбластьСтрокаОтчет.Параметры.Расход     = Расход;
						ОбластьСтрокаОтчет.Параметры.Документ   = Документ.Документ;
						
						ДокументРезультат.Вывести(ОбластьСтрокаОтчет);
						Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
							ДокументРезультат.Присоединить(ОбластьСтрокаОтчет);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ДобавитьОбороты(РабочаяТаблица, Валюта, ВалПриход, Приход, ВалРасход, Расход);
			Индекс = Индекс + 1;
		КонецЦикла;
		
		ПриходЗаДень = РабочаяТаблица.Итог("Приход");
		РасходЗаДень = РабочаяТаблица.Итог("Расход");
		Если ДатаЛиста >= Отчет.ДатаНачала Тогда
			
			ОбластьОборотОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
			ОбластьОборотОтчет.Параметры.РасходЗаДень = РасходЗаДень;
			
			ДокументРезультат.Вывести(ОбластьОборотОтчет);
			Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
				ДокументРезультат.Присоединить(ОбластьОборотОтчет);
			КонецЕсли;
			
			ПоВалютам = Ложь;
			Для Каждого Строка ИЗ РабочаяТаблица Цикл    
				Если ((Строка.ВалПриход <> 0) Или (Строка.Приход <> 0) Или 
					  (Строка.ВалРасход <> 0) Или (Строка.Расход <> 0)) И
					 (НЕ Строка.Валюта=Справочники.Валюты.ПустаяСсылка()) Тогда
					ПоВалютам = Истина ;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ПоВалютам Тогда
				Для Каждого Строка ИЗ РабочаяТаблица Цикл
					Валюта = Строка.Валюта;
					ВалПриходЗаДень = Строка.ВалПриход;
					РубПриходЗаДень = Строка.Приход;
					ВалРасходЗаДень = Строка.ВалРасход;
					РубРасходЗаДень = Строка.Расход;
					Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
						
						ОбластьОборотРубОтчет.Параметры.РеглПриходЗаДень = РубПриходЗаДень;
						ОбластьОборотРубОтчет.Параметры.РеглРасходЗаДень = РубРасходЗаДень;
						ОбластьОборотРубОтчет.Параметры.ВалютаРеглУчета  = "национальная валюта (" + Константы.ВалютаРегламентированногоУчета.Получить().НаименованиеПолное + "):";
						
						ДокументРезультат.Вывести(ОбластьОборотРубОтчет);
						Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
							ДокументРезультат.Присоединить(ОбластьОборотРубОтчет);
						КонецЕсли;
					Иначе
						Если (ВалПриходЗаДень <> 0) Или (РубПриходЗаДень <> 0) Или 
							 (ВалРасходЗаДень <> 0) Или (РубРасходЗаДень <> 0) Тогда
							
							ОбластьОборотВалОтчет.Параметры.ВалютаВалУчета      = "иностранная валюта (" + Валюта.НаименованиеПолное + "):";
							ОбластьОборотВалОтчет.Параметры.ВалПриходЗаДеньРегл = РубПриходЗаДень;
							ОбластьОборотВалОтчет.Параметры.ВалРасходЗаДеньРегл = РубРасходЗаДень;
							ОбластьОборотВалОтчет.Параметры.ВалПриходЗаДеньВал  = Формат(ВалПриходЗаДень,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта;
							ОбластьОборотВалОтчет.Параметры.ВалРасходЗаДеньВал  = Формат(ВалРасходЗаДень,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта;
							
							ДокументРезультат.Вывести(ОбластьОборотВалОтчет);
							Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
								ДокументРезультат.Присоединить(ОбластьОборотВалОтчет);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		ПерваяСтрока = Истина;
		Остаток      = Остаток + ПриходЗаДень - РасходЗаДень;
		Для Каждого Строка ИЗ РабочаяТаблица Цикл
			Если Строка.Валюта=Справочники.Валюты.ПустаяСсылка() Тогда Продолжить;	КонецЕсли;
			
			Если ДатаЛиста <> НачалоДня(КонецМесяца(ДатаЛиста)) Тогда
				Если Валюты.НайтиПоЗначению(Строка.Валюта) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			СтруктураКурсов = МодульВалютногоУчета.КурсВалюты(Строка.Валюта, ДатаЛиста);
			
			Курс      = СтруктураКурсов.Курс;
			Кратность = СтруктураКурсов.Кратность;
			Кратность = ?(Кратность=0, 1, Кратность);
			КурсоваяРазница = Окр((Строка.ВалОстаток+Строка.ВалПриход-Строка.ВалРасход)*Курс/Кратность-(Строка.Остаток+Строка.Приход-Строка.Расход), 2, 1);
			Если КурсоваяРазница <> 0 Тогда
				Если ПерваяСтрока Тогда
					Если ДатаЛиста >= Отчет.ДатаНачала Тогда
						ДокументРезультат.Вывести(ОбластьКурсоваяРазницаОтчет);
						Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
							ДокументРезультат.Присоединить(ОбластьКурсоваяРазницаОтчет);
						КонецЕсли;
					КонецЕсли;
					ПерваяСтрока = Ложь;
				КонецЕсли;
				Валюта       = Строка.Валюта;
				ПриходЗаДень = 0;
				РасходЗаДень = 0;
				Если КурсоваяРазница > 0 Тогда
					ПриходЗаДень  = КурсоваяРазница;
					Строка.Приход = Строка.Приход + КурсоваяРазница;
				Иначе
					РасходЗаДень  = -КурсоваяРазница;
					Строка.Расход = Строка.Расход - КурсоваяРазница;
				КонецЕсли;
				Если ДатаЛиста >= Отчет.ДатаНачала Тогда
					ОбластьКурсоваяРазницаПоВалютеОтчет.Параметры.Валюта       = Валюта;
					ОбластьКурсоваяРазницаПоВалютеОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
					ОбластьКурсоваяРазницаПоВалютеОтчет.Параметры.РасходЗаДень = РасходЗаДень;
					
					ДокументРезультат.Вывести(ОбластьКурсоваяРазницаПоВалютеОтчет);
					Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
						ДокументРезультат.Присоединить(ОбластьКурсоваяРазницаПоВалютеОтчет);
					КонецЕсли;
				КонецЕсли;
				Остаток = Остаток + КурсоваяРазница;
			КонецЕсли;
		КонецЦикла;
		
		Если ДатаЛиста >= Отчет.ДатаНачала Тогда
			ОбластьКонечныйОстатокОтчет.Параметры.ОстатокКонец = Остаток;
			
			ДокументРезультат.Вывести(ОбластьКонечныйОстатокОтчет);
			Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
				ДокументРезультат.Присоединить(ОбластьКонечныйОстатокОтчет);
			КонецЕсли;
		
			ПоВалютам = Ложь;
			Для Каждого Строка ИЗ РабочаяТаблица Цикл
				Если ((Строка.Остаток+Строка.Приход-Строка.Расход <> 0) Или (Строка.ВалОстаток+Строка.ВалПриход-Строка.ВалРасход <> 0)) И (НЕ Строка.Валюта=Справочники.Валюты.ПустаяСсылка()) Тогда
					ПоВалютам = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ПоВалютам Тогда
				ДокументРезультат.Вывести(ОбластьВТомЧислеОтчет);
				Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
					ДокументРезультат.Присоединить(ОбластьВТомЧислеОтчет);
				КонецЕсли;
				Для Каждого Строка ИЗ РабочаяТаблица Цикл
					Валюта     = Строка.Валюта;
					РубОстаток = Строка.Остаток + Строка.Приход - Строка.Расход;
					ВалОстаток = Строка.ВалОстаток + Строка.ВалПриход - Строка.ВалРасход;
					Если Строка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
						ОбластьОстатокОтчет.Параметры.ВалютаРеглУчета = "национальная валюта (" + Константы.ВалютаРегламентированногоУчета.Получить().НаименованиеПолное+"):";
						ОбластьОстатокОтчет.Параметры.РеглОстаток     = РубОстаток;
						
						ДокументРезультат.Вывести(ОбластьОстатокОтчет);
						Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
							ДокументРезультат.Присоединить(ОбластьОстатокОтчет);
						КонецЕсли;
					Иначе
						Если (РубОстаток <> 0) Или (ВалОстаток <> 0) Тогда
							
							ОбластьВалОстатокОтчет.Параметры.ВалютаВалУчета = "иностранная валюта (" + Валюта.НаименованиеПолное + "):";
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокРегл = РубОстаток;
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокВал  = Формат(ВалОстаток,"ЧЦ=15; ЧДЦ=2; ЧРД==")+" "+Валюта.Наименование;
							
							ДокументРезультат.Вывести(ОбластьВалОстатокОтчет);
							Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
								ДокументРезультат.Присоединить(ОбластьВалОстатокОтчет);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ОбластьПодвалОтчет.Параметры.НадписьКолПриходныхРасходных=?(КоличествоПриходныхДокументов>0, ЧислоПрописью(КоличествоПриходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ")+ "приходных и "+
			?(КоличествоРасходныхДокументов>0,ЧислоПрописью(КоличествоРасходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ")+"расходных получил.";
			
			Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизаций(Отчет.Организация, КонецДня(ДатаЛиста),);
			
			ОбластьПодвалОтчет.Параметры.ГлБухгалтер = Руководители.ГлавныйБухгалтер;
			ОбластьПодвалОтчет.Параметры.Кассир      = Руководители.Кассир;
			
			ДокументРезультат.Вывести(ОбластьПодвалОтчет);
			Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
				ДокументРезультат.Присоединить(ОбластьПодвалОтчет);
			КонецЕсли;
		КонецЕсли;
		
		Ошибка      = Ложь;
		Сортировать = Ложь;
		ВыборкаПоВалюте = ВыборкаИтоговПоДням.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Валюта");
		
		Пока ВыборкаПоВалюте.Следующий() Цикл
			Если НЕ ВыборкаПоВалюте.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
				Строка = РабочаяТаблица.Найти(ВыборкаПоВалюте.Валюта, "Валюта");
				Если Строка = Неопределено Тогда
					Строка        = РабочаяТаблица.Добавить();
					Строка.Валюта = ВыборкаПоВалюте.Валюта;
					Сортировать   = Истина;
				КонецЕсли;
				Если (Строка.ВалОстаток + Строка.ВалПриход - Строка.ВалРасход <> ВыборкаПоВалюте.ВалютнаяСуммаКонечныйОстатокДт) Или
					 (Строка.Остаток + Строка.Приход - Строка.Расход <> ВыборкаПоВалюте.СуммаКонечныйОстатокДт) Тогда
					Ошибка = Истина;
				КонецЕсли;
				Строка.ВалОстаток = ВыборкаПоВалюте.ВалютнаяСуммаКонечныйОстатокДт;
				Строка.Остаток    = ВыборкаПоВалюте.СуммаКонечныйОстатокДт;
			КонецЕсли;
		КонецЦикла;
		
		Строка = РабочаяТаблица.Найти(Справочники.Валюты.ПустаяСсылка(), "Валюта");
		
		Если Строка = Неопределено Тогда
			Строка        = РабочаяТаблица.Добавить();
			Строка.Валюта = Справочники.Валюты.ПустаяСсылка();
			Сортировать   = Истина;
		Иначе
			Строка.Остаток = 0;
		КонецЕсли;
		
		Если (ДатаЛиста = ВыборкаИтоговПоДням.Период) Тогда
			Строка.Остаток = ВыборкаИтоговПоДням.СуммаКонечныйОстатокДт - РабочаяТаблица.Итог("Остаток");
			Если Остаток <> ВыборкаИтоговПоДням.СуммаКонечныйОстатокДт Тогда
				Ошибка = Истина;
			КонецЕсли;
			
		Иначе
			Если ПоПроводкам Тогда
				Строка.Остаток = ВыборкаИтоговПоДням.СуммаНачальныйОстатокДт - РабочаяТаблица.Итог("Остаток");
				Если Остаток <> ВыборкаИтоговПоДням.СуммаНачальныйОстатокДт Тогда
					Ошибка = Истина;
				КонецЕсли;
			Иначе
				Строка.Остаток = -РабочаяТаблица.Итог("Остаток");
				Если Остаток <> 0 Тогда Ошибка = Истина; КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Ошибка Тогда
			Сообщить("Обороты по документам и проводкам за " + ДатаЛиста + " не совпадают!");
		КонецЕсли;
		
		Если Сортировать Тогда
			РабочаяТаблица.Сортировать("Валюта");
		КонецЕсли;
		РабочаяТаблица.ЗаполнитьЗначения(0,"ВалПриход, Приход, ВалРасход, Расход");
		
		Если ПоПроводкам И ДатаЛиста = ВыборкаИтоговПоДням.Период Тогда
			ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
		КонецЕсли;
		Если ПоДокументам И ДатаЛиста = ВыборкаДокументовПоДням.День Тогда
			ПоДокументам = ВыборкаДокументовПоДням.Следующий();
		КонецЕсли;
		// Проверим, если месяц закончился, то выведем количество листов
		Если (ПоПроводкам И МЕСЯЦ(ДатаЛиста) <> МЕСЯЦ(ВыборкаИтоговПоДням.Период)) ИЛИ (ПоДокументам И МЕСЯЦ(ДатаЛиста) <> МЕСЯЦ(ВыборкаДокументовПоДням.День)) Тогда
			ОбластьЛистовЗаМесяцОтчет.Параметры.НадписьЛистовЗаМесяц = "Количество листов кассовой книги за месяц: " +ЛистовЗаМесяц;
			ДокументРезультат.Вывести(ОбластьЛистовЗаМесяцОтчет);
			Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
				ДокументРезультат.Присоединить(ОбластьЛистовЗаМесяцОтчет);
			КонецЕсли;
			
			ЛистовЗаМесяц = 0;
		КонецЕсли;
		
		Если ПоПроводкам 
			И ВыборкаИтоговПоДням.Период = НачалоДня(Отчет.ДатаКонца)
			И ВыборкаИтоговПоДням.СуммаОборотДт = 0 
			И ВыборкаИтоговПоДням.СуммаОборотКт = 0 
			Тогда
			Если МЕСЯЦ(ДатаЛиста) <> МЕСЯЦ(ВыборкаИтоговПоДням.Период) Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
		КонецЕсли;
		
		Если ПоПроводкам или ПоДокументам Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ВывестиПодвал = Истина;
		
		ТекНомера=РегистрыСведений.НомераЛистовКассовойКниги.СрезПоследних(ДатаЛиста,Новый Структура("Организация", Отчет.Организация));
		Если ТекНомера.Количество() = 0 ИЛИ ТекНомера[0].НомерЛиста <> НомерЛиста Тогда
			Номера=РегистрыСведений.НомераЛистовКассовойКниги.СоздатьНаборЗаписей();
			Номера.Отбор.Организация.Значение 		= Отчет.Организация; 
			Номера.Отбор.Организация.Использование  = Истина;
			Номера.Отбор.Период.Значение 			= ДатаЛиста; 
			Номера.Отбор.Период.Использование 		= Истина; 
		
			НоваяЗапись=Номера.Добавить();
			НоваяЗапись.Организация = Отчет.Организация;
			НоваяЗапись.Период      = ДатаЛиста;
			НоваяЗапись.НомерЛиста  = НомерЛиста;
			Номера.Записать();
		КонецЕсли;

	КонецЦикла;

	Если ВывестиПодвал Тогда
		Д = Отчет.ДатаКонца;
		Если (НачалоДня(КонецМесяца(ДатаЛиста)) = ДатаЛиста) Или
			 (НачалоМесяца(ДатаЛиста) <> НачалоМесяца(Отчет.ДатаКонца)) Или
			 (Месяц(Отчет.ДатаНачала)=Месяц(Отчет.ДатаКонца)) Или //**** 11.05.11
			 (Отчет.ПоследнийЛист <> 0) Тогда
			 
			ОбластьЛистовЗаМесяцОтчет.Параметры.НадписьЛистовЗаМесяц = "Количество листов кассовой книги за месяц: " +ЛистовЗаМесяц; 
			ДокументРезультат.Вывести(ОбластьЛистовЗаМесяцОтчет);
			Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
				ДокументРезультат.Присоединить(ОбластьЛистовЗаМесяцОтчет);
			КонецЕсли;
		КонецЕсли;
		Если (НачалоДня(КонецГода(ДатаЛиста)) = ДатаЛиста) Или 
			 (НачалоГода(ДатаЛиста) <> НачалоГода(Отчет.ДатаКонца)) Или 
			 (Отчет.ПоследнийЛист = 2) Тогда
			
			ОбластьЛистовЗаГодОтчет.Параметры.НадписьЛистовЗаГод = "Количество листов кассовой книги за год: " + ЛистовЗаГод; 
			ДокументРезультат.Вывести(ОбластьЛистовЗаГодОтчет);
			Если ВывестиКассовуюКнигу И ВывестиОтчетКассира Тогда
				ДокументРезультат.Присоединить(ОбластьЛистовЗаГодОтчет); 
			КонецЕсли;
			
			// Печать обложки и титульного листа
			Макет1=Отчеты.ДенежныеСредстваКассоваяКнигаБУ.ПолучитьМакет("Обложка");
			ОбластьОбложка = Макет1.ПолучитьОбласть("Обложка");
			ОбластьОбложка.Параметры.НазваниеОрганизации = ?(Отчет.Организация.НаименованиеПолное = "", Отчет.Организация.Наименование, Отчет.Организация.НаименованиеПолное);
			ОбластьОбложка.Параметры.НадписьОбложка = " на "+Формат(ДатаЛиста, "ДФ=yyyy") + " г.";
			ОбластьОбложка.Параметры.КодОКПО = СведенияОбОрганизации.КодПоОКПО;	

			Т1=Новый ТабличныйДокумент;
			Т1.Вывести(ОбластьОбложка);
	    	Т1.ВывестиГоризонтальныйРазделительСтраниц();
	    	Т1.Вывести(ОбластьОбложка);
            // Последний лист кассовой книги
			Т1.ВывестиГоризонтальныйРазделительСтраниц();
			ОбластьПослДеньГода = Макет1.ПолучитьОбласть("ПослДеньГода");
			
			Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизаций(Отчет.Организация, КонецДня(ДатаЛиста));
						
			ОбластьПослДеньГода.Параметры.ГлБухгалтер           = Руководители.ГлавныйБухгалтер;
			ОбластьПослДеньГода.Параметры.Руководитель          = Руководители.Руководитель;
			ОбластьПослДеньГода.Параметры.РуководительДолжность = Руководители.РуководительДолжность;
			ОбластьПослДеньГода.Параметры.ЛистовЗаГод           = ЛистовЗаГод;
			Т1.Вывести(ОбластьПослДеньГода);
			Т1.ОтображатьСетку     = Ложь;
			Т1.ОтображатьЗаголовки = Ложь;
			
			Т1.Показать("Обложка и титульный лист кассовой книги","");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.Организация=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(Отчет.ДатаНачала) Тогда
		Отчет.ДатаНачала=НачалоДня(ТекущаяДата());
	КонецЕсли;	
	Если НЕ ЗначениеЗаполнено(Отчет.ДатаКонца) Тогда
		Отчет.ДатаКонца=КонецДня(ТекущаяДата());
	КонецЕсли;
КонецПроцедуры
