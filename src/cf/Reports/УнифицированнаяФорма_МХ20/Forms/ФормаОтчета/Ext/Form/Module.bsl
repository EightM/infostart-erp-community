&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="Сформировать" Тогда
		Если Не ЗначениеЗаполнено(Отчет.ДатаНачала) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Дата начала>>!",,"Отчет.ДатаНачала"); Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Отчет.ДатаКонца) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Дата конца>>!",,"Отчет.ДатаКонца"); Возврат;
		КонецЕсли;		
		//Если Не ЗначениеЗаполнено(Отчет.Склад) Тогда
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Склад>>!",,"Отчет.Склад"); Возврат;
		//КонецЕсли;		
		Если Не ЗначениеЗаполнено(Отчет.Организация) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить реквизит <<Организация>>!",,"Отчет.Организация"); Возврат;
		КонецЕсли;		
		СформироватьОтчет();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчет()
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Отчет.ДатаСоставления), КонецДня(Отчет.ДатаСоставления), ТекущаяДата()));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Отчет.Склад);
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ИсточникДанных
	|";
	Выборка=Запрос.Выполнить().Выбрать();

	МОЛСклада=?(Выборка.Следующий(), Выборка.ФизическоеЛицо, "");
	Сведения=КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(Отчет.Организация, ?(ЗначениеЗаполнено(Отчет.ДатаСоставления), Отчет.ДатаСоставления, ТекущаяДата()));	

	СтруктураШапки=Новый Структура();
	СтруктураШапки.Вставить("ДатаНачала"		,Формат(Отчет.ДатаНачала,"ДФ=dd.MM.yyyy"));
	СтруктураШапки.Вставить("ДатаКонца"			,Формат(Отчет.ДатаКонца,"ДФ=dd.MM.yyyy"));
    СтруктураШапки.Вставить("Организация"		,ПечатныеФормыСервер.ОписаниеОрганизации(Сведения, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет"));	
	СтруктураШапки.Вставить("КодПоОКПО"			,Сведения.КодПоОКПО);
	СтруктураШапки.Вставить("Склад"				,Отчет.Склад);
	СтруктураШапки.Вставить("МОЛСклада"			,МОЛСклада);
	СтруктураШапки.Вставить("НомерОтчета"		,Отчет.НомерОтчета);
	СтруктураШапки.Вставить("ДатаСоставления"	,Формат(?(ЗначениеЗаполнено(Отчет.ДатаСоставления), Отчет.ДатаСоставления,ТекущаяДата()),"ДФ=dd.MM.yyyy"));
	СтруктураШапки.Вставить("ПредставлениеНачалаПериода","Остаток на" + Символы.ПС + Формат(Отчет.ДатаНачала,"ДФ=dd.MM.yyyy"));
	СтруктураШапки.Вставить("ПредставлениеПрихода"		,"Приход за" + Символы.ПС + ПредставлениеПериода(Отчет.ДатаНачала, КонецДня(Отчет.ДатаКонца),"ФП=ИСТИНА"));
	СтруктураШапки.Вставить("ПредставлениеРасхода"		,"Расход за" + Символы.ПС + ПредставлениеПериода(Отчет.ДатаНачала, КонецДня(Отчет.ДатаКонца),"ФП=ИСТИНА"));
	СтруктураШапки.Вставить("ПредставлениеКонцаПериода"	,"Остаток на" + Символы.ПС + Формат(Отчет.ДатаКонца,"ДФ=dd.MM.yyyy"));

	// выводим в результат
	ТабличныйДокумент.Очистить();
	Макет=Отчеты.УнифицированнаяФорма_МХ20.ПолучитьМакет("Макет");
		
	// шапка
	ОбластьДляВывода=Макет.ПолучитьОбласть("Шапка");
	ОбластьДляВывода.Параметры.Заполнить(СтруктураШапки);
	ТабличныйДокумент.Вывести(ОбластьДляВывода);

	// многострочная часть
	ОбластьДляВывода=Макет.ПолучитьОбласть("Строка");

	Выборка=ПолучитьВыборкуДанных(Отчет.Организация, Отчет.Склад, Отчет.ТипЦен);
	Пока Выборка.Следующий() Цикл
		Номер=0;
		ВыборкаДетали=Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДетали.Следующий() Цикл
			Номер=Номер+1;
			ОбластьДляВывода.Параметры.Заполнить(ВыборкаДетали);
			ОбластьДляВывода.Параметры.Номер=Номер;
			ТабличныйДокумент.Вывести(ОбластьДляВывода);		
		КонецЦикла;
	КонецЦикла;
	
	// итоги
	Если НЕ Выборка=Неопределено Тогда
		Выборка.Сбросить();
		Выборка.Следующий();
	КонецЕсли;
	ОбластьДляВывода=Макет.ПолучитьОбласть("Итоги");
	Если НЕ Выборка=Неопределено Тогда
		ОбластьДляВывода.Параметры.Заполнить(Выборка);
	КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластьДляВывода);
КонецПроцедуры

&НаСервере
Функция ПолучитьВыборкуДанных(Организация, Склад, ТипЦен)
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала"	, Отчет.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКонца"	, КонецДня(Отчет.ДатаКонца));
	Запрос.УстановитьПараметр("Склад"		, Склад);
	Запрос.УстановитьПараметр("Организация"	, Организация);
	Запрос.УстановитьПараметр("ТипЦен"		, ТипЦен);
	Запрос.УстановитьПараметр("Счет"		, ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);

	стрУсловие="Организация=&Организация";
	Если ЗначениеЗаполнено(Склад) Тогда
		стрУсловие=стрУсловие+" И "+?(Отчет.ВидУчета=0, "Склад", "Субконто2")+"=&Склад";
	КонецЕсли;
	
	Если Отчет.ВидУчета=0 Тогда
		Запрос.Текст="
		|ВЫБРАТЬ
		|	ИсточникДанных.Номенклатура КАК Номенклатура,
		|	ИсточникДанных.Номенклатура.Артикул КАК Код,
		|	ИсточникДанных.Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
		|	ИсточникДанных.Номенклатура.БазоваяЕдиницаИзмерения.МеждународноеСокращение КАК ЕдиницаИзмеренияКод,
		|	Цены.Цена КАК Цена,
		|	ИсточникДанных.КоличествоНачальныйОстаток КАК КоличествоНаНачало,
		|	ИсточникДанных.КоличествоКонечныйОстаток КАК КоличествоНаКонец,
		|	ИсточникДанных.КоличествоПриход КАК КоличествоПриход,
		|	ИсточникДанных.КоличествоРасход КАК КоличествоРасход,
		|	ИсточникДанных.СтоимостьНачальныйОстаток КАК СуммаНаНачало,
		|	ИсточникДанных.СтоимостьКонечныйОстаток КАК СуммаНаКонец,
		|	ИсточникДанных.СтоимостьПриход КАК СуммаПриход,
		|	ИсточникДанных.СтоимостьРасход КАК СуммаРасход
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладах.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Период,,"+стрУсловие+") КАК ИсточникДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаКонца, ТипЦен = &ТипЦен) КАК Цены
		|		ПО ИсточникДанных.Номенклатура = Цены.Номенклатура
		|		И ИсточникДанных.ХарактеристикаНоменклатуры = Цены.ХарактеристикаНоменклатуры
		|ИТОГИ
		|	МАКСИМУМ(Код),
		|	МАКСИМУМ(ЕдиницаИзмерения),
		|	МАКСИМУМ(ЕдиницаИзмеренияКод),
		|	МАКСИМУМ(Цена),
		|	СУММА(КоличествоНаНачало),
		|	СУММА(КоличествоНаКонец),
		|	СУММА(КоличествоПриход),
		|	СУММА(КоличествоРасход),
		|	СУММА(СуммаНаНачало),
		|	СУММА(СуммаНаКонец),
		|	СУММА(СуммаПриход),
		|	СУММА(СуммаРасход)
		|ПО
		|	ОБЩИЕ,
		|	Номенклатура
		|";
	Иначе
		Запрос.Текст="
		|ВЫБРАТЬ
		|	ИсточникДанных.Субконто1 КАК Номенклатура,
		|	ИсточникДанных.Субконто1.Артикул КАК Код,
		|	ИсточникДанных.Субконто1.БазоваяЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
		|	ИсточникДанных.Субконто1.БазоваяЕдиницаИзмерения.МеждународноеСокращение КАК ЕдиницаИзмеренияКод,
		|	Цены.Цена КАК Цена,		
		|	ИсточникДанных.КоличествоНачальныйОстатокДт КАК КоличествоНаНачало,
		|	ИсточникДанных.КоличествоКонечныйОстатокДт КАК КоличествоНаКонец,
		|	ИсточникДанных.КоличествоОборотДт КАК КоличествоПриход,
		|	ИсточникДанных.КоличествоОборотКт КАК КоличествоРасход,
		|	ИсточникДанных.СуммаНачальныйОстатокДт КАК СуммаНаНачало,
		|	ИсточникДанных.СуммаКонечныйОстатокДт КАК СуммаНаКонец,
		|	ИсточникДанных.СуммаОборотДт КАК СуммаПриход,
		|	ИсточникДанных.СуммаОборотКт КАК СуммаРасход
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Период,,Счет В ИЕРАРХИИ (&Счет),,"+стрУсловие+") КАК ИсточникДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаКонца, ТипЦен = &ТипЦен) КАК Цены
		|		ПО ИсточникДанных.Субконто1 = Цены.Номенклатура
		|ИТОГИ
		|	МАКСИМУМ(Код),
		|	МАКСИМУМ(ЕдиницаИзмерения),
		|	МАКСИМУМ(ЕдиницаИзмеренияКод),
		|	МАКСИМУМ(Цена),
		|	СУММА(КоличествоНаНачало),
		|	СУММА(КоличествоНаКонец),
		|	СУММА(КоличествоПриход),
		|	СУММА(КоличествоРасход),
		|	СУММА(СуммаНаНачало),
		|	СУММА(СуммаНаКонец),
		|	СУММА(СуммаПриход),
		|	СУММА(СуммаРасход)
		|ПО
		|	ОБЩИЕ,
		|	Номенклатура
		|";
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
КонецФункции

&НаСервере
Функция ЗначениеЭлементаОтбора(стрПоле)
	Для Каждого СтрокаКоллекции Из Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если СтрокаКоллекции.ЛевоеЗначение=Новый ПолеКомпоновкиДанных(стрПоле) Тогда
			Возврат ?(СтрокаКоллекции.Использование, СтрокаКоллекции.ПравоеЗначение, Неопределено);
		КонецЕсли;	
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.Организация=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	Отчет.Склад=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
	Отчет.ТипЦен=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнойТипЦенПродажи");		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(Отчет.ДатаНачала) Тогда
		Отчет.ДатаНачала=НачалоГода(ТекущаяДата());
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(Отчет.ДатаКонца) Тогда
		Отчет.ДатаКонца=ТекущаяДата();
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Отчет.ДатаСоставления) Тогда
		Отчет.ДатаСоставления=ТекущаяДата();
	КонецЕсли;
КонецПроцедуры
