
&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	ЗаполнитьТаблицуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	л_ПользователиИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
	л_Пользователь = Элементы.Пользователь.СписокВыбора;
	л_Пользователь.Очистить();
	Для Каждого л_ПользовательИБ Из л_ПользователиИБ Цикл
		л_Пользователь.Добавить(л_ПользовательИБ.Имя, л_ПользовательИБ.ПолноеИмя);
	КонецЦикла;
	л_Пользователь.СортироватьПоПредставлению();
	Объект.Пользователь = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Объект.ХранилищеНастроек = "1"
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВыделенныеФлажки(Команда)
	СписокОбъектов_ВыбранныеФлажки(1);
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделенныеФлажки(Команда)
	СписокОбъектов_ВыбранныеФлажки(0);
КонецПроцедуры

&НаКлиенте
Процедура СписокОбъектов_ВыбранныеФлажки(л_флаг)
	л_Строки = Элементы.ТаблицаРезультатов.ВыделенныеСтроки;
	Для Каждого л_Строка Из л_Строки Цикл
		л_ТекущаяСтрока = Объект.ТаблицаРезультатов.НайтиПоИдентификатору(л_Строка);
		л_ТекущаяСтрока.Пометка = л_флаг;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицу(Команда)
	ЗаполнитьТаблицуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНаСервере()
	Перем Хранилище;
	
	Объект.ТаблицаРезультатов.Очистить();
	Если Объект.ХранилищеНастроек = "0" Тогда
		ТекстХранилища = "ХранилищеВариантовОтчетов";
	ИначеЕсли Объект.ХранилищеНастроек = "1" Тогда
		ТекстХранилища = "ХранилищеНастроекДанныхФорм";
	ИначеЕсли Объект.ХранилищеНастроек = "2" Тогда
		ТекстХранилища = "ХранилищеОбщихНастроек";
	ИначеЕсли Объект.ХранилищеНастроек = "3" Тогда
		ТекстХранилища = "ХранилищеПользовательскихНастроекОтчетов";
	ИначеЕсли Объект.ХранилищеНастроек = "4" Тогда
		ТекстХранилища = "ХранилищеСистемныхНастроек";
	ИначеЕсли Объект.ХранилищеНастроек = "5" Тогда
		ТекстХранилища = "ХранилищеПользовательскихНастроекДинамическихСписков";
	Иначе
		Возврат;
	КонецЕсли;
	
	Попытка
		Выполнить("Хранилище = "+ТекстХранилища);
	Исключение
		ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Сообщить(ТекстОшибки);
		Возврат;
	КонецПопытки;
	
	//Фильтр = Новый Структура;
	//Фильтр.Вставить( "Пользователь", Объект.Пользователь );
	//Объект.ТаблицаРезультатов.Очистить();
	
	//ХранилищеПользовательскихНастроекОтчетов.ПолучитьСписок()
	Попытка
		Выборка = Хранилище.Выбрать();
	Исключение
		ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Сообщить(ТекстОшибки);
		Возврат;
	КонецПопытки;
	
	л_ТаблицаНастроек = Новый ТаблицаЗначений;
	л_ТаблицаНастроек.Колонки.Добавить("Пользователь", Новый ОписаниеТипов("Строка"));
	л_ТаблицаНастроек.Колонки.Добавить("КлючОбъекта", Новый ОписаниеТипов("Строка"));
	л_ТаблицаНастроек.Колонки.Добавить("КлючНастроек", Новый ОписаниеТипов("Строка"));
	л_ТаблицаНастроек.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
		
	л_ТипыНастроек = Новый ОписаниеТипов("Число,Строка,Дата,Булево",
		Новый КвалификаторыЧисла(15),
		Новый КвалификаторыСтроки,
		Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	л_ТаблицаНастроек.Колонки.Добавить("Настройки", л_ТипыНастроек);
	л_ТаблицаНастроек.Колонки.Добавить("ТипНастроек", Новый ОписаниеТипов("Строка"));
	л_ТаблицаНастроек.Колонки.Добавить("ИзменяемыйТип", Новый ОписаниеТипов("Булево"));
	л_ТаблицаНастроек.Колонки.Добавить("Ошибка", Новый ОписаниеТипов("Строка"));
	
	МассивДоступныхТипов = ПолучитьДоступныеТипы();
	
	Закончить = Ложь;
	ВсегоОшибок = 0;
	Пока Не Закончить Цикл
		Попытка
			л_ТекНастройка = Выборка.Следующий();
		Исключение
			л_НоваяСтрока = л_ТаблицаНастроек.Добавить();
			ЗаполнитьЗначенияСвойств( л_НоваяСтрока, Выборка );
			//Если л_ТипыНастроек.СодержитТип(ТипЗнч(Выборка.Настройки)) Тогда
			Если МассивДоступныхТипов.найти(ТипЗнч( Выборка.Настройки )) <> Неопределено Тогда
				л_НоваяСтрока.Настройки = Выборка.Настройки;
			Иначе
				л_НоваяСтрока.Настройки = ЗначениеВСтрокуВнутрДоп( Выборка.Настройки, Истина );
			КонецЕсли;
			л_НоваяСтрока.ТипНастроек = Строка( ТипЗнч( Выборка.Настройки ) );
			Если МассивДоступныхТипов.найти(ТипЗнч( Выборка.Настройки )) <> Неопределено Тогда
				л_НоваяСтрока.ИзменяемыйТип = Истина;	
			КонецЕсли;
			л_НоваяСтрока.Ошибка = ОписаниеОшибки();
			ВсегоОшибок = ВсегоОшибок + 1;
			Продолжить;
		КонецПопытки;
		Если л_ТекНастройка Тогда
			л_НоваяСтрока = л_ТаблицаНастроек.Добавить();
			ЗаполнитьЗначенияСвойств( л_НоваяСтрока, Выборка );
			//	ТипЗнч( Выборка.Настройки ) = Тип("Строка") 
			//Или 
			//	ТипЗнч( Выборка.Настройки ) = Тип("Число") 
			//Или 
			//	ТипЗнч( Выборка.Настройки ) = Тип("Булево") 
			//Если л_ТипыНастроек.СодержитТип(ТипЗнч(Выборка.Настройки)) Тогда
			Если МассивДоступныхТипов.найти(ТипЗнч( Выборка.Настройки )) <> Неопределено Тогда
				л_НоваяСтрока.Настройки = Выборка.Настройки;
			Иначе
				л_НоваяСтрока.Настройки = ЗначениеВСтрокуВнутрДоп( Выборка.Настройки, Истина );
			КонецЕсли;
			л_НоваяСтрока.ТипНастроек = Строка( ТипЗнч( Выборка.Настройки ) );
			Если МассивДоступныхТипов.найти(ТипЗнч( Выборка.Настройки )) <> Неопределено Тогда
				л_НоваяСтрока.ИзменяемыйТип = Истина;	
			КонецЕсли;
		Иначе
			Закончить = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.Декорация1.Заголовок = "Количество ошибок при выборке: " + ВсегоОшибок;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТР.Пользователь КАК Пользователь,
	|	ТР.КлючОбъекта КАК КлючОбъекта,
	|	ТР.КлючНастроек КАК КлючНастроек,
	|	ТР.Представление КАК Представление,
	|	ТР.Настройки КАК Настройки,
	|	ТР.ТипНастроек КАК ТипНастроек,
	|	ТР.ИзменяемыйТип КАК ИзменяемыйТип,
	|	ТР.Ошибка КАК Ошибка
	|ПОМЕСТИТЬ ТЗНастройки
	|ИЗ
	|	&ТаблицаРезультатов КАК ТР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗНастройки.Пользователь КАК Пользователь,
	|	ТЗНастройки.КлючОбъекта КАК КлючОбъекта,
	|	ТЗНастройки.КлючНастроек КАК КлючНастроек,
	|	ТЗНастройки.Представление КАК Представление,
	|	ТЗНастройки.Настройки КАК Настройки,
	|	ТЗНастройки.ТипНастроек КАК ТипНастроек,
	|	ТЗНастройки.ИзменяемыйТип КАК ИзменяемыйТип,
	|	ТЗНастройки.Ошибка КАК Ошибка
	|ИЗ
	|	ТЗНастройки КАК ТЗНастройки
	|ГДЕ
	|	&__Условие__"
	;
	
	СтрУсловие = "ИСТИНА";
	
	// Анализируем ключи
	Если ЗначениеЗаполнено(Объект.КлючНастроек) Тогда
		ДобавитьУсловие(СтрУсловие,
			"ТЗНастройки.КлючНастроек ПОДОБНО ""%" + Объект.КлючНастроек + "%"""
		);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.КлючОбъекта) Тогда
		ДобавитьУсловие(СтрУсловие,
			"ТЗНастройки.КлючОбъекта ПОДОБНО ""%" + Объект.КлючОбъекта + "%"""
		);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Пользователь) Тогда
		ДобавитьУсловие(СтрУсловие,
			"ТЗНастройки.Пользователь ПОДОБНО ""%" + Объект.Пользователь + "%"""
		);
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&__Условие__", СтрУсловие);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ТаблицаРезультатов", л_ТаблицаНастроек);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выгрузить();
		Объект.ТаблицаРезультатов.Загрузить(ВыборкаДетальныеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройки(Команда)
	л_СписокПользователей = Элементы.Пользователь.СписокВыбора;
	л_СписокПользователей.ПоказатьОтметкуЭлементов(Новый ОписаниеОповещения("ВставитьНастройкуЗавершение", ЭтаФорма, Новый Структура("л_СписокПользователей", л_СписокПользователей)), "Отметьте пользователей, которым скопировать");
КонецПроцедуры

&НаКлиенте
Процедура ВставитьНастройкуЗавершение(Список, ДополнительныеПараметры) Экспорт
	Если Список<>Неопределено Тогда
		ВставитьНастройкуЗавершениеНаСервере(ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВставитьНастройкуЗавершениеНаСервере(п_Параметры)
	Перем Хранилище;
	л_СписокПользователей = п_Параметры.л_СписокПользователей;
    л_Строки = Объект.ТаблицаРезультатов.НайтиСтроки(Новый Структура("Пометка", Истина));
	Если л_Строки<>Неопределено Тогда
		Если Объект.ХранилищеНастроек = "0" Тогда
			ТекстХранилища = "ХранилищеВариантовОтчетов";
		ИначеЕсли Объект.ХранилищеНастроек = "1" Тогда
			ТекстХранилища = "ХранилищеНастроекДанныхФорм";
		ИначеЕсли Объект.ХранилищеНастроек = "2" Тогда
			ТекстХранилища = "ХранилищеОбщихНастроек";
		ИначеЕсли Объект.ХранилищеНастроек = "3" Тогда
			ТекстХранилища = "ХранилищеПользовательскихНастроекОтчетов";
		ИначеЕсли Объект.ХранилищеНастроек = "4" Тогда
			ТекстХранилища = "ХранилищеСистемныхНастроек";
		ИначеЕсли Объект.ХранилищеНастроек = "5" Тогда
			ТекстХранилища = "ХранилищеПользовательскихНастроекДинамическихСписков";
		Иначе
			Возврат;
		КонецЕсли;
		Попытка
			Выполнить("Хранилище = "+ТекстХранилища);
		Исключение
			ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			Сообщить(ТекстОшибки);
			Возврат;
		КонецПопытки;
		Для Каждого л_Строка Из л_Строки Цикл
			п_КлючОбъекта = л_Строка.КлючОбъекта;
			п_КлючНастроек = л_Строка.КлючНастроек;
			п_Представление = л_Строка.Представление;
			п_Настройки = Хранилище.Загрузить(п_КлючОбъекта, п_КлючНастроек, п_Представление, л_Строка.Пользователь);
			Для каждого л_Пользователь Из л_СписокПользователей Цикл
		        Если л_Пользователь.Пометка Тогда
		            Хранилище.Сохранить(п_КлючОбъекта, п_КлючНастроек, п_Настройки, п_Представление, л_Пользователь.Значение);
		        КонецЕсли;
		    КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНастройки(Команда)
	УдалитьОтмеченныеНастройки();
	ЗаполнитьТаблицуНаСервере();
КонецПроцедуры

&НаСервере
Процедура УдалитьОтмеченныеНастройки()
	Перем Хранилище;
	
	Если Объект.ХранилищеНастроек = "0" Тогда
		ТекстХранилища = "ХранилищеВариантовОтчетов";
	ИначеЕсли Объект.ХранилищеНастроек = "1" Тогда
		ТекстХранилища = "ХранилищеНастроекДанныхФорм";
	ИначеЕсли Объект.ХранилищеНастроек = "2" Тогда
		ТекстХранилища = "ХранилищеОбщихНастроек";
	ИначеЕсли Объект.ХранилищеНастроек = "3" Тогда
		ТекстХранилища = "ХранилищеПользовательскихНастроекОтчетов";
	ИначеЕсли Объект.ХранилищеНастроек = "4" Тогда
		ТекстХранилища = "ХранилищеСистемныхНастроек";
	ИначеЕсли Объект.ХранилищеНастроек = "5" Тогда
		ТекстХранилища = "ХранилищеПользовательскихНастроекДинамическихСписков";
	Иначе
		Возврат;
	КонецЕсли;
	
	Попытка
		Выполнить("Хранилище = "+ТекстХранилища);
	Исключение
		ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Сообщить(ТекстОшибки);
		Возврат;
	КонецПопытки;
	
	Для Каждого текнастройка ИЗ Объект.ТаблицаРезультатов Цикл
		
		Если НЕ текнастройка.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Хранилище.Удалить(текнастройка.КлючОбъекта, текнастройка.КлючНастроек, текнастройка.Пользователь);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗначениеИзСтрокиВнутрДоп(п_Строка, п_ИгнорироватьОшибку=Ложь, п_ЗначениеПоУмолчанию=Неопределено)
	Если п_ИгнорироватьОшибку Тогда
		Попытка
			п_Значение = ЗначениеИзСтрокиВнутр( п_Строка );
		Исключение
			п_Значение = п_ЗначениеПоУмолчанию;
		КонецПопытки;
	Иначе
		п_Значение = ЗначениеИзСтрокиВнутр( п_Строка );
	КонецЕсли;
	Возврат п_Значение;
КонецФункции

&НаСервере
Функция ЗначениеВСтрокуВнутрДоп(п_Значение, п_ИгнорироватьОшибку=Ложь)
	Если п_ИгнорироватьОшибку Тогда
		Попытка
			п_Строка = ЗначениеВСтрокуВнутр( п_Значение );
		Исключение
			п_Строка = "";
		КонецПопытки;
	Иначе
		п_Строка = ЗначениеВСтрокуВнутр( п_Значение );
	КонецЕсли;
	Возврат п_Строка;
КонецФункции

&НаСервере
Процедура ДобавитьУсловие(Условия, Условие)
	Если ЗначениеЗаполнено(Условия) Тогда
		Условия = Условия + "
			|	И " + Условие
		;
	Иначе
		Условия = Условие;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРезультатовНастройкиПриИзменении(Элемент)
	л_ТекущаяСтрока = ПодчиненныеЭлементы.ТаблицаРезультатов.ТекущиеДанные;
	Если л_ТекущаяСтрока <> Неопределено Тогда
		ТаблицаРезультатовНастройкиПриИзмененииНаСервере(
			л_ТекущаяСтрока.КлючОбъекта, 
			л_ТекущаяСтрока.КлючНастроек, 
			л_ТекущаяСтрока.Настройки,
			л_ТекущаяСтрока.Представление,
			л_ТекущаяСтрока.Пользователь);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ТаблицаРезультатовНастройкиПриИзмененииНаСервере(п_КлючОбъекта, п_КлючНастроек, п_Настройки, п_Представление, п_Пользователь)
	Перем п_Хранилище;
	
	Если Объект.ХранилищеНастроек = "0" Тогда
		п_ТекстХранилища = "ХранилищеВариантовОтчетов";
	ИначеЕсли Объект.ХранилищеНастроек = "1" Тогда
		п_ТекстХранилища = "ХранилищеНастроекДанныхФорм";
	ИначеЕсли Объект.ХранилищеНастроек = "2" Тогда
		п_ТекстХранилища = "ХранилищеОбщихНастроек";
	ИначеЕсли Объект.ХранилищеНастроек = "3" Тогда
		п_ТекстХранилища = "ХранилищеПользовательскихНастроекОтчетов";
	ИначеЕсли Объект.ХранилищеНастроек = "4" Тогда
		п_ТекстХранилища = "ХранилищеСистемныхНастроек";
	ИначеЕсли Объект.ХранилищеНастроек = "5" Тогда
		п_ТекстХранилища = "ХранилищеПользовательскихНастроекДинамическихСписков";
	Иначе
		Возврат;
	КонецЕсли;
	
	//Попытка
		Выполнить("п_Хранилище = "+п_ТекстХранилища);
	//Исключение
	//	п_ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	//	Сообщить(п_ТекстОшибки);
	//	Возврат;
	//КонецПопытки;
	п_Хранилище.Сохранить(п_КлючОбъекта, п_КлючНастроек, п_Настройки, п_Представление, п_Пользователь);
КонецПроцедуры

&НаСервере
Функция ПолучитьДоступныеТипы()  Экспорт
	
	Массив = новый Массив;
	//простые
	Массив.Добавить(Тип("Строка"));
	Массив.Добавить(Тип("Число"));
	Массив.Добавить(Тип("Булево"));
	Массив.Добавить(Тип("Дата"));
	Массив.Добавить(Тип("ТаблицаЗначений"));
	Массив.Добавить(Тип("Массив"));
	Массив.Добавить(Тип("СписокЗначений"));
	Массив.Добавить(Тип("Соответствие"));
	Массив.Добавить(Тип("Структура"));
	
	//ссылочные
	Для каждого СсылочныйТип из Справочники.ТипВсеСсылки().Типы() Цикл	Массив.Добавить(СсылочныйТип);	КонецЦикла;
	Для каждого СсылочныйТип из Перечисления.ТипВсеСсылки().Типы() Цикл	Массив.Добавить(СсылочныйТип);	КонецЦикла;
	Для каждого СсылочныйТип из Документы.ТипВсеСсылки().Типы() Цикл	Массив.Добавить(СсылочныйТип);	КонецЦикла;
	Для каждого СсылочныйТип из ПланыВидовХарактеристик.ТипВсеСсылки().Типы() Цикл Массив.Добавить(СсылочныйТип);КонецЦикла;
	Для каждого СсылочныйТип из ПланыСчетов.ТипВсеСсылки().Типы() Цикл Массив.Добавить(СсылочныйТип);	КонецЦикла;
	Для каждого СсылочныйТип из ПланыВидовРасчета.ТипВсеСсылки().Типы() Цикл Массив.Добавить(СсылочныйТип);	КонецЦикла;
	Для каждого СсылочныйТип из ПланыОбмена.ТипВсеСсылки().Типы() Цикл Массив.Добавить(СсылочныйТип);	КонецЦикла;
	Для каждого СсылочныйТип из БизнесПроцессы.ТипВсеСсылки().Типы() Цикл Массив.Добавить(СсылочныйТип);	КонецЦикла;
	Для каждого СсылочныйТип из Задачи.ТипВсеСсылки().Типы() Цикл Массив.Добавить(СсылочныйТип);	КонецЦикла;
	
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура ТолькоИзменяемыеНастройки(Команда)
	ТолькоИзменяемыеНастройкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТолькоИзменяемыеНастройкиНаСервере()
	Элементы.ТаблицаРезультатовТолькоИзменяемыеНастройки.Пометка = Не Элементы.ТаблицаРезультатовТолькоИзменяемыеНастройки.Пометка;
	
	п_Установить = Элементы.ТаблицаРезультатовТолькоИзменяемыеНастройки.Пометка;
	Если п_Установить Тогда
		Элементы.ТаблицаРезультатов.ОтборСтрок = новый ФиксированнаяСтруктура("ИзменяемыйТип", Истина);
	Иначе
		Элементы.ТаблицаРезультатов.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройку(Команда)
	ТекДанные = Элементы.ТаблицаРезультатов.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		СтруктураНастроек = ПолучитьВХТекущихНастроек();
		ПоказатьЗначениеПроизвольногоТипа(СтруктураНастроек.ВХНастроек,СтруктураНастроек);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьВХТекущихНастроек()
	Перем п_Хранилище;
	
	Если Объект.ХранилищеНастроек = "0" Тогда
		п_ТекстХранилища = "ХранилищеВариантовОтчетов";
	ИначеЕсли Объект.ХранилищеНастроек = "1" Тогда
		п_ТекстХранилища = "ХранилищеНастроекДанныхФорм";
	ИначеЕсли Объект.ХранилищеНастроек = "2" Тогда
		п_ТекстХранилища = "ХранилищеОбщихНастроек";
	ИначеЕсли Объект.ХранилищеНастроек = "3" Тогда
		п_ТекстХранилища = "ХранилищеПользовательскихНастроекОтчетов";
	ИначеЕсли Объект.ХранилищеНастроек = "4" Тогда
		п_ТекстХранилища = "ХранилищеСистемныхНастроек";
	ИначеЕсли Объект.ХранилищеНастроек = "5" Тогда
		п_ТекстХранилища = "ХранилищеПользовательскихНастроекДинамическихСписков";
	//Иначе
	//	Возврат;
	КонецЕсли;
	
	//Попытка
		Выполнить("п_Хранилище = "+п_ТекстХранилища);
	//Исключение
	//	п_ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	//	Сообщить(п_ТекстОшибки);
	//	Возврат;
	//КонецПопытки;
	текСтрока = Объект.ТаблицаРезультатов.НайтиПоИдентификатору(Элементы.ТаблицаРезультатов.ТекущаяСтрока);
	ЗначениеНастройки = п_Хранилище.Загрузить(текСтрока.КлючОбъекта,текСтрока.КлючНастроек,,текСтрока.Пользователь);
	ВХНастроек = ПоместитьВоВременноеХранилище(ЗначениеНастройки,ЭтаФорма.УникальныйИдентификатор);
	СтруктураНастроек = новый Структура("ВХНастроек,КлючОбъекта,КлючНастроек,Пользователь",ВХНастроек,текСтрока.КлючОбъекта,текСтрока.КлючНастроек,текСтрока.Пользователь);
	Возврат СтруктураНастроек;
КонецФункции 

&НаКлиенте
Процедура ПоказатьЗначениеПроизвольногоТипа(ВХНастроек,СтруктураНастроек)
	
	//для открыти формы
	ПараметрыФормы = новый Структура;
	ПараметрыФормы.Вставить("ПроизвольноеЗначениеВХ",ВХНастроек);
	
	ОписаниеОповещения = новый ОписаниеОповещения("РезультатОткрытияФормыПроизвольногоЗначения",ЭтаФорма,СтруктураНастроек);
	ОткрытьФорму("Обработка.СтандартноеХранилищеНастроек.Форма.ФормаРедактированияНастройки",ПараметрыФормы,ЭтаФорма,Строка(новый УникальныйИдентификатор()),,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатОткрытияФормыПроизвольногоЗначения(Результат,ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		СохранитьНастройкиПоВХ(Результат,ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиПоВХ(Результат,СтруктураНастроек) Экспорт
	Перем п_Хранилище;
	
	Если Объект.ХранилищеНастроек = "0" Тогда
		п_ТекстХранилища = "ХранилищеВариантовОтчетов";
	ИначеЕсли Объект.ХранилищеНастроек = "1" Тогда
		п_ТекстХранилища = "ХранилищеНастроекДанныхФорм";
	ИначеЕсли Объект.ХранилищеНастроек = "2" Тогда
		п_ТекстХранилища = "ХранилищеОбщихНастроек";
	ИначеЕсли Объект.ХранилищеНастроек = "3" Тогда
		п_ТекстХранилища = "ХранилищеПользовательскихНастроекОтчетов";
	ИначеЕсли Объект.ХранилищеНастроек = "4" Тогда
		п_ТекстХранилища = "ХранилищеСистемныхНастроек";
	ИначеЕсли Объект.ХранилищеНастроек = "5" Тогда
		п_ТекстХранилища = "ХранилищеПользовательскихНастроекДинамическихСписков";
	//Иначе
	//	Возврат;
	КонецЕсли;
	
	//Попытка
		Выполнить("п_Хранилище = "+п_ТекстХранилища);
	//Исключение
	//	п_ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	//	Сообщить(п_ТекстОшибки);
	//	Возврат;
	//КонецПопытки;
	Если Результат.ЭтоВХ Тогда
		ТекНастройки = ПолучитьИзВременногоХранилища(Результат.Значение);
		УдалитьИзВременногоХранилища(Результат.Значение);
	Иначе
		ТекНастройки = Результат.Значение;
	КонецЕсли;
	ОписаниеНастроек = п_Хранилище.ПолучитьОписание(СтруктураНастроек.КлючОбъекта,СтруктураНастроек.КлючНастроек,СтруктураНастроек.Пользователь);
	п_Хранилище.Сохранить(СтруктураНастроек.КлючОбъекта,СтруктураНастроек.КлючНастроек,ТекНастройки,ОписаниеНастроек,СтруктураНастроек.Пользователь);	
	ЗаполнитьТаблицуНаСервере();
КонецПроцедуры
