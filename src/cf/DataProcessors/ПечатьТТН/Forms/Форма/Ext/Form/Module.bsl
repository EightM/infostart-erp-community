////////////////////////////////////////////////////////////////////////////////
// Обработчики оповещений

&НаКлиенте
Процедура ОбработчикОповещения_ВыборГруппыТоваров(Параметр1, Параметр2) Экспорт
	Если Не ЗначениеЗаполнено(Параметр1) Тогда Возврат; КонецЕсли;
	Пункт3_1=Параметр1;
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДляТТНПриложение4(ДанныеДляПечати)
	ДанныеДокумента=Новый Структура();
	//Если Шапка.Количество()=0 Тогда Возврат ДанныеДокумента; КонецЕсли;
	ДанныеДокумента.Вставить("Пункт0_1", 1);
	ДанныеДокумента.Вставить("Пункт0_2", ДанныеДляПечати.ДатаДокумента);
	ДанныеДокумента.Вставить("Пункт0_3", ДанныеДляПечати.Номер);
	ДанныеДокумента.Вставить("Пункт0_4", ДанныеДляПечати.Номер);
	СведенияОГрузополучателе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ДанныеДляПечати.Грузополучатель,  ДанныеДляПечати.ДатаДокумента);
	СведенияОГрузоотправитель = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ДанныеДляПечати.Грузоотправитель, ДанныеДляПечати.ДатаДокумента);
	Если ДанныеДляПечати.ГрузополучательЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		ДанныеДокумента.Вставить("Пункт2_1", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ФактическийАдрес,Телефоны"));
	Иначе
		ДанныеДокумента.Вставить("Пункт2_2", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ФактическийАдрес,Телефоны"));
	КонецЕсли;
	
	Если ДанныеДляПечати.ГрузоотправительЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		ДанныеДокумента.Вставить("Пункт1_1", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ФактическийАдрес,Телефоны"));
	Иначе
		ДанныеДокумента.Вставить("Пункт1_2", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ФактическийАдрес,Телефоны"));
	КонецЕсли;
	
	КоличествоМест=ДанныеДляПечати.ВыборкаСтрок.Итог("КоличествоМест");
	ДанныеДокумента.Вставить("Пункт3_2", ?(КоличествоМест = 0, "", "Всего мест: " + КоличествоМест + " ("+ЧислоПрописью(КоличествоМест, ,",,,,,,,,0")+")"));
	МассаГруза=0;
	Для каждого Строка Из ДанныеДляПечати.ВыборкаСтрок Цикл
		МассаГруза=МассаГруза+Строка.МассаБрутто;
	КонецЦикла; 
	
	Сумма=ДанныеДляПечати.ВыборкаСтрок.Итог("Сумма");
	СуммаНДС=ДанныеДляПечати.ВыборкаСтрок.Итог("СуммаНДС");
	ДанныеДокумента.Вставить("Пункт3_3",?(МассаГруза=0,"", "Масса груза (брутто) "+МассаГруза+" ("+ЧислоПрописью(МассаГруза, ,",,,,,,,,0")+"кг.)"));
	ДанныеДокумента.Вставить("Пункт4_1", "Товарная накладная №"+ДанныеДляПечати.Номер+" от "+Формат(ДанныеДляПечати.ДатаДокумента,"ДФ=dd.MM.yyyy")+"г.");
	ДанныеДокумента.Вставить("Пункт5_4", Формат(Сумма, "ЧДЦ=2") + " ("+ОбщегоНазначения.СформироватьСуммуПрописью(Сумма, Константы.ВалютаРегламентированногоУчета.Получить())+")");
	ДанныеДокумента.Вставить("Пункт6_1", СведенияОГрузоотправитель.ФактическийАдрес);
	ДанныеДокумента.Вставить("Пункт7_1", СведенияОГрузополучателе.ФактическийАдрес);
	ДанныеДокумента.Вставить("Пункт6_5", ?(МассаГруза=0,"",СокрЛП(МассаГруза)+" кг.")+" "+?(КоличествоМест = 0, "", СокрЛП(КоличествоМест)+" мест"));
	ДанныеДокумента.Вставить("Пункт7_5", ?(МассаГруза=0,"",СокрЛП(МассаГруза)+" кг.")+" "+?(КоличествоМест = 0, "", СокрЛП(КоличествоМест)+" мест"));
	
	ДанныеДокумента.Вставить("Пункт8_1", "-");
	ДанныеДокумента.Вставить("Пункт8_2", "-");
	ДанныеДокумента.Вставить("Пункт8_3", "-");
	ДанныеДокумента.Вставить("Пункт8_4", "-");
	ДанныеДокумента.Вставить("Пункт8_5", "-");
	ДанныеДокумента.Вставить("Пункт8_6", "-");
	
	ДанныеДокумента.Вставить("Пункт16_1", СведенияОГрузоотправитель.ПолноеНаименование);
	ДанныеДокумента.Вставить("Пункт10_3Ведомость", СведенияОГрузополучателе.ПолноеНаименование);
	
	возврат ДанныеДокумента;
КонецФункции

&НаСервере
Функция ПолучитьДанныеДляПечати1Т()
	Перем ПодразделениеОтветственныхЛиц;
	
	ДанныеДляПечати=Новый Структура;
	МетаданныеДокумента = Объект.Документ.Метаданные();
	
	Запрос = Новый Запрос;
	ЗапросПоТЧ = Новый Запрос;
	Запрос.УстановитьПараметр("Документ",  Объект.Документ);
	ЗапросПоТЧ.УстановитьПараметр("Документ",  Объект.Документ);
	Если УправлениеМетаданными.ЕстьРеквизит("КурсВзаиморасчетов", МетаданныеДокумента) Тогда
		ЗапросПоТЧ.УстановитьПараметр("Курс",      ?(Объект.Документ.ВалютаДокумента.Код = "810", 1, Объект.Документ.КурсВзаиморасчетов));
		ЗапросПоТЧ.УстановитьПараметр("Кратность", ?(Объект.Документ.ВалютаДокумента.Код = "810", 1, ?(Объект.Документ.КратностьВзаиморасчетов = 0, 1, Объект.Документ.КратностьВзаиморасчетов)));
	Иначе
		ЗапросПоТЧ.УстановитьПараметр("Курс",      1);
		ЗапросПоТЧ.УстановитьПараметр("Кратность", 1);
	КонецЕсли;
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСчет", Справочники.БанковскиеСчета.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата КАК ДатаДокумента,
	|	Организация,
	|	Организация КАК ЮрФизЛицо,
	|	Организация КАК Поставщик,
	|	Организация КАК Контрагент,
	|	Организация КАК Руководители,
	|	ВЫБОР 	КОГДА Грузоотправитель = &ПустойКонтрагент
	|	      	ТОГДА Организация
	|	      	ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР 	КОГДА Грузоотправитель = &ПустойКонтрагент
	|		  	ТОГДА Организация.ЮрФизЛицо
	|		  	ИНАЧЕ Грузоотправитель.ЮрФизЛицо
	|	КОНЕЦ   КАК ГрузоотправительЮрФизЛицо,
	|	ВЫБОР 	КОГДА Грузополучатель = &ПустойКонтрагент
	|	      	ТОГДА Контрагент
	|	      	ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР	КОГДА Грузополучатель = &ПустойКонтрагент
	|			ТОГДА Контрагент.ЮрФизЛицо
	|			ИНАЧЕ Грузополучатель.ЮрФизЛицо
	|	КОНЕЦ   КАК ГрузополучательЮрФизЛицо,
	|	БанковскийСчетОрганизации КАК БанковскийСчет,
	|	Контрагент   КАК Покупатель,
	|	Контрагент   КАК Плательщик,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов       КАК Курс,
	|	КратностьВзаиморасчетов  КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &Документ
	|";
	
	ЗапросПоТЧ.Текст="ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.НомерСтроки КАК Номер,
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	РеализацияТоваровУслугТовары.Номенклатура.Код КАК ТоварКод,
	|	РеализацияТоваровУслугТовары.Количество,
	|	РеализацияТоваровУслугТовары.КоличествоМест,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугТовары.КоличествоМест > 0
	|			ТОГДА РеализацияТоваровУслугТовары.КоличествоМест * РеализацияТоваровУслугТовары.ЕдиницаИзмеренияМест.Вес
	|		ИНАЧЕ РеализацияТоваровУслугТовары.Количество * РеализацияТоваровУслугТовары.ЕдиницаИзмерения.Вес
	|	КОНЕЦ КАК МассаБрутто,
	|	РеализацияТоваровУслугТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслугТовары.ЕдиницаИзмерения КАК ВидУпаковки,
	|	РеализацияТоваровУслугТовары.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслугТовары.Коэффициент,
	|	РеализацияТоваровУслугТовары.Цена * &Курс / &Кратность КАК Цена,
	
	|РеализацияТоваровУслугТовары.Сумма * &Курс / &Кратность КАК Сумма,
	//|	ВЫБОР
	//|		КОГДА РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС
	//|			ТОГДА РеализацияТоваровУслугТовары.Сумма * &Курс / &Кратность
	//|		ИНАЧЕ (РеализацияТоваровУслугТовары.Сумма + РеализацияТоваровУслугТовары.СуммаНДС) * &Курс / &Кратность
	//|	КОНЕЦ КАК Сумма,
	
	|	РеализацияТоваровУслугТовары.СуммаНДС * &Курс / &Кратность КАК СуммаНДС,
	|	РеализацияТоваровУслугТовары.Сумма КАК СуммаВВалютеДокумента,
	|	РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДСВВалютеДокумента,
	|	РеализацияТоваровУслугТовары.СтавкаНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &Документ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугВозвратнаяТара.НомерСтроки,
	|	РеализацияТоваровУслугВозвратнаяТара.Номенклатура,
	|	РеализацияТоваровУслугВозвратнаяТара.Номенклатура.НаименованиеПолное,
	|	РеализацияТоваровУслугВозвратнаяТара.Номенклатура.Код,
	|	РеализацияТоваровУслугВозвратнаяТара.Количество,
	|	NULL,
	|	РеализацияТоваровУслугВозвратнаяТара.Количество * РеализацияТоваровУслугВозвратнаяТара.Номенклатура.ЕдиницаХраненияОстатков.Вес,
	|	РеализацияТоваровУслугВозвратнаяТара.Номенклатура.БазоваяЕдиницаИзмерения,
	|	РеализацияТоваровУслугВозвратнаяТара.Номенклатура.ЕдиницаХраненияОстатков,
	|	РеализацияТоваровУслугВозвратнаяТара.Номенклатура.ЕдиницаХраненияОстатков.Код,
	|	NULL,
	|	РеализацияТоваровУслугВозвратнаяТара.Цена * &Курс / &Кратность,
	|	РеализацияТоваровУслугВозвратнаяТара.Сумма * &Курс / &Кратность,
	|	0,
	|	РеализацияТоваровУслугВозвратнаяТара.Сумма,
	|	0,
	|	""Без НДС""
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ВозвратнаяТара КАК РеализацияТоваровУслугВозвратнаяТара
	|ГДЕ
	|	РеализацияТоваровУслугВозвратнаяТара.Ссылка = &Документ";
	
	
	Если ТипЗнч(Объект.Документ) = Тип("ДокументСсылка.ПередачаВПереработку") Тогда
		Запрос.Текст="
		|ВЫБРАТЬ
		|	Номер,
		|	Дата         КАК ДатаДокумента,
		|	Организация,
		|	Организация  КАК ЮрФизЛицо,
		|	Организация  КАК Поставщик,
		|	Организация  КАК Контрагент,
		|	Организация  КАК Руководители,
		|	ВЫБОР 	КОГДА Грузоотправитель = &ПустойКонтрагент
		|	      	ТОГДА Организация
		|	      	ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
		|	ВЫБОР 	КОГДА Грузоотправитель = &ПустойКонтрагент
		|		  	ТОГДА Организация.ЮрФизЛицо
		|		  	ИНАЧЕ Грузоотправитель.ЮрФизЛицо
		|	КОНЕЦ                            КАК ГрузоотправительЮрФизЛицо,
		|	ВЫБОР 	КОГДА Грузополучатель = &ПустойКонтрагент
		|	      	ТОГДА Контрагент
		|	      	ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
		|	ВЫБОР	КОГДА Грузополучатель = &ПустойКонтрагент
		|			ТОГДА Контрагент.ЮрФизЛицо
		|			ИНАЧЕ Грузополучатель.ЮрФизЛицо
		|	КОНЕЦ                            КАК ГрузополучательЮрФизЛицо,
		|	&ПустойСЧет КАК БанковскийСчет,
		|	Контрагент   КАК Покупатель,
		|	Контрагент   КАК Плательщик,
		|	ВалютаДокумента,
		|	1       КАК Курс,
		|	1  КАК Кратность,
		|	Ложь,
		|	Истина,
		|	Товары.(
		|		НомерСтроки                              КАК Номер,
		|		Номенклатура,
		|		Номенклатура.НаименованиеПолное          КАК ТоварНаименование,
		|		Номенклатура.Код                         КАК ТоварКод,
		|		Количество,
		|		Количество 								 КАК КоличествоМест,
		|		Номенклатура.БазоваяЕдиницаИзмерения 	 КАК БазоваяЕдиницаНаименование,
		|		Номенклатура.БазоваяЕдиницаИзмерения     КАК ВидУпаковки,
		|		Номенклатура.БазоваяЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
		|		1,
		|		0 КАК Цена,
		|		0 КАК Сумма,
		|		0 КАК СуммаНДС,
		|		0 КАК СуммаВВалютеДокумента,
		|		0 КАК СуммаНДСВВалютеДокумента,
		|		0
		|	)
		|ИЗ
		|	Документ.ПередачаТоваров КАК ПередачаТоваров
		|
		|ГДЕ
		|	ПередачаТоваров.Ссылка = &Документ";
		
		ДанныеДляПечати.Вставить("ТаблицаСуммСписания", БухгалтерскийУчетСервер.ПолучитьСуммуСписанияАктивов(Объект.Документ));
	КонецЕсли;
	
	//Шапка=Запрос.Выполнить().Выбрать();
	//Шапка.Следующий();
	Шапка=Запрос.Выполнить().Выгрузить();
	Для Каждого Колонка Из Шапка.Колонки Цикл
		ДанныеДляПечати.Вставить(Колонка.Имя, Шапка[0][Колонка.Имя]);
	КонецЦикла;
	
	ДанныеДляПечати.Вставить("ВыборкаСтрок", ЗапросПоТЧ.Выполнить().Выгрузить());
	Если ТипЗнч(Объект.Документ)=Тип("ДокументСсылка.РеализацияТоваровУслуг") И Объект.Документ.Проведен Тогда
		//Запрос=Новый Запрос;
		//Запрос.УстановитьПараметр("Ссылка", Документ);
		//Запрос.УстановитьПараметр("СчетУчетаРасчетовСКонтрагентом", Документ.СчетУчетаРасчетовСКонтрагентом);
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	СУММА(Хозрасчетный.Сумма) КАК Сумма
		//|ИЗ
		//|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
		//|ГДЕ
		//|	Хозрасчетный.Регистратор = &Ссылка
		//|	И Хозрасчетный.СчетДт = &СчетУчетаРасчетовСКонтрагентом
		//|	И Хозрасчетный.СчетКт В
		//|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		//|				РеализацияТоваровУслугТовары.СчетДоходов
		//|			ИЗ
		//|				Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		//|			ГДЕ
		//|				РеализацияТоваровУслугТовары.Ссылка = &Ссылка)
		//|";
		//СуммаВзаиморасчетов = Запрос.Выполнить().Выгрузить()[0].Сумма;
		СуммаВзаиморасчетов=NULL; //Подумать как определить данную сумму
		
		Если НЕ СуммаВзаиморасчетов = NULL Тогда
			МассивРаспределения = Новый Массив;
			ДанныеДляПечати.ВыборкаСтрок.Колонки.Добавить("СуммаБезНДСВВалютеДокумента");			
			Для Каждого СтрокаТовар Из ДанныеДляПечати.ВыборкаСтрок Цикл
				СуммаСНДСВВалютеДокумента = СтрокаТовар.СуммаВВалютеДокумента + ?(Шапка.СуммаВключаетНДС, 0, СтрокаТовар.СуммаНДСВВалютеДокумента);
				Если (СтрокаТовар.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120)
					ИЛИ (СтрокаТовар.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118)
					ИЛИ (СтрокаТовар.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110) Тогда
					СуммаБезНДСВВалютеДокумента = СуммаСНДСВВалютеДокумента;
				Иначе
					СуммаБезНДСВВалютеДокумента = СуммаСНДСВВалютеДокумента - СтрокаТовар.СуммаНДСВВалютеДокумента;
				КонецЕсли;				
				МассивРаспределения.Добавить(СуммаСНДСВВалютеДокумента);
				СтрокаТовар.СуммаБезНДСВВалютеДокумента = СуммаБезНДСВВалютеДокумента;
			КонецЦикла;
			
			УчетНДС.РаспределитьСуммуПоСтолбцу(МассивРаспределения, СуммаВзаиморасчетов, ДанныеДляПечати.ВыборкаСтрок, "Сумма");
			
			Для Каждого СтрокаТовар Из ДанныеДляПечати.ВыборкаСтрок Цикл
				МассивРаспределения.Очистить();
				МассивРаспределения.Добавить(СтрокаТовар.СуммаБезНДСВВалютеДокумента);
				МассивРаспределения.Добавить(СтрокаТовар.СуммаНДСВВалютеДокумента);
				МассивРаспределенныхСумм = ОбщегоНазначения.РаспределитьПропорционально(СтрокаТовар.Сумма, МассивРаспределения);
				Если НЕ (МассивРаспределенныхСумм = Неопределено) Тогда
					СтрокаТовар.Сумма    = МассивРаспределенныхСумм[0] + ?(Шапка.СуммаВключаетНДС, МассивРаспределенныхСумм[1], 0);
					СтрокаТовар.СуммаНДС = МассивРаспределенныхСумм[1];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Возврат ДанныеДляПечати;
КонецФункции

&НаСервере
Процедура ОчиститьДанныеПечатиТТНПриложение4()
	ДанныеДокумента=Новый Структура();
	ДанныеДокумента.Вставить("Пункт2_1", "");
	ДанныеДокумента.Вставить("Пункт2_2", "");
	ДанныеДокумента.Вставить("Пункт1_1", "");
	ДанныеДокумента.Вставить("Пункт1_2", "");		
	ДанныеДокумента.Вставить("Пункт3_2", "");
	ДанныеДокумента.Вставить("Пункт16_1", "");
	ДанныеДокумента.Вставить("Пункт10_3Ведомость", "");
	
	Для Каждого ЗначениеЗаполненияБланкаТТН Из ДанныеДокумента Цикл
		Если Не Элементы.Найти(ЗначениеЗаполненияБланкаТТН.Ключ)=Неопределено Тогда
			ЭтаФорма[ЗначениеЗаполненияБланкаТТН.Ключ]=ЗначениеЗаполненияБланкаТТН.Значение;
		КонецЕсли;
	КонецЦикла;
	Пункт0_1=1;
	Пункт0_0=1;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПечатиТТНПриложение4()
	ДанныеДокумента=ПечатьТТН(Истина);
	
	Для Каждого ЗначениеЗаполненияБланкаТТН Из ДанныеДокумента Цикл
		Если Не Элементы.Найти(ЗначениеЗаполненияБланкаТТН.Ключ)=Неопределено Тогда
			ЭтаФорма[ЗначениеЗаполненияБланкаТТН.Ключ]=ЗначениеЗаполненияБланкаТТН.Значение;
		КонецЕсли;
	КонецЦикла;
	Пункт0_1=1;
	Пункт0_0=1;
КонецПроцедуры

&НаСервере
Функция ПечатьТТН(ПолучитьДанныеПечати = Ложь)	
	ДанныеДляПечати=ПолучитьДанныеДляПечати1Т();
	Если ПолучитьДанныеПечати = Истина Тогда
		Возврат ПолучитьДанныеДляТТНПриложение4(ДанныеДляПечати);
	КонецЕсли;
	
	// Выводим общие реквизиты шапки
	СведенияОПоставщике       = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ДанныеДляПечати.ЮрФизЛицо,        ДанныеДляПечати.ДатаДокумента , , ДанныеДляПечати.БанковскийСчет);
	СведенияОГрузоотправителе = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ДанныеДляПечати.Грузоотправитель, ДанныеДляПечати.ДатаДокумента , , ?(ДанныеДляПечати.Грузоотправитель = ДанныеДляПечати.ЮрФизЛицо, ДанныеДляПечати.БанковскийСчет, Неопределено));
	СведенияОПокупателе       = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель,       ДанныеДляПечати.ДатаДокумента);
	СведенияОГрузополучателе  = КонтактнаяИнформацияСервер.СведенияОЮрФизЛице(ДанныеДляПечати.Грузополучатель,  ДанныеДляПечати.ДатаДокумента);
	ДанныеДляПечати.Вставить("НомерДокумента", ОбщегоНазначенияСервер.НомерНаПечать(Объект.Документ));
	ДанныеДляПечати.Вставить("ГрузоотправительПредставление", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет"));
	ДанныеДляПечати.Вставить("ГрузополучательПредставление", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет"));
	ДанныеДляПечати.Вставить("ПлательщикПредставление", ПечатныеФормыСервер.ОписаниеОрганизации(СведенияОПокупателе));
	ДанныеДляПечати.Вставить("ГрузоотправительПоОКПО", СведенияОГрузоотправителе.КодПоОКПО);
	ДанныеДляПечати.Вставить("ГрузополучательПоОКПО", СведенияОГрузополучателе.КодПоОКПО);
	ДанныеДляПечати.Вставить("ПлательщикПоОКПО", СведенияОПокупателе.КодПоОКПО);
	
	Руководители = ПечатныеФормыСервер.ОтветственныеЛицаОрганизации(ДанныеДляПечати.Руководители, ДанныеДляПечати.ДатаДокумента,Объект.Документ);
	ДанныеДляПечати.Вставить("ФИООтпускРазрешил", Руководители.Руководитель);
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", Руководители.ГлавныйБухгалтер);
	
	ДанныеДляПечати.Вставить("Номер", ДанныеДляПечати.НомерДокумента);
	ДанныеДляПечати.Вставить("ОрганизацияПеревозчик", Объект.Перевозчик);
	ДанныеДляПечати.Вставить("МаркаАвтомобиля", Объект.МаркаАвтомобиля);
	ДанныеДляПечати.Вставить("ГосНомерАвтомобиля", Объект.ГосНомерАвтомобиля);
	ДанныеДляПечати.Вставить("ОрганизацияЗаказчик", Объект.Заказчик);
	ДанныеДляПечати.Вставить("ФИОВодителя", Объект.Водитель);
	ДанныеДляПечати.Вставить("ВодительскоеУдостоверение", Объект.ВодительскоеУдостоверение);
	ДанныеДляПечати.Вставить("ВидПеревозки", Объект.ВидПеревозки);
	ДанныеДляПечати.Вставить("ПунктПогрузки", Объект.ПунктПогрузки);
	ДанныеДляПечати.Вставить("ПунктРазгрузки", Объект.ПунктРазгрузки);
	ДанныеДляПечати.Вставить("Прицеп", Объект.МаркаПрицепа);
	ДанныеДляПечати.Вставить("ГосНомерПрицепа", Объект.ГосНомерПрицепа);
	ДанныеДляПечати.Вставить("СрокДоставки", Объект.СрокДоставки);
	
	Если ТипЗнч(Объект.СтруктураПараметров)=Тип("Структура") Тогда
		Если Объект.СтруктураПараметров.Свойство("МодульПечати") Тогда
			стрТекстМодуля=Объект.СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
			Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет       = Обработки.ПечатьТТН.ПолучитьМакет("ТТН");
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_1Т";
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ДанныеДляПечати.ВыборкаСтрок.Количество();
	
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	// инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаНаСтранице      = 0;
	ИтогоНДСНаСтранице        = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;
	
	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоСуммаСНДС  = 0;
	ИтогоСумма      = 0;
	ИтогоНДС        = 0;
	Ном             = 0;
	
	// Выводим многострочную часть документа
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	
	Для Каждого ВыборкаСтрокТовары Из ДанныеДляПечати.ВыборкаСтрок Цикл
		Ном=Ном+1; ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;
			
			//ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// очистим итоги по странице
			ИтогоКоличествоНаСтранице = 0;
			ИтогоСуммаСНДСНаСтранице  = 0;
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		
		Мест        = ?(ВыборкаСтрокТовары.КоличествоМест=Null,0,ВыборкаСтрокТовары.КоличествоМест);
		Количество  = ?(ВыборкаСтрокТовары.Количество=Null,0,ВыборкаСтрокТовары.Количество);
		
		Если ТипЗнч(Объект.Документ) = Тип("ДокументСсылка.ПередачаВПереработку") Тогда
			СтрокаСуммСписания=ДанныеДляПечати.ТаблицаСуммСписания.Найти(ВыборкаСтрокТовары.Номенклатура, "Номенклатура");
			СуммаСНДС=?(СтрокаСуммСписания=Неопределено, 0, СтрокаСуммСписания.Сумма);
			СуммаНДС=0;
			СуммаБезНДС=СуммаСНДС;
		Иначе
			СуммаСНДС=(ВыборкаСтрокТовары.Сумма+?(ДанныеДляПечати.СуммаВключаетНДС, 0, ВыборкаСтрокТовары.СуммаНДС));
			СуммаНДС=ВыборкаСтрокТовары.СуммаНДС;
			СуммаБезНДС=СуммаСНДС-СуммаНДС;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Сумма = СуммаСНДС;
		ОбластьМакета.Параметры.Цена  = СуммаСНДС / ?(Количество = 0, 1, Количество);
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// увеличим итоги по странице
		ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
		ИтогоСуммаНаСтранице      = ИтогоСуммаНаСтранице      + СуммаБезНДС;
		ИтогоНДСНаСтранице        = ИтогоНДСНаСтранице        + СуммаНДС;
		ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;
		
		// увеличим итоги по документу
		ИтогоМест       = ИтогоМест       + Мест;
		ИтогоКоличество = ИтогоКоличество + Количество;
		ИтогоСумма      = ИтогоСумма      + СуммаБезНДС;
		ИтогоНДС        = ИтогоНДС        + СуммаНДС;
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
	КонецЦикла;
	
	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;
	
	//ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;
	
	//ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(ИтогоСуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить());
	ОбластьМакета.Параметры.ВсегоМестПрописью       = ЧислоПрописью(ИтогоМест, ,",,,,,,,,0");
	ОбластьМакета.Параметры.ВсегоНаименований       = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьМакета   = Макет.ПолучитьОбласть("ТранспортныйРаздел");
	ШрифтСтандарт   = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , НЕ Объект.ЛицензионнаяКарточка);
	ШрифтОграничено = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , Объект.ЛицензионнаяКарточка);
	ОбластьМакета.Области.Стандарт.Шрифт   = ШрифтСтандарт;
	ОбластьМакета.Области.Ограничено.Шрифт = ШрифтОграничено;
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("СведенияОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСведенийОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПрочиеСведения");
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

&НаСервере
Функция ПечатьТТНПриложение4()
	СтруктураДанныхПечати=Новый Структура();
	Для Каждого Реквизит Из Элементы Цикл
		Если Найти(Реквизит.Имя, "Пункт") > 0.00 Тогда
			Если Не ТипЗнч(Реквизит)=Тип("ПолеФормы") Тогда Продолжить; КонецЕсли;
			СтруктураДанныхПечати.Вставить(Реквизит.Имя, ЭтаФорма[Реквизит.ПутьКДанным]);
		КонецЕсли;
	КонецЦикла;
	Если ТипЗнч(Объект.СтруктураПараметров)=Тип("Структура") Тогда
		Если Объект.СтруктураПараметров.Свойство("МодульПечати") Тогда
			стрТекстМодуля=Объект.СтруктураПараметров.МодульПечати.ПараметрыПечатнойФормы.ТекстМодуля;
			Если Не ПустаяСтрока(стрТекстМодуля) Тогда Выполнить(стрТекстМодуля); КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент();
	ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
	МакетТТНПриложение4=Обработки.ПечатьТТН.ПолучитьМакет("ТТНПриложение4");
	ЛицеваяСторона=МакетТТНПриложение4.ПолучитьОбласть("ГоризонтальнаяЛицеваяСторона|ВертикальнаяОбласть");
	ЛицеваяСторона.Параметры.Заполнить(СтруктураДанныхПечати);
	ТабДокумент.Вывести(ЛицеваяСторона);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ОборотнаяСторона=МакетТТНПриложение4.ПолучитьОбласть("ГоризонтальнаяОборотнаяСторона|ВертикальнаяОбласть");
	ОборотнаяСторона.Параметры.Заполнить(СтруктураДанныхПечати);
	ТабДокумент.Вывести(ОборотнаяСторона);
	Возврат ТабДокумент;
КонецФункции

&НаСервере
Функция Ведомость()
	СтруктураДанныхПечати = Новый Структура();
	Для Каждого Реквизит Из Элементы Цикл
		Если Найти(Реквизит.Имя, "Пункт") > 0.00 Тогда
			Если Не ТипЗнч(Реквизит)=Тип("ПолеФормы") Тогда Продолжить; КонецЕсли;
			СтруктураДанныхПечати.Вставить(Реквизит.Имя, ЭтаФорма[Реквизит.ПутьКДанным]);
		КонецЕсли;
	КонецЦикла;
	ТабДокумент=Новый ТабличныйДокумент();
	ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
	МакетТТНПриложение4=Обработки.ПечатьТТН.ПолучитьМакет("Ведомость");
	ЛицеваяСторона=МакетТТНПриложение4.ПолучитьОбласть("ГоризонтальнаяОбласть|ВертикальнаяОбласть");
	ЛицеваяСторона.Параметры.Заполнить(СтруктураДанныхПечати);
	ТабДокумент.Вывести(ЛицеваяСторона);
	Возврат ТабДокумент;	
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Документ) Тогда
		ПоказатьПредупреждение(,"Не выбран документ!");
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы=Новый Структура;		
	ПараметрыФормы.Вставить("КоличествоЭкземпляров", 1);
	ПараметрыФормы.Вставить("НаПринтер", Ложь);
	ПараметрыФормы.Вставить("ПараметрыПечатнойФормы", Новый Структура);
	
	Если Элементы.Страницы.ТекущаяСтраница=Элементы.Страница1_Т Тогда
		Объект.МаркаАвтомобиля=Пункт11_1;
		Объект.ГосНомерАвтомобиля=Пункт11_2;
		Объект.Водитель=Пункт10_4;
		Объект.ПунктРазгрузки=Пункт7_1;
		Объект.ПунктПогрузки=Пункт6_1;
		
		ТабДокумент=ПечатьТТН();
		ПараметрыФормы.Вставить("ОбъектПечати", "Товарно-транспортная накладная");
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница=Элементы.СтраницаТранспортнаяНакладная Тогда
		ТабДокумент=ПечатьТТНПриложение4();
		ПараметрыФормы.Вставить("ОбъектПечати", "Транспортная накладная");
		Пункт0_1=Пункт0_1+1;
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница=Элементы.СтраницаСопроводительнаяВедомость Тогда
		ТабДокумент=Ведомость();
		ПараметрыФормы.Вставить("ОбъектПечати", "Сопроводительная ведомость");
		Пункт0_0=Пункт0_0+1;
	КонецЕсли;	
	
	ПараметрыФормы.Вставить("ПечатныйДокумент", ТабДокумент);
	ОткрытьФорму("Справочник.ПечатныеФормы.Форма.ФормаПечати", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(Объект.Документ) Тогда
		ЗаполнитьДанныеПечатиТТНПриложение4();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Документ=Параметры.СтруктураПараметров.СсылкаНаОбъект;
	Объект.ПунктРазгрузки=Параметры.СтруктураПараметров.СсылкаНаОбъект.АдресДоставки;
	Объект.СтруктураПараметров=Параметры.СтруктураПараметров;
КонецПроцедуры

&НаКлиенте
Процедура ДокументПриИзменении(Элемент)
	ОчиститьДанныеПечатиТТНПриложение4();
	Если ЗначениеЗаполнено(Объект.Документ) Тогда
		ЗаполнитьДанныеПечатиТТНПриложение4();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Пункт3_1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Обработка.ПечатьТТН.Форма.ФормаВыборГруппыТоваров",,,,,,Новый ОписаниеОповещения("ОбработчикОповещения_ВыборГруппыТоваров", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
