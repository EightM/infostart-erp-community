&НаКлиенте
Процедура ОбработчикОповешения_ОтветНаВопрос(Параметр1, Параметр2) Экспорт
	Если Параметр1=КодВозвратаДиалога.Да Тогда
		СохранитьНастройки();
	КонецЕсли;
	ЭтаФорма.Закрыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции общего назначения

&НаСервере
Процедура ПролучитьДанные(Счет)
	ПрограммаКБ=РегистрыСведений.НастройкиОбменаСКлиентомБанка.СоздатьМенеджерЗаписи();
	ПрограммаКБ.БанковскийСчет=Счет;
	ПрограммаКБ.Организация=Объект.Организация;
	ПрограммаКБ.Прочитать();
	   
	Настр_БанковскийСчет=Счет;
	
	Для Каждого СтрокаКоллекции Из Объект.НастройкаЗаполнения Цикл
		ЗаполнитьЗначенияСвойств(Настр_ТаблицаНастроекПриЗагрузке.Добавить(), СтрокаКоллекции);
	КонецЦикла;	
	//*** Настр_ТаблицаНастроекПриЗагрузке=Объект.НастройкаЗаполнения.Выгрузить();
	
	Настр_Группа=Объект.ГруппаДляНовыхКонтрагентов;
	
	Если ПрограммаКБ.Выбран() Тогда
		Настр_Программа=ПрограммаКБ.Программа;
		Настр_Кодировка=ПрограммаКБ.Кодировка;
		Настр_ФайлВыгрузки=ПрограммаКБ.ФайлВыгрузки;
		Настр_ФайлЗагрузки=ПрограммаКБ.ФайлЗагрузки;
		Таб=ЗначениеИзСтрокиВнутр(ПрограммаКБ.ВидыВыгружаемыхПлатДокументов);
	Иначе
		Настр_ФайлВыгрузки=КаталогПрограммы()+"1c_to_kl.txt";
		Настр_ФайлЗагрузки=КаталогПрограммы()+"kl_to_1c.txt";
	КонецЕсли;
	
	Если Таб=неопределено ИЛИ Таб.Количество()=0 Тогда
		Настр_ТаблицаДокументов.Очистить();
		Док=Настр_ТаблицаДокументов.Добавить();
		Док.Пометка=Истина;
		Док.Документ="Платежное поручение";
		Док=Настр_ТаблицаДокументов.Добавить();
		Док.Документ="Платежное требование";	
	Иначе
		//Настр_ТаблицаДокументов=Таб.Скопировать();
		Для Каждого СтрокаКоллекции Из Таб Цикл
			ЗаполнитьЗначенияСвойств(Настр_ТаблицаДокументов.Добавить(), СтрокаКоллекции);
		КонецЦикла;
	КонецЕсли;

	Настр_Дос=Настр_Кодировка;	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	ИмяОбработки=РеквизитФормыВЗначение("Объект").Метаданные().Имя;
	ХранилищеНастроекДанныхФорм.Сохранить("НастройкаЗаполнения", "НастройкаЗаполнения", Объект.НастройкаЗаполнения.Выгрузить());
	ХранилищеОбщихНастроек.Сохранить(ИмяОбработки + "КаталогКонтрагентов","дпКаталогКонтрагентов",Объект.ГруппаДляНовыхКонтрагентов);
	ХранилищеОбщихНастроек.Сохранить(ИмяОбработки + "Организация","дпОрганизация",Объект.Организация);
	ХранилищеОбщихНастроек.Сохранить(ИмяОбработки + "БанковскийСчет","дпБанковскийСчет",Объект.БанковскийСчет);
	ХранилищеОбщихНастроек.Сохранить(ИмяОбработки + "РежимПоУмолчанию","дпРежимПоУмолчанию",Элементы.Страницы.ТекущаяСтраница.Заголовок);
	Если НЕ Объект.НастройкаЗаполненияОтНазначенияПлатежа.Количество()=0 Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("НастройкаЗаполненияОтНазначенияПлатежа", "НастройкаЗаполненияОтНазначенияПлатежа", Объект.НастройкаЗаполненияОтНазначенияПлатежа.Выгрузить());
	КонецЕсли;
	
	//СохранитьЗначение(ИмяОбработки + "КаталогКонтрагентов", Объект.ГруппаДляНовыхКонтрагентов);
	//СохранитьЗначение(ИмяОбработки + "Организация", Объект.Организация);
	//СохранитьЗначение(ИмяОбработки + "БанковскийСчет", Объект.БанковскийСчет);
	//СохранитьЗначение(ИмяОбработки + "РежимПоУмолчанию", Элементы.Страницы.ТекущаяСтраница.Заголовок);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий элементов формы

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	ПролучитьДанные(Настр_БанковскийСчет);
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОткрытьФайлДляПросмотра(Элемент,Настр_Дос,"Файл загрузки");
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ВыборФайлаДляЗагрузки(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ФайлВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОткрытьФайлДляПросмотра(Элемент,Настр_Дос,"Файл выгрузки");
КонецПроцедуры

&НаКлиенте
Процедура ФайлВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ВыборФайлаДляВыгрузки(Элемент);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Организация=Параметры.Организация;
	Объект.БанковскийСчет=Параметры.СчетОрганизации;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.Программа.СписокВыбора.Добавить("DiasoftCLIENT 4x4 for Windows Диасофт");
	Элементы.Программа.СписокВыбора.Добавить("Клиент-Банк РФК");
	Элементы.Программа.СписокВыбора.Добавить("LanVisit DOS 4.90 Ланит");
	Элементы.Программа.СписокВыбора.Добавить("ДБО BS-Client v.3 BSS");
	Элементы.Программа.СписокВыбора.Добавить("Система клиент-банк TIVAL");
	Элементы.Программа.СписокВыбора.Добавить("Клиент банка InterBank v.5.1 R-Style Software Lab");
	Элементы.Программа.СписокВыбора.Добавить("""Электронный клиент"" АКБ Автобанк");
	Элементы.Программа.СписокВыбора.Добавить("""Клиент-ТЕЛЕБАНК"" АОЗТ Степ Ап");
	Элементы.Программа.СписокВыбора.Добавить("ИНИСТ Банк-Клиент ЗАО ИНИСТ");
	Элементы.Программа.СписокВыбора.Добавить("Клиент-банк МИБ");
	Элементы.Программа.СписокВыбора.Добавить("Система Клиент-Банк ""BClient""");
	Элементы.Программа.СписокВыбора.Добавить("Система электронных расчетов QuickPay ЗАО АО Кворум");
	Элементы.Программа.СписокВыбора.Добавить("Комплекс обмена платежными документами Курьер. АОЗТ АстраСофт");
	Элементы.Программа.СписокВыбора.Добавить("WinClient фирмы МПИ-Банк");
	Элементы.Программа.СписокВыбора.Добавить("Система ""Клиент-Банк Плюс"" ОАО ""Уралвнешторгбанка""");
	Элементы.Программа.СписокВыбора.Добавить("Система ""MailBank"" фирмы ""Системные технологии"" Минск");
	Элементы.Программа.СписокВыбора.Добавить("On-Soft Клиент-Банк КБ ""ЛОКО-Банк""");
	Элементы.Программа.СписокВыбора.Добавить("АРМ ""Клиент"" АС ""Клиент-Сбербанк"" Сбербанка России");
	Элементы.Программа.СписокВыбора.Добавить("Система  ""iBank 2"" ООО ""БИФИТ""");
	Элементы.Программа.СписокВыбора.Добавить("""Yugo-Vostok Online"" ОАО БАНК ""ЮГО-ВОСТОК""");
	Элементы.Программа.СписокВыбора.Добавить("Банк-клиент АКБ ""Лефко-Банк""");
	Элементы.Программа.СписокВыбора.Добавить("Система Банк-Клиент АКБ ""София""");
	Элементы.Программа.СписокВыбора.Добавить("Клиент-банк ""BARS"" фирмы ""Оникс Капитал""");
	Элементы.Программа.СписокВыбора.Добавить("Система ""Клиент-Банк"" АРМ ""Украина-Клиент""");
	Элементы.Программа.СписокВыбора.Добавить("""АРМ удаленного клиента СПЭД""  ВКФ АО ""Банк ТуранАлем""");
	Элементы.Программа.СписокВыбора.Добавить("""Электронный Офис"" фирмы ""ИМПЭКСБАНК""");
	Элементы.Программа.СписокВыбора.Добавить("Система ""PSB On-Line"" ОАО ""ПРОМСВЯЗЬБАНК""");

	ПролучитьДанные(Объект.БанковскийСчет);
КонецПроцедуры

&НаСервере
Процедура ОКНаСервере()
	Настр_Кодировка = Настр_Дос;
	
	ПрограммаКБ=РегистрыСведений.НастройкиОбменаСКлиентомБанка.СоздатьМенеджерЗаписи();
	ПрограммаКБ.Организация = Объект.Организация;
	ПрограммаКБ.БанковскийСчет = Настр_БанковскийСчет;
	ПрограммаКБ.Программа = Настр_Программа;
	ПрограммаКБ.Кодировка = Настр_Кодировка;
	ПрограммаКБ.ФайлВыгрузки = Настр_ФайлВыгрузки;
	ПрограммаКБ.ФайлЗагрузки = Настр_ФайлЗагрузки;
	ПрограммаКБ.ВидыВыгружаемыхПлатДокументов = ЗначениеВСтрокуВнутр(Настр_ТаблицаДокументов);
	ПрограммаКБ.Записать(Истина);
	
	Объект.БанковскийСчет = Настр_БанковскийСчет;
	Объект.ФайлВыгрузки = Настр_ФайлВыгрузки;
	Объект.ФайлЗагрузки = Настр_ФайлЗагрузки;
	Объект.Кодировка = Настр_Кодировка;
	Объект.Программа = Настр_Программа;
	
	ТаблицаДокументов=Объект.ТаблицаДокументов.Выгрузить();
	Для каждого СтрокаДокумента из Настр_ТаблицаДокументов Цикл
		НайденаяСтрока=ТаблицаДокументов.Найти(СтрокаДокумента.Документ,"Название");
		Если НайденаяСтрока=Неопределено Тогда Продолжить; КонецЕсли;
		НайденаяСтрока.Пометка = СтрокаДокумента.Пометка; 
	КонецЦикла;
	Объект.ТаблицаДокументов.Загрузить(ТаблицаДокументов);
	
	Объект.НастройкаЗаполнения.Загрузить(Настр_ТаблицаНастроекПриЗагрузке.Выгрузить());
	Объект.ГруппаДляНовыхКонтрагентов=Настр_Группа;
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Если Не ЗначениеЗаполнено(Настр_БанковскийСчет) Тогда
		ПоказатьПредупреждение(,"Не выбран банковский счет!");
		Возврат;
	КонецЕсли;
	
	Если Настр_Программа = "" Тогда
		ПоказатьПредупреждение(,"Не выбрана программа Клиента банка");
		Возврат;
	КонецЕсли;
	
	ОКНаСервере();
	
	ОписаниеОповещения=Новый ОписаниеОповещения("ОбработчикОповешения_ОтветНаВопрос", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Сохранить настройки?", РежимДиалогаВопрос.ДаНет,,,"Внимание!");
КонецПроцедуры

