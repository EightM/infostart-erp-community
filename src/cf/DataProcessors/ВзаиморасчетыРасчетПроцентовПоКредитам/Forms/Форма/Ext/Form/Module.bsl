&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="ОК" Тогда
		ВладелецФормы.Объект.РасшифровкаПлатежа.Очистить();
		//////Для Каждого СтрокаДок ИЗ Объект.ТаблицаДокумента Цикл
		//////	Если СтрокаДок.ТОП.Пустая() Тогда
		//////		СтрокаДок.ТОП=Объект.ТОП;
		//////	КонецЕсли;
		//////	Если СтрокаДок.ТОППревышения.Пустая() Тогда
		//////		СтрокаДок.ТОППревышения=Объект.ТОППревышения;
		//////	КонецЕсли;	
		//////КонецЦикла;
		//ВалютаБух=МодульВалютногоУчета.ПолучитьВалюту("Бух");

		////тзПереноса=Объект.ТаблицаДокумента.Выгрузить();
		////тзПереноса.Свернуть("КонтрагентСвертки,ДоговорСвертки,ТОП,ТОППревышения","СуммаПроцентов,СуммаПревышения,СуммаПроцентовПоСтавкеРефинансирования");
		Для Каждого СтрокаТаблицы Из Объект.ТаблицаДокумента Цикл
			Если СтрокаТаблицы.ТОП.Пустая() Тогда СтрокаТаблицы.ТОП=Объект.ТОП; КонецЕсли;
			Если СтрокаТаблицы.ТОППревышения.Пустая() Тогда СтрокаТаблицы.ТОППревышения=Объект.ТОППревышения; КонецЕсли;	

			НоваяСтрока=ВладелецФормы.Объект.РасшифровкаПлатежа.Добавить();
			НоваяСтрока.Контрагент=СтрокаТаблицы.КонтрагентСвертки;
			НоваяСтрока.ДоговорКонтрагента=СтрокаТаблицы.ДоговорСвертки;
			НоваяСтрока.СуммаПлатежа=СтрокаТаблицы.СуммаПроцентовПоСтавкеРефинансирования;
			//Если НЕ НоваяСтрока.ДоговорКонтрагента.ВалютаВзаиморасчетов=ВалютаБух Тогда
			//	УправлениеДенежнымиСредствами.РассчитатьСуммуПлатежаВал(ВладелецФормы.Объект, НоваяСтрока);
			//КонецЕсли; 
			НоваяСтрока.ТОП=СтрокаТаблицы.ТОП;
			НоваяСтрока.Направление=ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход."+?(Объект.ЗаймыПолученные, "Расход", "Приход"));
			Если СтрокаТаблицы.СуммаПревышения<>0 Тогда
				НоваяСтрока=ВладелецФормы.Объект.РасшифровкаПлатежа.Добавить();
				НоваяСтрока.Контрагент=СтрокаТаблицы.КонтрагентСвертки;
				НоваяСтрока.ДоговорКонтрагента=СтрокаТаблицы.ДоговорСвертки;
				НоваяСтрока.СуммаПлатежа=СтрокаТаблицы.СуммаПревышения;
				//Если НЕ НоваяСтрока.ДоговорКонтрагента.ВалютаВзаиморасчетов=ВалютаБух Тогда
				//	УправлениеДенежнымиСредствами.РассчитатьСуммуПлатежаВал(ОбъектВызова, НоваяСтрока);
				//КонецЕсли;
				НоваяСтрока.ТОП=СтрокаТаблицы.ТОППревышения;
				НоваяСтрока.Направление=ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход."+?(Объект.ЗаймыПолученные, "Расход", "Приход"));
			КонецЕсли;	
		КонецЦикла;

		//ВладелецФормы.Объект.РасшифровкаПлатежа.Очистить();
		//Для Каждого СтрокаКоллекции Из Объект.ТаблицаДокумента Цикл
		//	НоваяСтрока=ВладелецФормы.Объект.РасшифровкаПлатежа.Добавить();
		//	НоваяСтрока.Контрагент=СтрокаКоллекции.КонтрагентСвертки;
		//	НоваяСтрока.ДоговорКонтрагента=СтрокаКоллекции.ДоговорСвертки;
		//	НоваяСтрока.СуммаПлатежа=СтрокаКоллекции.СуммаПроцентов;
		//	НоваяСтрока.СуммаВал=СтрокаКоллекции.СуммаПроцентов;
		//	НоваяСтрока.Курс=1;
		//	НоваяСтрока.Кратность=1;
		//	НоваяСтрока.ТОП=?(СтрокаКоллекции.ТОП.Пустая(), Объект.ТОП, СтрокаКоллекции.ТОП);
		//	//НоваяСтрока.Направление=ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход."+?(Объект.ПениПоДолгамКонтрагентов, "Приход", "Расход"));
		//КонецЦикла;
		
		
		ЗаписатьДанныеПлагина();
		ВладелецФормы.Обновить();
		ЭтаФорма.Закрыть();

	ИначеЕсли Команда.Имя="Рассчитать" Тогда
		Рассчитать();

	ИначеЕсли Команда.Имя="Печать" Тогда
		ПараметрыФормы=Новый Структура;
		ПараметрыФормы.Вставить("ПечатныйДокумент", Печать());
		ПараметрыФормы.Вставить("ПараметрыПечатнойФормы", Новый Структура);
		ПараметрыФормы.Вставить("ОбъектПечати", "Расчет процентов по кредитам");
		ОткрытьФорму("Справочник.ПечатныеФормы.Форма.ФормаПечати", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеПлагина()
	СтруктураДанных=Новый Структура;
	СтруктураДанных.Вставить("Организация", Объект.Организация);
	СтруктураДанных.Вставить("Контрагент", Объект.Контрагент);
	СтруктураДанных.Вставить("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	СтруктураДанных.Вставить("ДатаНачалаРасчета", Объект.ДатаНачалаРасчета);
	СтруктураДанных.Вставить("ДатаКонцаРасчета", Объект.ДатаКонцаРасчета);
	СтруктураДанных.Вставить("ТОП", Объект.ТОП);
	СтруктураДанных.Вставить("ЗаймыПолученные", Объект.ЗаймыПолученные);
	СтруктураДанных.Вставить("ТОППревышения", Объект.ТОППревышения);
	СтруктураДанных.Вставить("СтавкаЦБНаДеньРасчета", Объект.СтавкаЦБНаДеньРасчета);
	СтруктураДанных.Вставить("ВидОперации", Объект.ВидОперации);
	СтруктураДанных.Вставить("ТаблицаДокумента", Объект.ТаблицаДокумента.Выгрузить());
	СтруктураДанных.Вставить("СписокСчетов", Объект.СписокСчетов.Выгрузить());

	МенеджерЗаписи=РегистрыСведений.ДанныеПлагиновОбъектов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Плагин=Плагин;
	МенеджерЗаписи.ОбъектID=XMLСтрока(Ссылка);
	МенеджерЗаписи.Данные=Новый ХранилищеЗначения(СтруктураДанных, Новый СжатиеДанных(9));
	МенеджерЗаписи.Записать();
КонецПроцедуры

&НаСервере
Процедура ВосстановитьДанныеПлагина()
	МенеджерЗаписи=РегистрыСведений.ДанныеПлагиновОбъектов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Плагин=Плагин;
	МенеджерЗаписи.ОбъектID=XMLСтрока(Ссылка);
	МенеджерЗаписи.Прочитать();
	Если Не МенеджерЗаписи.Выбран() Тогда Возврат; КонецЕсли;

	СтруктураДанных=МенеджерЗаписи.Данные.Получить();
	Если НЕ ТипЗнч(СтруктураДанных)=Тип("Структура") Тогда Возврат; КонецЕсли;

	ЗаполнитьЗначенияСвойств(Объект, СтруктураДанных,,"ТаблицаДокумента,СписокСчетов");

	Для каждого СтрокаКоллекции Из СтруктураДанных.ТаблицаДокумента Цикл
		ЗаполнитьЗначенияСвойств(Объект.ТаблицаДокумента.Добавить(), СтрокаКоллекции);
	КонецЦикла;
	
	Для каждого СтрокаКоллекции Из СтруктураДанных.СписокСчетов Цикл
		ЗаполнитьЗначенияСвойств(Объект.СписокСчетов.Добавить(), СтрокаКоллекции);
	КонецЦикла;	 	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.СписокСчетов.Видимость=Объект.ВидОперации="БУ";
	ЭтаФорма.Заголовок="Расчет процентов по кредитам: по платежному календарю";

	Если Объект.ВидОперации="БУ" Тогда
		ЭтаФорма.Заголовок="Расчет процентов по кредитам: по бухгалтерским счетам";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеБУ()
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачалаРасчета", НачалоДня(Объект.ДатаНачалаРасчета));
	Запрос.УстановитьПараметр("ДатаКонцаРасчета", НачалоДня(Объект.ДатаКонцаРасчета));
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.Период КАК Период,
	|	ИсточникДанных.Размер КАК Ставка
	|ИЗ
	|	РегистрСведений.СтавкаРефинансированияЦБ КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Период МЕЖДУ &ДатаНачалаРасчета И &ДатаКонцаРасчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|";
	ТаблицаСтавкиЦБ=Запрос.Выполнить().Выгрузить();

	стрУсловие="";
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		стрУсловие=стрУсловие+" И ДоговорКонтрагента.Владелец =(&Контрагент)";
	 	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		стрУсловие=стрУсловие+" И ДоговорКонтрагента =(&ДоговорКонтрагента)";
		Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	КонецЕсли;	
	
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ИсточникДанных.Период КАК Период,
	|	ИсточникДанных.Ставка КАК Процент
	|ИЗ
	|	РегистрСведений.ПроцентыПоЗаймам КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Период < &ДатаКонцаРасчета"+стрУсловие+"
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|";
	ТаблицаПроцентов=Запрос.Выполнить().Выгрузить();

	Запрос.Текст="
	|ВЫБРАТЬ
	|	ИсточникДанных.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ИсточникДанных.Период КАК Период,
	|	ИсточникДанных.Коэффициент КАК Процент
	|ИЗ
	|	РегистрСведений.СтавкиРефинансированияКФ КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Период < &ДатаКонцаРасчета"+стрУсловие+"
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|";
	ТаблицаСтавкиРефинансированияКФ=Запрос.Выполнить().Выгрузить();

	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДатаНачала", Объект.ДатаНачалаРасчета);

	Если Объект.ДатаКонцаРасчета <> '00010101000000' Тогда
		Запрос.УстановитьПараметр("ДатаКонца", КонецДня(Объект.ДатаКонцаРасчета));
		Запрос.УстановитьПараметр("ТекущаяДата", КонецДня(Объект.ДатаКонцаРасчета));
	Иначе
		Запрос.УстановитьПараметр("ДатаКонца", Объект.ДатаКонцаРасчета);
		Запрос.УстановитьПараметр("ТекущаяДата", КонецДня(ТекущаяДата()));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Счет", Объект.СписокСчетов.Выгрузить(, "Счет").ВыгрузитьКолонку("Счет"));

	стрУсловие="
	|Организация =(&Организация) И 
	|Субконто2.РасчетПроцентовПоКредитамЗаймам
	|";
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		стрУсловие=стрУсловие+" И Субконто1 =(&Контрагент)";
	 	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		стрУсловие=стрУсловие+" И Субконто2 =(&ДоговорКонтрагента)";
		Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	КонецЕсли;	
	Запрос.Текст="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|";

	Если ЗаймыПолученные=1 Тогда //Ожидаемый расход
		Запрос.Текст=Запрос.Текст+"
		|ВЫБОР
		|	КОГДА ИсточникДанных.СуммаОборотДт <> 0 ТОГДА
		|		ИсточникДанных.Период
		|ИНАЧЕ Null
		|КОНЕЦ КАК ДатаОплаты,
		|ИсточникДанных.СуммаОборотДт Как СуммаОплаты,
		|-ИсточникДанных.СуммаНачальныйОстаток Как СуммаКОплате,
		|-ИсточникДанных.СуммаКонечныйОстаток Как НеоплаченныйОстаток,
		|";
	Иначе
		Запрос.Текст=Запрос.Текст+"
		|ВЫБОР
		|	КОГДА ИсточникДанных.СуммаОборотКт <> 0 ТОГДА
		|		ИсточникДанных.Период
		|ИНАЧЕ Null
		|КОНЕЦ КАК ДатаОплаты,
		|ИсточникДанных.СуммаОборотКт КАК СуммаОплаты,
		|ИсточникДанных.СуммаНачальныйОстаток Как СуммаКОплате,
		|ИсточникДанных.СуммаКонечныйОстаток Как НеоплаченныйОстаток,
		|";
	КонецЕсли;
	
	Запрос.Текст=Запрос.Текст+"
	|	ИсточникДанных.Период КАК ДатаДвижения,
	|	ИсточникДанных.Субконто1 КАК Контрагент,
	|	ИсточникДанных.Субконто2 КАК Договор
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, День, , Счет В (&Счет), , "+стрУсловие+") КАК ИсточникДанных
	|УПОРЯДОЧИТЬ ПО
	|	Субконто1,
	|	Субконто2,
	|	ДатаДвижения
	|АВТОУПОРЯДОЧИВАНИЕ
    |";
	тзИсходная=Запрос.Выполнить().Выгрузить();
	
	тзИсходная.Колонки.Добавить("ЦБ");
	тзИсходная.ЗаполнитьЗначения(Ложь,"ЦБ");
	тзОбработки=тзИсходная.Скопировать();
	тзОбработки.Свернуть("Контрагент,Договор");
	Если НЕ Объект.СтавкаЦБНаДеньРасчета Тогда
		Для Каждого СтрокаСтавки ИЗ ТаблицаСтавкиЦБ Цикл
			Для Каждого СтрокаСотрудник ИЗ тзОбработки Цикл
				НоваяСтрока=тзИсходная.Добавить();
				НоваяСтрока.ДатаДвижения=СтрокаСтавки.Период-86400;
				НоваяСтрока.Контрагент=СтрокаСотрудник.Контрагент;
				НоваяСтрока.Договор=СтрокаСотрудник.Договор;
				НоваяСтрока.НеоплаченныйОстаток=0;
				НоваяСтрока.СуммаОплаты=0;
				НоваяСтрока.СуммаКОплате=0;
				НоваяСтрока.ЦБ=Истина;
			КонецЦикла;	
		КонецЦикла;
	КонецЕсли;

	Если НЕ ТаблицаПроцентов.Количество()=0 Тогда
		Для Каждого СтрокаСотрудник ИЗ тзОбработки Цикл
			СтруктураОтбора=Новый Структура();
			СтруктураОтбора.Вставить("ДоговорКонтрагента",СтрокаСотрудник.Договор);
			МассивСтрок=ТаблицаПроцентов.НайтиСтроки(СтруктураОтбора);
			Для Каждого СтрокаМ ИЗ МассивСтрок Цикл
				Если НачалоДня(СтрокаМ.Период)<=НачалоДня(Объект.ДатаНачалаРасчета) Тогда Продолжить; КонецЕсли;
				НоваяСтрока=тзИсходная.Добавить();
				НоваяСтрока.ДатаДвижения=СтрокаМ.Период-86400;
				НоваяСтрока.Контрагент=СтрокаМ.ДоговорКонтрагента.Владелец;
				НоваяСтрока.Договор=СтрокаМ.ДоговорКонтрагента;
				НоваяСтрока.НеоплаченныйОстаток=0;
				НоваяСтрока.СуммаОплаты=0;
				НоваяСтрока.СуммаКОплате=0;
				НоваяСтрока.ЦБ=Истина;
			КонецЦикла;	
		КонецЦикла;	
	Конецесли;	
	
	Если НЕ ТаблицаСтавкиРефинансированияКФ.Количество()=0 Тогда
		Для Каждого СтрокаСотрудник ИЗ тзОбработки Цикл
			СтруктураОтбора=Новый Структура();
			СтруктураОтбора.Вставить("ДоговорКонтрагента",СтрокаСотрудник.Договор);
			МассивСтрок=ТаблицаСтавкиРефинансированияКФ.НайтиСтроки(СтруктураОтбора);
			Для Каждого СтрокаМ ИЗ МассивСтрок Цикл
				Если НачалоДня(СтрокаМ.Период)<=НачалоДня(Объект.ДатаНачалаРасчета) Тогда Продолжить; КонецЕсли;
				НоваяСтрока=тзИсходная.Добавить();
				НоваяСтрока.ДатаДвижения=СтрокаМ.Период;
				НоваяСтрока.Контрагент=СтрокаМ.ДоговорКонтрагента.Владелец;
				НоваяСтрока.Договор=СтрокаМ.ДоговорКонтрагента;
				НоваяСтрока.НеоплаченныйОстаток=0;
				НоваяСтрока.СуммаОплаты=0;
				НоваяСтрока.СуммаКОплате=0;
				НоваяСтрока.ЦБ=Истина;
			КонецЦикла;	
		КонецЦикла;	
	Конецесли;	
	
	тзИсходная.Сортировать("Контрагент Возр, Договор Возр, ДатаДвижения Возр");
	Возврат тзИсходная;
КонецФункции

&НаСервере
Процедура РассчитатьСуммуПроцентов(СтрокаТаблицы)
	СуммаБезНДС=СтрокаТаблицы.СуммаКредита;
	ДатаРасчетаСтавки=СтрокаТаблицы.ДатаКонца;
	Если Объект.фСтавкаЦБНаДеньРасчета Тогда
		ДатаРасчетаСтавки=Объект.ДатаКонцаРасчета;
	КонецЕсли;
	тзСтавок=РегистрыСведений.СтавкаРефинансированияЦБ.СрезПоследних(ДатаРасчетаСтавки);
	
	СтруктураОтбора=Новый Структура("ДоговорКонтрагента",СтрокаТаблицы.ДоговорСвертки);
	тзПроцентов=РегистрыСведений.ПроцентыПоЗаймам.СрезПоследних(СтрокаТаблицы.ДатаКонца,СтруктураОтбора);

	тзКоэффициентов=РегистрыСведений.СтавкиРефинансированияКФ.СрезПоследних(СтрокаТаблицы.ДатаКонца,СтруктураОтбора);
	Если тзСтавок.Количество()=0 Тогда
		Сообщить("Не задана ставка рефинанстрования на дату "+ДатаРасчетаСтавки+".");
		РазмерСтавкаРефинансирования=0;
	Иначе	
		РазмерСтавкаРефинансирования=тзСтавок[0].Размер;
	КонецЕсли;
	
	Если тзКоэффициентов.Количество()=0 Тогда
		КоэфСтавки=1;
	Иначе	
		КоэфСтавки=тзКоэффициентов[0].Коэффициент;
	КонецЕсли;
	
	Если КоэфСтавки<>0 Тогда
		РазмерСтавкаРефинансирования=РазмерСтавкаРефинансирования*КоэфСтавки;
	ИначеЕсли СтрокаТаблицы.ДоговорСвертки._УдвоеннаяСтавкаРефинансирования Тогда
		РазмерСтавкаРефинансирования=РазмерСтавкаРефинансирования*2;
	КонецЕсли;	

	Если тзПроцентов.Количество()=0 Тогда
		ПроцентЗайма=РазмерСтавкаРефинансирования;
	Иначе	
		ПроцентЗайма=тзПроцентов[0].Ставка;
	КонецЕсли;
	
	Если ПроцентЗайма=0 Тогда
		Сообщить("Не задан процент по кредиту "+СтрокаТаблицы.ДатаКонца+".");
	КонецЕсли; 

	КоличествоДнейВГоду=СтрокаТаблицы.ДоговорСвертки.СреднееКоличествоДнейВГоду;
	Если КоличествоДнейВГоду=0 Тогда
		КоличествоДнейВГоду=УправлениеКонфигурациейСервер.ПолучитьРазностьДат(НачалоГода(Объект.ДатаКонцаРасчета),КонецГода(Объект.ДатаКонцаРасчета)); 
	КонецЕсли;	
	
	СтрокаТаблицы.СуммаПроцентов=СуммаБезНДС*(ПроцентЗайма*СтрокаТаблицы.ДнейКредита)/100/КоличествоДнейВГоду;
	СтрокаТаблицы.СтавкаРефинансирования=РазмерСтавкаРефинансирования;
	Если ПроцентЗайма>РазмерСтавкаРефинансирования Тогда
		СуммаПоСтавкеРефинансирования=СуммаБезНДС*(РазмерСтавкаРефинансирования*СтрокаТаблицы.ДнейКредита)/100/КоличествоДнейВГоду;	
		СтрокаТаблицы.СуммаПревышения=СтрокаТаблицы.СуммаПроцентов-СуммаПоСтавкеРефинансирования;
		СтрокаТаблицы.СуммаПроцентовПоСтавкеРефинансирования=СуммаПоСтавкеРефинансирования;
	Иначе
		СтрокаТаблицы.СуммаПроцентовПоСтавкеРефинансирования=СтрокаТаблицы.СуммаПроцентов;
	КонецЕсли;	
	СтрокаТаблицы.ПроцентКредита=ПроцентЗайма;
КонецПроцедуры

&НаСервере
Процедура Рассчитать()
	Объект.ТаблицаДокумента.Очистить();
	тзДанные=ПолучитьДанныеБУ();
	ТаблицаОплат=тзДанные.СкопироватьКолонки();
	Для КАждого СтрокатзДанные ИЗ тзДанные Цикл
		Если СтрокатзДанные.СуммаОплаты=0 И СтрокатзДанные.ЦБ<>Истина Тогда Продолжить; КонецЕсли;
		НоваяСтрока=ТаблицаОплат.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокатзДанные);
	КонецЦикла; 
	ТаблицаОплат.Сортировать("ДатаДвижения ВОЗР");
	
	ОсновнаяТаблица=тзДанные.Скопировать();
	ОсновнаяТаблица.Свернуть("Контрагент,Договор");
	Для Каждого СтрокаТз ИЗ ОсновнаяТаблица Цикл
		СтруктураОтбора=Новый Структура;
		СтруктураОтбора.Вставить("Контрагент", СтрокаТз.Контрагент);
		СтруктураОтбора.Вставить("Договор", СтрокаТз.Договор);
		МассивСтрок=тзДанные.НайтиСтроки(СтруктураОтбора);
		МассивСтрокОплат=ТаблицаОплат.НайтиСтроки(СтруктураОтбора);
		МассивСтрокТЗ=тзДанные.НайтиСтроки(СтруктураОтбора);
		НомерСтроки=0;
		СледующаяДатаНачала=Неопределено;
		текПредыдущаяСтрока=Неопределено;
		Если МассивСтрокТЗ.Количество()=1 Тогда
			НоваяСтрока=Объект.ТаблицаДокумента.Добавить();
			НоваяСтрока.ТОП=Объект.ТОП;
			НоваяСтрока.ТОППревышения=Объект.ТОППревышения;
			ДатаНачалаПросрочки=МассивСтрокТЗ[0].ДатаДвижения; 
			Если МассивСтрокТЗ[0].ДатаОплаты=Null И Объект.ДатаНачалаРасчета<ДатаНачалаПросрочки Тогда 
				ДатаНачалаПросрочки=МассивСтрокТЗ[0].ДатаДвижения+86400; 
			КонецЕсли;
			Если ДатаНачалаПросрочки>Объект.ДатаКонцаРасчета Тогда Продолжить; КонецЕсли;
			НоваяСтрока.ДатаНачала=ДатаНачалаПросрочки;
			НоваяСтрока.ДатаКонца=Объект.ДатаКонцаРасчета;
			НоваяСтрока.СуммаКредита=МассивСтрокТЗ[0].СуммаКОплате;
			НоваяСтрока.Контрагент=МассивСтрокТЗ[0].Контрагент;
			НоваяСтрока.Договор=МассивСтрокТЗ[0].Договор;
			НоваяСтрока.КонтрагентСвертки=МассивСтрокТЗ[0].Контрагент;
			НоваяСтрока.ДоговорСвертки=МассивСтрокТЗ[0].Договор;
			НоваяСтрока.ДнейКредита=УправлениеКонфигурациейСервер.ПолучитьРазностьДат(НоваяСтрока.ДатаНачала,НоваяСтрока.ДатаКонца);
			НоваяСтрока.НеоплаченныйОстаток=МассивСтрокТЗ[0].НеоплаченныйОстаток;
			РассчитатьСуммуПроцентов(НоваяСтрока);
		Иначе	
			Для Каждого СтрокаТз ИЗ МассивСтрокТЗ Цикл
				Если НомерСтроки=МассивСтрокТЗ.Количество() Тогда // Последняя строка
					Если текПредыдущаяСтрока.НеоплаченныйОстаток<>0 Тогда
						НоваяСтрока=Объект.ТаблицаДокумента.Добавить();
						НоваяСтрока.ТОП=Объект.ТОП;
						НоваяСтрока.ТОППревышения=Объект.ТОППревышения;
						НоваяСтрока.ДатаНачала=СледующаяДатаНачала;
						НоваяСтрока.ДатаКонца=Объект.ДатаКонцаРасчета;
						НоваяСтрока.СуммаКредита=текПредыдущаяСтрока.СуммаКредита;
						НоваяСтрока.Контрагент=текПредыдущаяСтрока.Контрагент;
						НоваяСтрока.Договор=текПредыдущаяСтрока.Договор;
						НоваяСтрока.КонтрагентСвертки=текПредыдущаяСтрока.Контрагент;
						НоваяСтрока.ДоговорСвертки=текПредыдущаяСтрока.Договор;
						НоваяСтрока.ДнейКредита=УправлениеКонфигурациейСервер.ПолучитьРазностьДат(НоваяСтрока.ДатаНачала,НоваяСтрока.ДатаКонца);
						НоваяСтрока.НеоплаченныйОстаток=текПредыдущаяСтрока.НеоплаченныйОстаток;
						РассчитатьСуммуПроцентов(НоваяСтрока);
					КонецЕсли;	
				Иначе	
					НоваяСтрока=Объект.ТаблицаДокумента.Добавить();
					НоваяСтрока.ТОП=Объект.ТОП;
					НоваяСтрока.ТОППревышения=Объект.ТОППревышения;
					ДатаНачалаПросрочки=СтрокаТз.ДатаДвижения; 
					Если МассивСтрокТЗ[НомерСтроки].ДатаОплаты=Null И Объект.ДатаНачалаРасчета<СтрокаТз.ДатаДвижения Тогда 
						ДатаНачалаПросрочки=СтрокаТз.ДатаДвижения+86400; 
					КонецЕсли;
					Если СледующаяДатаНачала<>Неопределено Тогда
						ДатаНачалаПросрочки=СледующаяДатаНачала;
					КонецЕсли;	
					НоваяСтрока.ДатаНачала=ДатаНачалаПросрочки;
					
					Если МассивСтрокТЗ[НомерСтроки].ДатаОплаты=Null ИЛИ МассивСтрокТЗ[НомерСтроки].ДатаОплаты=Неопределено Тогда
						НоваяСтрока.ДатаКонца=МассивСтрокТЗ[НомерСтроки].ДатаДвижения;
					Иначе
						НоваяСтрока.ДатаКонца=МассивСтрокТЗ[НомерСтроки].ДатаОплаты;
						НоваяСтрока.ДатаОплаты=МассивСтрокТЗ[НомерСтроки].ДатаОплаты;
						НоваяСтрока.СуммаОплаты=МассивСтрокТЗ[НомерСтроки].СуммаОплаты;
					КонецЕсли;
					
					Если МассивСтрокТЗ[НомерСтроки].ЦБ И текПредыдущаяСтрока<>Неопределено Тогда
						НоваяСтрока.НеоплаченныйОстаток=текПредыдущаяСтрока.НеоплаченныйОстаток;
						НоваяСтрока.СуммаКредита=текПредыдущаяСтрока.НеоплаченныйОстаток;
					Иначе
						НоваяСтрока.НеоплаченныйОстаток=МассивСтрокТЗ[НомерСтроки].НеоплаченныйОстаток;
						НоваяСтрока.СуммаКредита=МассивСтрокТЗ[НомерСтроки].СуммаКОплате;
					КонецЕсли;	
					
					НоваяСтрока.ДнейКредита=УправлениеКонфигурациейСервер.ПолучитьРазностьДат(НоваяСтрока.ДатаНачала,НоваяСтрока.ДатаКонца);
					НоваяСтрока.Контрагент=СтрокаТз.Контрагент;
					НоваяСтрока.Договор=СтрокаТз.Договор;
					НоваяСтрока.КонтрагентСвертки=СтрокаТз.Контрагент;
					НоваяСтрока.ДоговорСвертки=СтрокаТз.Договор;
					РассчитатьСуммуПроцентов(НоваяСтрока);
					текПредыдущаяСтрока=НоваяСтрока;
					СледующаяДатаНачала=НоваяСтрока.ДатаКонца+86400;
				КонецЕсли;	
				НомерСтроки=НомерСтроки+1;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураОтбора=Новый Структура;
	СтруктураОтбора.Вставить("СуммаПроцентов",0);
	МассивСтрокУдаления=Объект.ТаблицаДокумента.НайтиСтроки(СтруктураОтбора);
	Для Каждого СтрокаМассива ИЗ МассивСтрокУдаления Цикл
		Объект.ТаблицаДокумента.Удалить(СтрокаМассива);
	КонецЦикла;	
	
	//****
	тзПереноса=Объект.ТаблицаДокумента.Выгрузить();
	тзПереноса.Свернуть("КонтрагентСвертки,ДоговорСвертки,ТОП,ТОППревышения","СуммаПроцентов,СуммаПревышения,СуммаПроцентовПоСтавкеРефинансирования");
	Объект.ТаблицаДокумента.Очистить();
	Для Каждого СтрокаКоллекции Из тзПереноса Цикл
		ЗаполнитьЗначенияСвойств(Объект.ТаблицаДокумента.Добавить(), СтрокаКоллекции);
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Функция Печать()
	Макет=Обработки.ВзаиморасчетыРасчетПроцентовПоКредитам.ПолучитьМакет("РасчетПроцентовПоКредиту");

	Секция=Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.Заголовок="Расчет процентов за период с "+Формат(Объект.ДатаНачалаРасчета, "ДЛФ=DD")+" по "+Формат(Объект.ДатаКонцаРасчета, "ДЛФ=DD");

	ТабДок=Новый ТабличныйДокумент;
	ТабДок.Вывести(Секция);

	Для Каждого ТекСтрокаТаблицаДокумента Из Объект.ТаблицаДокумента Цикл
		Секция=Макет.ПолучитьОбласть("Строка");
		Секция.Параметры.Заполнить(ТекСтрокаТаблицаДокумента);
		ТабДок.Вывести(Секция);
	КонецЦикла;
	Секция=Макет.ПолучитьОбласть("Подвал");
	Секция.Параметры.Сумма=Формат(Объект.ТаблицаДокумента.Итог("СуммаПроцентов"), "ЧДЦ=2");
	ТабДок.Вывести(Секция);
	
	//ТабДок.ОтображатьСетку = Ложь;
	//ТабДок.ТолькоПросмотр = Ложь;
	//ТабДок.ОтображатьЗаголовки = Ложь;
	Возврат ТабДок;
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов шапки

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="ВидОперации" Тогда
		Атрибут_ПриИзменении(Элементы.ЗаймыПолученные);
		УстановитьВидимость();
		
	ИначеЕсли Элемент.Имя="ЗаймыПолученные" Тогда
		Объект.ЗаймыПолученные=ЗаймыПолученные=1;
		Если Объект.ВидОперации="БУ" Тогда
			Объект.СписокСчетов.Очистить();
			Если ЗаймыПолученные=1 тогда
				НоваяСтрока=Объект.СписокСчетов.Добавить();
				НоваяСтрока.Счет=ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.КраткосрочныеКредиты");
				НоваяСтрока=Объект.СписокСчетов.Добавить();
				НоваяСтрока.Счет=ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.КраткосрочныеЗаймы");
				НоваяСтрока=Объект.СписокСчетов.Добавить();
				НоваяСтрока.Счет=ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ДолгосрочныеКредиты");
				НоваяСтрока=Объект.СписокСчетов.Добавить();
				НоваяСтрока.Счет=ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ДолгосрочныеЗаймы");
			Иначе
				НоваяСтрока=Объект.СписокСчетов.Добавить();
				НоваяСтрока.Счет=ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПредоставленныеЗаймы");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("Ссылка", Ссылка);
	Параметры.Свойство("Плагин", Плагин);

	ВосстановитьДанныеПлагина();
	
	ЗаймыПолученные=1;
	Если Не ЗначениеЗаполнено(Объект.ВидОперации) Тогда
		Объект.ВидОперации="БУ";
	КонецЕсли;	

	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация=УправлениеПользователямиСервер.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Элементы.ТаблицаДокументаОК.Видимость=Истина;
		ЗаполнитьЗначенияСвойств(Объект, ВладелецФормы.Объект);
	КонецЕсли;
	Атрибут_ПриИзменении(Элементы.ВидОперации);
КонецПроцедуры
