&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	Если Команда.Имя="Поделиться" Тогда
		ОткрытьФорму("РегистрСведений.Share.Форма.ФормаЗаписи",Новый Структура("ТабличныйДокумент", ТабличныйДокумент),,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	КомпоновщикНастроек_Выполнить();
	Элементы.Группы.ТекущаяСтраница=Элементы.ГруппаРезультат;
КонецПроцедуры
 
&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="ДокументСсылка" Тогда
		КомпоновщикНастроек_Восстановить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_Очистка(Элемент, СтандартнаяОбработка)
	Если Элемент.Имя="ДокументСсылка" Тогда
		СтандартнаяОбработка=Ложь;
	КонецЕсли; 
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Параметры заполнения"

&НаСервере
Процедура КомпоновщикНастроек_Инициализация()
	стрИмяОбъекта=Объект.ДокументСсылка.Метаданные().ПолноеИмя();
	
	СхемаКомпоновкиДанных=Обработки.БланкТоварногоНаполнения.ПолучитьМакет("СКД");
	Если стрИмяОбъекта="Документ.ЗаказПокупателя" Тогда
		СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос=стрЗаменить(СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос, "Товары.Ячейка", "777");
	Иначе
		СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос=стрЗаменить(СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос, "777", "Товары.Ячейка");
	КонецЕсли;	
	СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос=стрЗаменить(СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос, "Документ.ИнвентаризацияТМЦ", стрИмяОбъекта); 
	
	АдресСхемыКомпоновкиДанных=ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
КонецПроцедуры

&НаСервере
Процедура КомпоновщикНастроек_Восстановить()
	Если НЕ ЗначениеЗаполнено(Объект.ДокументСсылка) Тогда Возврат; КонецЕсли;
	ТабличныйДокумент.Очистить();
	КомпоновщикНастроек_Инициализация();

	//Настройки=ХранилищеВариантовОтчетов.Загрузить("БланкТоварногоНаполнения", "БланкТоварногоНаполнения_"+Объект.ДокументСсылка.Метаданные().ПолноеИмя(),,ПараметрыСеанса.ТекущийПользователь); 
	УстановитьПривилегированныйРежим(Истина);
	Настройки=ХранилищеОбщихНастроек.Загрузить("БланкТоварногоНаполнения", "БланкТоварногоНаполнения_"+Объект.ДокументСсылка.Метаданные().ПолноеИмя(),,ПараметрыСеанса.ТекущийПользователь); 
	УстановитьПривилегированныйРежим(Ложь);
	Если ТипЗнч(Настройки)=Тип("НастройкиКомпоновкиДанных") Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	КонецЕсли;

	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Период", ТекущаяДата());
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДокументСсылка", Объект.ДокументСсылка);
	Если ЗначениеЗаполнено(Объект.ДокументСсылка) Тогда
		стрДок=Объект.ДокументСсылка.Метаданные().Имя; стрСклад="Склад";
		Если стрДок="ПоступлениеТоваровУслуг" Тогда
			стрСклад="Склад";
		ИначеЕсли стрДок="ПеремещениеТоваров" Тогда
			стрСклад="СкладОтправитель";
		КонецЕсли;
		КомпоновщикНастроек_УстановитьЭлементОтбора("Склад", Объект.ДокументСсылка[стрСклад]);
		КомпоновщикНастроек_УстановитьЭлементОтбора("Организация", Объект.ДокументСсылка.Организация);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура КомпоновщикНастроек_Сохранить()
	//**** ХранилищеВариантовОтчетов.Сохранить("БланкТоварногоНаполнения", "БланкТоварногоНаполнения_"+Объект.ДокументСсылка.Метаданные().ПолноеИмя(), КомпоновщикНастроек.ПолучитьНастройки(),,ПараметрыСеанса.ТекущийПользователь);
	УстановитьПривилегированныйРежим(Истина);
	ХранилищеОбщихНастроек.Сохранить("БланкТоварногоНаполнения", "БланкТоварногоНаполнения_"+Объект.ДокументСсылка.Метаданные().ПолноеИмя(), КомпоновщикНастроек.ПолучитьНастройки(),,ПараметрыСеанса.ТекущийПользователь);
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

&НаСервере
Процедура КомпоновщикНастроек_УстановитьЭлементОтбора(стрПоле, Значение)
	ЭлементОтбора=ОтборыСписковКлиентСервер.НайтиЭлементОтбораПоЗначению(КомпоновщикНастроек, стрПоле); 
	Если ЭлементОтбора=Неопределено Тогда
		ЭлементОтбора=КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных(стрПоле);		
	КонецЕсли;
	ЭлементОтбора.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение=Значение;
	ЭлементОтбора.Использование=Истина;
КонецПроцедуры

&НаСервере
Процедура КомпоновщикНастроек_Выполнить()
	СхемаКомпоновкиДанных=ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных);

	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Период", Объект.ДокументСсылка.Дата);

	//подготовка к формированию
	ДанныеРасшифровки=Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета=Новый КомпоновщикМакетаКомпоновкиДанных;

	//Заголовок
	СтрокаНастройки=КомпоновщикНастроек.Настройки.ПараметрыВывода.Элементы[11];
	СтрокаНастройки.Использование=Истина;
	СтрокаНастройки.Значение="Дата и время печати: "+СокрЛП(Объект.ДокументСсылка.Дата)+" Пользователь: "+СокрЛП(ПараметрыСеанса.ТекущийПользователь);
	
	//Выводить параметры
	СтрокаНастройки=КомпоновщикНастроек.Настройки.ПараметрыВывода.Элементы[12];
	СтрокаНастройки.Использование=Истина;
	СтрокаНастройки.Значение=ТипВыводаТекстаКомпоновкиДанных.НеВыводить;

	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетОформления=ПолучитьОбщийМакет("МакетОформленияСКД");
	МакетКомпоновки=КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, ДанныеРасшифровки, МакетОформления);

	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных=Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки);

	//Очищаем поле табличного документа
	ТабличныйДокумент.Очистить();

	//Выводим результат в табличный документ
	ПроцессорВывода=Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("ДокументСсылка", Объект.ДокументСсылка);
	КомпоновщикНастроек_Восстановить();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если НЕ ЗавершениеРаботы Тогда
		КомпоновщикНастроек_Сохранить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(Объект.ДокументСсылка) Тогда
		КомпоновщикНастроек_Выполнить();
		Если Объект.НаПринтер Тогда
			ТабличныйДокумент.Напечатать();
			Отказ=Истина; Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры