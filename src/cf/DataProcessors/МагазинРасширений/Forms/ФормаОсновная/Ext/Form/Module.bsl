&НаКлиенте
Процедура ВыполнитьКоманду(Команда)
	Если Команда.Имя="ОбновитьДеревоРасширений" Тогда
		тпДанныеМагазина_Обновить();

	ИначеЕсли Команда.Имя="ОткрытьНастройку" Тогда
		СтруктураПараметров=Новый Структура;
		СтруктураПараметров.Вставить("ВариантПоставки", ВариантПоставки);
		СтруктураПараметров.Вставить("ВариантОплаты", ВариантОплаты);
		СтруктураПараметров.Вставить("Логин", СокрЛП(Объект.Логин));
		СтруктураПараметров.Вставить("Пароль", СокрЛП(Объект.Пароль));
		СтруктураПараметров.Вставить("МоиПубликации", ОтборТолькоМоиПубликации);

		ОткрытьФорму(стрЗаменить(ЭтотОбъект.ИмяФормы, "Основная", "Настройки"), СтруктураПараметров, ЭтаФорма, УникальныйИдентификатор,,, Новый ОписаниеОповещения("ОбработчикОповещения_Настройка", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	ИначеЕсли Команда.Имя="ЗарегистрироватьПользователя" Тогда
		ОбновитьДанныеПользователя(Истина);
		
	ИначеЕсли Команда.Имя="ОбновитьДанныеПользователя" Тогда
		ОбновитьДанныеПользователя(Ложь);

	ИначеЕсли Команда.Имя="ПрочитатьДанныеПользователя" Тогда
		ПрочитатьДанныеПользователя();
	КонецЕсли;	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Общие назначения

&НаСервере
Функция ДанныеУпаковать(Данные)
	СтрокаBase64=СериализаторXDTO.XMLСтрока(Новый ХранилищеЗначения(Данные, Новый СжатиеДанных(9)));
	Возврат Base64Значение(СтрокаBase64); //Возвращаем сжатые двоичные данные
КонецФункции

&НаСервере
Функция ДанныеРаспаковать(Данные)
	СтрокаBase64=Base64Строка(Данные);
    Возврат СериализаторXDTO.XMLЗначение(Тип("ХранилищеЗначения"), СтрокаBase64).Получить();
КонецФункции

&НаКлиенте
Функция СоединениеHTTP()
	Возврат Новый HTTPСоединение("84.201.247.51", 8181, "Пользователь", "1",, 600); //Новый ЗащищенноеСоединениеOpenSSL
КонецФункции

&НаСервере
Процедура ВывестиИндикатор(ЗначениеИндикатора)
	Индикатор=ЗначениеИндикатора;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики оповещений

&НаКлиенте
Процедура ОбработчикОповещения_ВыборКаталога(Параметр1, Параметр2) Экспорт
	Если НЕ ТипЗнч(Параметр1)=Тип("Массив") Тогда Возврат; КонецЕсли;
	Объект.КаталогРасширений=Параметр1[0];
КонецПроцедуры	 

////////////////////////////////////////////////////////////////////////////////
// 

&НаКлиенте
Процедура ОбработчикОповещения_Настройка(Параметр1, Параметр2) Экспорт
	Если НЕ ТипЗнч(Параметр1)=Тип("Структура") Тогда Возврат; КонецЕсли;
	Параметр1.Свойство("ВариантПоставки", ВариантПоставки);
	Параметр1.Свойство("ВариантОплаты", ВариантОплаты);
	Параметр1.Свойство("МоиПубликации", ОтборТолькоМоиПубликации);
	тпДанныеМагазина_Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПриОткрытии()
	ПрочитатьДанныеПользователя();
	тпДанныеМагазина_Обновить();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Регистрация пользователя

&НаСервере
Функция СформироватьДанныеПользователя()
	ДанныеПользователя=Новый Структура;
	ДанныеПользователя.Вставить("Логин", СокрЛП(Объект.Логин));
	ДанныеПользователя.Вставить("Пароль", СокрЛП(Объект.Пароль));
	ДанныеПользователя.Вставить("Наименование", СокрЛП(Объект.ФИО));
	ДанныеПользователя.Вставить("ИдентификаторКлиента", СокрЛП(Объект.ИдентификаторКлиента));
	ДанныеПользователя.Вставить("Информация", Новый ХранилищеЗначения(Информация, Новый СжатиеДанных(9)));	
	Возврат ДанныеУпаковать(ДанныеПользователя);
КонецФункции

&НаСервере
Процедура УстановитьДанныеПользователя(ДанныеПользователя)
	Если ДанныеПользователя.Свойство("ФИО") Тогда
		Объект.ФИО=ДанныеПользователя.ФИО;
	КонецЕсли;
	Если ДанныеПользователя.Свойство("ИдентификаторКлиента") Тогда
		Объект.ИдентификаторКлиента=ДанныеПользователя.ИдентификаторКлиента;
	КонецЕсли;
	Если ДанныеПользователя.Свойство("Информация") Тогда
		Информация=ДанныеПользователя.Информация.Получить();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеПользователя(Регистрация)
	Запрос=Новый HTTPЗапрос("HTTP/hs/ExtStore/"+?(Регистрация, "РегистрацияПользователя", "ОбновитьДанныеПользователя"));
	Запрос.УстановитьТелоИзДвоичныхДанных(СформироватьДанныеПользователя());

	Ответ=СоединениеHTTP().Записать(Запрос);
	стрСообщение=?(Ответ.КодСостояния=200, "", ?(Регистрация, "Регистрация", "Обновление данных")+" пользователя, ошибка: ");
	Сообщить(стрСообщение+Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьДанныеПользователя()
	Запрос=Новый HTTPЗапрос("HTTP/hs/ExtStore/ПрочитатьДанныеПользователя?Логин="+СокрЛП(Объект.Логин)+"&Пароль="+СокрЛП(Объект.Пароль));

	Ответ=СоединениеHTTP().ВызватьHTTPМетод("GET", Запрос);
	Если НЕ Ответ.КодСостояния=200 Тогда
		Сообщить("Чтение данных пользователя, ошибка: "+Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		Возврат; 
	КонецЕсли;

	ДанныеПользователя=ДанныеРаспаковать(Ответ.ПолучитьТелоКакДвоичныеДанные());
	Если НЕ ТипЗнч(ДанныеПользователя)=Тип("Структура") Тогда
		Сообщить("Чтение данных пользователя, ошибка структуры возвращаемых данных...");
		Возврат;
	КонецЕсли; 

	УстановитьДанныеПользователя(ДанныеПользователя);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Сохранить\восстановить данные формы

&НаСервере
Процедура СохранитьНастройки()
	Структура=Новый Структура;
	Структура.Вставить("Логин", Объект.Логин);
	Структура.Вставить("Пароль", Объект.Пароль);
	Структура.Вставить("ИдентификаторКлиента", Объект.ИдентификаторКлиента);
	Структура.Вставить("КаталогРасширений", Объект.КаталогРасширений);
	ХранилищеОбщихНастроек.Сохранить("МагазинРасширений", "Настройки", Структура);
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройки()
	СтруктураНастроек=ХранилищеОбщихНастроек.Загрузить("МагазинРасширений", "Настройки");
	Если ТипЗнч(СтруктураНастроек)=Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(Объект, СтруктураНастроек);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий "Страницы"

&НаКлиенте
Процедура ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя="СтраницаАвторизация" Тогда
	КонецЕсли; 
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Магазин расширений"

&НаКлиенте
Процедура тпДанныеМагазина_Обновить()
	Если ПустаяСтрока(Объект.Логин) Тогда
		Сообщить("Пользователь не авторизован!");
		Возврат;
	КонецЕсли;

	СистемнаяИнформация=Новый СистемнаяИнформация;

	стрПараметры="?Логин="+СокрЛП(Объект.Логин)+"&Пароль="+СокрЛП(Объект.Пароль);
	стрПараметры=стрПараметры+"&ИдентификаторКлиента="+СокрЛП(Объект.ИдентификаторКлиента);
	стрПараметры=стрПараметры+"&Платформа="+Лев(СистемнаяИнформация.ВерсияПриложения, 6);
	стрПараметры=стрПараметры+"&Конфигурация=ScatActive";
	Если НЕ ПустаяСтрока(ВариантПоставки) Тогда
		стрПараметры=стрПараметры+"&ЗакрытыйКод="+СокрЛП(ВариантПоставки="ЗакрытыйКод");
	КонецЕсли;
	Если НЕ ПустаяСтрока(ВариантОплаты) Тогда
		стрПараметры=стрПараметры+"&Платное="+СокрЛП(ВариантОплаты="Платное");
	КонецЕсли;
	Если ОтборТолькоМоиПубликации Тогда
		стрПараметры=стрПараметры+"&МоиПубликации="+СокрЛП(ОтборТолькоМоиПубликации);
	КонецЕсли;

	ПрочитатьДанные("ПрочитатьДанныеМагазина", стрПараметры);
КонецПроцедуры	 

&НаКлиенте
Процедура тпДанныеМагазина_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ=Истина;
	
	ПараметрыФормы=Новый Структура;
	ПараметрыФормы.Вставить("Логин", Объект.Логин);
	ПараметрыФормы.Вставить("Пароль", Объект.Пароль);
	ПараметрыФормы.Вставить("РежимРедактирования", Истина);
	ПараметрыФормы.Вставить("НоваяПубликация", Истина);
	ПараметрыФормы.Вставить("КаталогРасширений", Объект.КаталогРасширений);

	ОткрытьФорму(стрЗаменить(ЭтотОбъект.ИмяФормы, "Основная", "Публикации"), ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.Независимый);	
КонецПроцедуры

&НаКлиенте
Процедура тпДанныеМагазина_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	
	ПараметрыФормы=Новый Структура("Наименование,Версия,Автор,Стоимость,ЗакрытыйКод,НомерПубликации,ДатаПубликации,ДатаОбновления,Идентификатор,Анонс,Конфигурация,Платформа,Картинка,МонопольныйРежим,ИдентификаторКлиента");
	ЗаполнитьЗначенияСвойств(ПараметрыФормы, Элементы.ДанныеМагазина.ТекущиеДанные);
	ПараметрыФормы.Вставить("Логин", СокрЛП(Объект.Логин));
	ПараметрыФормы.Вставить("Пароль", СокрЛП(Объект.Пароль));
	ПараметрыФормы.Вставить("РежимРедактирования", НРЕГ(СокрЛП(Объект.Логин))=НРЕГ(СокрЛП(ПараметрыФормы.Автор)));
	ПараметрыФормы.Вставить("НоваяПубликация", Ложь);
	ПараметрыФормы.Вставить("КаталогРасширений", Объект.КаталогРасширений);

	ОткрытьФорму(стрЗаменить(ЭтотОбъект.ИмяФормы, "Основная", "Публикации"), ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

&НаСервере
Процедура тзДанныеМагазина_Заполнить(Данные)
	Если НЕ ТипЗнч(Данные)=Тип("ДвоичныеДанные") Тогда Возврат; КонецЕсли;

	тзДанные=ДанныеРаспаковать(Данные);
	Если НЕ ТипЗнч(тзДанные)=Тип("ТаблицаЗначений") Тогда Возврат; КонецЕсли;
	
	Объект.ДанныеМагазина.Очистить();
	Для каждого СтрокаКоллекции Из тзДанные Цикл
		МассивРасширений=РасширенияКонфигурации.Получить(Новый Структура("Имя", СтрокаКоллекции.Идентификатор));
	
		НоваяСтрока=Объект.ДанныеМагазина.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКоллекции,,"Картинка");
		НоваяСтрока.Платное=НЕ НоваяСтрока.Стоимость=0;
	
		Если НЕ МассивРасширений.Количество()=0 Тогда
			НоваяСтрока.Установлено=Истина;
			НоваяСтрока.ЕстьОбновление=НЕ СокрЛП(НоваяСтрока.Версия)=СокрЛП(МассивРасширений[0].Версия);
		КонецЕсли; 		
	
		Картинка=СтрокаКоллекции.Картинка.Получить();
		Если ТипЗнч(Картинка)=Тип("ДвоичныеДанные") Тогда
			НоваяСтрока.Картинка=Новый Картинка(Картинка, Истина);
		ИначеЕсли ТипЗнч(Картинка)=Тип("Картинка") Тогда
			НоваяСтрока.Картинка=Картинка;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры	 

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличного поля "Установленные расширения"

&НаСервере
Процедура тзУстановленныеРасширения_Инициализация()
	МассивСтрок=РасширенияКонфигурации.Получить();
	Для каждого СтрокаКоллекции Из МассивСтрок Цикл
		ЗаполнитьЗначенияСвойств(тзУстановленныеРасширения.Добавить(), СтрокаКоллекции);
	КонецЦикла;
	Элементы.РасширенияУстановленные.Заголовок="Установленные ("+МассивСтрок.Количество()+")";
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Чтение данных

&НаКлиенте
Процедура ПрочитатьДанные(ИмяМетода, стрПараметры) 
	Индикатор=0; Элементы.Индикатор.Видимость=Истина;

	Запрос=Новый HTTPЗапрос("HTTP/hs/ExtStore/"+ИмяМетода+"/"+стрПараметры);

	Ответ=СоединениеHTTP().ВызватьHTTPМетод("GET", Запрос);
	Если НЕ Ответ.КодСостояния=200 Тогда
		Сообщить(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		Элементы.Индикатор.Видимость=Ложь; Возврат;
	КонецЕсли;
	
	НачатьЧтениеДанных(Ответ.ПолучитьТелоКакПоток(), ИмяМетода);
КонецПроцедуры

&НаКлиенте
Процедура НачатьЧтениеДанных(Поток, ИмяЗапроса)
	БуферДвоичныхДанных=Новый БуферДвоичныхДанных(Поток.Размер(), ПорядокБайтов.LittleEndian);	

	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Поток", Поток);
	СтруктураПараметров.Вставить("БуферДвоичныхДанных", БуферДвоичныхДанных);
	СтруктураПараметров.Вставить("Индекс", 0);
	СтруктураПараметров.Вставить("ИмяЗапроса", ИмяЗапроса);
	СтруктураПараметров.Вставить("КоличествоПрочитанныхБайт", ?(Поток.Размер()>РазмерПакета, РазмерПакета, Поток.Размер()));
	
	РазмерПакета=Цел(Поток.Размер()/5);

	ОписаниеОповещения=Новый ОписаниеОповещения("ПродолжитьЧтениеДанных", ЭтотОбъект, СтруктураПараметров);
	Поток.НачатьЧтение(ОписаниеОповещения, БуферДвоичныхДанных, СтруктураПараметров.Индекс, СтруктураПараметров.КоличествоПрочитанныхБайт);
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьЧтениеДанных(Параметр1, Параметр2) Экспорт
	Если Параметр1=Неопределено Тогда Возврат; КонецЕсли;

	Если Параметр2.КоличествоПрочитанныхБайт < Параметр2.Поток.Размер() Тогда
		Параметр2.Индекс=Параметр2.КоличествоПрочитанныхБайт;

		ОсталосьПрочитатьБайт=Параметр2.Поток.Размер()-Параметр2.КоличествоПрочитанныхБайт;
		ПрочитатьКоличествоБайт=?(ОсталосьПрочитатьБайт < РазмерПакета, ОсталосьПрочитатьБайт, РазмерПакета);

		Параметр2.КоличествоПрочитанныхБайт=Параметр2.КоличествоПрочитанныхБайт+ПрочитатьКоличествоБайт;

		ОписаниеОповещения=Новый ОписаниеОповещения("ПродолжитьЧтениеДанных", ЭтотОбъект, Параметр2);
		Параметр2.Поток.НачатьЧтение(ОписаниеОповещения, Параметр2.БуферДвоичныхДанных, Параметр2.Индекс, ПрочитатьКоличествоБайт);

		ВывестиИндикатор(Цел(100/Параметр2.Поток.Размер()*Параметр2.Индекс));
	Иначе
		ВывестиИндикатор(100);

		ПотокВПамяти=Новый ПотокВПамяти(Параметр2.БуферДвоичныхДанных);
		Данные=ПотокВПамяти.ЗакрытьИПолучитьДвоичныеДанные();
		Если Параметр2.ИмяЗапроса="ПрочитатьДанныеМагазина" Тогда
			тзДанныеМагазина_Заполнить(Данные);
		КонецЕсли;
		Элементы["Индикатор"].Видимость=Ложь;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов

&НаКлиенте
Процедура Атрибут_Нажатие(Элемент, СтандартнаяОбработка)
	Если Элемент.Имя="КаталогРасширений" Тогда
		СтандартнаяОбработка=Ложь;
		ДиалогОткрытияФайла=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДиалогОткрытияФайла.Заголовок="Выберите каталог";
		ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("ОбработчикОповещения_ВыборКаталога", ЭтотОбъект));
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	ВосстановитьНастройки();
	тзУстановленныеРасширения_Инициализация();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ПустаяСтрока(Объект.Логин) И НЕ ПустаяСтрока(Объект.Пароль) Тогда
		ПодключитьОбработчикОжидания("ОбновитьПриОткрытии", 1, Истина);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Не ЗавершениеРаботы Тогда
		СохранитьНастройки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение)=Тип("Структура") Тогда
		Если ВыбранноеЗначение.Действие="УдалитьПубликацию" Тогда
			МассивСтрок=Объект.ДанныеМагазина.НайтиСтроки(Новый Структура("НомерПубликации", ВыбранноеЗначение.НомерПубликации));
			Если МассивСтрок.Количество()=1 Тогда
				Объект.ДанныеМагазина.Удалить(МассивСтрок[0]);
				Сообщить("Публикация успешно удалена!");
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры
