&НаСервере
Процедура Печать_Выписки()
	ТабДокумент=Новый ТабличныйДокумент;
	
	Макет=Обработки.ВыпискаБанка.ПолучитьМакет("Выписка_По_Счету");

	ОбластьЗаголовка=Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
	ОбластьШапкиПодвал=Макет.ПолучитьОбласть("ШапкаПодвала");
	ОбластьСтрокиПодвала=Макет.ПолучитьОбласть("СтрокаПодвала");
	
	ОбластьЗаголовка.Параметры.НаименованиеБанка=СчетОрганизации.Банк;
	ОбластьЗаголовка.Параметры.Организация=Организация.НаименованиеПолное;
	ОбластьЗаголовка.Параметры.Счет=СчетОрганизации.НомерСчета;
	ОбластьЗаголовка.Параметры.Дата=Формат(ДатаОплаты,"ДФ=dd.MM.yyyy");
	ОбластьЗаголовка.Параметры.Валюта=СчетОрганизации.ВалютаДенежныхСредств;
	ОбластьЗаголовка.Параметры.ОстатокНачальный=ОстатокНаНачалоДня;
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Дата", ДатаОплаты);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет", СчетОрганизации);
	Запрос.Текст="
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИсточникДанных.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.Обороты(, &Дата,	Регистратор, БанковскийСчетКасса = &Счет И Организация = &Организация) КАК ИсточникДанных
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ
	|";
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбластьЗаголовка.Параметры.ДатаПоследнейОпераций=Формат(Выборка.Период,"ДФ=dd.MM.yyyy");
	КонецЦикла;
	
	ТабДокумент.Вывести(ОбластьЗаголовка);
	
	ТабДокумент.Вывести(ОбластьШапка);
	СуммаПрихода=0;
	СуммаРасхода=0;
	Для Каждого СтрокиКоллекции Из тпДокументы Цикл
		Документ=СтрокиКоллекции.Документ;
		
		ОбластьСтрока.Параметры.ДатаОперации=Формат(Документ.Дата,"ДФ=dd.MM.yyyy");
		ОбластьСтрока.Параметры.КО="01";
		ОбластьСтрока.Параметры.НомерДокумента=Документ.Номер;
		ОбластьСтрока.Параметры.Дебет=СтрокиКоллекции.СуммаПриход;
		ОбластьСтрока.Параметры.Кредит=СтрокиКоллекции.СуммаРасход;
		ОбластьСтрока.Параметры.ИНН=Документ.Контрагент.ИНН;
		ОбластьСтрока.Параметры.Наименование=Документ.Контрагент.НаименованиеПолное;
		ОбластьСтрока.Параметры.Счет=Документ.СчетКонтрагента;
		ОбластьСтрока.Параметры.Бик=Документ.СчетКонтрагента.Банк.Код;
		ОбластьСтрока.Параметры.Основание=Документ.НазначениеПлатежа;
		ТабДокумент.Вывести(ОбластьСтрока);

		СуммаПрихода=СуммаПрихода+СтрокиКоллекции.СуммаПриход;	
		СуммаРасхода=СуммаРасхода+СтрокиКоллекции.СуммаРасход;
	КонецЦикла;
	
	ОбластьШапкиПодвал.Параметры.НаДату=Формат(ДатаОплаты,"ДФ=dd.MM.yyyy");;
	ТабДокумент.Вывести(ОбластьШапкиПодвал);
	
	ОбластьСтрокиПодвала.Параметры.ВходящийОстаток=ОстатокНаНачалоДня;
	ОбластьСтрокиПодвала.Параметры.СуммаДебета=СуммаПрихода;
	ОбластьСтрокиПодвала.Параметры.СуммаКредита=СуммаРасхода;
	ОбластьСтрокиПодвала.Параметры.ИсходящийОстаток=ОстатокНаКонецДня;
	ТабДокумент.Вывести(ОбластьСтрокиПодвала);
	
	ТабДокумент.ОтображатьСетку=Ложь;
	ТабДокумент.ОтображатьЗаголовки=Ложь;
	
	ТабДокумент.Показать();
КонецПроцедуры

&НаСервере
Процедура РасчетОборотов()
	СуммаПриходИтого=0; СуммаРасходИтого=0;
	Для каждого СтрокаКоллекции Из тпДокументы Цикл
		Попытка Оплачено=СтрокаКоллекции.Оплачено;
		Исключение Оплачено=Истина;
		КонецПопытки;
		Если Оплачено Тогда
			СуммаПриходИтого=СуммаПриходИтого+СтрокаКоллекции.СуммаПриход;
			СуммаРасходИтого=СуммаРасходИтого+СтрокаКоллекции.СуммаРасход;
		КонецЕсли;
	КонецЦикла; 	
	ОстатокНаКонецДня=ОстатокНаНачалоДня+СуммаПриходИтого-СуммаРасходИтого;
КонецПроцедуры

&НаСервере
Процедура РасчетНачальногоОстатка()
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("СчетОрганизации", СчетОрганизации);
	Запрос.УстановитьПараметр("ДатаОплаты", НачалоДня(ДатаОплаты));
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ДенежныеСредстваОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.Остатки(&ДатаОплаты, БанковскийСчетКасса=&СчетОрганизации) КАК ДенежныеСредстваОстатки
	|";
	Результат=Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		ОстатокНаНачалоДня=Результат.СуммаОстаток;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыписку()
	Если Организация.Пустая() ИЛИ СчетОрганизации.Пустая() ИЛИ НЕ ЗначениеЗаполнено(ДатаОплаты) Тогда Возврат; КонецЕсли;

	тпДокументы.Очистить();
	
	ТекстЗапроса="ВЫБРАТЬ
	|	ПлатежноеПоручениеИсходящее.Ссылка КАК Документ,
	|	ПлатежноеПоручениеИсходящее.Контрагент.Представление КАК Контрагент,
	|	ПлатежноеПоручениеИсходящее.Оплачено КАК Оплачено,
	|	0 КАК СуммаОстаток,
	|	0 КАК СуммаПриход,
	|	ПлатежноеПоручениеИсходящее.СуммаДокумента КАК СуммаРасход
	|ИЗ
	|	Документ.ПлатежноеПоручениеИсходящее КАК ПлатежноеПоручениеИсходящее
	|ГДЕ
	|	ПлатежноеПоручениеИсходящее.СчетОрганизации = &СчетОрганизации
	|   И НЕ ПлатежноеПоручениеИсходящее.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ПлатежноеПоручениеИсходящее.Оплачено
		|И ПлатежноеПоручениеИсходящее.Проведен	
		|И КонецПериода(ПлатежноеПоручениеИсходящее.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ПлатежноеПоручениеИсходящее.Оплачено И КонецПериода(ПлатежноеПоручениеИсходящее.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ПлатежноеПоручениеИсходящее.Оплачено И КонецПериода(ПлатежноеПоручениеИсходящее.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежноеПоручениеИсходящее.Ссылка КАК Документ,
	|	ПлатежноеПоручениеИсходящее.Контрагент.Представление КАК Контрагент,
	|	ПлатежноеПоручениеИсходящее.Оплачено КАК Оплачено,
	|	0 КАК СуммаОстаток,
	|	ПлатежноеПоручениеИсходящее.СуммаДокумента КАК СуммаПриход,
	|	0 КАК СуммаРасход
	|ИЗ
	|	Документ.ПлатежноеПоручениеИсходящее КАК ПлатежноеПоручениеИсходящее
	|ГДЕ
	|	ПлатежноеПоручениеИсходящее.СчетКонтрагента = &СчетОрганизации
	|   И НЕ ПлатежноеПоручениеИсходящее.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ПлатежноеПоручениеИсходящее.Оплачено
		|И ПлатежноеПоручениеИсходящее.Проведен	
		|И КонецПериода(ПлатежноеПоручениеИсходящее.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ПлатежноеПоручениеИсходящее.Оплачено И КонецПериода(ПлатежноеПоручениеИсходящее.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ПлатежноеПоручениеИсходящее.Оплачено И КонецПериода(ПлатежноеПоручениеИсходящее.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныйЧек.Ссылка,
	|	ДенежныйЧек.Организация.Представление,
	|	ДенежныйЧек.Оплачено,
	|	ДенежныйЧек.СуммаДокумента,
	|	0,
	|	ДенежныйЧек.СуммаДокумента
	|ИЗ
	|	Документ.ДенежныйЧек КАК ДенежныйЧек
	|
	|ГДЕ
	|	ДенежныйЧек.СчетОрганизации = &СчетОрганизации
	|   И НЕ ДенежныйЧек.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ДенежныйЧек.Оплачено
		|И ДенежныйЧек.Проведен	
		|И КонецПериода(ДенежныйЧек.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ДенежныйЧек.Оплачено И КонецПериода(ДенежныйЧек.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ДенежныйЧек.Оплачено И КонецПериода(ДенежныйЧек.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбъявлениеНаВзнос.Ссылка,
	|	ОбъявлениеНаВзнос.Организация.Представление,
	|	ОбъявлениеНаВзнос.Оплачено,
	|	ОбъявлениеНаВзнос.СуммаДокумента,
	|	ОбъявлениеНаВзнос.СуммаДокумента,
	|	0
	|ИЗ
	|	Документ.ОбъявлениеНаВзносНаличными КАК ОбъявлениеНаВзнос
	|
	|ГДЕ
	|	ОбъявлениеНаВзнос.СчетОрганизации = &СчетОрганизации
	|   И НЕ ОбъявлениеНаВзнос.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ОбъявлениеНаВзнос.Оплачено
		|И ОбъявлениеНаВзнос.Проведен
		|И КонецПериода(ОбъявлениеНаВзнос.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ОбъявлениеНаВзнос.Оплачено И КонецПериода(ОбъявлениеНаВзнос.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ОбъявлениеНаВзнос.Оплачено И КонецПериода(ОбъявлениеНаВзнос.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежноеПоручениеВходящее.Ссылка,
	|	ПлатежноеПоручениеВходящее.Контрагент.Представление,
	|	ПлатежноеПоручениеВходящее.Оплачено,
	|	0 КАК СуммаОстаток,
	|	ПлатежноеПоручениеВходящее.СуммаДокумента,
	|	0
	|ИЗ
	|	Документ.ПлатежноеПоручениеВходящее КАК ПлатежноеПоручениеВходящее
	|
	|ГДЕ
	|	ПлатежноеПоручениеВходящее.СчетОрганизации = &СчетОрганизации
	|   И НЕ ПлатежноеПоручениеВходящее.ПометкаУдаления";
	Если ТолькоОплаченные Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И ПлатежноеПоручениеВходящее.Оплачено
		|И ПлатежноеПоручениеВходящее.Проведен
		|И КонецПериода(ПлатежноеПоручениеВходящее.ДатаОплаты,День) = &ДатаОплаты";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"	 		 
		|И ((ПлатежноеПоручениеВходящее.Оплачено И КонецПериода(ПлатежноеПоручениеВходящее.ДатаОплаты,День) = &ДатаОплаты)
		|ИЛИ (НЕ ПлатежноеПоручениеВходящее.Оплачено И КонецПериода(ПлатежноеПоручениеВходящее.Дата,День) <= &ДатаОплаты))";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежныйОрдерВходящий.Ссылка,
	|	ПлатежныйОрдерВходящий.Контрагент.Представление,
	|	ИСТИНА,
	|	ПлатежныйОрдерВходящий.СуммаДокумента,
	|	ПлатежныйОрдерВходящий.СуммаДокумента,
	|	0
	|ИЗ
	|	Документ.ПлатежныйОрдерПоступлениеДенежныхСредств КАК ПлатежныйОрдерВходящий
	|
	|ГДЕ
	|	ПлатежныйОрдерВходящий.СчетОрганизации = &СчетОрганизации
	|   И ПлатежныйОрдерВходящий.Проведен
	|	И КонецПериода(ПлатежныйОрдерВходящий.Дата,День) = &ДатаОплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежныйОрдерИсходящий.Ссылка,
	|	ПлатежныйОрдерИсходящий.Контрагент.Представление,
	|	ИСТИНА,
	|	ПлатежныйОрдерИсходящий.СуммаДокумента,
	|	0,
	|	ПлатежныйОрдерИсходящий.СуммаДокумента
	|ИЗ
	|	Документ.ПлатежныйОрдерСписаниеДенежныхСредств КАК ПлатежныйОрдерИсходящий
	|
	|ГДЕ
	|	ПлатежныйОрдерИсходящий.СчетОрганизации = &СчетОрганизации
	|   И ПлатежныйОрдерИсходящий.Проведен
	|	И КонецПериода(ПлатежныйОрдерИсходящий.Дата,День) = &ДатаОплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходныйКассовыйОрдер.Ссылка,
	|	РасходныйКассовыйОрдер.СчетОрганизации.Представление,
	|	ИСТИНА,
	|	РасходныйКассовыйОрдер.СуммаДокумента,
	|	РасходныйКассовыйОрдер.СуммаДокумента,
	|	0
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|
	|ГДЕ
	|	РасходныйКассовыйОрдер.ВидОперации=&СдачаНаличных
	|	И РасходныйКассовыйОрдер.ОбъявлениеНаВзносНаличными = &ПустоеОбъявление
	|	И РасходныйКассовыйОрдер.СчетОрганизации = &СчетОрганизации
	|   И РасходныйКассовыйОрдер.Проведен
	|	И КонецПериода(РасходныйКассовыйОрдер.Дата,День) = &ДатаОплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриходныйКассовыйОрдер.Ссылка,
	|	ПриходныйКассовыйОрдер.СчетОрганизации.Представление,
	|	ИСТИНА,
	|	ПриходныйКассовыйОрдер.СуммаДокумента,
	|	0,
	|	ПриходныйКассовыйОрдер.СуммаДокумента
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|
	|ГДЕ
	|	ПриходныйКассовыйОрдер.ВидОперации=&ПолучениеНаличных
	|	И ПриходныйКассовыйОрдер.ДенежныйЧек = &ПустойДенежныйЧек
	|	И ПриходныйКассовыйОрдер.СчетОрганизации = &СчетОрганизации
	|   И ПриходныйКассовыйОрдер.Проведен
	|	И КонецПериода(ПриходныйКассовыйОрдер.Дата,День) = &ДатаОплаты
	|";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТекстЗапроса;
	Запрос.УстановитьПараметр("СчетОрганизации", СчетОрганизации);
	Запрос.УстановитьПараметр("ДатаОплаты",КонецДня(ДатаОплаты));
	Запрос.УстановитьПараметр("СдачаНаличных", Перечисления.ВидыОперацийРКО.ВзносНаличнымиВБанк);
	Запрос.УстановитьПараметр("ПолучениеНаличных", Перечисления.ВидыОперацийПКО.ПолучениеНаличныхДенежныхСредствВБанке);
	Запрос.УстановитьПараметр("ПустоеОбъявление", Документы.ОбъявлениеНаВзносНаличными.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойДенежныйЧек", Документы.ДенежныйЧек.ПустаяСсылка());

	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл
		Если ТипЗнч(РезультатЗапроса.Документ)=Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
			НаборЗаписей=РегистрыНакопления.ДенежныеСредства.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(РезультатЗапроса.Документ.Ссылка);
			НаборЗаписей.Прочитать();
			ф=0;
			Для Каждого СтрокаН ИЗ НаборЗаписей Цикл
				Если СтрокаН.ВидДвижения=ВидДвиженияНакопления.Приход Тогда ф=1; КонецЕсли;
			КонецЦикла;
			Если ф=0 Тогда Продолжить; КонецЕсли;
		КонецЕсли;	
		НоваяСтрока=тпДокументы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатЗапроса);
		////////НоваяСтрока.Дата=РезультатЗапроса.Документ.Дата;
		////////НоваяСтрока.Номер=РезультатЗапроса.Документ.Номер;
	КонецЦикла;

	РасчетНачальногоОстатка();
	РасчетОборотов();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДокументы()
	Попытка
		НачатьТранзакцию();		
		Для каждого СтрокаКоллекции Из тпДокументы Цикл
			ДокументОбъект=СтрокаКоллекции.Документ.ПолучитьОбъект();
			РеквизитОплачено=УправлениеМетаданными.ЕстьРеквизит("Оплачено", ДокументОбъект.Метаданные());
			Оплачено=?(РеквизитОплачено, ДокументОбъект.Оплачено, Ложь);
			Если Оплачено И НЕ СтрокаКоллекции.Оплачено Тогда
				Если РеквизитОплачено Тогда
					ДокументОбъект.Оплачено=Ложь;
					ДокументОбъект.ДатаОплаты='00010101';
				КонецЕсли;
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				
			ИначеЕсли НЕ Оплачено И СтрокаКоллекции.Оплачено Тогда
				Если РеквизитОплачено Тогда
					ДокументОбъект.Оплачено=Истина;
					ДокументОбъект.ДатаОплаты=ДатаОплаты;
				КонецЕсли;
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				
			ИначеЕсли Оплачено И СтрокаКоллекции.Оплачено Тогда
				Если РеквизитОплачено Тогда
					ДокументОбъект.Оплачено=Истина;
					ДокументОбъект.ДатаОплаты=ДатаОплаты;
				КонецЕсли;
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
		КонецЦикла;
		ЗафиксироватьТранзакцию();			
	Исключение			
		Сообщить(ОписаниеОшибки());		
	КонецПопытки;
	
	РасчетОборотов();
КонецПроцедуры
 
///////////////////////////////////////////////////////////////////////////////
// Обработчики событий атрибутов шапки

&НаКлиенте
Процедура Атрибут_ПриИзменении(Элемент)
	Если Элемент.Имя="ДатаОплаты" Тогда
		ЗаполнитьВыписку();
		
	ИначеЕсли Элемент.Имя="Организация" Тогда
		Если ЗначениеЗаполнено(Организация) Тогда
			СчетОрганизации=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Организация, "ОсновнойБанковскийСчет");
		КонецЕсли;
		ЗаполнитьВыписку();

	ИначеЕсли Элемент.Имя="СчетОрганизации" Тогда
		Если Организация.Пустая() И НЕ СчетОрганизации.Пустая() Тогда
			Организация=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СчетОрганизации, "Владелец");
		КонецЕсли;
		ЗаполнитьВыписку();
		
	ИначеЕсли Элемент.Имя="ТолькоОплаченные" Тогда
		ЗаполнитьВыписку();		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Атрибут_Регулирование(Элемент, Направление, СтандартнаяОбработка)
	Если Элемент="ДатаОплаты" Тогда
		ЗаполнитьВыписку();
	КонецЕсли; 
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий табличной части "Документы"

&НаКлиенте
Процедура тпДокументы_ВыполнитьДействие(Команда)
	стрКоманда=стрЗаменить(Команда.Имя, "тпДокументы_", "");
	Если стрКоманда="Заполнить" Тогда
		ЗаполнитьВыписку();

	ИначеЕсли стрКоманда="Печать" Тогда
		Печать_Выписки();
		
	ИначеЕсли стрКоманда="ДобавитьПлатежноеПоручениеВходящее" Тогда
		ПараметрыФормы=Новый Структура;
		ПараметрыФормы.Вставить("Дата", ДатаОплаты);
		ПараметрыФормы.Вставить("Организация", Организация);
		ПараметрыФормы.Вставить("СчетОрганизации", СчетОрганизации);

		ОткрытьФорму("Документ.ПлатежноеПоручениеВходящее.Форма.ФормаДокумента", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.Независимый);

	ИначеЕсли стрКоманда="УстановитьПометки" Тогда
		СуммаПриходИтого=0; СуммаРасходИтого=0;
		Для каждого СтрокаКоллекции Из тпДокументы Цикл
			СтрокаКоллекции.Оплачено=Истина;
			СуммаПриходИтого=СуммаПриходИтого+СтрокаКоллекции.СуммаПриход;
			СуммаРасходИтого=СуммаРасходИтого+СтрокаКоллекции.СуммаРасход;
		КонецЦикла;
		ОстатокНаКонецДня=ОстатокНаНачалоДня+СуммаПриходИтого-СуммаРасходИтого;
		
	ИначеЕсли стрКоманда="СнятьПометки" Тогда
		СуммаПриходИтого=0; СуммаРасходИтого=0;
		Для каждого СтрокаКоллекции из тпДокументы Цикл
			Если Найти(ТипЗнч(СтрокаКоллекции.Документ), "ордер")=0 Тогда
				СтрокаКоллекции.Оплачено=Ложь;
			Иначе
				СуммаПриходИтого=СуммаПриходИтого+СтрокаКоллекции.СуммаПриход;
				СуммаРасходИтого=СуммаРасходИтого+СтрокаКоллекции.СуммаРасход;
			КонецЕсли;
		КонецЦикла;
		ОстатокНаКонецДня=ОстатокНаНачалоДня+СуммаПриходИтого-СуммаРасходИтого;
		
	ИначеЕсли стрКоманда="Выполнить" Тогда
		ЗаписатьДокументы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура тпДокументы_ПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	РасчетОборотов();
КонецПроцедуры

&НаКлиенте
Процедура тпДокументы_ПослеУдаления(Элемент)
	РасчетОборотов();
КонецПроцедуры

&НаКлиенте
Процедура тпДокументы_Колонка_ПриИзменении(Элемент)
	Если Элемент.Имя="тпДокументыОплачено" Тогда
		РасчетОборотов();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Дата") Тогда
		ДатаОплаты=Параметры.Дата;
	КонецЕсли;
	Если Параметры.Свойство("Организация") Тогда
		Организация=Параметры.Организация;
	КонецЕсли;
	Если Параметры.Свойство("СчетОрганизации") Тогда
		СчетОрганизации=Параметры.СчетОрганизации;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация=НастройкиПользователяСервер.ЗначениеПоУмолчанию("ОсновнаяОрганизация");
		Если ЗначениеЗаполнено(Организация) Тогда
			СчетОрганизации=ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Организация, "ОсновнойБанковскийСчет");
		КонецЕсли;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаОплаты) Тогда
		ДатаОплаты=ТекущаяДата();
	КонецЕсли;
	ЗаполнитьВыписку();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	ЗаполнитьВыписку();
КонецПроцедуры
